

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Jan 26 02:51:37 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  001C                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  008C                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008E                     	;# 
    86  008F                     	;# 
    87  0090                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  0110                     	;# 
   108  0110                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0112                     	;# 
   112  0113                     	;# 
   113  0114                     	;# 
   114  0114                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0116                     	;# 
   118  0117                     	;# 
   119  0119                     	;# 
   120  0119                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011A                     	;# 
   124  011A                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011B                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011C                     	;# 
   131  011C                     	;# 
   132  011C                     	;# 
   133  011D                     	;# 
   134  011D                     	;# 
   135  011D                     	;# 
   136  011E                     	;# 
   137  011E                     	;# 
   138  011E                     	;# 
   139  011F                     	;# 
   140  011F                     	;# 
   141  011F                     	;# 
   142  011F                     	;# 
   143  011F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  018F                     	;# 
   148  0190                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0196                     	;# 
   152  0197                     	;# 
   153  0198                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  020E                     	;# 
   161  020F                     	;# 
   162  020F                     	;# 
   163  0210                     	;# 
   164  0210                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  0218                     	;# 
   177  0219                     	;# 
   178  021A                     	;# 
   179  021B                     	;# 
   180  021B                     	;# 
   181  021C                     	;# 
   182  021C                     	;# 
   183  021D                     	;# 
   184  021D                     	;# 
   185  021E                     	;# 
   186  021F                     	;# 
   187  028C                     	;# 
   188  028C                     	;# 
   189  028D                     	;# 
   190  028D                     	;# 
   191  028E                     	;# 
   192  028F                     	;# 
   193  0290                     	;# 
   194  0290                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0292                     	;# 
   198  0293                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0296                     	;# 
   203  0296                     	;# 
   204  0297                     	;# 
   205  0298                     	;# 
   206  0298                     	;# 
   207  0299                     	;# 
   208  0299                     	;# 
   209  029A                     	;# 
   210  029B                     	;# 
   211  029C                     	;# 
   212  029C                     	;# 
   213  029D                     	;# 
   214  030C                     	;# 
   215  030C                     	;# 
   216  030D                     	;# 
   217  030E                     	;# 
   218  030F                     	;# 
   219  0310                     	;# 
   220  0310                     	;# 
   221  0311                     	;# 
   222  0312                     	;# 
   223  0313                     	;# 
   224  0314                     	;# 
   225  0314                     	;# 
   226  0315                     	;# 
   227  0316                     	;# 
   228  0317                     	;# 
   229  0318                     	;# 
   230  0318                     	;# 
   231  0319                     	;# 
   232  031A                     	;# 
   233  031B                     	;# 
   234  031C                     	;# 
   235  031C                     	;# 
   236  031D                     	;# 
   237  031E                     	;# 
   238  031F                     	;# 
   239  038C                     	;# 
   240  038D                     	;# 
   241  038E                     	;# 
   242  0390                     	;# 
   243  0391                     	;# 
   244  0392                     	;# 
   245  040C                     	;# 
   246  040D                     	;# 
   247  040E                     	;# 
   248  040F                     	;# 
   249  0410                     	;# 
   250  0411                     	;# 
   251  0416                     	;# 
   252  0416                     	;# 
   253  0417                     	;# 
   254  0418                     	;# 
   255  0418                     	;# 
   256  0419                     	;# 
   257  041A                     	;# 
   258  041A                     	;# 
   259  041B                     	;# 
   260  041C                     	;# 
   261  041C                     	;# 
   262  041D                     	;# 
   263  041E                     	;# 
   264  041F                     	;# 
   265  048C                     	;# 
   266  048C                     	;# 
   267  048D                     	;# 
   268  048E                     	;# 
   269  048F                     	;# 
   270  048F                     	;# 
   271  0490                     	;# 
   272  0491                     	;# 
   273  0492                     	;# 
   274  0492                     	;# 
   275  0493                     	;# 
   276  0494                     	;# 
   277  0495                     	;# 
   278  0495                     	;# 
   279  0496                     	;# 
   280  0497                     	;# 
   281  0498                     	;# 
   282  0499                     	;# 
   283  049A                     	;# 
   284  049B                     	;# 
   285  049C                     	;# 
   286  049D                     	;# 
   287  050C                     	;# 
   288  050C                     	;# 
   289  050D                     	;# 
   290  050E                     	;# 
   291  050F                     	;# 
   292  050F                     	;# 
   293  0510                     	;# 
   294  0511                     	;# 
   295  0512                     	;# 
   296  0512                     	;# 
   297  0513                     	;# 
   298  0514                     	;# 
   299  0515                     	;# 
   300  0515                     	;# 
   301  0516                     	;# 
   302  0517                     	;# 
   303  0518                     	;# 
   304  0519                     	;# 
   305  051A                     	;# 
   306  051B                     	;# 
   307  051C                     	;# 
   308  051D                     	;# 
   309  058C                     	;# 
   310  058C                     	;# 
   311  058D                     	;# 
   312  058E                     	;# 
   313  058F                     	;# 
   314  058F                     	;# 
   315  0590                     	;# 
   316  0591                     	;# 
   317  0592                     	;# 
   318  0593                     	;# 
   319  060C                     	;# 
   320  060D                     	;# 
   321  060E                     	;# 
   322  060F                     	;# 
   323  0610                     	;# 
   324  0611                     	;# 
   325  0612                     	;# 
   326  0613                     	;# 
   327  0614                     	;# 
   328  0616                     	;# 
   329  0617                     	;# 
   330  0618                     	;# 
   331  0619                     	;# 
   332  061A                     	;# 
   333  061B                     	;# 
   334  061C                     	;# 
   335  061D                     	;# 
   336  061E                     	;# 
   337  068C                     	;# 
   338  068D                     	;# 
   339  068E                     	;# 
   340  068F                     	;# 
   341  0690                     	;# 
   342  0691                     	;# 
   343  0692                     	;# 
   344  0693                     	;# 
   345  0694                     	;# 
   346  070C                     	;# 
   347  070D                     	;# 
   348  070E                     	;# 
   349  070F                     	;# 
   350  0710                     	;# 
   351  0711                     	;# 
   352  0712                     	;# 
   353  0713                     	;# 
   354  0714                     	;# 
   355  0716                     	;# 
   356  0717                     	;# 
   357  0718                     	;# 
   358  0719                     	;# 
   359  071A                     	;# 
   360  071B                     	;# 
   361  071C                     	;# 
   362  071D                     	;# 
   363  071E                     	;# 
   364  0796                     	;# 
   365  0797                     	;# 
   366  0798                     	;# 
   367  0799                     	;# 
   368  079A                     	;# 
   369  079B                     	;# 
   370  080C                     	;# 
   371  080D                     	;# 
   372  080E                     	;# 
   373  080F                     	;# 
   374  0810                     	;# 
   375  0811                     	;# 
   376  0812                     	;# 
   377  0813                     	;# 
   378  0814                     	;# 
   379  081A                     	;# 
   380  081B                     	;# 
   381  081C                     	;# 
   382  081D                     	;# 
   383  081E                     	;# 
   384  081F                     	;# 
   385  088C                     	;# 
   386  088D                     	;# 
   387  088E                     	;# 
   388  088F                     	;# 
   389  0890                     	;# 
   390  0891                     	;# 
   391  0892                     	;# 
   392  0893                     	;# 
   393  0895                     	;# 
   394  0896                     	;# 
   395  0897                     	;# 
   396  0898                     	;# 
   397  0899                     	;# 
   398  089A                     	;# 
   399  089B                     	;# 
   400  090C                     	;# 
   401  090E                     	;# 
   402  090F                     	;# 
   403  091F                     	;# 
   404  091F                     	;# 
   405  098F                     	;# 
   406  098F                     	;# 
   407  0990                     	;# 
   408  0991                     	;# 
   409  0992                     	;# 
   410  0993                     	;# 
   411  0994                     	;# 
   412  0995                     	;# 
   413  0996                     	;# 
   414  0997                     	;# 
   415  0E0F                     	;# 
   416  0E10                     	;# 
   417  0E11                     	;# 
   418  0E12                     	;# 
   419  0E13                     	;# 
   420  0E14                     	;# 
   421  0E15                     	;# 
   422  0E16                     	;# 
   423  0E17                     	;# 
   424  0E18                     	;# 
   425  0E19                     	;# 
   426  0E1A                     	;# 
   427  0E1B                     	;# 
   428  0E1C                     	;# 
   429  0E1D                     	;# 
   430  0E1E                     	;# 
   431  0E1F                     	;# 
   432  0E20                     	;# 
   433  0E21                     	;# 
   434  0E22                     	;# 
   435  0E23                     	;# 
   436  0E24                     	;# 
   437  0E25                     	;# 
   438  0E26                     	;# 
   439  0E27                     	;# 
   440  0E28                     	;# 
   441  0E29                     	;# 
   442  0E2A                     	;# 
   443  0E2B                     	;# 
   444  0E2C                     	;# 
   445  0E2D                     	;# 
   446  0E2E                     	;# 
   447  0E2F                     	;# 
   448  0E30                     	;# 
   449  0E31                     	;# 
   450  0E32                     	;# 
   451  0E33                     	;# 
   452  0E34                     	;# 
   453  0E35                     	;# 
   454  0E36                     	;# 
   455  0E37                     	;# 
   456  0E8F                     	;# 
   457  0E90                     	;# 
   458  0E91                     	;# 
   459  0E92                     	;# 
   460  0E93                     	;# 
   461  0E94                     	;# 
   462  0E95                     	;# 
   463  0E96                     	;# 
   464  0E97                     	;# 
   465  0E9C                     	;# 
   466  0E9D                     	;# 
   467  0E9E                     	;# 
   468  0EA1                     	;# 
   469  0EA2                     	;# 
   470  0EA3                     	;# 
   471  0EA4                     	;# 
   472  0EA5                     	;# 
   473  0EA9                     	;# 
   474  0EAA                     	;# 
   475  0EAB                     	;# 
   476  0EAC                     	;# 
   477  0EB1                     	;# 
   478  0EB2                     	;# 
   479  0EB3                     	;# 
   480  0EB8                     	;# 
   481  0EB9                     	;# 
   482  0EBA                     	;# 
   483  0EBB                     	;# 
   484  0EBC                     	;# 
   485  0EBD                     	;# 
   486  0EBE                     	;# 
   487  0EC3                     	;# 
   488  0EC5                     	;# 
   489  0EC6                     	;# 
   490  0EC7                     	;# 
   491  0EC8                     	;# 
   492  0EC9                     	;# 
   493  0ECA                     	;# 
   494  0ECB                     	;# 
   495  0ECC                     	;# 
   496  0F10                     	;# 
   497  0F11                     	;# 
   498  0F12                     	;# 
   499  0F13                     	;# 
   500  0F14                     	;# 
   501  0F15                     	;# 
   502  0F16                     	;# 
   503  0F17                     	;# 
   504  0F18                     	;# 
   505  0F19                     	;# 
   506  0F1A                     	;# 
   507  0F1B                     	;# 
   508  0F1C                     	;# 
   509  0F1D                     	;# 
   510  0F1E                     	;# 
   511  0F1F                     	;# 
   512  0F20                     	;# 
   513  0F21                     	;# 
   514  0F22                     	;# 
   515  0F23                     	;# 
   516  0F24                     	;# 
   517  0F25                     	;# 
   518  0F26                     	;# 
   519  0F27                     	;# 
   520  0F38                     	;# 
   521  0F39                     	;# 
   522  0F3A                     	;# 
   523  0F3B                     	;# 
   524  0F3C                     	;# 
   525  0F3D                     	;# 
   526  0F3E                     	;# 
   527  0F3F                     	;# 
   528  0F40                     	;# 
   529  0F41                     	;# 
   530  0F43                     	;# 
   531  0F44                     	;# 
   532  0F45                     	;# 
   533  0F46                     	;# 
   534  0F47                     	;# 
   535  0F48                     	;# 
   536  0F49                     	;# 
   537  0F4A                     	;# 
   538  0F4B                     	;# 
   539  0F4C                     	;# 
   540  0F4E                     	;# 
   541  0F4F                     	;# 
   542  0F50                     	;# 
   543  0F51                     	;# 
   544  0F52                     	;# 
   545  0F53                     	;# 
   546  0F54                     	;# 
   547  0F55                     	;# 
   548  0F56                     	;# 
   549  0F57                     	;# 
   550  0F65                     	;# 
   551  0F68                     	;# 
   552  0F69                     	;# 
   553  0F6A                     	;# 
   554  0F6B                     	;# 
   555  0FE4                     	;# 
   556  0FE5                     	;# 
   557  0FE6                     	;# 
   558  0FE7                     	;# 
   559  0FE8                     	;# 
   560  0FE9                     	;# 
   561  0FEA                     	;# 
   562  0FEB                     	;# 
   563  0FED                     	;# 
   564  0FEE                     	;# 
   565  0FEF                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  000E                     	;# 
   581  0010                     	;# 
   582  0011                     	;# 
   583  0012                     	;# 
   584  0013                     	;# 
   585  0016                     	;# 
   586  0017                     	;# 
   587  0018                     	;# 
   588  001C                     	;# 
   589  001C                     	;# 
   590  001D                     	;# 
   591  001D                     	;# 
   592  001E                     	;# 
   593  001F                     	;# 
   594  008C                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  008E                     	;# 
   598  008E                     	;# 
   599  008F                     	;# 
   600  0090                     	;# 
   601  0090                     	;# 
   602  0091                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  010C                     	;# 
   616  010D                     	;# 
   617  010E                     	;# 
   618  010E                     	;# 
   619  010F                     	;# 
   620  0110                     	;# 
   621  0110                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0112                     	;# 
   625  0113                     	;# 
   626  0114                     	;# 
   627  0114                     	;# 
   628  0115                     	;# 
   629  0116                     	;# 
   630  0116                     	;# 
   631  0117                     	;# 
   632  0119                     	;# 
   633  0119                     	;# 
   634  0119                     	;# 
   635  011A                     	;# 
   636  011A                     	;# 
   637  011A                     	;# 
   638  011B                     	;# 
   639  011B                     	;# 
   640  011B                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011C                     	;# 
   644  011C                     	;# 
   645  011C                     	;# 
   646  011D                     	;# 
   647  011D                     	;# 
   648  011D                     	;# 
   649  011E                     	;# 
   650  011E                     	;# 
   651  011E                     	;# 
   652  011F                     	;# 
   653  011F                     	;# 
   654  011F                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  018C                     	;# 
   658  018D                     	;# 
   659  018E                     	;# 
   660  018F                     	;# 
   661  0190                     	;# 
   662  0191                     	;# 
   663  0192                     	;# 
   664  0196                     	;# 
   665  0197                     	;# 
   666  0198                     	;# 
   667  0199                     	;# 
   668  019A                     	;# 
   669  019B                     	;# 
   670  019C                     	;# 
   671  020C                     	;# 
   672  020D                     	;# 
   673  020E                     	;# 
   674  020F                     	;# 
   675  020F                     	;# 
   676  0210                     	;# 
   677  0210                     	;# 
   678  0211                     	;# 
   679  0211                     	;# 
   680  0212                     	;# 
   681  0213                     	;# 
   682  0214                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0216                     	;# 
   686  0216                     	;# 
   687  0217                     	;# 
   688  0217                     	;# 
   689  0218                     	;# 
   690  0219                     	;# 
   691  021A                     	;# 
   692  021B                     	;# 
   693  021B                     	;# 
   694  021C                     	;# 
   695  021C                     	;# 
   696  021D                     	;# 
   697  021D                     	;# 
   698  021E                     	;# 
   699  021F                     	;# 
   700  028C                     	;# 
   701  028C                     	;# 
   702  028D                     	;# 
   703  028D                     	;# 
   704  028E                     	;# 
   705  028F                     	;# 
   706  0290                     	;# 
   707  0290                     	;# 
   708  0291                     	;# 
   709  0292                     	;# 
   710  0292                     	;# 
   711  0293                     	;# 
   712  0293                     	;# 
   713  0294                     	;# 
   714  0295                     	;# 
   715  0296                     	;# 
   716  0296                     	;# 
   717  0297                     	;# 
   718  0298                     	;# 
   719  0298                     	;# 
   720  0299                     	;# 
   721  0299                     	;# 
   722  029A                     	;# 
   723  029B                     	;# 
   724  029C                     	;# 
   725  029C                     	;# 
   726  029D                     	;# 
   727  030C                     	;# 
   728  030C                     	;# 
   729  030D                     	;# 
   730  030E                     	;# 
   731  030F                     	;# 
   732  0310                     	;# 
   733  0310                     	;# 
   734  0311                     	;# 
   735  0312                     	;# 
   736  0313                     	;# 
   737  0314                     	;# 
   738  0314                     	;# 
   739  0315                     	;# 
   740  0316                     	;# 
   741  0317                     	;# 
   742  0318                     	;# 
   743  0318                     	;# 
   744  0319                     	;# 
   745  031A                     	;# 
   746  031B                     	;# 
   747  031C                     	;# 
   748  031C                     	;# 
   749  031D                     	;# 
   750  031E                     	;# 
   751  031F                     	;# 
   752  038C                     	;# 
   753  038D                     	;# 
   754  038E                     	;# 
   755  0390                     	;# 
   756  0391                     	;# 
   757  0392                     	;# 
   758  040C                     	;# 
   759  040D                     	;# 
   760  040E                     	;# 
   761  040F                     	;# 
   762  0410                     	;# 
   763  0411                     	;# 
   764  0416                     	;# 
   765  0416                     	;# 
   766  0417                     	;# 
   767  0418                     	;# 
   768  0418                     	;# 
   769  0419                     	;# 
   770  041A                     	;# 
   771  041A                     	;# 
   772  041B                     	;# 
   773  041C                     	;# 
   774  041C                     	;# 
   775  041D                     	;# 
   776  041E                     	;# 
   777  041F                     	;# 
   778  048C                     	;# 
   779  048C                     	;# 
   780  048D                     	;# 
   781  048E                     	;# 
   782  048F                     	;# 
   783  048F                     	;# 
   784  0490                     	;# 
   785  0491                     	;# 
   786  0492                     	;# 
   787  0492                     	;# 
   788  0493                     	;# 
   789  0494                     	;# 
   790  0495                     	;# 
   791  0495                     	;# 
   792  0496                     	;# 
   793  0497                     	;# 
   794  0498                     	;# 
   795  0499                     	;# 
   796  049A                     	;# 
   797  049B                     	;# 
   798  049C                     	;# 
   799  049D                     	;# 
   800  050C                     	;# 
   801  050C                     	;# 
   802  050D                     	;# 
   803  050E                     	;# 
   804  050F                     	;# 
   805  050F                     	;# 
   806  0510                     	;# 
   807  0511                     	;# 
   808  0512                     	;# 
   809  0512                     	;# 
   810  0513                     	;# 
   811  0514                     	;# 
   812  0515                     	;# 
   813  0515                     	;# 
   814  0516                     	;# 
   815  0517                     	;# 
   816  0518                     	;# 
   817  0519                     	;# 
   818  051A                     	;# 
   819  051B                     	;# 
   820  051C                     	;# 
   821  051D                     	;# 
   822  058C                     	;# 
   823  058C                     	;# 
   824  058D                     	;# 
   825  058E                     	;# 
   826  058F                     	;# 
   827  058F                     	;# 
   828  0590                     	;# 
   829  0591                     	;# 
   830  0592                     	;# 
   831  0593                     	;# 
   832  060C                     	;# 
   833  060D                     	;# 
   834  060E                     	;# 
   835  060F                     	;# 
   836  0610                     	;# 
   837  0611                     	;# 
   838  0612                     	;# 
   839  0613                     	;# 
   840  0614                     	;# 
   841  0616                     	;# 
   842  0617                     	;# 
   843  0618                     	;# 
   844  0619                     	;# 
   845  061A                     	;# 
   846  061B                     	;# 
   847  061C                     	;# 
   848  061D                     	;# 
   849  061E                     	;# 
   850  068C                     	;# 
   851  068D                     	;# 
   852  068E                     	;# 
   853  068F                     	;# 
   854  0690                     	;# 
   855  0691                     	;# 
   856  0692                     	;# 
   857  0693                     	;# 
   858  0694                     	;# 
   859  070C                     	;# 
   860  070D                     	;# 
   861  070E                     	;# 
   862  070F                     	;# 
   863  0710                     	;# 
   864  0711                     	;# 
   865  0712                     	;# 
   866  0713                     	;# 
   867  0714                     	;# 
   868  0716                     	;# 
   869  0717                     	;# 
   870  0718                     	;# 
   871  0719                     	;# 
   872  071A                     	;# 
   873  071B                     	;# 
   874  071C                     	;# 
   875  071D                     	;# 
   876  071E                     	;# 
   877  0796                     	;# 
   878  0797                     	;# 
   879  0798                     	;# 
   880  0799                     	;# 
   881  079A                     	;# 
   882  079B                     	;# 
   883  080C                     	;# 
   884  080D                     	;# 
   885  080E                     	;# 
   886  080F                     	;# 
   887  0810                     	;# 
   888  0811                     	;# 
   889  0812                     	;# 
   890  0813                     	;# 
   891  0814                     	;# 
   892  081A                     	;# 
   893  081B                     	;# 
   894  081C                     	;# 
   895  081D                     	;# 
   896  081E                     	;# 
   897  081F                     	;# 
   898  088C                     	;# 
   899  088D                     	;# 
   900  088E                     	;# 
   901  088F                     	;# 
   902  0890                     	;# 
   903  0891                     	;# 
   904  0892                     	;# 
   905  0893                     	;# 
   906  0895                     	;# 
   907  0896                     	;# 
   908  0897                     	;# 
   909  0898                     	;# 
   910  0899                     	;# 
   911  089A                     	;# 
   912  089B                     	;# 
   913  090C                     	;# 
   914  090E                     	;# 
   915  090F                     	;# 
   916  091F                     	;# 
   917  091F                     	;# 
   918  098F                     	;# 
   919  098F                     	;# 
   920  0990                     	;# 
   921  0991                     	;# 
   922  0992                     	;# 
   923  0993                     	;# 
   924  0994                     	;# 
   925  0995                     	;# 
   926  0996                     	;# 
   927  0997                     	;# 
   928  0E0F                     	;# 
   929  0E10                     	;# 
   930  0E11                     	;# 
   931  0E12                     	;# 
   932  0E13                     	;# 
   933  0E14                     	;# 
   934  0E15                     	;# 
   935  0E16                     	;# 
   936  0E17                     	;# 
   937  0E18                     	;# 
   938  0E19                     	;# 
   939  0E1A                     	;# 
   940  0E1B                     	;# 
   941  0E1C                     	;# 
   942  0E1D                     	;# 
   943  0E1E                     	;# 
   944  0E1F                     	;# 
   945  0E20                     	;# 
   946  0E21                     	;# 
   947  0E22                     	;# 
   948  0E23                     	;# 
   949  0E24                     	;# 
   950  0E25                     	;# 
   951  0E26                     	;# 
   952  0E27                     	;# 
   953  0E28                     	;# 
   954  0E29                     	;# 
   955  0E2A                     	;# 
   956  0E2B                     	;# 
   957  0E2C                     	;# 
   958  0E2D                     	;# 
   959  0E2E                     	;# 
   960  0E2F                     	;# 
   961  0E30                     	;# 
   962  0E31                     	;# 
   963  0E32                     	;# 
   964  0E33                     	;# 
   965  0E34                     	;# 
   966  0E35                     	;# 
   967  0E36                     	;# 
   968  0E37                     	;# 
   969  0E8F                     	;# 
   970  0E90                     	;# 
   971  0E91                     	;# 
   972  0E92                     	;# 
   973  0E93                     	;# 
   974  0E94                     	;# 
   975  0E95                     	;# 
   976  0E96                     	;# 
   977  0E97                     	;# 
   978  0E9C                     	;# 
   979  0E9D                     	;# 
   980  0E9E                     	;# 
   981  0EA1                     	;# 
   982  0EA2                     	;# 
   983  0EA3                     	;# 
   984  0EA4                     	;# 
   985  0EA5                     	;# 
   986  0EA9                     	;# 
   987  0EAA                     	;# 
   988  0EAB                     	;# 
   989  0EAC                     	;# 
   990  0EB1                     	;# 
   991  0EB2                     	;# 
   992  0EB3                     	;# 
   993  0EB8                     	;# 
   994  0EB9                     	;# 
   995  0EBA                     	;# 
   996  0EBB                     	;# 
   997  0EBC                     	;# 
   998  0EBD                     	;# 
   999  0EBE                     	;# 
  1000  0EC3                     	;# 
  1001  0EC5                     	;# 
  1002  0EC6                     	;# 
  1003  0EC7                     	;# 
  1004  0EC8                     	;# 
  1005  0EC9                     	;# 
  1006  0ECA                     	;# 
  1007  0ECB                     	;# 
  1008  0ECC                     	;# 
  1009  0F10                     	;# 
  1010  0F11                     	;# 
  1011  0F12                     	;# 
  1012  0F13                     	;# 
  1013  0F14                     	;# 
  1014  0F15                     	;# 
  1015  0F16                     	;# 
  1016  0F17                     	;# 
  1017  0F18                     	;# 
  1018  0F19                     	;# 
  1019  0F1A                     	;# 
  1020  0F1B                     	;# 
  1021  0F1C                     	;# 
  1022  0F1D                     	;# 
  1023  0F1E                     	;# 
  1024  0F1F                     	;# 
  1025  0F20                     	;# 
  1026  0F21                     	;# 
  1027  0F22                     	;# 
  1028  0F23                     	;# 
  1029  0F24                     	;# 
  1030  0F25                     	;# 
  1031  0F26                     	;# 
  1032  0F27                     	;# 
  1033  0F38                     	;# 
  1034  0F39                     	;# 
  1035  0F3A                     	;# 
  1036  0F3B                     	;# 
  1037  0F3C                     	;# 
  1038  0F3D                     	;# 
  1039  0F3E                     	;# 
  1040  0F3F                     	;# 
  1041  0F40                     	;# 
  1042  0F41                     	;# 
  1043  0F43                     	;# 
  1044  0F44                     	;# 
  1045  0F45                     	;# 
  1046  0F46                     	;# 
  1047  0F47                     	;# 
  1048  0F48                     	;# 
  1049  0F49                     	;# 
  1050  0F4A                     	;# 
  1051  0F4B                     	;# 
  1052  0F4C                     	;# 
  1053  0F4E                     	;# 
  1054  0F4F                     	;# 
  1055  0F50                     	;# 
  1056  0F51                     	;# 
  1057  0F52                     	;# 
  1058  0F53                     	;# 
  1059  0F54                     	;# 
  1060  0F55                     	;# 
  1061  0F56                     	;# 
  1062  0F57                     	;# 
  1063  0F65                     	;# 
  1064  0F68                     	;# 
  1065  0F69                     	;# 
  1066  0F6A                     	;# 
  1067  0F6B                     	;# 
  1068  0FE4                     	;# 
  1069  0FE5                     	;# 
  1070  0FE6                     	;# 
  1071  0FE7                     	;# 
  1072  0FE8                     	;# 
  1073  0FE9                     	;# 
  1074  0FEA                     	;# 
  1075  0FEB                     	;# 
  1076  0FED                     	;# 
  1077  0FEE                     	;# 
  1078  0FEF                     	;# 
  1079  0000                     	;# 
  1080  0001                     	;# 
  1081  0002                     	;# 
  1082  0003                     	;# 
  1083  0004                     	;# 
  1084  0005                     	;# 
  1085  0006                     	;# 
  1086  0007                     	;# 
  1087  0008                     	;# 
  1088  0009                     	;# 
  1089  000A                     	;# 
  1090  000B                     	;# 
  1091  000C                     	;# 
  1092  000D                     	;# 
  1093  000E                     	;# 
  1094  0010                     	;# 
  1095  0011                     	;# 
  1096  0012                     	;# 
  1097  0013                     	;# 
  1098  0016                     	;# 
  1099  0017                     	;# 
  1100  0018                     	;# 
  1101  001C                     	;# 
  1102  001C                     	;# 
  1103  001D                     	;# 
  1104  001D                     	;# 
  1105  001E                     	;# 
  1106  001F                     	;# 
  1107  008C                     	;# 
  1108  008C                     	;# 
  1109  008D                     	;# 
  1110  008E                     	;# 
  1111  008E                     	;# 
  1112  008F                     	;# 
  1113  0090                     	;# 
  1114  0090                     	;# 
  1115  0091                     	;# 
  1116  0093                     	;# 
  1117  0094                     	;# 
  1118  0095                     	;# 
  1119  0096                     	;# 
  1120  0097                     	;# 
  1121  0098                     	;# 
  1122  0099                     	;# 
  1123  009A                     	;# 
  1124  009B                     	;# 
  1125  009C                     	;# 
  1126  009D                     	;# 
  1127  009E                     	;# 
  1128  010C                     	;# 
  1129  010D                     	;# 
  1130  010E                     	;# 
  1131  010E                     	;# 
  1132  010F                     	;# 
  1133  0110                     	;# 
  1134  0110                     	;# 
  1135  0111                     	;# 
  1136  0112                     	;# 
  1137  0112                     	;# 
  1138  0113                     	;# 
  1139  0114                     	;# 
  1140  0114                     	;# 
  1141  0115                     	;# 
  1142  0116                     	;# 
  1143  0116                     	;# 
  1144  0117                     	;# 
  1145  0119                     	;# 
  1146  0119                     	;# 
  1147  0119                     	;# 
  1148  011A                     	;# 
  1149  011A                     	;# 
  1150  011A                     	;# 
  1151  011B                     	;# 
  1152  011B                     	;# 
  1153  011B                     	;# 
  1154  011B                     	;# 
  1155  011B                     	;# 
  1156  011C                     	;# 
  1157  011C                     	;# 
  1158  011C                     	;# 
  1159  011D                     	;# 
  1160  011D                     	;# 
  1161  011D                     	;# 
  1162  011E                     	;# 
  1163  011E                     	;# 
  1164  011E                     	;# 
  1165  011F                     	;# 
  1166  011F                     	;# 
  1167  011F                     	;# 
  1168  011F                     	;# 
  1169  011F                     	;# 
  1170  018C                     	;# 
  1171  018D                     	;# 
  1172  018E                     	;# 
  1173  018F                     	;# 
  1174  0190                     	;# 
  1175  0191                     	;# 
  1176  0192                     	;# 
  1177  0196                     	;# 
  1178  0197                     	;# 
  1179  0198                     	;# 
  1180  0199                     	;# 
  1181  019A                     	;# 
  1182  019B                     	;# 
  1183  019C                     	;# 
  1184  020C                     	;# 
  1185  020D                     	;# 
  1186  020E                     	;# 
  1187  020F                     	;# 
  1188  020F                     	;# 
  1189  0210                     	;# 
  1190  0210                     	;# 
  1191  0211                     	;# 
  1192  0211                     	;# 
  1193  0212                     	;# 
  1194  0213                     	;# 
  1195  0214                     	;# 
  1196  0215                     	;# 
  1197  0215                     	;# 
  1198  0216                     	;# 
  1199  0216                     	;# 
  1200  0217                     	;# 
  1201  0217                     	;# 
  1202  0218                     	;# 
  1203  0219                     	;# 
  1204  021A                     	;# 
  1205  021B                     	;# 
  1206  021B                     	;# 
  1207  021C                     	;# 
  1208  021C                     	;# 
  1209  021D                     	;# 
  1210  021D                     	;# 
  1211  021E                     	;# 
  1212  021F                     	;# 
  1213  028C                     	;# 
  1214  028C                     	;# 
  1215  028D                     	;# 
  1216  028D                     	;# 
  1217  028E                     	;# 
  1218  028F                     	;# 
  1219  0290                     	;# 
  1220  0290                     	;# 
  1221  0291                     	;# 
  1222  0292                     	;# 
  1223  0292                     	;# 
  1224  0293                     	;# 
  1225  0293                     	;# 
  1226  0294                     	;# 
  1227  0295                     	;# 
  1228  0296                     	;# 
  1229  0296                     	;# 
  1230  0297                     	;# 
  1231  0298                     	;# 
  1232  0298                     	;# 
  1233  0299                     	;# 
  1234  0299                     	;# 
  1235  029A                     	;# 
  1236  029B                     	;# 
  1237  029C                     	;# 
  1238  029C                     	;# 
  1239  029D                     	;# 
  1240  030C                     	;# 
  1241  030C                     	;# 
  1242  030D                     	;# 
  1243  030E                     	;# 
  1244  030F                     	;# 
  1245  0310                     	;# 
  1246  0310                     	;# 
  1247  0311                     	;# 
  1248  0312                     	;# 
  1249  0313                     	;# 
  1250  0314                     	;# 
  1251  0314                     	;# 
  1252  0315                     	;# 
  1253  0316                     	;# 
  1254  0317                     	;# 
  1255  0318                     	;# 
  1256  0318                     	;# 
  1257  0319                     	;# 
  1258  031A                     	;# 
  1259  031B                     	;# 
  1260  031C                     	;# 
  1261  031C                     	;# 
  1262  031D                     	;# 
  1263  031E                     	;# 
  1264  031F                     	;# 
  1265  038C                     	;# 
  1266  038D                     	;# 
  1267  038E                     	;# 
  1268  0390                     	;# 
  1269  0391                     	;# 
  1270  0392                     	;# 
  1271  040C                     	;# 
  1272  040D                     	;# 
  1273  040E                     	;# 
  1274  040F                     	;# 
  1275  0410                     	;# 
  1276  0411                     	;# 
  1277  0416                     	;# 
  1278  0416                     	;# 
  1279  0417                     	;# 
  1280  0418                     	;# 
  1281  0418                     	;# 
  1282  0419                     	;# 
  1283  041A                     	;# 
  1284  041A                     	;# 
  1285  041B                     	;# 
  1286  041C                     	;# 
  1287  041C                     	;# 
  1288  041D                     	;# 
  1289  041E                     	;# 
  1290  041F                     	;# 
  1291  048C                     	;# 
  1292  048C                     	;# 
  1293  048D                     	;# 
  1294  048E                     	;# 
  1295  048F                     	;# 
  1296  048F                     	;# 
  1297  0490                     	;# 
  1298  0491                     	;# 
  1299  0492                     	;# 
  1300  0492                     	;# 
  1301  0493                     	;# 
  1302  0494                     	;# 
  1303  0495                     	;# 
  1304  0495                     	;# 
  1305  0496                     	;# 
  1306  0497                     	;# 
  1307  0498                     	;# 
  1308  0499                     	;# 
  1309  049A                     	;# 
  1310  049B                     	;# 
  1311  049C                     	;# 
  1312  049D                     	;# 
  1313  050C                     	;# 
  1314  050C                     	;# 
  1315  050D                     	;# 
  1316  050E                     	;# 
  1317  050F                     	;# 
  1318  050F                     	;# 
  1319  0510                     	;# 
  1320  0511                     	;# 
  1321  0512                     	;# 
  1322  0512                     	;# 
  1323  0513                     	;# 
  1324  0514                     	;# 
  1325  0515                     	;# 
  1326  0515                     	;# 
  1327  0516                     	;# 
  1328  0517                     	;# 
  1329  0518                     	;# 
  1330  0519                     	;# 
  1331  051A                     	;# 
  1332  051B                     	;# 
  1333  051C                     	;# 
  1334  051D                     	;# 
  1335  058C                     	;# 
  1336  058C                     	;# 
  1337  058D                     	;# 
  1338  058E                     	;# 
  1339  058F                     	;# 
  1340  058F                     	;# 
  1341  0590                     	;# 
  1342  0591                     	;# 
  1343  0592                     	;# 
  1344  0593                     	;# 
  1345  060C                     	;# 
  1346  060D                     	;# 
  1347  060E                     	;# 
  1348  060F                     	;# 
  1349  0610                     	;# 
  1350  0611                     	;# 
  1351  0612                     	;# 
  1352  0613                     	;# 
  1353  0614                     	;# 
  1354  0616                     	;# 
  1355  0617                     	;# 
  1356  0618                     	;# 
  1357  0619                     	;# 
  1358  061A                     	;# 
  1359  061B                     	;# 
  1360  061C                     	;# 
  1361  061D                     	;# 
  1362  061E                     	;# 
  1363  068C                     	;# 
  1364  068D                     	;# 
  1365  068E                     	;# 
  1366  068F                     	;# 
  1367  0690                     	;# 
  1368  0691                     	;# 
  1369  0692                     	;# 
  1370  0693                     	;# 
  1371  0694                     	;# 
  1372  070C                     	;# 
  1373  070D                     	;# 
  1374  070E                     	;# 
  1375  070F                     	;# 
  1376  0710                     	;# 
  1377  0711                     	;# 
  1378  0712                     	;# 
  1379  0713                     	;# 
  1380  0714                     	;# 
  1381  0716                     	;# 
  1382  0717                     	;# 
  1383  0718                     	;# 
  1384  0719                     	;# 
  1385  071A                     	;# 
  1386  071B                     	;# 
  1387  071C                     	;# 
  1388  071D                     	;# 
  1389  071E                     	;# 
  1390  0796                     	;# 
  1391  0797                     	;# 
  1392  0798                     	;# 
  1393  0799                     	;# 
  1394  079A                     	;# 
  1395  079B                     	;# 
  1396  080C                     	;# 
  1397  080D                     	;# 
  1398  080E                     	;# 
  1399  080F                     	;# 
  1400  0810                     	;# 
  1401  0811                     	;# 
  1402  0812                     	;# 
  1403  0813                     	;# 
  1404  0814                     	;# 
  1405  081A                     	;# 
  1406  081B                     	;# 
  1407  081C                     	;# 
  1408  081D                     	;# 
  1409  081E                     	;# 
  1410  081F                     	;# 
  1411  088C                     	;# 
  1412  088D                     	;# 
  1413  088E                     	;# 
  1414  088F                     	;# 
  1415  0890                     	;# 
  1416  0891                     	;# 
  1417  0892                     	;# 
  1418  0893                     	;# 
  1419  0895                     	;# 
  1420  0896                     	;# 
  1421  0897                     	;# 
  1422  0898                     	;# 
  1423  0899                     	;# 
  1424  089A                     	;# 
  1425  089B                     	;# 
  1426  090C                     	;# 
  1427  090E                     	;# 
  1428  090F                     	;# 
  1429  091F                     	;# 
  1430  091F                     	;# 
  1431  098F                     	;# 
  1432  098F                     	;# 
  1433  0990                     	;# 
  1434  0991                     	;# 
  1435  0992                     	;# 
  1436  0993                     	;# 
  1437  0994                     	;# 
  1438  0995                     	;# 
  1439  0996                     	;# 
  1440  0997                     	;# 
  1441  0E0F                     	;# 
  1442  0E10                     	;# 
  1443  0E11                     	;# 
  1444  0E12                     	;# 
  1445  0E13                     	;# 
  1446  0E14                     	;# 
  1447  0E15                     	;# 
  1448  0E16                     	;# 
  1449  0E17                     	;# 
  1450  0E18                     	;# 
  1451  0E19                     	;# 
  1452  0E1A                     	;# 
  1453  0E1B                     	;# 
  1454  0E1C                     	;# 
  1455  0E1D                     	;# 
  1456  0E1E                     	;# 
  1457  0E1F                     	;# 
  1458  0E20                     	;# 
  1459  0E21                     	;# 
  1460  0E22                     	;# 
  1461  0E23                     	;# 
  1462  0E24                     	;# 
  1463  0E25                     	;# 
  1464  0E26                     	;# 
  1465  0E27                     	;# 
  1466  0E28                     	;# 
  1467  0E29                     	;# 
  1468  0E2A                     	;# 
  1469  0E2B                     	;# 
  1470  0E2C                     	;# 
  1471  0E2D                     	;# 
  1472  0E2E                     	;# 
  1473  0E2F                     	;# 
  1474  0E30                     	;# 
  1475  0E31                     	;# 
  1476  0E32                     	;# 
  1477  0E33                     	;# 
  1478  0E34                     	;# 
  1479  0E35                     	;# 
  1480  0E36                     	;# 
  1481  0E37                     	;# 
  1482  0E8F                     	;# 
  1483  0E90                     	;# 
  1484  0E91                     	;# 
  1485  0E92                     	;# 
  1486  0E93                     	;# 
  1487  0E94                     	;# 
  1488  0E95                     	;# 
  1489  0E96                     	;# 
  1490  0E97                     	;# 
  1491  0E9C                     	;# 
  1492  0E9D                     	;# 
  1493  0E9E                     	;# 
  1494  0EA1                     	;# 
  1495  0EA2                     	;# 
  1496  0EA3                     	;# 
  1497  0EA4                     	;# 
  1498  0EA5                     	;# 
  1499  0EA9                     	;# 
  1500  0EAA                     	;# 
  1501  0EAB                     	;# 
  1502  0EAC                     	;# 
  1503  0EB1                     	;# 
  1504  0EB2                     	;# 
  1505  0EB3                     	;# 
  1506  0EB8                     	;# 
  1507  0EB9                     	;# 
  1508  0EBA                     	;# 
  1509  0EBB                     	;# 
  1510  0EBC                     	;# 
  1511  0EBD                     	;# 
  1512  0EBE                     	;# 
  1513  0EC3                     	;# 
  1514  0EC5                     	;# 
  1515  0EC6                     	;# 
  1516  0EC7                     	;# 
  1517  0EC8                     	;# 
  1518  0EC9                     	;# 
  1519  0ECA                     	;# 
  1520  0ECB                     	;# 
  1521  0ECC                     	;# 
  1522  0F10                     	;# 
  1523  0F11                     	;# 
  1524  0F12                     	;# 
  1525  0F13                     	;# 
  1526  0F14                     	;# 
  1527  0F15                     	;# 
  1528  0F16                     	;# 
  1529  0F17                     	;# 
  1530  0F18                     	;# 
  1531  0F19                     	;# 
  1532  0F1A                     	;# 
  1533  0F1B                     	;# 
  1534  0F1C                     	;# 
  1535  0F1D                     	;# 
  1536  0F1E                     	;# 
  1537  0F1F                     	;# 
  1538  0F20                     	;# 
  1539  0F21                     	;# 
  1540  0F22                     	;# 
  1541  0F23                     	;# 
  1542  0F24                     	;# 
  1543  0F25                     	;# 
  1544  0F26                     	;# 
  1545  0F27                     	;# 
  1546  0F38                     	;# 
  1547  0F39                     	;# 
  1548  0F3A                     	;# 
  1549  0F3B                     	;# 
  1550  0F3C                     	;# 
  1551  0F3D                     	;# 
  1552  0F3E                     	;# 
  1553  0F3F                     	;# 
  1554  0F40                     	;# 
  1555  0F41                     	;# 
  1556  0F43                     	;# 
  1557  0F44                     	;# 
  1558  0F45                     	;# 
  1559  0F46                     	;# 
  1560  0F47                     	;# 
  1561  0F48                     	;# 
  1562  0F49                     	;# 
  1563  0F4A                     	;# 
  1564  0F4B                     	;# 
  1565  0F4C                     	;# 
  1566  0F4E                     	;# 
  1567  0F4F                     	;# 
  1568  0F50                     	;# 
  1569  0F51                     	;# 
  1570  0F52                     	;# 
  1571  0F53                     	;# 
  1572  0F54                     	;# 
  1573  0F55                     	;# 
  1574  0F56                     	;# 
  1575  0F57                     	;# 
  1576  0F65                     	;# 
  1577  0F68                     	;# 
  1578  0F69                     	;# 
  1579  0F6A                     	;# 
  1580  0F6B                     	;# 
  1581  0FE4                     	;# 
  1582  0FE5                     	;# 
  1583  0FE6                     	;# 
  1584  0FE7                     	;# 
  1585  0FE8                     	;# 
  1586  0FE9                     	;# 
  1587  0FEA                     	;# 
  1588  0FEB                     	;# 
  1589  0FED                     	;# 
  1590  0FEE                     	;# 
  1591  0FEF                     	;# 
  1592  0000                     	;# 
  1593  0001                     	;# 
  1594  0002                     	;# 
  1595  0003                     	;# 
  1596  0004                     	;# 
  1597  0005                     	;# 
  1598  0006                     	;# 
  1599  0007                     	;# 
  1600  0008                     	;# 
  1601  0009                     	;# 
  1602  000A                     	;# 
  1603  000B                     	;# 
  1604  000C                     	;# 
  1605  000D                     	;# 
  1606  000E                     	;# 
  1607  0010                     	;# 
  1608  0011                     	;# 
  1609  0012                     	;# 
  1610  0013                     	;# 
  1611  0016                     	;# 
  1612  0017                     	;# 
  1613  0018                     	;# 
  1614  001C                     	;# 
  1615  001C                     	;# 
  1616  001D                     	;# 
  1617  001D                     	;# 
  1618  001E                     	;# 
  1619  001F                     	;# 
  1620  008C                     	;# 
  1621  008C                     	;# 
  1622  008D                     	;# 
  1623  008E                     	;# 
  1624  008E                     	;# 
  1625  008F                     	;# 
  1626  0090                     	;# 
  1627  0090                     	;# 
  1628  0091                     	;# 
  1629  0093                     	;# 
  1630  0094                     	;# 
  1631  0095                     	;# 
  1632  0096                     	;# 
  1633  0097                     	;# 
  1634  0098                     	;# 
  1635  0099                     	;# 
  1636  009A                     	;# 
  1637  009B                     	;# 
  1638  009C                     	;# 
  1639  009D                     	;# 
  1640  009E                     	;# 
  1641  010C                     	;# 
  1642  010D                     	;# 
  1643  010E                     	;# 
  1644  010E                     	;# 
  1645  010F                     	;# 
  1646  0110                     	;# 
  1647  0110                     	;# 
  1648  0111                     	;# 
  1649  0112                     	;# 
  1650  0112                     	;# 
  1651  0113                     	;# 
  1652  0114                     	;# 
  1653  0114                     	;# 
  1654  0115                     	;# 
  1655  0116                     	;# 
  1656  0116                     	;# 
  1657  0117                     	;# 
  1658  0119                     	;# 
  1659  0119                     	;# 
  1660  0119                     	;# 
  1661  011A                     	;# 
  1662  011A                     	;# 
  1663  011A                     	;# 
  1664  011B                     	;# 
  1665  011B                     	;# 
  1666  011B                     	;# 
  1667  011B                     	;# 
  1668  011B                     	;# 
  1669  011C                     	;# 
  1670  011C                     	;# 
  1671  011C                     	;# 
  1672  011D                     	;# 
  1673  011D                     	;# 
  1674  011D                     	;# 
  1675  011E                     	;# 
  1676  011E                     	;# 
  1677  011E                     	;# 
  1678  011F                     	;# 
  1679  011F                     	;# 
  1680  011F                     	;# 
  1681  011F                     	;# 
  1682  011F                     	;# 
  1683  018C                     	;# 
  1684  018D                     	;# 
  1685  018E                     	;# 
  1686  018F                     	;# 
  1687  0190                     	;# 
  1688  0191                     	;# 
  1689  0192                     	;# 
  1690  0196                     	;# 
  1691  0197                     	;# 
  1692  0198                     	;# 
  1693  0199                     	;# 
  1694  019A                     	;# 
  1695  019B                     	;# 
  1696  019C                     	;# 
  1697  020C                     	;# 
  1698  020D                     	;# 
  1699  020E                     	;# 
  1700  020F                     	;# 
  1701  020F                     	;# 
  1702  0210                     	;# 
  1703  0210                     	;# 
  1704  0211                     	;# 
  1705  0211                     	;# 
  1706  0212                     	;# 
  1707  0213                     	;# 
  1708  0214                     	;# 
  1709  0215                     	;# 
  1710  0215                     	;# 
  1711  0216                     	;# 
  1712  0216                     	;# 
  1713  0217                     	;# 
  1714  0217                     	;# 
  1715  0218                     	;# 
  1716  0219                     	;# 
  1717  021A                     	;# 
  1718  021B                     	;# 
  1719  021B                     	;# 
  1720  021C                     	;# 
  1721  021C                     	;# 
  1722  021D                     	;# 
  1723  021D                     	;# 
  1724  021E                     	;# 
  1725  021F                     	;# 
  1726  028C                     	;# 
  1727  028C                     	;# 
  1728  028D                     	;# 
  1729  028D                     	;# 
  1730  028E                     	;# 
  1731  028F                     	;# 
  1732  0290                     	;# 
  1733  0290                     	;# 
  1734  0291                     	;# 
  1735  0292                     	;# 
  1736  0292                     	;# 
  1737  0293                     	;# 
  1738  0293                     	;# 
  1739  0294                     	;# 
  1740  0295                     	;# 
  1741  0296                     	;# 
  1742  0296                     	;# 
  1743  0297                     	;# 
  1744  0298                     	;# 
  1745  0298                     	;# 
  1746  0299                     	;# 
  1747  0299                     	;# 
  1748  029A                     	;# 
  1749  029B                     	;# 
  1750  029C                     	;# 
  1751  029C                     	;# 
  1752  029D                     	;# 
  1753  030C                     	;# 
  1754  030C                     	;# 
  1755  030D                     	;# 
  1756  030E                     	;# 
  1757  030F                     	;# 
  1758  0310                     	;# 
  1759  0310                     	;# 
  1760  0311                     	;# 
  1761  0312                     	;# 
  1762  0313                     	;# 
  1763  0314                     	;# 
  1764  0314                     	;# 
  1765  0315                     	;# 
  1766  0316                     	;# 
  1767  0317                     	;# 
  1768  0318                     	;# 
  1769  0318                     	;# 
  1770  0319                     	;# 
  1771  031A                     	;# 
  1772  031B                     	;# 
  1773  031C                     	;# 
  1774  031C                     	;# 
  1775  031D                     	;# 
  1776  031E                     	;# 
  1777  031F                     	;# 
  1778  038C                     	;# 
  1779  038D                     	;# 
  1780  038E                     	;# 
  1781  0390                     	;# 
  1782  0391                     	;# 
  1783  0392                     	;# 
  1784  040C                     	;# 
  1785  040D                     	;# 
  1786  040E                     	;# 
  1787  040F                     	;# 
  1788  0410                     	;# 
  1789  0411                     	;# 
  1790  0416                     	;# 
  1791  0416                     	;# 
  1792  0417                     	;# 
  1793  0418                     	;# 
  1794  0418                     	;# 
  1795  0419                     	;# 
  1796  041A                     	;# 
  1797  041A                     	;# 
  1798  041B                     	;# 
  1799  041C                     	;# 
  1800  041C                     	;# 
  1801  041D                     	;# 
  1802  041E                     	;# 
  1803  041F                     	;# 
  1804  048C                     	;# 
  1805  048C                     	;# 
  1806  048D                     	;# 
  1807  048E                     	;# 
  1808  048F                     	;# 
  1809  048F                     	;# 
  1810  0490                     	;# 
  1811  0491                     	;# 
  1812  0492                     	;# 
  1813  0492                     	;# 
  1814  0493                     	;# 
  1815  0494                     	;# 
  1816  0495                     	;# 
  1817  0495                     	;# 
  1818  0496                     	;# 
  1819  0497                     	;# 
  1820  0498                     	;# 
  1821  0499                     	;# 
  1822  049A                     	;# 
  1823  049B                     	;# 
  1824  049C                     	;# 
  1825  049D                     	;# 
  1826  050C                     	;# 
  1827  050C                     	;# 
  1828  050D                     	;# 
  1829  050E                     	;# 
  1830  050F                     	;# 
  1831  050F                     	;# 
  1832  0510                     	;# 
  1833  0511                     	;# 
  1834  0512                     	;# 
  1835  0512                     	;# 
  1836  0513                     	;# 
  1837  0514                     	;# 
  1838  0515                     	;# 
  1839  0515                     	;# 
  1840  0516                     	;# 
  1841  0517                     	;# 
  1842  0518                     	;# 
  1843  0519                     	;# 
  1844  051A                     	;# 
  1845  051B                     	;# 
  1846  051C                     	;# 
  1847  051D                     	;# 
  1848  058C                     	;# 
  1849  058C                     	;# 
  1850  058D                     	;# 
  1851  058E                     	;# 
  1852  058F                     	;# 
  1853  058F                     	;# 
  1854  0590                     	;# 
  1855  0591                     	;# 
  1856  0592                     	;# 
  1857  0593                     	;# 
  1858  060C                     	;# 
  1859  060D                     	;# 
  1860  060E                     	;# 
  1861  060F                     	;# 
  1862  0610                     	;# 
  1863  0611                     	;# 
  1864  0612                     	;# 
  1865  0613                     	;# 
  1866  0614                     	;# 
  1867  0616                     	;# 
  1868  0617                     	;# 
  1869  0618                     	;# 
  1870  0619                     	;# 
  1871  061A                     	;# 
  1872  061B                     	;# 
  1873  061C                     	;# 
  1874  061D                     	;# 
  1875  061E                     	;# 
  1876  068C                     	;# 
  1877  068D                     	;# 
  1878  068E                     	;# 
  1879  068F                     	;# 
  1880  0690                     	;# 
  1881  0691                     	;# 
  1882  0692                     	;# 
  1883  0693                     	;# 
  1884  0694                     	;# 
  1885  070C                     	;# 
  1886  070D                     	;# 
  1887  070E                     	;# 
  1888  070F                     	;# 
  1889  0710                     	;# 
  1890  0711                     	;# 
  1891  0712                     	;# 
  1892  0713                     	;# 
  1893  0714                     	;# 
  1894  0716                     	;# 
  1895  0717                     	;# 
  1896  0718                     	;# 
  1897  0719                     	;# 
  1898  071A                     	;# 
  1899  071B                     	;# 
  1900  071C                     	;# 
  1901  071D                     	;# 
  1902  071E                     	;# 
  1903  0796                     	;# 
  1904  0797                     	;# 
  1905  0798                     	;# 
  1906  0799                     	;# 
  1907  079A                     	;# 
  1908  079B                     	;# 
  1909  080C                     	;# 
  1910  080D                     	;# 
  1911  080E                     	;# 
  1912  080F                     	;# 
  1913  0810                     	;# 
  1914  0811                     	;# 
  1915  0812                     	;# 
  1916  0813                     	;# 
  1917  0814                     	;# 
  1918  081A                     	;# 
  1919  081B                     	;# 
  1920  081C                     	;# 
  1921  081D                     	;# 
  1922  081E                     	;# 
  1923  081F                     	;# 
  1924  088C                     	;# 
  1925  088D                     	;# 
  1926  088E                     	;# 
  1927  088F                     	;# 
  1928  0890                     	;# 
  1929  0891                     	;# 
  1930  0892                     	;# 
  1931  0893                     	;# 
  1932  0895                     	;# 
  1933  0896                     	;# 
  1934  0897                     	;# 
  1935  0898                     	;# 
  1936  0899                     	;# 
  1937  089A                     	;# 
  1938  089B                     	;# 
  1939  090C                     	;# 
  1940  090E                     	;# 
  1941  090F                     	;# 
  1942  091F                     	;# 
  1943  091F                     	;# 
  1944  098F                     	;# 
  1945  098F                     	;# 
  1946  0990                     	;# 
  1947  0991                     	;# 
  1948  0992                     	;# 
  1949  0993                     	;# 
  1950  0994                     	;# 
  1951  0995                     	;# 
  1952  0996                     	;# 
  1953  0997                     	;# 
  1954  0E0F                     	;# 
  1955  0E10                     	;# 
  1956  0E11                     	;# 
  1957  0E12                     	;# 
  1958  0E13                     	;# 
  1959  0E14                     	;# 
  1960  0E15                     	;# 
  1961  0E16                     	;# 
  1962  0E17                     	;# 
  1963  0E18                     	;# 
  1964  0E19                     	;# 
  1965  0E1A                     	;# 
  1966  0E1B                     	;# 
  1967  0E1C                     	;# 
  1968  0E1D                     	;# 
  1969  0E1E                     	;# 
  1970  0E1F                     	;# 
  1971  0E20                     	;# 
  1972  0E21                     	;# 
  1973  0E22                     	;# 
  1974  0E23                     	;# 
  1975  0E24                     	;# 
  1976  0E25                     	;# 
  1977  0E26                     	;# 
  1978  0E27                     	;# 
  1979  0E28                     	;# 
  1980  0E29                     	;# 
  1981  0E2A                     	;# 
  1982  0E2B                     	;# 
  1983  0E2C                     	;# 
  1984  0E2D                     	;# 
  1985  0E2E                     	;# 
  1986  0E2F                     	;# 
  1987  0E30                     	;# 
  1988  0E31                     	;# 
  1989  0E32                     	;# 
  1990  0E33                     	;# 
  1991  0E34                     	;# 
  1992  0E35                     	;# 
  1993  0E36                     	;# 
  1994  0E37                     	;# 
  1995  0E8F                     	;# 
  1996  0E90                     	;# 
  1997  0E91                     	;# 
  1998  0E92                     	;# 
  1999  0E93                     	;# 
  2000  0E94                     	;# 
  2001  0E95                     	;# 
  2002  0E96                     	;# 
  2003  0E97                     	;# 
  2004  0E9C                     	;# 
  2005  0E9D                     	;# 
  2006  0E9E                     	;# 
  2007  0EA1                     	;# 
  2008  0EA2                     	;# 
  2009  0EA3                     	;# 
  2010  0EA4                     	;# 
  2011  0EA5                     	;# 
  2012  0EA9                     	;# 
  2013  0EAA                     	;# 
  2014  0EAB                     	;# 
  2015  0EAC                     	;# 
  2016  0EB1                     	;# 
  2017  0EB2                     	;# 
  2018  0EB3                     	;# 
  2019  0EB8                     	;# 
  2020  0EB9                     	;# 
  2021  0EBA                     	;# 
  2022  0EBB                     	;# 
  2023  0EBC                     	;# 
  2024  0EBD                     	;# 
  2025  0EBE                     	;# 
  2026  0EC3                     	;# 
  2027  0EC5                     	;# 
  2028  0EC6                     	;# 
  2029  0EC7                     	;# 
  2030  0EC8                     	;# 
  2031  0EC9                     	;# 
  2032  0ECA                     	;# 
  2033  0ECB                     	;# 
  2034  0ECC                     	;# 
  2035  0F10                     	;# 
  2036  0F11                     	;# 
  2037  0F12                     	;# 
  2038  0F13                     	;# 
  2039  0F14                     	;# 
  2040  0F15                     	;# 
  2041  0F16                     	;# 
  2042  0F17                     	;# 
  2043  0F18                     	;# 
  2044  0F19                     	;# 
  2045  0F1A                     	;# 
  2046  0F1B                     	;# 
  2047  0F1C                     	;# 
  2048  0F1D                     	;# 
  2049  0F1E                     	;# 
  2050  0F1F                     	;# 
  2051  0F20                     	;# 
  2052  0F21                     	;# 
  2053  0F22                     	;# 
  2054  0F23                     	;# 
  2055  0F24                     	;# 
  2056  0F25                     	;# 
  2057  0F26                     	;# 
  2058  0F27                     	;# 
  2059  0F38                     	;# 
  2060  0F39                     	;# 
  2061  0F3A                     	;# 
  2062  0F3B                     	;# 
  2063  0F3C                     	;# 
  2064  0F3D                     	;# 
  2065  0F3E                     	;# 
  2066  0F3F                     	;# 
  2067  0F40                     	;# 
  2068  0F41                     	;# 
  2069  0F43                     	;# 
  2070  0F44                     	;# 
  2071  0F45                     	;# 
  2072  0F46                     	;# 
  2073  0F47                     	;# 
  2074  0F48                     	;# 
  2075  0F49                     	;# 
  2076  0F4A                     	;# 
  2077  0F4B                     	;# 
  2078  0F4C                     	;# 
  2079  0F4E                     	;# 
  2080  0F4F                     	;# 
  2081  0F50                     	;# 
  2082  0F51                     	;# 
  2083  0F52                     	;# 
  2084  0F53                     	;# 
  2085  0F54                     	;# 
  2086  0F55                     	;# 
  2087  0F56                     	;# 
  2088  0F57                     	;# 
  2089  0F65                     	;# 
  2090  0F68                     	;# 
  2091  0F69                     	;# 
  2092  0F6A                     	;# 
  2093  0F6B                     	;# 
  2094  0FE4                     	;# 
  2095  0FE5                     	;# 
  2096  0FE6                     	;# 
  2097  0FE7                     	;# 
  2098  0FE8                     	;# 
  2099  0FE9                     	;# 
  2100  0FEA                     	;# 
  2101  0FEB                     	;# 
  2102  0FED                     	;# 
  2103  0FEE                     	;# 
  2104  0FEF                     	;# 
  2105  0000                     	;# 
  2106  0001                     	;# 
  2107  0002                     	;# 
  2108  0003                     	;# 
  2109  0004                     	;# 
  2110  0005                     	;# 
  2111  0006                     	;# 
  2112  0007                     	;# 
  2113  0008                     	;# 
  2114  0009                     	;# 
  2115  000A                     	;# 
  2116  000B                     	;# 
  2117  000C                     	;# 
  2118  000D                     	;# 
  2119  000E                     	;# 
  2120  0010                     	;# 
  2121  0011                     	;# 
  2122  0012                     	;# 
  2123  0013                     	;# 
  2124  0016                     	;# 
  2125  0017                     	;# 
  2126  0018                     	;# 
  2127  001C                     	;# 
  2128  001C                     	;# 
  2129  001D                     	;# 
  2130  001D                     	;# 
  2131  001E                     	;# 
  2132  001F                     	;# 
  2133  008C                     	;# 
  2134  008C                     	;# 
  2135  008D                     	;# 
  2136  008E                     	;# 
  2137  008E                     	;# 
  2138  008F                     	;# 
  2139  0090                     	;# 
  2140  0090                     	;# 
  2141  0091                     	;# 
  2142  0093                     	;# 
  2143  0094                     	;# 
  2144  0095                     	;# 
  2145  0096                     	;# 
  2146  0097                     	;# 
  2147  0098                     	;# 
  2148  0099                     	;# 
  2149  009A                     	;# 
  2150  009B                     	;# 
  2151  009C                     	;# 
  2152  009D                     	;# 
  2153  009E                     	;# 
  2154  010C                     	;# 
  2155  010D                     	;# 
  2156  010E                     	;# 
  2157  010E                     	;# 
  2158  010F                     	;# 
  2159  0110                     	;# 
  2160  0110                     	;# 
  2161  0111                     	;# 
  2162  0112                     	;# 
  2163  0112                     	;# 
  2164  0113                     	;# 
  2165  0114                     	;# 
  2166  0114                     	;# 
  2167  0115                     	;# 
  2168  0116                     	;# 
  2169  0116                     	;# 
  2170  0117                     	;# 
  2171  0119                     	;# 
  2172  0119                     	;# 
  2173  0119                     	;# 
  2174  011A                     	;# 
  2175  011A                     	;# 
  2176  011A                     	;# 
  2177  011B                     	;# 
  2178  011B                     	;# 
  2179  011B                     	;# 
  2180  011B                     	;# 
  2181  011B                     	;# 
  2182  011C                     	;# 
  2183  011C                     	;# 
  2184  011C                     	;# 
  2185  011D                     	;# 
  2186  011D                     	;# 
  2187  011D                     	;# 
  2188  011E                     	;# 
  2189  011E                     	;# 
  2190  011E                     	;# 
  2191  011F                     	;# 
  2192  011F                     	;# 
  2193  011F                     	;# 
  2194  011F                     	;# 
  2195  011F                     	;# 
  2196  018C                     	;# 
  2197  018D                     	;# 
  2198  018E                     	;# 
  2199  018F                     	;# 
  2200  0190                     	;# 
  2201  0191                     	;# 
  2202  0192                     	;# 
  2203  0196                     	;# 
  2204  0197                     	;# 
  2205  0198                     	;# 
  2206  0199                     	;# 
  2207  019A                     	;# 
  2208  019B                     	;# 
  2209  019C                     	;# 
  2210  020C                     	;# 
  2211  020D                     	;# 
  2212  020E                     	;# 
  2213  020F                     	;# 
  2214  020F                     	;# 
  2215  0210                     	;# 
  2216  0210                     	;# 
  2217  0211                     	;# 
  2218  0211                     	;# 
  2219  0212                     	;# 
  2220  0213                     	;# 
  2221  0214                     	;# 
  2222  0215                     	;# 
  2223  0215                     	;# 
  2224  0216                     	;# 
  2225  0216                     	;# 
  2226  0217                     	;# 
  2227  0217                     	;# 
  2228  0218                     	;# 
  2229  0219                     	;# 
  2230  021A                     	;# 
  2231  021B                     	;# 
  2232  021B                     	;# 
  2233  021C                     	;# 
  2234  021C                     	;# 
  2235  021D                     	;# 
  2236  021D                     	;# 
  2237  021E                     	;# 
  2238  021F                     	;# 
  2239  028C                     	;# 
  2240  028C                     	;# 
  2241  028D                     	;# 
  2242  028D                     	;# 
  2243  028E                     	;# 
  2244  028F                     	;# 
  2245  0290                     	;# 
  2246  0290                     	;# 
  2247  0291                     	;# 
  2248  0292                     	;# 
  2249  0292                     	;# 
  2250  0293                     	;# 
  2251  0293                     	;# 
  2252  0294                     	;# 
  2253  0295                     	;# 
  2254  0296                     	;# 
  2255  0296                     	;# 
  2256  0297                     	;# 
  2257  0298                     	;# 
  2258  0298                     	;# 
  2259  0299                     	;# 
  2260  0299                     	;# 
  2261  029A                     	;# 
  2262  029B                     	;# 
  2263  029C                     	;# 
  2264  029C                     	;# 
  2265  029D                     	;# 
  2266  030C                     	;# 
  2267  030C                     	;# 
  2268  030D                     	;# 
  2269  030E                     	;# 
  2270  030F                     	;# 
  2271  0310                     	;# 
  2272  0310                     	;# 
  2273  0311                     	;# 
  2274  0312                     	;# 
  2275  0313                     	;# 
  2276  0314                     	;# 
  2277  0314                     	;# 
  2278  0315                     	;# 
  2279  0316                     	;# 
  2280  0317                     	;# 
  2281  0318                     	;# 
  2282  0318                     	;# 
  2283  0319                     	;# 
  2284  031A                     	;# 
  2285  031B                     	;# 
  2286  031C                     	;# 
  2287  031C                     	;# 
  2288  031D                     	;# 
  2289  031E                     	;# 
  2290  031F                     	;# 
  2291  038C                     	;# 
  2292  038D                     	;# 
  2293  038E                     	;# 
  2294  0390                     	;# 
  2295  0391                     	;# 
  2296  0392                     	;# 
  2297  040C                     	;# 
  2298  040D                     	;# 
  2299  040E                     	;# 
  2300  040F                     	;# 
  2301  0410                     	;# 
  2302  0411                     	;# 
  2303  0416                     	;# 
  2304  0416                     	;# 
  2305  0417                     	;# 
  2306  0418                     	;# 
  2307  0418                     	;# 
  2308  0419                     	;# 
  2309  041A                     	;# 
  2310  041A                     	;# 
  2311  041B                     	;# 
  2312  041C                     	;# 
  2313  041C                     	;# 
  2314  041D                     	;# 
  2315  041E                     	;# 
  2316  041F                     	;# 
  2317  048C                     	;# 
  2318  048C                     	;# 
  2319  048D                     	;# 
  2320  048E                     	;# 
  2321  048F                     	;# 
  2322  048F                     	;# 
  2323  0490                     	;# 
  2324  0491                     	;# 
  2325  0492                     	;# 
  2326  0492                     	;# 
  2327  0493                     	;# 
  2328  0494                     	;# 
  2329  0495                     	;# 
  2330  0495                     	;# 
  2331  0496                     	;# 
  2332  0497                     	;# 
  2333  0498                     	;# 
  2334  0499                     	;# 
  2335  049A                     	;# 
  2336  049B                     	;# 
  2337  049C                     	;# 
  2338  049D                     	;# 
  2339  050C                     	;# 
  2340  050C                     	;# 
  2341  050D                     	;# 
  2342  050E                     	;# 
  2343  050F                     	;# 
  2344  050F                     	;# 
  2345  0510                     	;# 
  2346  0511                     	;# 
  2347  0512                     	;# 
  2348  0512                     	;# 
  2349  0513                     	;# 
  2350  0514                     	;# 
  2351  0515                     	;# 
  2352  0515                     	;# 
  2353  0516                     	;# 
  2354  0517                     	;# 
  2355  0518                     	;# 
  2356  0519                     	;# 
  2357  051A                     	;# 
  2358  051B                     	;# 
  2359  051C                     	;# 
  2360  051D                     	;# 
  2361  058C                     	;# 
  2362  058C                     	;# 
  2363  058D                     	;# 
  2364  058E                     	;# 
  2365  058F                     	;# 
  2366  058F                     	;# 
  2367  0590                     	;# 
  2368  0591                     	;# 
  2369  0592                     	;# 
  2370  0593                     	;# 
  2371  060C                     	;# 
  2372  060D                     	;# 
  2373  060E                     	;# 
  2374  060F                     	;# 
  2375  0610                     	;# 
  2376  0611                     	;# 
  2377  0612                     	;# 
  2378  0613                     	;# 
  2379  0614                     	;# 
  2380  0616                     	;# 
  2381  0617                     	;# 
  2382  0618                     	;# 
  2383  0619                     	;# 
  2384  061A                     	;# 
  2385  061B                     	;# 
  2386  061C                     	;# 
  2387  061D                     	;# 
  2388  061E                     	;# 
  2389  068C                     	;# 
  2390  068D                     	;# 
  2391  068E                     	;# 
  2392  068F                     	;# 
  2393  0690                     	;# 
  2394  0691                     	;# 
  2395  0692                     	;# 
  2396  0693                     	;# 
  2397  0694                     	;# 
  2398  070C                     	;# 
  2399  070D                     	;# 
  2400  070E                     	;# 
  2401  070F                     	;# 
  2402  0710                     	;# 
  2403  0711                     	;# 
  2404  0712                     	;# 
  2405  0713                     	;# 
  2406  0714                     	;# 
  2407  0716                     	;# 
  2408  0717                     	;# 
  2409  0718                     	;# 
  2410  0719                     	;# 
  2411  071A                     	;# 
  2412  071B                     	;# 
  2413  071C                     	;# 
  2414  071D                     	;# 
  2415  071E                     	;# 
  2416  0796                     	;# 
  2417  0797                     	;# 
  2418  0798                     	;# 
  2419  0799                     	;# 
  2420  079A                     	;# 
  2421  079B                     	;# 
  2422  080C                     	;# 
  2423  080D                     	;# 
  2424  080E                     	;# 
  2425  080F                     	;# 
  2426  0810                     	;# 
  2427  0811                     	;# 
  2428  0812                     	;# 
  2429  0813                     	;# 
  2430  0814                     	;# 
  2431  081A                     	;# 
  2432  081B                     	;# 
  2433  081C                     	;# 
  2434  081D                     	;# 
  2435  081E                     	;# 
  2436  081F                     	;# 
  2437  088C                     	;# 
  2438  088D                     	;# 
  2439  088E                     	;# 
  2440  088F                     	;# 
  2441  0890                     	;# 
  2442  0891                     	;# 
  2443  0892                     	;# 
  2444  0893                     	;# 
  2445  0895                     	;# 
  2446  0896                     	;# 
  2447  0897                     	;# 
  2448  0898                     	;# 
  2449  0899                     	;# 
  2450  089A                     	;# 
  2451  089B                     	;# 
  2452  090C                     	;# 
  2453  090E                     	;# 
  2454  090F                     	;# 
  2455  091F                     	;# 
  2456  091F                     	;# 
  2457  098F                     	;# 
  2458  098F                     	;# 
  2459  0990                     	;# 
  2460  0991                     	;# 
  2461  0992                     	;# 
  2462  0993                     	;# 
  2463  0994                     	;# 
  2464  0995                     	;# 
  2465  0996                     	;# 
  2466  0997                     	;# 
  2467  0E0F                     	;# 
  2468  0E10                     	;# 
  2469  0E11                     	;# 
  2470  0E12                     	;# 
  2471  0E13                     	;# 
  2472  0E14                     	;# 
  2473  0E15                     	;# 
  2474  0E16                     	;# 
  2475  0E17                     	;# 
  2476  0E18                     	;# 
  2477  0E19                     	;# 
  2478  0E1A                     	;# 
  2479  0E1B                     	;# 
  2480  0E1C                     	;# 
  2481  0E1D                     	;# 
  2482  0E1E                     	;# 
  2483  0E1F                     	;# 
  2484  0E20                     	;# 
  2485  0E21                     	;# 
  2486  0E22                     	;# 
  2487  0E23                     	;# 
  2488  0E24                     	;# 
  2489  0E25                     	;# 
  2490  0E26                     	;# 
  2491  0E27                     	;# 
  2492  0E28                     	;# 
  2493  0E29                     	;# 
  2494  0E2A                     	;# 
  2495  0E2B                     	;# 
  2496  0E2C                     	;# 
  2497  0E2D                     	;# 
  2498  0E2E                     	;# 
  2499  0E2F                     	;# 
  2500  0E30                     	;# 
  2501  0E31                     	;# 
  2502  0E32                     	;# 
  2503  0E33                     	;# 
  2504  0E34                     	;# 
  2505  0E35                     	;# 
  2506  0E36                     	;# 
  2507  0E37                     	;# 
  2508  0E8F                     	;# 
  2509  0E90                     	;# 
  2510  0E91                     	;# 
  2511  0E92                     	;# 
  2512  0E93                     	;# 
  2513  0E94                     	;# 
  2514  0E95                     	;# 
  2515  0E96                     	;# 
  2516  0E97                     	;# 
  2517  0E9C                     	;# 
  2518  0E9D                     	;# 
  2519  0E9E                     	;# 
  2520  0EA1                     	;# 
  2521  0EA2                     	;# 
  2522  0EA3                     	;# 
  2523  0EA4                     	;# 
  2524  0EA5                     	;# 
  2525  0EA9                     	;# 
  2526  0EAA                     	;# 
  2527  0EAB                     	;# 
  2528  0EAC                     	;# 
  2529  0EB1                     	;# 
  2530  0EB2                     	;# 
  2531  0EB3                     	;# 
  2532  0EB8                     	;# 
  2533  0EB9                     	;# 
  2534  0EBA                     	;# 
  2535  0EBB                     	;# 
  2536  0EBC                     	;# 
  2537  0EBD                     	;# 
  2538  0EBE                     	;# 
  2539  0EC3                     	;# 
  2540  0EC5                     	;# 
  2541  0EC6                     	;# 
  2542  0EC7                     	;# 
  2543  0EC8                     	;# 
  2544  0EC9                     	;# 
  2545  0ECA                     	;# 
  2546  0ECB                     	;# 
  2547  0ECC                     	;# 
  2548  0F10                     	;# 
  2549  0F11                     	;# 
  2550  0F12                     	;# 
  2551  0F13                     	;# 
  2552  0F14                     	;# 
  2553  0F15                     	;# 
  2554  0F16                     	;# 
  2555  0F17                     	;# 
  2556  0F18                     	;# 
  2557  0F19                     	;# 
  2558  0F1A                     	;# 
  2559  0F1B                     	;# 
  2560  0F1C                     	;# 
  2561  0F1D                     	;# 
  2562  0F1E                     	;# 
  2563  0F1F                     	;# 
  2564  0F20                     	;# 
  2565  0F21                     	;# 
  2566  0F22                     	;# 
  2567  0F23                     	;# 
  2568  0F24                     	;# 
  2569  0F25                     	;# 
  2570  0F26                     	;# 
  2571  0F27                     	;# 
  2572  0F38                     	;# 
  2573  0F39                     	;# 
  2574  0F3A                     	;# 
  2575  0F3B                     	;# 
  2576  0F3C                     	;# 
  2577  0F3D                     	;# 
  2578  0F3E                     	;# 
  2579  0F3F                     	;# 
  2580  0F40                     	;# 
  2581  0F41                     	;# 
  2582  0F43                     	;# 
  2583  0F44                     	;# 
  2584  0F45                     	;# 
  2585  0F46                     	;# 
  2586  0F47                     	;# 
  2587  0F48                     	;# 
  2588  0F49                     	;# 
  2589  0F4A                     	;# 
  2590  0F4B                     	;# 
  2591  0F4C                     	;# 
  2592  0F4E                     	;# 
  2593  0F4F                     	;# 
  2594  0F50                     	;# 
  2595  0F51                     	;# 
  2596  0F52                     	;# 
  2597  0F53                     	;# 
  2598  0F54                     	;# 
  2599  0F55                     	;# 
  2600  0F56                     	;# 
  2601  0F57                     	;# 
  2602  0F65                     	;# 
  2603  0F68                     	;# 
  2604  0F69                     	;# 
  2605  0F6A                     	;# 
  2606  0F6B                     	;# 
  2607  0FE4                     	;# 
  2608  0FE5                     	;# 
  2609  0FE6                     	;# 
  2610  0FE7                     	;# 
  2611  0FE8                     	;# 
  2612  0FE9                     	;# 
  2613  0FEA                     	;# 
  2614  0FEB                     	;# 
  2615  0FED                     	;# 
  2616  0FEE                     	;# 
  2617  0FEF                     	;# 
  2618  0000                     	;# 
  2619  0001                     	;# 
  2620  0002                     	;# 
  2621  0003                     	;# 
  2622  0004                     	;# 
  2623  0005                     	;# 
  2624  0006                     	;# 
  2625  0007                     	;# 
  2626  0008                     	;# 
  2627  0009                     	;# 
  2628  000A                     	;# 
  2629  000B                     	;# 
  2630  000C                     	;# 
  2631  000D                     	;# 
  2632  000E                     	;# 
  2633  0010                     	;# 
  2634  0011                     	;# 
  2635  0012                     	;# 
  2636  0013                     	;# 
  2637  0016                     	;# 
  2638  0017                     	;# 
  2639  0018                     	;# 
  2640  001C                     	;# 
  2641  001C                     	;# 
  2642  001D                     	;# 
  2643  001D                     	;# 
  2644  001E                     	;# 
  2645  001F                     	;# 
  2646  008C                     	;# 
  2647  008C                     	;# 
  2648  008D                     	;# 
  2649  008E                     	;# 
  2650  008E                     	;# 
  2651  008F                     	;# 
  2652  0090                     	;# 
  2653  0090                     	;# 
  2654  0091                     	;# 
  2655  0093                     	;# 
  2656  0094                     	;# 
  2657  0095                     	;# 
  2658  0096                     	;# 
  2659  0097                     	;# 
  2660  0098                     	;# 
  2661  0099                     	;# 
  2662  009A                     	;# 
  2663  009B                     	;# 
  2664  009C                     	;# 
  2665  009D                     	;# 
  2666  009E                     	;# 
  2667  010C                     	;# 
  2668  010D                     	;# 
  2669  010E                     	;# 
  2670  010E                     	;# 
  2671  010F                     	;# 
  2672  0110                     	;# 
  2673  0110                     	;# 
  2674  0111                     	;# 
  2675  0112                     	;# 
  2676  0112                     	;# 
  2677  0113                     	;# 
  2678  0114                     	;# 
  2679  0114                     	;# 
  2680  0115                     	;# 
  2681  0116                     	;# 
  2682  0116                     	;# 
  2683  0117                     	;# 
  2684  0119                     	;# 
  2685  0119                     	;# 
  2686  0119                     	;# 
  2687  011A                     	;# 
  2688  011A                     	;# 
  2689  011A                     	;# 
  2690  011B                     	;# 
  2691  011B                     	;# 
  2692  011B                     	;# 
  2693  011B                     	;# 
  2694  011B                     	;# 
  2695  011C                     	;# 
  2696  011C                     	;# 
  2697  011C                     	;# 
  2698  011D                     	;# 
  2699  011D                     	;# 
  2700  011D                     	;# 
  2701  011E                     	;# 
  2702  011E                     	;# 
  2703  011E                     	;# 
  2704  011F                     	;# 
  2705  011F                     	;# 
  2706  011F                     	;# 
  2707  011F                     	;# 
  2708  011F                     	;# 
  2709  018C                     	;# 
  2710  018D                     	;# 
  2711  018E                     	;# 
  2712  018F                     	;# 
  2713  0190                     	;# 
  2714  0191                     	;# 
  2715  0192                     	;# 
  2716  0196                     	;# 
  2717  0197                     	;# 
  2718  0198                     	;# 
  2719  0199                     	;# 
  2720  019A                     	;# 
  2721  019B                     	;# 
  2722  019C                     	;# 
  2723  020C                     	;# 
  2724  020D                     	;# 
  2725  020E                     	;# 
  2726  020F                     	;# 
  2727  020F                     	;# 
  2728  0210                     	;# 
  2729  0210                     	;# 
  2730  0211                     	;# 
  2731  0211                     	;# 
  2732  0212                     	;# 
  2733  0213                     	;# 
  2734  0214                     	;# 
  2735  0215                     	;# 
  2736  0215                     	;# 
  2737  0216                     	;# 
  2738  0216                     	;# 
  2739  0217                     	;# 
  2740  0217                     	;# 
  2741  0218                     	;# 
  2742  0219                     	;# 
  2743  021A                     	;# 
  2744  021B                     	;# 
  2745  021B                     	;# 
  2746  021C                     	;# 
  2747  021C                     	;# 
  2748  021D                     	;# 
  2749  021D                     	;# 
  2750  021E                     	;# 
  2751  021F                     	;# 
  2752  028C                     	;# 
  2753  028C                     	;# 
  2754  028D                     	;# 
  2755  028D                     	;# 
  2756  028E                     	;# 
  2757  028F                     	;# 
  2758  0290                     	;# 
  2759  0290                     	;# 
  2760  0291                     	;# 
  2761  0292                     	;# 
  2762  0292                     	;# 
  2763  0293                     	;# 
  2764  0293                     	;# 
  2765  0294                     	;# 
  2766  0295                     	;# 
  2767  0296                     	;# 
  2768  0296                     	;# 
  2769  0297                     	;# 
  2770  0298                     	;# 
  2771  0298                     	;# 
  2772  0299                     	;# 
  2773  0299                     	;# 
  2774  029A                     	;# 
  2775  029B                     	;# 
  2776  029C                     	;# 
  2777  029C                     	;# 
  2778  029D                     	;# 
  2779  030C                     	;# 
  2780  030C                     	;# 
  2781  030D                     	;# 
  2782  030E                     	;# 
  2783  030F                     	;# 
  2784  0310                     	;# 
  2785  0310                     	;# 
  2786  0311                     	;# 
  2787  0312                     	;# 
  2788  0313                     	;# 
  2789  0314                     	;# 
  2790  0314                     	;# 
  2791  0315                     	;# 
  2792  0316                     	;# 
  2793  0317                     	;# 
  2794  0318                     	;# 
  2795  0318                     	;# 
  2796  0319                     	;# 
  2797  031A                     	;# 
  2798  031B                     	;# 
  2799  031C                     	;# 
  2800  031C                     	;# 
  2801  031D                     	;# 
  2802  031E                     	;# 
  2803  031F                     	;# 
  2804  038C                     	;# 
  2805  038D                     	;# 
  2806  038E                     	;# 
  2807  0390                     	;# 
  2808  0391                     	;# 
  2809  0392                     	;# 
  2810  040C                     	;# 
  2811  040D                     	;# 
  2812  040E                     	;# 
  2813  040F                     	;# 
  2814  0410                     	;# 
  2815  0411                     	;# 
  2816  0416                     	;# 
  2817  0416                     	;# 
  2818  0417                     	;# 
  2819  0418                     	;# 
  2820  0418                     	;# 
  2821  0419                     	;# 
  2822  041A                     	;# 
  2823  041A                     	;# 
  2824  041B                     	;# 
  2825  041C                     	;# 
  2826  041C                     	;# 
  2827  041D                     	;# 
  2828  041E                     	;# 
  2829  041F                     	;# 
  2830  048C                     	;# 
  2831  048C                     	;# 
  2832  048D                     	;# 
  2833  048E                     	;# 
  2834  048F                     	;# 
  2835  048F                     	;# 
  2836  0490                     	;# 
  2837  0491                     	;# 
  2838  0492                     	;# 
  2839  0492                     	;# 
  2840  0493                     	;# 
  2841  0494                     	;# 
  2842  0495                     	;# 
  2843  0495                     	;# 
  2844  0496                     	;# 
  2845  0497                     	;# 
  2846  0498                     	;# 
  2847  0499                     	;# 
  2848  049A                     	;# 
  2849  049B                     	;# 
  2850  049C                     	;# 
  2851  049D                     	;# 
  2852  050C                     	;# 
  2853  050C                     	;# 
  2854  050D                     	;# 
  2855  050E                     	;# 
  2856  050F                     	;# 
  2857  050F                     	;# 
  2858  0510                     	;# 
  2859  0511                     	;# 
  2860  0512                     	;# 
  2861  0512                     	;# 
  2862  0513                     	;# 
  2863  0514                     	;# 
  2864  0515                     	;# 
  2865  0515                     	;# 
  2866  0516                     	;# 
  2867  0517                     	;# 
  2868  0518                     	;# 
  2869  0519                     	;# 
  2870  051A                     	;# 
  2871  051B                     	;# 
  2872  051C                     	;# 
  2873  051D                     	;# 
  2874  058C                     	;# 
  2875  058C                     	;# 
  2876  058D                     	;# 
  2877  058E                     	;# 
  2878  058F                     	;# 
  2879  058F                     	;# 
  2880  0590                     	;# 
  2881  0591                     	;# 
  2882  0592                     	;# 
  2883  0593                     	;# 
  2884  060C                     	;# 
  2885  060D                     	;# 
  2886  060E                     	;# 
  2887  060F                     	;# 
  2888  0610                     	;# 
  2889  0611                     	;# 
  2890  0612                     	;# 
  2891  0613                     	;# 
  2892  0614                     	;# 
  2893  0616                     	;# 
  2894  0617                     	;# 
  2895  0618                     	;# 
  2896  0619                     	;# 
  2897  061A                     	;# 
  2898  061B                     	;# 
  2899  061C                     	;# 
  2900  061D                     	;# 
  2901  061E                     	;# 
  2902  068C                     	;# 
  2903  068D                     	;# 
  2904  068E                     	;# 
  2905  068F                     	;# 
  2906  0690                     	;# 
  2907  0691                     	;# 
  2908  0692                     	;# 
  2909  0693                     	;# 
  2910  0694                     	;# 
  2911  070C                     	;# 
  2912  070D                     	;# 
  2913  070E                     	;# 
  2914  070F                     	;# 
  2915  0710                     	;# 
  2916  0711                     	;# 
  2917  0712                     	;# 
  2918  0713                     	;# 
  2919  0714                     	;# 
  2920  0716                     	;# 
  2921  0717                     	;# 
  2922  0718                     	;# 
  2923  0719                     	;# 
  2924  071A                     	;# 
  2925  071B                     	;# 
  2926  071C                     	;# 
  2927  071D                     	;# 
  2928  071E                     	;# 
  2929  0796                     	;# 
  2930  0797                     	;# 
  2931  0798                     	;# 
  2932  0799                     	;# 
  2933  079A                     	;# 
  2934  079B                     	;# 
  2935  080C                     	;# 
  2936  080D                     	;# 
  2937  080E                     	;# 
  2938  080F                     	;# 
  2939  0810                     	;# 
  2940  0811                     	;# 
  2941  0812                     	;# 
  2942  0813                     	;# 
  2943  0814                     	;# 
  2944  081A                     	;# 
  2945  081B                     	;# 
  2946  081C                     	;# 
  2947  081D                     	;# 
  2948  081E                     	;# 
  2949  081F                     	;# 
  2950  088C                     	;# 
  2951  088D                     	;# 
  2952  088E                     	;# 
  2953  088F                     	;# 
  2954  0890                     	;# 
  2955  0891                     	;# 
  2956  0892                     	;# 
  2957  0893                     	;# 
  2958  0895                     	;# 
  2959  0896                     	;# 
  2960  0897                     	;# 
  2961  0898                     	;# 
  2962  0899                     	;# 
  2963  089A                     	;# 
  2964  089B                     	;# 
  2965  090C                     	;# 
  2966  090E                     	;# 
  2967  090F                     	;# 
  2968  091F                     	;# 
  2969  091F                     	;# 
  2970  098F                     	;# 
  2971  098F                     	;# 
  2972  0990                     	;# 
  2973  0991                     	;# 
  2974  0992                     	;# 
  2975  0993                     	;# 
  2976  0994                     	;# 
  2977  0995                     	;# 
  2978  0996                     	;# 
  2979  0997                     	;# 
  2980  0E0F                     	;# 
  2981  0E10                     	;# 
  2982  0E11                     	;# 
  2983  0E12                     	;# 
  2984  0E13                     	;# 
  2985  0E14                     	;# 
  2986  0E15                     	;# 
  2987  0E16                     	;# 
  2988  0E17                     	;# 
  2989  0E18                     	;# 
  2990  0E19                     	;# 
  2991  0E1A                     	;# 
  2992  0E1B                     	;# 
  2993  0E1C                     	;# 
  2994  0E1D                     	;# 
  2995  0E1E                     	;# 
  2996  0E1F                     	;# 
  2997  0E20                     	;# 
  2998  0E21                     	;# 
  2999  0E22                     	;# 
  3000  0E23                     	;# 
  3001  0E24                     	;# 
  3002  0E25                     	;# 
  3003  0E26                     	;# 
  3004  0E27                     	;# 
  3005  0E28                     	;# 
  3006  0E29                     	;# 
  3007  0E2A                     	;# 
  3008  0E2B                     	;# 
  3009  0E2C                     	;# 
  3010  0E2D                     	;# 
  3011  0E2E                     	;# 
  3012  0E2F                     	;# 
  3013  0E30                     	;# 
  3014  0E31                     	;# 
  3015  0E32                     	;# 
  3016  0E33                     	;# 
  3017  0E34                     	;# 
  3018  0E35                     	;# 
  3019  0E36                     	;# 
  3020  0E37                     	;# 
  3021  0E8F                     	;# 
  3022  0E90                     	;# 
  3023  0E91                     	;# 
  3024  0E92                     	;# 
  3025  0E93                     	;# 
  3026  0E94                     	;# 
  3027  0E95                     	;# 
  3028  0E96                     	;# 
  3029  0E97                     	;# 
  3030  0E9C                     	;# 
  3031  0E9D                     	;# 
  3032  0E9E                     	;# 
  3033  0EA1                     	;# 
  3034  0EA2                     	;# 
  3035  0EA3                     	;# 
  3036  0EA4                     	;# 
  3037  0EA5                     	;# 
  3038  0EA9                     	;# 
  3039  0EAA                     	;# 
  3040  0EAB                     	;# 
  3041  0EAC                     	;# 
  3042  0EB1                     	;# 
  3043  0EB2                     	;# 
  3044  0EB3                     	;# 
  3045  0EB8                     	;# 
  3046  0EB9                     	;# 
  3047  0EBA                     	;# 
  3048  0EBB                     	;# 
  3049  0EBC                     	;# 
  3050  0EBD                     	;# 
  3051  0EBE                     	;# 
  3052  0EC3                     	;# 
  3053  0EC5                     	;# 
  3054  0EC6                     	;# 
  3055  0EC7                     	;# 
  3056  0EC8                     	;# 
  3057  0EC9                     	;# 
  3058  0ECA                     	;# 
  3059  0ECB                     	;# 
  3060  0ECC                     	;# 
  3061  0F10                     	;# 
  3062  0F11                     	;# 
  3063  0F12                     	;# 
  3064  0F13                     	;# 
  3065  0F14                     	;# 
  3066  0F15                     	;# 
  3067  0F16                     	;# 
  3068  0F17                     	;# 
  3069  0F18                     	;# 
  3070  0F19                     	;# 
  3071  0F1A                     	;# 
  3072  0F1B                     	;# 
  3073  0F1C                     	;# 
  3074  0F1D                     	;# 
  3075  0F1E                     	;# 
  3076  0F1F                     	;# 
  3077  0F20                     	;# 
  3078  0F21                     	;# 
  3079  0F22                     	;# 
  3080  0F23                     	;# 
  3081  0F24                     	;# 
  3082  0F25                     	;# 
  3083  0F26                     	;# 
  3084  0F27                     	;# 
  3085  0F38                     	;# 
  3086  0F39                     	;# 
  3087  0F3A                     	;# 
  3088  0F3B                     	;# 
  3089  0F3C                     	;# 
  3090  0F3D                     	;# 
  3091  0F3E                     	;# 
  3092  0F3F                     	;# 
  3093  0F40                     	;# 
  3094  0F41                     	;# 
  3095  0F43                     	;# 
  3096  0F44                     	;# 
  3097  0F45                     	;# 
  3098  0F46                     	;# 
  3099  0F47                     	;# 
  3100  0F48                     	;# 
  3101  0F49                     	;# 
  3102  0F4A                     	;# 
  3103  0F4B                     	;# 
  3104  0F4C                     	;# 
  3105  0F4E                     	;# 
  3106  0F4F                     	;# 
  3107  0F50                     	;# 
  3108  0F51                     	;# 
  3109  0F52                     	;# 
  3110  0F53                     	;# 
  3111  0F54                     	;# 
  3112  0F55                     	;# 
  3113  0F56                     	;# 
  3114  0F57                     	;# 
  3115  0F65                     	;# 
  3116  0F68                     	;# 
  3117  0F69                     	;# 
  3118  0F6A                     	;# 
  3119  0F6B                     	;# 
  3120  0FE4                     	;# 
  3121  0FE5                     	;# 
  3122  0FE6                     	;# 
  3123  0FE7                     	;# 
  3124  0FE8                     	;# 
  3125  0FE9                     	;# 
  3126  0FEA                     	;# 
  3127  0FEB                     	;# 
  3128  0FED                     	;# 
  3129  0FEE                     	;# 
  3130  0FEF                     	;# 
  3131  0000                     	;# 
  3132  0001                     	;# 
  3133  0002                     	;# 
  3134  0003                     	;# 
  3135  0004                     	;# 
  3136  0005                     	;# 
  3137  0006                     	;# 
  3138  0007                     	;# 
  3139  0008                     	;# 
  3140  0009                     	;# 
  3141  000A                     	;# 
  3142  000B                     	;# 
  3143  000C                     	;# 
  3144  000D                     	;# 
  3145  000E                     	;# 
  3146  0010                     	;# 
  3147  0011                     	;# 
  3148  0012                     	;# 
  3149  0013                     	;# 
  3150  0016                     	;# 
  3151  0017                     	;# 
  3152  0018                     	;# 
  3153  001C                     	;# 
  3154  001C                     	;# 
  3155  001D                     	;# 
  3156  001D                     	;# 
  3157  001E                     	;# 
  3158  001F                     	;# 
  3159  008C                     	;# 
  3160  008C                     	;# 
  3161  008D                     	;# 
  3162  008E                     	;# 
  3163  008E                     	;# 
  3164  008F                     	;# 
  3165  0090                     	;# 
  3166  0090                     	;# 
  3167  0091                     	;# 
  3168  0093                     	;# 
  3169  0094                     	;# 
  3170  0095                     	;# 
  3171  0096                     	;# 
  3172  0097                     	;# 
  3173  0098                     	;# 
  3174  0099                     	;# 
  3175  009A                     	;# 
  3176  009B                     	;# 
  3177  009C                     	;# 
  3178  009D                     	;# 
  3179  009E                     	;# 
  3180  010C                     	;# 
  3181  010D                     	;# 
  3182  010E                     	;# 
  3183  010E                     	;# 
  3184  010F                     	;# 
  3185  0110                     	;# 
  3186  0110                     	;# 
  3187  0111                     	;# 
  3188  0112                     	;# 
  3189  0112                     	;# 
  3190  0113                     	;# 
  3191  0114                     	;# 
  3192  0114                     	;# 
  3193  0115                     	;# 
  3194  0116                     	;# 
  3195  0116                     	;# 
  3196  0117                     	;# 
  3197  0119                     	;# 
  3198  0119                     	;# 
  3199  0119                     	;# 
  3200  011A                     	;# 
  3201  011A                     	;# 
  3202  011A                     	;# 
  3203  011B                     	;# 
  3204  011B                     	;# 
  3205  011B                     	;# 
  3206  011B                     	;# 
  3207  011B                     	;# 
  3208  011C                     	;# 
  3209  011C                     	;# 
  3210  011C                     	;# 
  3211  011D                     	;# 
  3212  011D                     	;# 
  3213  011D                     	;# 
  3214  011E                     	;# 
  3215  011E                     	;# 
  3216  011E                     	;# 
  3217  011F                     	;# 
  3218  011F                     	;# 
  3219  011F                     	;# 
  3220  011F                     	;# 
  3221  011F                     	;# 
  3222  018C                     	;# 
  3223  018D                     	;# 
  3224  018E                     	;# 
  3225  018F                     	;# 
  3226  0190                     	;# 
  3227  0191                     	;# 
  3228  0192                     	;# 
  3229  0196                     	;# 
  3230  0197                     	;# 
  3231  0198                     	;# 
  3232  0199                     	;# 
  3233  019A                     	;# 
  3234  019B                     	;# 
  3235  019C                     	;# 
  3236  020C                     	;# 
  3237  020D                     	;# 
  3238  020E                     	;# 
  3239  020F                     	;# 
  3240  020F                     	;# 
  3241  0210                     	;# 
  3242  0210                     	;# 
  3243  0211                     	;# 
  3244  0211                     	;# 
  3245  0212                     	;# 
  3246  0213                     	;# 
  3247  0214                     	;# 
  3248  0215                     	;# 
  3249  0215                     	;# 
  3250  0216                     	;# 
  3251  0216                     	;# 
  3252  0217                     	;# 
  3253  0217                     	;# 
  3254  0218                     	;# 
  3255  0219                     	;# 
  3256  021A                     	;# 
  3257  021B                     	;# 
  3258  021B                     	;# 
  3259  021C                     	;# 
  3260  021C                     	;# 
  3261  021D                     	;# 
  3262  021D                     	;# 
  3263  021E                     	;# 
  3264  021F                     	;# 
  3265  028C                     	;# 
  3266  028C                     	;# 
  3267  028D                     	;# 
  3268  028D                     	;# 
  3269  028E                     	;# 
  3270  028F                     	;# 
  3271  0290                     	;# 
  3272  0290                     	;# 
  3273  0291                     	;# 
  3274  0292                     	;# 
  3275  0292                     	;# 
  3276  0293                     	;# 
  3277  0293                     	;# 
  3278  0294                     	;# 
  3279  0295                     	;# 
  3280  0296                     	;# 
  3281  0296                     	;# 
  3282  0297                     	;# 
  3283  0298                     	;# 
  3284  0298                     	;# 
  3285  0299                     	;# 
  3286  0299                     	;# 
  3287  029A                     	;# 
  3288  029B                     	;# 
  3289  029C                     	;# 
  3290  029C                     	;# 
  3291  029D                     	;# 
  3292  030C                     	;# 
  3293  030C                     	;# 
  3294  030D                     	;# 
  3295  030E                     	;# 
  3296  030F                     	;# 
  3297  0310                     	;# 
  3298  0310                     	;# 
  3299  0311                     	;# 
  3300  0312                     	;# 
  3301  0313                     	;# 
  3302  0314                     	;# 
  3303  0314                     	;# 
  3304  0315                     	;# 
  3305  0316                     	;# 
  3306  0317                     	;# 
  3307  0318                     	;# 
  3308  0318                     	;# 
  3309  0319                     	;# 
  3310  031A                     	;# 
  3311  031B                     	;# 
  3312  031C                     	;# 
  3313  031C                     	;# 
  3314  031D                     	;# 
  3315  031E                     	;# 
  3316  031F                     	;# 
  3317  038C                     	;# 
  3318  038D                     	;# 
  3319  038E                     	;# 
  3320  0390                     	;# 
  3321  0391                     	;# 
  3322  0392                     	;# 
  3323  040C                     	;# 
  3324  040D                     	;# 
  3325  040E                     	;# 
  3326  040F                     	;# 
  3327  0410                     	;# 
  3328  0411                     	;# 
  3329  0416                     	;# 
  3330  0416                     	;# 
  3331  0417                     	;# 
  3332  0418                     	;# 
  3333  0418                     	;# 
  3334  0419                     	;# 
  3335  041A                     	;# 
  3336  041A                     	;# 
  3337  041B                     	;# 
  3338  041C                     	;# 
  3339  041C                     	;# 
  3340  041D                     	;# 
  3341  041E                     	;# 
  3342  041F                     	;# 
  3343  048C                     	;# 
  3344  048C                     	;# 
  3345  048D                     	;# 
  3346  048E                     	;# 
  3347  048F                     	;# 
  3348  048F                     	;# 
  3349  0490                     	;# 
  3350  0491                     	;# 
  3351  0492                     	;# 
  3352  0492                     	;# 
  3353  0493                     	;# 
  3354  0494                     	;# 
  3355  0495                     	;# 
  3356  0495                     	;# 
  3357  0496                     	;# 
  3358  0497                     	;# 
  3359  0498                     	;# 
  3360  0499                     	;# 
  3361  049A                     	;# 
  3362  049B                     	;# 
  3363  049C                     	;# 
  3364  049D                     	;# 
  3365  050C                     	;# 
  3366  050C                     	;# 
  3367  050D                     	;# 
  3368  050E                     	;# 
  3369  050F                     	;# 
  3370  050F                     	;# 
  3371  0510                     	;# 
  3372  0511                     	;# 
  3373  0512                     	;# 
  3374  0512                     	;# 
  3375  0513                     	;# 
  3376  0514                     	;# 
  3377  0515                     	;# 
  3378  0515                     	;# 
  3379  0516                     	;# 
  3380  0517                     	;# 
  3381  0518                     	;# 
  3382  0519                     	;# 
  3383  051A                     	;# 
  3384  051B                     	;# 
  3385  051C                     	;# 
  3386  051D                     	;# 
  3387  058C                     	;# 
  3388  058C                     	;# 
  3389  058D                     	;# 
  3390  058E                     	;# 
  3391  058F                     	;# 
  3392  058F                     	;# 
  3393  0590                     	;# 
  3394  0591                     	;# 
  3395  0592                     	;# 
  3396  0593                     	;# 
  3397  060C                     	;# 
  3398  060D                     	;# 
  3399  060E                     	;# 
  3400  060F                     	;# 
  3401  0610                     	;# 
  3402  0611                     	;# 
  3403  0612                     	;# 
  3404  0613                     	;# 
  3405  0614                     	;# 
  3406  0616                     	;# 
  3407  0617                     	;# 
  3408  0618                     	;# 
  3409  0619                     	;# 
  3410  061A                     	;# 
  3411  061B                     	;# 
  3412  061C                     	;# 
  3413  061D                     	;# 
  3414  061E                     	;# 
  3415  068C                     	;# 
  3416  068D                     	;# 
  3417  068E                     	;# 
  3418  068F                     	;# 
  3419  0690                     	;# 
  3420  0691                     	;# 
  3421  0692                     	;# 
  3422  0693                     	;# 
  3423  0694                     	;# 
  3424  070C                     	;# 
  3425  070D                     	;# 
  3426  070E                     	;# 
  3427  070F                     	;# 
  3428  0710                     	;# 
  3429  0711                     	;# 
  3430  0712                     	;# 
  3431  0713                     	;# 
  3432  0714                     	;# 
  3433  0716                     	;# 
  3434  0717                     	;# 
  3435  0718                     	;# 
  3436  0719                     	;# 
  3437  071A                     	;# 
  3438  071B                     	;# 
  3439  071C                     	;# 
  3440  071D                     	;# 
  3441  071E                     	;# 
  3442  0796                     	;# 
  3443  0797                     	;# 
  3444  0798                     	;# 
  3445  0799                     	;# 
  3446  079A                     	;# 
  3447  079B                     	;# 
  3448  080C                     	;# 
  3449  080D                     	;# 
  3450  080E                     	;# 
  3451  080F                     	;# 
  3452  0810                     	;# 
  3453  0811                     	;# 
  3454  0812                     	;# 
  3455  0813                     	;# 
  3456  0814                     	;# 
  3457  081A                     	;# 
  3458  081B                     	;# 
  3459  081C                     	;# 
  3460  081D                     	;# 
  3461  081E                     	;# 
  3462  081F                     	;# 
  3463  088C                     	;# 
  3464  088D                     	;# 
  3465  088E                     	;# 
  3466  088F                     	;# 
  3467  0890                     	;# 
  3468  0891                     	;# 
  3469  0892                     	;# 
  3470  0893                     	;# 
  3471  0895                     	;# 
  3472  0896                     	;# 
  3473  0897                     	;# 
  3474  0898                     	;# 
  3475  0899                     	;# 
  3476  089A                     	;# 
  3477  089B                     	;# 
  3478  090C                     	;# 
  3479  090E                     	;# 
  3480  090F                     	;# 
  3481  091F                     	;# 
  3482  091F                     	;# 
  3483  098F                     	;# 
  3484  098F                     	;# 
  3485  0990                     	;# 
  3486  0991                     	;# 
  3487  0992                     	;# 
  3488  0993                     	;# 
  3489  0994                     	;# 
  3490  0995                     	;# 
  3491  0996                     	;# 
  3492  0997                     	;# 
  3493  0E0F                     	;# 
  3494  0E10                     	;# 
  3495  0E11                     	;# 
  3496  0E12                     	;# 
  3497  0E13                     	;# 
  3498  0E14                     	;# 
  3499  0E15                     	;# 
  3500  0E16                     	;# 
  3501  0E17                     	;# 
  3502  0E18                     	;# 
  3503  0E19                     	;# 
  3504  0E1A                     	;# 
  3505  0E1B                     	;# 
  3506  0E1C                     	;# 
  3507  0E1D                     	;# 
  3508  0E1E                     	;# 
  3509  0E1F                     	;# 
  3510  0E20                     	;# 
  3511  0E21                     	;# 
  3512  0E22                     	;# 
  3513  0E23                     	;# 
  3514  0E24                     	;# 
  3515  0E25                     	;# 
  3516  0E26                     	;# 
  3517  0E27                     	;# 
  3518  0E28                     	;# 
  3519  0E29                     	;# 
  3520  0E2A                     	;# 
  3521  0E2B                     	;# 
  3522  0E2C                     	;# 
  3523  0E2D                     	;# 
  3524  0E2E                     	;# 
  3525  0E2F                     	;# 
  3526  0E30                     	;# 
  3527  0E31                     	;# 
  3528  0E32                     	;# 
  3529  0E33                     	;# 
  3530  0E34                     	;# 
  3531  0E35                     	;# 
  3532  0E36                     	;# 
  3533  0E37                     	;# 
  3534  0E8F                     	;# 
  3535  0E90                     	;# 
  3536  0E91                     	;# 
  3537  0E92                     	;# 
  3538  0E93                     	;# 
  3539  0E94                     	;# 
  3540  0E95                     	;# 
  3541  0E96                     	;# 
  3542  0E97                     	;# 
  3543  0E9C                     	;# 
  3544  0E9D                     	;# 
  3545  0E9E                     	;# 
  3546  0EA1                     	;# 
  3547  0EA2                     	;# 
  3548  0EA3                     	;# 
  3549  0EA4                     	;# 
  3550  0EA5                     	;# 
  3551  0EA9                     	;# 
  3552  0EAA                     	;# 
  3553  0EAB                     	;# 
  3554  0EAC                     	;# 
  3555  0EB1                     	;# 
  3556  0EB2                     	;# 
  3557  0EB3                     	;# 
  3558  0EB8                     	;# 
  3559  0EB9                     	;# 
  3560  0EBA                     	;# 
  3561  0EBB                     	;# 
  3562  0EBC                     	;# 
  3563  0EBD                     	;# 
  3564  0EBE                     	;# 
  3565  0EC3                     	;# 
  3566  0EC5                     	;# 
  3567  0EC6                     	;# 
  3568  0EC7                     	;# 
  3569  0EC8                     	;# 
  3570  0EC9                     	;# 
  3571  0ECA                     	;# 
  3572  0ECB                     	;# 
  3573  0ECC                     	;# 
  3574  0F10                     	;# 
  3575  0F11                     	;# 
  3576  0F12                     	;# 
  3577  0F13                     	;# 
  3578  0F14                     	;# 
  3579  0F15                     	;# 
  3580  0F16                     	;# 
  3581  0F17                     	;# 
  3582  0F18                     	;# 
  3583  0F19                     	;# 
  3584  0F1A                     	;# 
  3585  0F1B                     	;# 
  3586  0F1C                     	;# 
  3587  0F1D                     	;# 
  3588  0F1E                     	;# 
  3589  0F1F                     	;# 
  3590  0F20                     	;# 
  3591  0F21                     	;# 
  3592  0F22                     	;# 
  3593  0F23                     	;# 
  3594  0F24                     	;# 
  3595  0F25                     	;# 
  3596  0F26                     	;# 
  3597  0F27                     	;# 
  3598  0F38                     	;# 
  3599  0F39                     	;# 
  3600  0F3A                     	;# 
  3601  0F3B                     	;# 
  3602  0F3C                     	;# 
  3603  0F3D                     	;# 
  3604  0F3E                     	;# 
  3605  0F3F                     	;# 
  3606  0F40                     	;# 
  3607  0F41                     	;# 
  3608  0F43                     	;# 
  3609  0F44                     	;# 
  3610  0F45                     	;# 
  3611  0F46                     	;# 
  3612  0F47                     	;# 
  3613  0F48                     	;# 
  3614  0F49                     	;# 
  3615  0F4A                     	;# 
  3616  0F4B                     	;# 
  3617  0F4C                     	;# 
  3618  0F4E                     	;# 
  3619  0F4F                     	;# 
  3620  0F50                     	;# 
  3621  0F51                     	;# 
  3622  0F52                     	;# 
  3623  0F53                     	;# 
  3624  0F54                     	;# 
  3625  0F55                     	;# 
  3626  0F56                     	;# 
  3627  0F57                     	;# 
  3628  0F65                     	;# 
  3629  0F68                     	;# 
  3630  0F69                     	;# 
  3631  0F6A                     	;# 
  3632  0F6B                     	;# 
  3633  0FE4                     	;# 
  3634  0FE5                     	;# 
  3635  0FE6                     	;# 
  3636  0FE7                     	;# 
  3637  0FE8                     	;# 
  3638  0FE9                     	;# 
  3639  0FEA                     	;# 
  3640  0FEB                     	;# 
  3641  0FED                     	;# 
  3642  0FEE                     	;# 
  3643  0FEF                     	;# 
  3644  0000                     	;# 
  3645  0001                     	;# 
  3646  0002                     	;# 
  3647  0003                     	;# 
  3648  0004                     	;# 
  3649  0005                     	;# 
  3650  0006                     	;# 
  3651  0007                     	;# 
  3652  0008                     	;# 
  3653  0009                     	;# 
  3654  000A                     	;# 
  3655  000B                     	;# 
  3656  000C                     	;# 
  3657  000D                     	;# 
  3658  000E                     	;# 
  3659  0010                     	;# 
  3660  0011                     	;# 
  3661  0012                     	;# 
  3662  0013                     	;# 
  3663  0016                     	;# 
  3664  0017                     	;# 
  3665  0018                     	;# 
  3666  001C                     	;# 
  3667  001C                     	;# 
  3668  001D                     	;# 
  3669  001D                     	;# 
  3670  001E                     	;# 
  3671  001F                     	;# 
  3672  008C                     	;# 
  3673  008C                     	;# 
  3674  008D                     	;# 
  3675  008E                     	;# 
  3676  008E                     	;# 
  3677  008F                     	;# 
  3678  0090                     	;# 
  3679  0090                     	;# 
  3680  0091                     	;# 
  3681  0093                     	;# 
  3682  0094                     	;# 
  3683  0095                     	;# 
  3684  0096                     	;# 
  3685  0097                     	;# 
  3686  0098                     	;# 
  3687  0099                     	;# 
  3688  009A                     	;# 
  3689  009B                     	;# 
  3690  009C                     	;# 
  3691  009D                     	;# 
  3692  009E                     	;# 
  3693  010C                     	;# 
  3694  010D                     	;# 
  3695  010E                     	;# 
  3696  010E                     	;# 
  3697  010F                     	;# 
  3698  0110                     	;# 
  3699  0110                     	;# 
  3700  0111                     	;# 
  3701  0112                     	;# 
  3702  0112                     	;# 
  3703  0113                     	;# 
  3704  0114                     	;# 
  3705  0114                     	;# 
  3706  0115                     	;# 
  3707  0116                     	;# 
  3708  0116                     	;# 
  3709  0117                     	;# 
  3710  0119                     	;# 
  3711  0119                     	;# 
  3712  0119                     	;# 
  3713  011A                     	;# 
  3714  011A                     	;# 
  3715  011A                     	;# 
  3716  011B                     	;# 
  3717  011B                     	;# 
  3718  011B                     	;# 
  3719  011B                     	;# 
  3720  011B                     	;# 
  3721  011C                     	;# 
  3722  011C                     	;# 
  3723  011C                     	;# 
  3724  011D                     	;# 
  3725  011D                     	;# 
  3726  011D                     	;# 
  3727  011E                     	;# 
  3728  011E                     	;# 
  3729  011E                     	;# 
  3730  011F                     	;# 
  3731  011F                     	;# 
  3732  011F                     	;# 
  3733  011F                     	;# 
  3734  011F                     	;# 
  3735  018C                     	;# 
  3736  018D                     	;# 
  3737  018E                     	;# 
  3738  018F                     	;# 
  3739  0190                     	;# 
  3740  0191                     	;# 
  3741  0192                     	;# 
  3742  0196                     	;# 
  3743  0197                     	;# 
  3744  0198                     	;# 
  3745  0199                     	;# 
  3746  019A                     	;# 
  3747  019B                     	;# 
  3748  019C                     	;# 
  3749  020C                     	;# 
  3750  020D                     	;# 
  3751  020E                     	;# 
  3752  020F                     	;# 
  3753  020F                     	;# 
  3754  0210                     	;# 
  3755  0210                     	;# 
  3756  0211                     	;# 
  3757  0211                     	;# 
  3758  0212                     	;# 
  3759  0213                     	;# 
  3760  0214                     	;# 
  3761  0215                     	;# 
  3762  0215                     	;# 
  3763  0216                     	;# 
  3764  0216                     	;# 
  3765  0217                     	;# 
  3766  0217                     	;# 
  3767  0218                     	;# 
  3768  0219                     	;# 
  3769  021A                     	;# 
  3770  021B                     	;# 
  3771  021B                     	;# 
  3772  021C                     	;# 
  3773  021C                     	;# 
  3774  021D                     	;# 
  3775  021D                     	;# 
  3776  021E                     	;# 
  3777  021F                     	;# 
  3778  028C                     	;# 
  3779  028C                     	;# 
  3780  028D                     	;# 
  3781  028D                     	;# 
  3782  028E                     	;# 
  3783  028F                     	;# 
  3784  0290                     	;# 
  3785  0290                     	;# 
  3786  0291                     	;# 
  3787  0292                     	;# 
  3788  0292                     	;# 
  3789  0293                     	;# 
  3790  0293                     	;# 
  3791  0294                     	;# 
  3792  0295                     	;# 
  3793  0296                     	;# 
  3794  0296                     	;# 
  3795  0297                     	;# 
  3796  0298                     	;# 
  3797  0298                     	;# 
  3798  0299                     	;# 
  3799  0299                     	;# 
  3800  029A                     	;# 
  3801  029B                     	;# 
  3802  029C                     	;# 
  3803  029C                     	;# 
  3804  029D                     	;# 
  3805  030C                     	;# 
  3806  030C                     	;# 
  3807  030D                     	;# 
  3808  030E                     	;# 
  3809  030F                     	;# 
  3810  0310                     	;# 
  3811  0310                     	;# 
  3812  0311                     	;# 
  3813  0312                     	;# 
  3814  0313                     	;# 
  3815  0314                     	;# 
  3816  0314                     	;# 
  3817  0315                     	;# 
  3818  0316                     	;# 
  3819  0317                     	;# 
  3820  0318                     	;# 
  3821  0318                     	;# 
  3822  0319                     	;# 
  3823  031A                     	;# 
  3824  031B                     	;# 
  3825  031C                     	;# 
  3826  031C                     	;# 
  3827  031D                     	;# 
  3828  031E                     	;# 
  3829  031F                     	;# 
  3830  038C                     	;# 
  3831  038D                     	;# 
  3832  038E                     	;# 
  3833  0390                     	;# 
  3834  0391                     	;# 
  3835  0392                     	;# 
  3836  040C                     	;# 
  3837  040D                     	;# 
  3838  040E                     	;# 
  3839  040F                     	;# 
  3840  0410                     	;# 
  3841  0411                     	;# 
  3842  0416                     	;# 
  3843  0416                     	;# 
  3844  0417                     	;# 
  3845  0418                     	;# 
  3846  0418                     	;# 
  3847  0419                     	;# 
  3848  041A                     	;# 
  3849  041A                     	;# 
  3850  041B                     	;# 
  3851  041C                     	;# 
  3852  041C                     	;# 
  3853  041D                     	;# 
  3854  041E                     	;# 
  3855  041F                     	;# 
  3856  048C                     	;# 
  3857  048C                     	;# 
  3858  048D                     	;# 
  3859  048E                     	;# 
  3860  048F                     	;# 
  3861  048F                     	;# 
  3862  0490                     	;# 
  3863  0491                     	;# 
  3864  0492                     	;# 
  3865  0492                     	;# 
  3866  0493                     	;# 
  3867  0494                     	;# 
  3868  0495                     	;# 
  3869  0495                     	;# 
  3870  0496                     	;# 
  3871  0497                     	;# 
  3872  0498                     	;# 
  3873  0499                     	;# 
  3874  049A                     	;# 
  3875  049B                     	;# 
  3876  049C                     	;# 
  3877  049D                     	;# 
  3878  050C                     	;# 
  3879  050C                     	;# 
  3880  050D                     	;# 
  3881  050E                     	;# 
  3882  050F                     	;# 
  3883  050F                     	;# 
  3884  0510                     	;# 
  3885  0511                     	;# 
  3886  0512                     	;# 
  3887  0512                     	;# 
  3888  0513                     	;# 
  3889  0514                     	;# 
  3890  0515                     	;# 
  3891  0515                     	;# 
  3892  0516                     	;# 
  3893  0517                     	;# 
  3894  0518                     	;# 
  3895  0519                     	;# 
  3896  051A                     	;# 
  3897  051B                     	;# 
  3898  051C                     	;# 
  3899  051D                     	;# 
  3900  058C                     	;# 
  3901  058C                     	;# 
  3902  058D                     	;# 
  3903  058E                     	;# 
  3904  058F                     	;# 
  3905  058F                     	;# 
  3906  0590                     	;# 
  3907  0591                     	;# 
  3908  0592                     	;# 
  3909  0593                     	;# 
  3910  060C                     	;# 
  3911  060D                     	;# 
  3912  060E                     	;# 
  3913  060F                     	;# 
  3914  0610                     	;# 
  3915  0611                     	;# 
  3916  0612                     	;# 
  3917  0613                     	;# 
  3918  0614                     	;# 
  3919  0616                     	;# 
  3920  0617                     	;# 
  3921  0618                     	;# 
  3922  0619                     	;# 
  3923  061A                     	;# 
  3924  061B                     	;# 
  3925  061C                     	;# 
  3926  061D                     	;# 
  3927  061E                     	;# 
  3928  068C                     	;# 
  3929  068D                     	;# 
  3930  068E                     	;# 
  3931  068F                     	;# 
  3932  0690                     	;# 
  3933  0691                     	;# 
  3934  0692                     	;# 
  3935  0693                     	;# 
  3936  0694                     	;# 
  3937  070C                     	;# 
  3938  070D                     	;# 
  3939  070E                     	;# 
  3940  070F                     	;# 
  3941  0710                     	;# 
  3942  0711                     	;# 
  3943  0712                     	;# 
  3944  0713                     	;# 
  3945  0714                     	;# 
  3946  0716                     	;# 
  3947  0717                     	;# 
  3948  0718                     	;# 
  3949  0719                     	;# 
  3950  071A                     	;# 
  3951  071B                     	;# 
  3952  071C                     	;# 
  3953  071D                     	;# 
  3954  071E                     	;# 
  3955  0796                     	;# 
  3956  0797                     	;# 
  3957  0798                     	;# 
  3958  0799                     	;# 
  3959  079A                     	;# 
  3960  079B                     	;# 
  3961  080C                     	;# 
  3962  080D                     	;# 
  3963  080E                     	;# 
  3964  080F                     	;# 
  3965  0810                     	;# 
  3966  0811                     	;# 
  3967  0812                     	;# 
  3968  0813                     	;# 
  3969  0814                     	;# 
  3970  081A                     	;# 
  3971  081B                     	;# 
  3972  081C                     	;# 
  3973  081D                     	;# 
  3974  081E                     	;# 
  3975  081F                     	;# 
  3976  088C                     	;# 
  3977  088D                     	;# 
  3978  088E                     	;# 
  3979  088F                     	;# 
  3980  0890                     	;# 
  3981  0891                     	;# 
  3982  0892                     	;# 
  3983  0893                     	;# 
  3984  0895                     	;# 
  3985  0896                     	;# 
  3986  0897                     	;# 
  3987  0898                     	;# 
  3988  0899                     	;# 
  3989  089A                     	;# 
  3990  089B                     	;# 
  3991  090C                     	;# 
  3992  090E                     	;# 
  3993  090F                     	;# 
  3994  091F                     	;# 
  3995  091F                     	;# 
  3996  098F                     	;# 
  3997  098F                     	;# 
  3998  0990                     	;# 
  3999  0991                     	;# 
  4000  0992                     	;# 
  4001  0993                     	;# 
  4002  0994                     	;# 
  4003  0995                     	;# 
  4004  0996                     	;# 
  4005  0997                     	;# 
  4006  0E0F                     	;# 
  4007  0E10                     	;# 
  4008  0E11                     	;# 
  4009  0E12                     	;# 
  4010  0E13                     	;# 
  4011  0E14                     	;# 
  4012  0E15                     	;# 
  4013  0E16                     	;# 
  4014  0E17                     	;# 
  4015  0E18                     	;# 
  4016  0E19                     	;# 
  4017  0E1A                     	;# 
  4018  0E1B                     	;# 
  4019  0E1C                     	;# 
  4020  0E1D                     	;# 
  4021  0E1E                     	;# 
  4022  0E1F                     	;# 
  4023  0E20                     	;# 
  4024  0E21                     	;# 
  4025  0E22                     	;# 
  4026  0E23                     	;# 
  4027  0E24                     	;# 
  4028  0E25                     	;# 
  4029  0E26                     	;# 
  4030  0E27                     	;# 
  4031  0E28                     	;# 
  4032  0E29                     	;# 
  4033  0E2A                     	;# 
  4034  0E2B                     	;# 
  4035  0E2C                     	;# 
  4036  0E2D                     	;# 
  4037  0E2E                     	;# 
  4038  0E2F                     	;# 
  4039  0E30                     	;# 
  4040  0E31                     	;# 
  4041  0E32                     	;# 
  4042  0E33                     	;# 
  4043  0E34                     	;# 
  4044  0E35                     	;# 
  4045  0E36                     	;# 
  4046  0E37                     	;# 
  4047  0E8F                     	;# 
  4048  0E90                     	;# 
  4049  0E91                     	;# 
  4050  0E92                     	;# 
  4051  0E93                     	;# 
  4052  0E94                     	;# 
  4053  0E95                     	;# 
  4054  0E96                     	;# 
  4055  0E97                     	;# 
  4056  0E9C                     	;# 
  4057  0E9D                     	;# 
  4058  0E9E                     	;# 
  4059  0EA1                     	;# 
  4060  0EA2                     	;# 
  4061  0EA3                     	;# 
  4062  0EA4                     	;# 
  4063  0EA5                     	;# 
  4064  0EA9                     	;# 
  4065  0EAA                     	;# 
  4066  0EAB                     	;# 
  4067  0EAC                     	;# 
  4068  0EB1                     	;# 
  4069  0EB2                     	;# 
  4070  0EB3                     	;# 
  4071  0EB8                     	;# 
  4072  0EB9                     	;# 
  4073  0EBA                     	;# 
  4074  0EBB                     	;# 
  4075  0EBC                     	;# 
  4076  0EBD                     	;# 
  4077  0EBE                     	;# 
  4078  0EC3                     	;# 
  4079  0EC5                     	;# 
  4080  0EC6                     	;# 
  4081  0EC7                     	;# 
  4082  0EC8                     	;# 
  4083  0EC9                     	;# 
  4084  0ECA                     	;# 
  4085  0ECB                     	;# 
  4086  0ECC                     	;# 
  4087  0F10                     	;# 
  4088  0F11                     	;# 
  4089  0F12                     	;# 
  4090  0F13                     	;# 
  4091  0F14                     	;# 
  4092  0F15                     	;# 
  4093  0F16                     	;# 
  4094  0F17                     	;# 
  4095  0F18                     	;# 
  4096  0F19                     	;# 
  4097  0F1A                     	;# 
  4098  0F1B                     	;# 
  4099  0F1C                     	;# 
  4100  0F1D                     	;# 
  4101  0F1E                     	;# 
  4102  0F1F                     	;# 
  4103  0F20                     	;# 
  4104  0F21                     	;# 
  4105  0F22                     	;# 
  4106  0F23                     	;# 
  4107  0F24                     	;# 
  4108  0F25                     	;# 
  4109  0F26                     	;# 
  4110  0F27                     	;# 
  4111  0F38                     	;# 
  4112  0F39                     	;# 
  4113  0F3A                     	;# 
  4114  0F3B                     	;# 
  4115  0F3C                     	;# 
  4116  0F3D                     	;# 
  4117  0F3E                     	;# 
  4118  0F3F                     	;# 
  4119  0F40                     	;# 
  4120  0F41                     	;# 
  4121  0F43                     	;# 
  4122  0F44                     	;# 
  4123  0F45                     	;# 
  4124  0F46                     	;# 
  4125  0F47                     	;# 
  4126  0F48                     	;# 
  4127  0F49                     	;# 
  4128  0F4A                     	;# 
  4129  0F4B                     	;# 
  4130  0F4C                     	;# 
  4131  0F4E                     	;# 
  4132  0F4F                     	;# 
  4133  0F50                     	;# 
  4134  0F51                     	;# 
  4135  0F52                     	;# 
  4136  0F53                     	;# 
  4137  0F54                     	;# 
  4138  0F55                     	;# 
  4139  0F56                     	;# 
  4140  0F57                     	;# 
  4141  0F65                     	;# 
  4142  0F68                     	;# 
  4143  0F69                     	;# 
  4144  0F6A                     	;# 
  4145  0F6B                     	;# 
  4146  0FE4                     	;# 
  4147  0FE5                     	;# 
  4148  0FE6                     	;# 
  4149  0FE7                     	;# 
  4150  0FE8                     	;# 
  4151  0FE9                     	;# 
  4152  0FEA                     	;# 
  4153  0FEB                     	;# 
  4154  0FED                     	;# 
  4155  0FEE                     	;# 
  4156  0FEF                     	;# 
  4157                           
  4158                           	psect	idataBANK1
  4159  0B86                     __pidataBANK1:	
  4160                           
  4161                           ;initializer for _channels
  4162  0B86  3401               	retlw	1
  4163  0B87  3400               	retlw	0
  4164  0B88  3409               	retlw	9
  4165  0B89  3400               	retlw	0
  4166  0B8A  340B               	retlw	11
  4167  0B8B  3400               	retlw	0
  4168                           
  4169                           	psect	idataBANK2
  4170  0BF8                     __pidataBANK2:	
  4171                           
  4172                           ;initializer for ___cgram
  4173  0BF8  340C               	retlw	12
  4174  0BF9  3412               	retlw	18
  4175  0BFA  3412               	retlw	18
  4176  0BFB  340C               	retlw	12
  4177  0BFC  3400               	retlw	0
  4178  0BFD  3400               	retlw	0
  4179  0BFE  3400               	retlw	0
  4180  0BFF  3400               	retlw	0
  4181  0C00  340A               	retlw	10
  4182  0C01  3415               	retlw	21
  4183  0C02  3411               	retlw	17
  4184  0C03  340A               	retlw	10
  4185  0C04  3404               	retlw	4
  4186  0C05  3400               	retlw	0
  4187  0C06  3400               	retlw	0
  4188  0C07  3400               	retlw	0
  4189  0C08  340A               	retlw	10
  4190  0C09  341F               	retlw	31
  4191  0C0A  341F               	retlw	31
  4192  0C0B  340E               	retlw	14
  4193  0C0C  3404               	retlw	4
  4194  0C0D  3400               	retlw	0
  4195  0C0E  3400               	retlw	0
  4196  0C0F  3400               	retlw	0
  4197                           
  4198                           	psect	stringtext
  4199  1000                     __pstringtext:	
  4200  1000                     log@coeff:	
  4201  1000  3400               	retlw	0
  4202  1001  3400               	retlw	0
  4203  1002  3400               	retlw	0
  4204  1003  3400               	retlw	0
  4205  1004  3480               	retlw	128
  4206  1005  343F               	retlw	63
  4207  1006  34F0               	retlw	240
  4208  1007  34FF               	retlw	255
  4209  1008  34BE               	retlw	190
  4210  1009  34E2               	retlw	226
  4211  100A  34A9               	retlw	169
  4212  100B  343E               	retlw	62
  4213  100C  3483               	retlw	131
  4214  100D  3476               	retlw	118
  4215  100E  34BE               	retlw	190
  4216  100F  34AE               	retlw	174
  4217  1010  342B               	retlw	43
  4218  1011  343E               	retlw	62
  4219  1012  343C               	retlw	60
  4220  1013  34C3               	retlw	195
  4221  1014  34BD               	retlw	189
  4222  1015  34D2               	retlw	210
  4223  1016  3413               	retlw	19
  4224  1017  343D               	retlw	61
  4225  1018  3478               	retlw	120
  4226  1019  34D3               	retlw	211
  4227  101A  34BB               	retlw	187
  4228  101B                     __end_oflog@coeff:	
  4229  0016                     _LATA	set	22
  4230  0017                     _LATB	set	23
  4231  0018                     _LATC	set	24
  4232  0011                     _TRISA	set	17
  4233  0012                     _TRISB	set	18
  4234  0013                     _TRISC	set	19
  4235  005F                     _GIE	set	95
  4236  0060                     _RA0	set	96
  4237  0062                     _RA2	set	98
  4238  0066                     _RA6	set	102
  4239  0067                     _RA7	set	103
  4240  0070                     _RC0	set	112
  4241  0071                     _RC1	set	113
  4242  009D                     _ADACQ	set	157
  4243  0099                     _ADACT	set	153
  4244  009B                     _ADCAP	set	155
  4245  0098                     _ADCLK	set	152
  4246  0093                     _ADCON0	set	147
  4247  0093                     _ADCON0bits	set	147
  4248  0094                     _ADCON1	set	148
  4249  0095                     _ADCON2	set	149
  4250  0096                     _ADCON3	set	150
  4251  009E                     _ADPCH	set	158
  4252  009C                     _ADPRE	set	156
  4253  009A                     _ADREF	set	154
  4254  008D                     _ADRESH	set	141
  4255  008C                     _ADRESL	set	140
  4256  0097                     _ADSTAT	set	151
  4257  010F                     _ADLTHH	set	271
  4258  010E                     _ADLTHL	set	270
  4259  010D                     _ADRPT	set	269
  4260  0113                     _ADSTPTH	set	275
  4261  0112                     _ADSTPTL	set	274
  4262  0111                     _ADUTHH	set	273
  4263  0110                     _ADUTHL	set	272
  4264  021F                     _CCPTMRS1bits	set	543
  4265  0290                     _T2CLKCON	set	656
  4266  028E                     _T2CON	set	654
  4267  028E                     _T2CONbits	set	654
  4268  028F                     _T2HLT	set	655
  4269  028D                     _T2PR	set	653
  4270  0291                     _T2RST	set	657
  4271  028C                     _T2TMR	set	652
  4272  038E                     _PWM6CON	set	910
  4273  038D                     _PWM6DCH	set	909
  4274  038C                     _PWM6DCL	set	908
  4275  0716                     _PIE0bits	set	1814
  4276  0710                     _PIR4bits	set	1808
  4277  088D                     _OSCCON1	set	2189
  4278  088F                     _OSCCON3	set	2191
  4279  0891                     _OSCEN	set	2193
  4280  0893                     _OSCFRQ	set	2195
  4281  0892                     _OSCTUNE	set	2194
  4282  090C                     _FVRCON	set	2316
  4283  0E8F                     _PPSLOCK	set	3727
  4284  0E8F                     _PPSLOCKbits	set	3727
  4285  0F38                     _ANSELA	set	3896
  4286  0F43                     _ANSELB	set	3907
  4287  0F4E                     _ANSELC	set	3918
  4288  0F22                     _RC2PPS	set	3874
  4289  0F39                     _WPUA	set	3897
  4290  0F44                     _WPUB	set	3908
  4291  0F4F                     _WPUC	set	3919
  4292  0F65                     _WPUE	set	3941
  4293  101B                     STR_1:	
  4294  101B  3453               	retlw	83	;'S'
  4295  101C  346F               	retlw	111	;'o'
  4296  101D  346C               	retlw	108	;'l'
  4297  101E  3461               	retlw	97	;'a'
  4298  101F  3472               	retlw	114	;'r'
  4299  1020  3420               	retlw	32	;' '
  4300  1021  3449               	retlw	73	;'I'
  4301  1022  346E               	retlw	110	;'n'
  4302  1023  3400               	retlw	0
  4303  1024                     STR_2:	
  4304  1024  3452               	retlw	82	;'R'
  4305  1025  3465               	retlw	101	;'e'
  4306  1026  3474               	retlw	116	;'t'
  4307  1027  3475               	retlw	117	;'u'
  4308  1028  3472               	retlw	114	;'r'
  4309  1029  346E               	retlw	110	;'n'
  4310  102A  3400               	retlw	0
  4311                           
  4312                           ; #config settings
  4313  0000                     
  4314                           	psect	cinit
  4315  07DA                     start_initialization:	
  4316  07DA                     __initialization:	
  4317                           
  4318                           ; Initialize objects allocated to BANK1
  4319  07DA  3086               	movlw	low __pidataBANK1
  4320  07DB  0084               	movwf	4
  4321  07DC  308B               	movlw	(high __pidataBANK1)| (0+128)
  4322  07DD  0085               	movwf	5
  4323  07DE  30DF               	movlw	low __pdataBANK1
  4324  07DF  0086               	movwf	6
  4325  07E0  3000               	movlw	high __pdataBANK1
  4326  07E1  0087               	movwf	7
  4327  07E2  3006               	movlw	6
  4328  07E3  318B  2380  3187   	fcall	init_ram
  4329                           
  4330                           ; Initialize objects allocated to BANK2
  4331  07E6  30F8               	movlw	low __pidataBANK2
  4332  07E7  0084               	movwf	4
  4333  07E8  308B               	movlw	(high __pidataBANK2)| (0+128)
  4334  07E9  0085               	movwf	5
  4335  07EA  3020               	movlw	low __pdataBANK2
  4336  07EB  0086               	movwf	6
  4337  07EC  3001               	movlw	high __pdataBANK2
  4338  07ED  0087               	movwf	7
  4339  07EE  3018               	movlw	24
  4340  07EF  318B  2380  3187   	fcall	init_ram
  4341                           
  4342                           ; Clear objects allocated to BANK0
  4343  07F2  01EB               	clrf	__pbssBANK0& (0+127)
  4344  07F3  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4345  07F4  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  4346  07F5  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  4347                           
  4348                           ; Clear objects allocated to BANK1
  4349  07F6  30A0               	movlw	low __pbssBANK1
  4350  07F7  0084               	movwf	4
  4351  07F8  3000               	movlw	high __pbssBANK1
  4352  07F9  0085               	movwf	5
  4353  07FA  302F               	movlw	47
  4354  07FB  318B  237A         	fcall	clear_ram0
  4355  07FD                     end_of_initialization:	
  4356                           ;End of C runtime variable initialization code
  4357                           
  4358  07FD                     __end_of__initialization:	
  4359  07FD  0020               	movlb	0
  4360  07FE  3185  2DC3         	ljmp	_main	;jump to C main() function
  4361                           
  4362                           	psect	bssBANK0
  4363  006B                     __pbssBANK0:	
  4364  006B                     _errno:	
  4365  006B                     	ds	2
  4366  006D                     _sampleIndex:	
  4367  006D                     	ds	2
  4368                           
  4369                           	psect	bssBANK1
  4370  00A0                     __pbssBANK1:	
  4371  00A0                     _samples:	
  4372  00A0                     	ds	24
  4373  00B8                     _totals:	
  4374  00B8                     	ds	12
  4375  00C4                     main@F13657:	
  4376  00C4                     	ds	6
  4377  00CA                     LCD_Write_Int@F13687:	
  4378  00CA                     	ds	5
  4379                           
  4380                           	psect	dataBANK1
  4381  00DF                     __pdataBANK1:	
  4382  00DF                     _channels:	
  4383  00DF                     	ds	6
  4384                           
  4385                           	psect	dataBANK2
  4386  0120                     __pdataBANK2:	
  4387  0120                     ___cgram:	
  4388  0120                     	ds	24
  4389                           
  4390                           	psect	inittext
  4391  0B80                     init_ram:	
  4392  0B80  00FE               	movwf	126
  4393  0B81                     initloop:	
  4394  0B81  0012               	moviw fsr0++
  4395  0B82  001E               	movwi fsr1++
  4396  0B83  0BFE               	decfsz	126,f
  4397  0B84  2B81               	goto	initloop
  4398  0B85  3400               	retlw	0
  4399                           
  4400                           	psect	clrtext
  4401  0B7A                     clear_ram0:	
  4402                           ;	Called with FSR0 containing the base address, and
  4403                           ;	WREG with the size to clear
  4404                           
  4405  0B7A  0064               	clrwdt	;clear the watchdog before getting into this loop
  4406  0B7B                     clrloop0:	
  4407  0B7B  0180               	clrf	0	;clear RAM location pointed to by FSR
  4408  0B7C  3101               	addfsr 0,1
  4409  0B7D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4410  0B7E  2B7B               	goto	clrloop0	;have we reached the end yet?
  4411  0B7F  3400               	retlw	0	;all done for this memory range, return
  4412                           
  4413                           	psect	cstackBANK1
  4414  00CF                     __pcstackBANK1:	
  4415  00CF                     main@displayTemp:	
  4416                           
  4417                           ; 3 bytes @ 0x0
  4418  00CF                     	ds	3
  4419  00D2                     main@displayTemp2:	
  4420                           
  4421                           ; 3 bytes @ 0x3
  4422  00D2                     	ds	3
  4423  00D5                     main@analogs:	
  4424                           
  4425                           ; 6 bytes @ 0x6
  4426  00D5                     	ds	6
  4427  00DB                     main@count:	
  4428                           
  4429                           ; 1 bytes @ 0xC
  4430  00DB                     	ds	1
  4431  00DC                     main@dutyCycle:	
  4432                           
  4433                           ; 2 bytes @ 0xD
  4434  00DC                     	ds	2
  4435  00DE                     main@x:	
  4436                           
  4437                           ; 1 bytes @ 0xF
  4438  00DE                     	ds	1
  4439                           
  4440                           	psect	cstackCOMMON
  4441  0070                     __pcstackCOMMON:	
  4442  0070                     ?___ftge:	
  4443  0070                     ?_LCD_Cmd:	
  4444                           ; 1 bit 
  4445                           
  4446  0070                     ?_LCD_Write_Char:	
  4447                           ; 1 bytes @ 0x0
  4448                           
  4449  0070                     ?_OSCILLATOR_Initialize:	
  4450                           ; 1 bytes @ 0x0
  4451                           
  4452  0070                     ??_OSCILLATOR_Initialize:	
  4453                           ; 1 bytes @ 0x0
  4454                           
  4455  0070                     ?_PWM6_Initialize:	
  4456                           ; 1 bytes @ 0x0
  4457                           
  4458  0070                     ??_PWM6_Initialize:	
  4459                           ; 1 bytes @ 0x0
  4460                           
  4461  0070                     ?_TMR2_Initialize:	
  4462                           ; 1 bytes @ 0x0
  4463                           
  4464  0070                     ??_TMR2_Initialize:	
  4465                           ; 1 bytes @ 0x0
  4466                           
  4467  0070                     ?_ADCC_Initialize:	
  4468                           ; 1 bytes @ 0x0
  4469                           
  4470  0070                     ??_ADCC_Initialize:	
  4471                           ; 1 bytes @ 0x0
  4472                           
  4473  0070                     ?_InitCustomChars:	
  4474                           ; 1 bytes @ 0x0
  4475                           
  4476  0070                     ?_LCD_Port:	
  4477                           ; 1 bytes @ 0x0
  4478                           
  4479  0070                     ??_LCD_Port:	
  4480                           ; 1 bytes @ 0x0
  4481                           
  4482  0070                     ?_LCD_Clear:	
  4483                           ; 1 bytes @ 0x0
  4484                           
  4485  0070                     ?_LCD_Init:	
  4486                           ; 1 bytes @ 0x0
  4487                           
  4488  0070                     ?_PIN_MANAGER_Initialize:	
  4489                           ; 1 bytes @ 0x0
  4490                           
  4491  0070                     ??_PIN_MANAGER_Initialize:	
  4492                           ; 1 bytes @ 0x0
  4493                           
  4494  0070                     ?_SYSTEM_Initialize:	
  4495                           ; 1 bytes @ 0x0
  4496                           
  4497  0070                     ?_PWM6_LoadDutyValue:	
  4498                           ; 1 bytes @ 0x0
  4499                           
  4500  0070                     ?_main:	
  4501                           ; 1 bytes @ 0x0
  4502                           
  4503  0070                     ?_ADCRead:	
  4504                           ; 1 bytes @ 0x0
  4505                           
  4506  0070                     ?___wmul:	
  4507                           ; 2 bytes @ 0x0
  4508                           
  4509  0070                     ?___awdiv:	
  4510                           ; 2 bytes @ 0x0
  4511                           
  4512  0070                     ?___awmod:	
  4513                           ; 2 bytes @ 0x0
  4514                           
  4515  0070                     ?___ftpack:	
  4516                           ; 2 bytes @ 0x0
  4517                           
  4518  0070                     ?_frexp:	
  4519                           ; 3 bytes @ 0x0
  4520                           
  4521  0070                     ?___aldiv:	
  4522                           ; 3 bytes @ 0x0
  4523                           
  4524  0070                     ?___fttol:	
  4525                           ; 4 bytes @ 0x0
  4526                           
  4527  0070                     LCD_Port@a:	
  4528                           ; 4 bytes @ 0x0
  4529                           
  4530  0070                     PIN_MANAGER_Initialize@state:	
  4531                           ; 1 bytes @ 0x0
  4532                           
  4533  0070                     PWM6_LoadDutyValue@dutyCycle:	
  4534                           ; 1 bytes @ 0x0
  4535                           
  4536  0070                     ___wmul@multiplier:	
  4537                           ; 2 bytes @ 0x0
  4538                           
  4539  0070                     ___awdiv@divisor:	
  4540                           ; 2 bytes @ 0x0
  4541                           
  4542  0070                     ___awmod@divisor:	
  4543                           ; 2 bytes @ 0x0
  4544                           
  4545  0070                     ___ftpack@arg:	
  4546                           ; 2 bytes @ 0x0
  4547                           
  4548  0070                     ___ftge@ff1:	
  4549                           ; 3 bytes @ 0x0
  4550                           
  4551  0070                     ___fttol@f1:	
  4552                           ; 3 bytes @ 0x0
  4553                           
  4554  0070                     frexp@value:	
  4555                           ; 3 bytes @ 0x0
  4556                           
  4557  0070                     ___aldiv@divisor:	
  4558                           ; 3 bytes @ 0x0
  4559                           
  4560                           
  4561                           ; 4 bytes @ 0x0
  4562  0070                     	ds	1
  4563  0071                     ??_LCD_Cmd:	
  4564  0071                     ??_LCD_Write_Char:	
  4565                           ; 1 bytes @ 0x1
  4566                           
  4567                           
  4568                           ; 1 bytes @ 0x1
  4569  0071                     	ds	1
  4570  0072                     ??_PWM6_LoadDutyValue:	
  4571  0072                     LCD_Cmd@a:	
  4572                           ; 1 bytes @ 0x2
  4573                           
  4574  0072                     LCD_Write_Char@temp:	
  4575                           ; 1 bytes @ 0x2
  4576                           
  4577  0072                     ___wmul@multiplicand:	
  4578                           ; 1 bytes @ 0x2
  4579                           
  4580  0072                     ___awdiv@dividend:	
  4581                           ; 2 bytes @ 0x2
  4582                           
  4583  0072                     ___awmod@dividend:	
  4584                           ; 2 bytes @ 0x2
  4585                           
  4586                           
  4587                           ; 2 bytes @ 0x2
  4588  0072                     	ds	1
  4589  0073                     ??_ADCRead:	
  4590  0073                     ??_LCD_Clear:	
  4591                           ; 1 bytes @ 0x3
  4592                           
  4593  0073                     ?_LCD_Set_Cursor:	
  4594                           ; 1 bytes @ 0x3
  4595                           
  4596  0073                     ??_LCD_Init:	
  4597                           ; 1 bytes @ 0x3
  4598                           
  4599  0073                     ADCRead@channel:	
  4600                           ; 1 bytes @ 0x3
  4601                           
  4602  0073                     LCD_Set_Cursor@y:	
  4603                           ; 1 bytes @ 0x3
  4604                           
  4605  0073                     LCD_Write_Char@y:	
  4606                           ; 1 bytes @ 0x3
  4607                           
  4608  0073                     ___ftpack@exp:	
  4609                           ; 1 bytes @ 0x3
  4610                           
  4611  0073                     frexp@eptr:	
  4612                           ; 1 bytes @ 0x3
  4613                           
  4614  0073                     ___ftge@ff2:	
  4615                           ; 1 bytes @ 0x3
  4616                           
  4617                           
  4618                           ; 3 bytes @ 0x3
  4619  0073                     	ds	1
  4620  0074                     ??_frexp:	
  4621  0074                     ??_LCD_Set_Cursor:	
  4622                           ; 1 bytes @ 0x4
  4623                           
  4624  0074                     ??___wmul:	
  4625                           ; 1 bytes @ 0x4
  4626                           
  4627  0074                     ??___awdiv:	
  4628                           ; 1 bytes @ 0x4
  4629                           
  4630  0074                     ??___awmod:	
  4631                           ; 1 bytes @ 0x4
  4632                           
  4633  0074                     ??___fttol:	
  4634                           ; 1 bytes @ 0x4
  4635                           
  4636  0074                     LCD_Write_Char@a:	
  4637                           ; 1 bytes @ 0x4
  4638                           
  4639  0074                     ___ftpack@sign:	
  4640                           ; 1 bytes @ 0x4
  4641                           
  4642  0074                     ___wmul@product:	
  4643                           ; 1 bytes @ 0x4
  4644                           
  4645  0074                     ___aldiv@dividend:	
  4646                           ; 2 bytes @ 0x4
  4647                           
  4648                           
  4649                           ; 4 bytes @ 0x4
  4650  0074                     	ds	1
  4651  0075                     ??___ftpack:	
  4652  0075                     ??_InitCustomChars:	
  4653                           ; 1 bytes @ 0x5
  4654                           
  4655  0075                     ?_LCD_Write_String:	
  4656                           ; 1 bytes @ 0x5
  4657                           
  4658  0075                     LCD_Init@style:	
  4659                           ; 1 bytes @ 0x5
  4660                           
  4661  0075                     ___awdiv@counter:	
  4662                           ; 1 bytes @ 0x5
  4663                           
  4664  0075                     ___awmod@counter:	
  4665                           ; 1 bytes @ 0x5
  4666                           
  4667  0075                     LCD_Write_String@a:	
  4668                           ; 1 bytes @ 0x5
  4669                           
  4670                           
  4671                           ; 2 bytes @ 0x5
  4672  0075                     	ds	1
  4673  0076                     ??___ftge:	
  4674  0076                     InitCustomChars@i:	
  4675                           ; 1 bytes @ 0x6
  4676                           
  4677  0076                     LCD_Set_Cursor@x:	
  4678                           ; 1 bytes @ 0x6
  4679                           
  4680  0076                     ___awdiv@sign:	
  4681                           ; 1 bytes @ 0x6
  4682                           
  4683  0076                     ___awmod@sign:	
  4684                           ; 1 bytes @ 0x6
  4685                           
  4686                           
  4687                           ; 1 bytes @ 0x6
  4688  0076                     	ds	1
  4689  0077                     ??_LCD_Write_String:	
  4690  0077                     ??_SYSTEM_Initialize:	
  4691                           ; 1 bytes @ 0x7
  4692                           
  4693  0077                     LCD_Set_Cursor@z:	
  4694                           ; 1 bytes @ 0x7
  4695                           
  4696  0077                     ___awdiv@quotient:	
  4697                           ; 1 bytes @ 0x7
  4698                           
  4699                           
  4700                           ; 2 bytes @ 0x7
  4701  0077                     	ds	1
  4702  0078                     ??___aldiv:	
  4703  0078                     ?___awtoft:	
  4704                           ; 1 bytes @ 0x8
  4705                           
  4706  0078                     LCD_Set_Cursor@w:	
  4707                           ; 3 bytes @ 0x8
  4708                           
  4709  0078                     ___fttol@sign1:	
  4710                           ; 1 bytes @ 0x8
  4711                           
  4712  0078                     LCD_Write_String@i:	
  4713                           ; 1 bytes @ 0x8
  4714                           
  4715  0078                     ___awtoft@c:	
  4716                           ; 2 bytes @ 0x8
  4717                           
  4718                           
  4719                           ; 2 bytes @ 0x8
  4720  0078                     	ds	1
  4721  0079                     LCD_Set_Cursor@temp:	
  4722  0079                     readAnalog@analog_channel:	
  4723                           ; 1 bytes @ 0x9
  4724                           
  4725  0079                     ___fttol@lval:	
  4726                           ; 2 bytes @ 0x9
  4727                           
  4728                           
  4729                           ; 4 bytes @ 0x9
  4730  0079                     	ds	2
  4731  007B                     ??___awtoft:	
  4732  007B                     readAnalog@value:	
  4733                           ; 1 bytes @ 0xB
  4734                           
  4735                           
  4736                           ; 2 bytes @ 0xB
  4737  007B                     	ds	2
  4738  007D                     ___awtoft@sign:	
  4739  007D                     ___fttol@exp1:	
  4740                           ; 1 bytes @ 0xD
  4741                           
  4742                           
  4743                           ; 1 bytes @ 0xD
  4744  007D                     	ds	1
  4745  007E                     ??_tempCalc:	
  4746  007E                     ??_eval_poly:	
  4747                           ; 1 bytes @ 0xE
  4748                           
  4749  007E                     ??___ftsub:	
  4750                           ; 1 bytes @ 0xE
  4751                           
  4752                           
  4753                           	psect	cstackBANK0
  4754  0020                     __pcstackBANK0:	
  4755                           ; 1 bytes @ 0xE
  4756                           
  4757  0020                     ?_LCD_Write_Int:	
  4758  0020                     ?___ftmul:	
  4759                           ; 1 bytes @ 0x0
  4760                           
  4761  0020                     ___aldiv@counter:	
  4762                           ; 3 bytes @ 0x0
  4763                           
  4764  0020                     LCD_Write_Int@value:	
  4765                           ; 1 bytes @ 0x0
  4766                           
  4767  0020                     ___ftmul@f1:	
  4768                           ; 2 bytes @ 0x0
  4769                           
  4770                           
  4771                           ; 3 bytes @ 0x0
  4772  0020                     	ds	1
  4773  0021                     ___aldiv@sign:	
  4774                           
  4775                           ; 1 bytes @ 0x1
  4776  0021                     	ds	1
  4777  0022                     LCD_Write_Int@fieldLength:	
  4778  0022                     ___aldiv@quotient:	
  4779                           ; 1 bytes @ 0x2
  4780                           
  4781                           
  4782                           ; 4 bytes @ 0x2
  4783  0022                     	ds	1
  4784  0023                     LCD_Write_Int@numPlaces:	
  4785  0023                     ___ftmul@f2:	
  4786                           ; 1 bytes @ 0x3
  4787                           
  4788                           
  4789                           ; 3 bytes @ 0x3
  4790  0023                     	ds	1
  4791  0024                     LCD_Write_Int@sign:	
  4792                           
  4793                           ; 1 bytes @ 0x4
  4794  0024                     	ds	1
  4795  0025                     ??_LCD_Write_Int:	
  4796                           
  4797                           ; 1 bytes @ 0x5
  4798  0025                     	ds	1
  4799  0026                     ??___ftmul:	
  4800  0026                     ?_readAnalog:	
  4801                           ; 1 bytes @ 0x6
  4802                           
  4803  0026                     readAnalog@channel:	
  4804                           ; 2 bytes @ 0x6
  4805                           
  4806                           
  4807                           ; 2 bytes @ 0x6
  4808  0026                     	ds	2
  4809  0028                     ??_readAnalog:	
  4810                           
  4811                           ; 1 bytes @ 0x8
  4812  0028                     	ds	2
  4813  002A                     ___ftmul@exp:	
  4814  002A                     LCD_Write_Int@str:	
  4815                           ; 1 bytes @ 0xA
  4816                           
  4817                           
  4818                           ; 5 bytes @ 0xA
  4819  002A                     	ds	1
  4820  002B                     ___ftmul@f3_as_product:	
  4821                           
  4822                           ; 3 bytes @ 0xB
  4823  002B                     	ds	3
  4824  002E                     ___ftmul@cntr:	
  4825                           
  4826                           ; 1 bytes @ 0xE
  4827  002E                     	ds	1
  4828  002F                     ___ftmul@sign:	
  4829  002F                     LCD_Write_Int@j:	
  4830                           ; 1 bytes @ 0xF
  4831                           
  4832                           
  4833                           ; 2 bytes @ 0xF
  4834  002F                     	ds	1
  4835  0030                     ?___ftdiv:	
  4836  0030                     ___ftdiv@f2:	
  4837                           ; 3 bytes @ 0x10
  4838                           
  4839                           
  4840                           ; 3 bytes @ 0x10
  4841  0030                     	ds	1
  4842  0031                     LCD_Write_Int@i:	
  4843                           
  4844                           ; 2 bytes @ 0x11
  4845  0031                     	ds	2
  4846  0033                     ___ftdiv@f1:	
  4847                           
  4848                           ; 3 bytes @ 0x13
  4849  0033                     	ds	3
  4850  0036                     ??___ftdiv:	
  4851                           
  4852                           ; 1 bytes @ 0x16
  4853  0036                     	ds	4
  4854  003A                     ___ftdiv@cntr:	
  4855                           
  4856                           ; 1 bytes @ 0x1A
  4857  003A                     	ds	1
  4858  003B                     ___ftdiv@f3:	
  4859                           
  4860                           ; 3 bytes @ 0x1B
  4861  003B                     	ds	3
  4862  003E                     ___ftdiv@exp:	
  4863                           
  4864                           ; 1 bytes @ 0x1E
  4865  003E                     	ds	1
  4866  003F                     ___ftdiv@sign:	
  4867                           
  4868                           ; 1 bytes @ 0x1F
  4869  003F                     	ds	1
  4870  0040                     ?___ftadd:	
  4871  0040                     ___ftadd@f1:	
  4872                           ; 3 bytes @ 0x20
  4873                           
  4874                           
  4875                           ; 3 bytes @ 0x20
  4876  0040                     	ds	3
  4877  0043                     ___ftadd@f2:	
  4878                           
  4879                           ; 3 bytes @ 0x23
  4880  0043                     	ds	3
  4881  0046                     ??___ftadd:	
  4882                           
  4883                           ; 1 bytes @ 0x26
  4884  0046                     	ds	4
  4885  004A                     ___ftadd@sign:	
  4886                           
  4887                           ; 1 bytes @ 0x2A
  4888  004A                     	ds	1
  4889  004B                     ___ftadd@exp2:	
  4890                           
  4891                           ; 1 bytes @ 0x2B
  4892  004B                     	ds	1
  4893  004C                     ___ftadd@exp1:	
  4894                           
  4895                           ; 1 bytes @ 0x2C
  4896  004C                     	ds	1
  4897  004D                     ?_eval_poly:	
  4898  004D                     ?___ftsub:	
  4899                           ; 3 bytes @ 0x2D
  4900                           
  4901  004D                     ___ftsub@f2:	
  4902                           ; 3 bytes @ 0x2D
  4903                           
  4904  004D                     eval_poly@x:	
  4905                           ; 3 bytes @ 0x2D
  4906                           
  4907                           
  4908                           ; 3 bytes @ 0x2D
  4909  004D                     	ds	3
  4910  0050                     eval_poly@d:	
  4911  0050                     ___ftsub@f1:	
  4912                           ; 2 bytes @ 0x30
  4913                           
  4914                           
  4915                           ; 3 bytes @ 0x30
  4916  0050                     	ds	2
  4917  0052                     eval_poly@n:	
  4918                           
  4919                           ; 2 bytes @ 0x32
  4920  0052                     	ds	2
  4921  0054                     eval_poly@res:	
  4922                           
  4923                           ; 3 bytes @ 0x34
  4924  0054                     	ds	3
  4925  0057                     ?_log:	
  4926  0057                     log@x:	
  4927                           ; 3 bytes @ 0x37
  4928                           
  4929                           
  4930                           ; 3 bytes @ 0x37
  4931  0057                     	ds	3
  4932  005A                     ??_log:	
  4933                           
  4934                           ; 1 bytes @ 0x3A
  4935  005A                     	ds	1
  4936  005B                     log@exponent:	
  4937                           
  4938                           ; 2 bytes @ 0x3B
  4939  005B                     	ds	2
  4940  005D                     ?_tempCalc:	
  4941  005D                     tempCalc@analogValue:	
  4942                           ; 3 bytes @ 0x3D
  4943                           
  4944                           
  4945                           ; 2 bytes @ 0x3D
  4946  005D                     	ds	3
  4947  0060                     tempCalc@R:	
  4948                           
  4949                           ; 3 bytes @ 0x40
  4950  0060                     	ds	3
  4951  0063                     _tempCalc$943:	
  4952                           
  4953                           ; 3 bytes @ 0x43
  4954  0063                     	ds	3
  4955  0066                     tempCalc@steinhart:	
  4956                           
  4957                           ; 3 bytes @ 0x46
  4958  0066                     	ds	3
  4959  0069                     ??_main:	
  4960                           
  4961                           ; 1 bytes @ 0x49
  4962  0069                     	ds	2
  4963                           
  4964                           	psect	maintext
  4965  05C3                     __pmaintext:	
  4966 ;;
  4967 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4968 ;;
  4969 ;; *************** function _main *****************
  4970 ;; Defined at:
  4971 ;;		line 11 in file "main.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;		None
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  analogs         6    6[BANK1 ] unsigned int [3]
  4976 ;;  displayTemp2    3    3[BANK1 ] float 
  4977 ;;  displayTemp     3    0[BANK1 ] float 
  4978 ;;  steinhart       3    0        float 
  4979 ;;  R               3    0        float 
  4980 ;;  dutyCycle       2   13[BANK1 ] unsigned int 
  4981 ;;  x               1   15[BANK1 ] unsigned char 
  4982 ;;  count           1   12[BANK1 ] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : B1F/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4993 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;      Totals:         0       2      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;Total ram usage:       18 bytes
  4997 ;; Hardware stack levels required when called:    5
  4998 ;; This function calls:
  4999 ;;		_LCD_Clear
  5000 ;;		_LCD_Set_Cursor
  5001 ;;		_LCD_Write_Char
  5002 ;;		_LCD_Write_Int
  5003 ;;		_LCD_Write_String
  5004 ;;		_PWM6_LoadDutyValue
  5005 ;;		_SYSTEM_Initialize
  5006 ;;		___fttol
  5007 ;;		_readAnalog
  5008 ;;		_tempCalc
  5009 ;; This function is called by:
  5010 ;;		Startup code after reset
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _main
  5016  05C3                     _main:	
  5017                           
  5018                           ;main.c: 13: SYSTEM_Initialize();
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5022  05C3  318D  2521  3185   	fcall	_SYSTEM_Initialize
  5023                           
  5024                           ;main.c: 15: uint16_t analogs[3] = {0};
  5025  05C6  30C4               	movlw	low main@F13657
  5026  05C7  0086               	movwf	6
  5027  05C8  3000               	movlw	high main@F13657
  5028  05C9  0087               	movwf	7
  5029  05CA  30D5               	movlw	low main@analogs
  5030  05CB  0084               	movwf	4
  5031  05CC  3000               	movlw	high main@analogs
  5032  05CD  0085               	movwf	5
  5033  05CE  3006               	movlw	6
  5034  05CF  0020               	movlb	0	; select bank0
  5035  05D0  00E9               	movwf	??_main
  5036  05D1                     u2890:	
  5037  05D1  0016               	moviw fsr1++
  5038  05D2  001A               	movwi fsr0++
  5039  05D3  0BE9               	decfsz	??_main,f
  5040  05D4  2DD1               	goto	u2890
  5041                           
  5042                           ;main.c: 17: float R, steinhart, displayTemp, displayTemp2;
  5043                           ;main.c: 19: char count = 11;
  5044  05D5  300B               	movlw	11
  5045  05D6  00E9               	movwf	??_main
  5046  05D7  0869               	movf	??_main,w
  5047  05D8  0021               	movlb	1	; select bank1
  5048  05D9  00DB               	movwf	main@count^(0+128)
  5049                           
  5050                           ;main.c: 21: char x = 0;
  5051  05DA  01DE               	clrf	main@x^(0+128)
  5052                           
  5053                           ;main.c: 23: uint16_t dutyCycle = 1023;
  5054  05DB  30FF               	movlw	255
  5055  05DC  00DC               	movwf	main@dutyCycle^(0+128)
  5056  05DD  3003               	movlw	3
  5057  05DE  00DD               	movwf	(main@dutyCycle^(0+128)+1)
  5058                           
  5059                           ;main.c: 25: PWM6_LoadDutyValue(dutyCycle);
  5060  05DF  085D               	movf	(main@dutyCycle+1)^(0+128),w
  5061  05E0  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5062  05E1  085C               	movf	main@dutyCycle^(0+128),w
  5063  05E2  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5064  05E3  318B  23CA  3185   	fcall	_PWM6_LoadDutyValue
  5065                           
  5066                           ;main.c: 27: _delay((unsigned long)((300)*(1000000/4000.0)));
  5067  05E6  3062               	movlw	98
  5068  05E7  0020               	movlb	0	; select bank0
  5069  05E8  00EA               	movwf	??_main+1
  5070  05E9  3065               	movlw	101
  5071  05EA  00E9               	movwf	??_main
  5072  05EB                     u2937:	
  5073  05EB  0BE9               	decfsz	??_main,f
  5074  05EC  2DEB               	goto	u2937
  5075  05ED  0BEA               	decfsz	??_main+1,f
  5076  05EE  2DEB               	goto	u2937
  5077  05EF  3200               	nop2
  5078                           
  5079                           ;main.c: 29: LCD_Clear();
  5080  05F0  318B  238C  3185   	fcall	_LCD_Clear
  5081                           
  5082                           ;main.c: 56: LCD_Clear();
  5083  05F3  318B  238C  3185   	fcall	_LCD_Clear
  5084  05F6                     l2535:	
  5085                           ;main.c: 59: while (1)
  5086                           
  5087                           
  5088                           ;main.c: 60: {
  5089                           ;main.c: 61: PWM6_LoadDutyValue(dutyCycle);
  5090  05F6  0021               	movlb	1	; select bank1
  5091  05F7  085D               	movf	(main@dutyCycle+1)^(0+128),w
  5092  05F8  00F1               	movwf	PWM6_LoadDutyValue@dutyCycle+1
  5093  05F9  085C               	movf	main@dutyCycle^(0+128),w
  5094  05FA  00F0               	movwf	PWM6_LoadDutyValue@dutyCycle
  5095  05FB  318B  23CA  3185   	fcall	_PWM6_LoadDutyValue
  5096                           
  5097                           ;main.c: 63: for(x=0;x<3;x++)
  5098  05FE  0021               	movlb	1	; select bank1
  5099  05FF  01DE               	clrf	main@x^(0+128)
  5100  0600  3003               	movlw	3
  5101  0601  025E               	subwf	main@x^(0+128),w
  5102  0602  1803               	btfsc	3,0
  5103  0603  2E22               	goto	l2549
  5104  0604                     l2543:	
  5105                           
  5106                           ;main.c: 64: {
  5107                           ;main.c: 65: analogs[x]=readAnalog(x);
  5108  0604  085E               	movf	main@x^(0+128),w
  5109  0605  0020               	movlb	0	; select bank0
  5110  0606  00E9               	movwf	??_main
  5111  0607  01EA               	clrf	??_main+1
  5112  0608  0869               	movf	??_main,w
  5113  0609  00A6               	movwf	readAnalog@channel
  5114  060A  086A               	movf	??_main+1,w
  5115  060B  00A7               	movwf	readAnalog@channel+1
  5116  060C  3184  24C4  3185   	fcall	_readAnalog
  5117  060F  0021               	movlb	1	; select bank1
  5118  0610  355E               	lslf	main@x^(0+128),w
  5119  0611  3ED5               	addlw	(low (main@analogs| 0))& (0+255)
  5120  0612  0086               	movwf	6
  5121  0613  0187               	clrf	7
  5122  0614  0020               	movlb	0	; select bank0
  5123  0615  0826               	movf	?_readAnalog,w
  5124  0616  3FC0               	movwi [0]fsr1
  5125  0617  0827               	movf	?_readAnalog+1,w
  5126  0618  3FC1               	movwi [1]fsr1
  5127  0619  3001               	movlw	1
  5128  061A  00E9               	movwf	??_main
  5129  061B  0869               	movf	??_main,w
  5130  061C  0021               	movlb	1	; select bank1
  5131  061D  07DE               	addwf	main@x^(0+128),f
  5132  061E  3003               	movlw	3
  5133  061F  025E               	subwf	main@x^(0+128),w
  5134  0620  1C03               	skipc
  5135  0621  2E04               	goto	l2543
  5136  0622                     l2549:	
  5137                           
  5138                           ;main.c: 66: }
  5139                           ;main.c: 68: if(count>10)
  5140  0622  300B               	movlw	11
  5141  0623  025B               	subwf	main@count^(0+128),w
  5142  0624  1C03               	skipc
  5143  0625  2E92               	goto	l2575
  5144                           
  5145                           ;main.c: 69: {
  5146                           ;main.c: 70: { LCD_Set_Cursor(0,0); LCD_Write_String("Solar In");};
  5147  0626  01F3               	clrf	LCD_Set_Cursor@y
  5148  0627  3000               	movlw	0
  5149  0628  318D  25CE  3185   	fcall	_LCD_Set_Cursor
  5150  062B  301B               	movlw	low (STR_1| (0+32768))
  5151  062C  00F5               	movwf	LCD_Write_String@a
  5152  062D  3090               	movlw	high (STR_1| (0+32768))
  5153  062E  00F6               	movwf	LCD_Write_String@a+1
  5154  062F  318C  2410  3185   	fcall	_LCD_Write_String
  5155                           
  5156                           ;main.c: 71: { LCD_Set_Cursor(9,0); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  5157  0632  01F3               	clrf	LCD_Set_Cursor@y
  5158  0633  3009               	movlw	9
  5159  0634  318D  25CE  3185   	fcall	_LCD_Set_Cursor
  5160  0637  0021               	movlb	1	; select bank1
  5161  0638  084F               	movf	main@displayTemp^(0+128),w
  5162  0639  00F0               	movwf	___fttol@f1
  5163  063A  0850               	movf	(main@displayTemp+1)^(0+128),w
  5164  063B  00F1               	movwf	___fttol@f1+1
  5165  063C  0851               	movf	(main@displayTemp+2)^(0+128),w
  5166  063D  00F2               	movwf	___fttol@f1+2
  5167  063E  3180  2073  3185   	fcall	___fttol
  5168  0641  0871               	movf	?___fttol+1,w
  5169  0642  0020               	movlb	0	; select bank0
  5170  0643  00A1               	movwf	LCD_Write_Int@value+1
  5171  0644  0870               	movf	?___fttol,w
  5172  0645  00A0               	movwf	LCD_Write_Int@value
  5173  0646  01A2               	clrf	LCD_Write_Int@fieldLength
  5174  0647  03A2               	decf	LCD_Write_Int@fieldLength,f
  5175  0648  01A3               	clrf	LCD_Write_Int@numPlaces
  5176  0649  0AA3               	incf	LCD_Write_Int@numPlaces,f
  5177  064A  01A4               	clrf	LCD_Write_Int@sign
  5178  064B  3183  2303  3185   	fcall	_LCD_Write_Int
  5179                           
  5180                           ;main.c: 72: LCD_Write_Char(0);
  5181  064E  3000               	movlw	0
  5182  064F  318C  24C3  3185   	fcall	_LCD_Write_Char
  5183                           
  5184                           ;main.c: 73: LCD_Write_Char('F');
  5185  0652  3046               	movlw	70
  5186  0653  318C  24C3  3185   	fcall	_LCD_Write_Char
  5187                           
  5188                           ;main.c: 74: LCD_Write_Char(' ');
  5189  0656  3020               	movlw	32
  5190  0657  318C  24C3  3185   	fcall	_LCD_Write_Char
  5191                           
  5192                           ;main.c: 78: { LCD_Set_Cursor(0,1); LCD_Write_String("Return");};
  5193  065A  01F3               	clrf	LCD_Set_Cursor@y
  5194  065B  0AF3               	incf	LCD_Set_Cursor@y,f
  5195  065C  3000               	movlw	0
  5196  065D  318D  25CE  3185   	fcall	_LCD_Set_Cursor
  5197  0660  3024               	movlw	low (STR_2| (0+32768))
  5198  0661  00F5               	movwf	LCD_Write_String@a
  5199  0662  3090               	movlw	high (STR_2| (0+32768))
  5200  0663  00F6               	movwf	LCD_Write_String@a+1
  5201  0664  318C  2410  3185   	fcall	_LCD_Write_String
  5202                           
  5203                           ;main.c: 79: { LCD_Set_Cursor(10,1); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  5204  0667  01F3               	clrf	LCD_Set_Cursor@y
  5205  0668  0AF3               	incf	LCD_Set_Cursor@y,f
  5206  0669  300A               	movlw	10
  5207  066A  318D  25CE  3185   	fcall	_LCD_Set_Cursor
  5208  066D  0021               	movlb	1	; select bank1
  5209  066E  0852               	movf	main@displayTemp2^(0+128),w
  5210  066F  00F0               	movwf	___fttol@f1
  5211  0670  0853               	movf	(main@displayTemp2+1)^(0+128),w
  5212  0671  00F1               	movwf	___fttol@f1+1
  5213  0672  0854               	movf	(main@displayTemp2+2)^(0+128),w
  5214  0673  00F2               	movwf	___fttol@f1+2
  5215  0674  3180  2073  3185   	fcall	___fttol
  5216  0677  0871               	movf	?___fttol+1,w
  5217  0678  0020               	movlb	0	; select bank0
  5218  0679  00A1               	movwf	LCD_Write_Int@value+1
  5219  067A  0870               	movf	?___fttol,w
  5220  067B  00A0               	movwf	LCD_Write_Int@value
  5221  067C  01A2               	clrf	LCD_Write_Int@fieldLength
  5222  067D  03A2               	decf	LCD_Write_Int@fieldLength,f
  5223  067E  01A3               	clrf	LCD_Write_Int@numPlaces
  5224  067F  0AA3               	incf	LCD_Write_Int@numPlaces,f
  5225  0680  01A4               	clrf	LCD_Write_Int@sign
  5226  0681  3183  2303  3185   	fcall	_LCD_Write_Int
  5227                           
  5228                           ;main.c: 80: LCD_Write_Char(0);
  5229  0684  3000               	movlw	0
  5230  0685  318C  24C3  3185   	fcall	_LCD_Write_Char
  5231                           
  5232                           ;main.c: 81: LCD_Write_Char('F');
  5233  0688  3046               	movlw	70
  5234  0689  318C  24C3  3185   	fcall	_LCD_Write_Char
  5235                           
  5236                           ;main.c: 82: LCD_Write_Char(' ');
  5237  068C  3020               	movlw	32
  5238  068D  318C  24C3  3185   	fcall	_LCD_Write_Char
  5239                           
  5240                           ;main.c: 83: count=0;
  5241  0690  0021               	movlb	1	; select bank1
  5242  0691  01DB               	clrf	main@count^(0+128)
  5243  0692                     l2575:	
  5244                           
  5245                           ;main.c: 84: }
  5246                           ;main.c: 88: displayTemp = tempCalc(analogs[1]);
  5247  0692  0858               	movf	((main@analogs+1)^(0+128)+2),w
  5248  0693  0020               	movlb	0	; select bank0
  5249  0694  00DE               	movwf	tempCalc@analogValue+1
  5250  0695  0021               	movlb	1	; select bank1
  5251  0696  0857               	movf	(main@analogs^(0+128)+2),w
  5252  0697  0020               	movlb	0	; select bank0
  5253  0698  00DD               	movwf	tempCalc@analogValue
  5254  0699  3186  26C5  3185   	fcall	_tempCalc
  5255  069C  0020               	movlb	0	; select bank0
  5256  069D  085D               	movf	?_tempCalc,w
  5257  069E  0021               	movlb	1	; select bank1
  5258  069F  00CF               	movwf	main@displayTemp^(0+128)
  5259  06A0  0020               	movlb	0	; select bank0
  5260  06A1  085E               	movf	?_tempCalc+1,w
  5261  06A2  0021               	movlb	1	; select bank1
  5262  06A3  00D0               	movwf	(main@displayTemp+1)^(0+128)
  5263  06A4  0020               	movlb	0	; select bank0
  5264  06A5  085F               	movf	?_tempCalc+2,w
  5265  06A6  0021               	movlb	1	; select bank1
  5266  06A7  00D1               	movwf	(main@displayTemp+2)^(0+128)
  5267                           
  5268                           ;main.c: 90: displayTemp2 = tempCalc(analogs[2]);
  5269  06A8  085A               	movf	((main@analogs+1)^(0+128)+4),w
  5270  06A9  0020               	movlb	0	; select bank0
  5271  06AA  00DE               	movwf	tempCalc@analogValue+1
  5272  06AB  0021               	movlb	1	; select bank1
  5273  06AC  0859               	movf	(main@analogs^(0+128)+4),w
  5274  06AD  0020               	movlb	0	; select bank0
  5275  06AE  00DD               	movwf	tempCalc@analogValue
  5276  06AF  3186  26C5  3185   	fcall	_tempCalc
  5277  06B2  0020               	movlb	0	; select bank0
  5278  06B3  085D               	movf	?_tempCalc,w
  5279  06B4  0021               	movlb	1	; select bank1
  5280  06B5  00D2               	movwf	main@displayTemp2^(0+128)
  5281  06B6  0020               	movlb	0	; select bank0
  5282  06B7  085E               	movf	?_tempCalc+1,w
  5283  06B8  0021               	movlb	1	; select bank1
  5284  06B9  00D3               	movwf	(main@displayTemp2+1)^(0+128)
  5285  06BA  0020               	movlb	0	; select bank0
  5286  06BB  085F               	movf	?_tempCalc+2,w
  5287  06BC  0021               	movlb	1	; select bank1
  5288  06BD  00D4               	movwf	(main@displayTemp2+2)^(0+128)
  5289                           
  5290                           ;main.c: 120: count+=1;
  5291  06BE  3001               	movlw	1
  5292  06BF  0020               	movlb	0	; select bank0
  5293  06C0  00E9               	movwf	??_main
  5294  06C1  0869               	movf	??_main,w
  5295  06C2  0021               	movlb	1	; select bank1
  5296  06C3  07DB               	addwf	main@count^(0+128),f
  5297  06C4  2DF6               	goto	l2535
  5298  06C5                     __end_of_main:	
  5299                           
  5300                           	psect	text1
  5301  06C5                     __ptext1:	
  5302 ;; *************** function _tempCalc *****************
  5303 ;; Defined at:
  5304 ;;		line 4 in file "tempCalc.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  analogValue     2   61[BANK0 ] int 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  steinhart       3   70[BANK0 ] float 
  5309 ;;  R               3   64[BANK0 ] float 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  3   61[BANK0 ] float 
  5312 ;; Registers used:
  5313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5319 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;Total ram usage:       12 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    4
  5326 ;; This function calls:
  5327 ;;		___awtoft
  5328 ;;		___ftadd
  5329 ;;		___ftdiv
  5330 ;;		___ftmul
  5331 ;;		___ftsub
  5332 ;;		_log
  5333 ;; This function is called by:
  5334 ;;		_main
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function _tempCalc
  5340  06C5                     _tempCalc:	
  5341                           
  5342                           ;tempCalc.c: 6: float R, steinhart;
  5343                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  5344                           
  5345                           ;incstack = 0
  5346                           ; Regs used in _tempCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5347  06C5  3000               	movlw	0
  5348  06C6  0020               	movlb	0	; select bank0
  5349  06C7  00C0               	movwf	___ftadd@f1
  5350  06C8  3080               	movlw	128
  5351  06C9  00C1               	movwf	___ftadd@f1+1
  5352  06CA  30BF               	movlw	191
  5353  06CB  00C2               	movwf	___ftadd@f1+2
  5354  06CC  085E               	movf	tempCalc@analogValue+1,w
  5355  06CD  00F9               	movwf	___awtoft@c+1
  5356  06CE  085D               	movf	tempCalc@analogValue,w
  5357  06CF  00F8               	movwf	___awtoft@c
  5358  06D0  318C  247D  3186   	fcall	___awtoft
  5359  06D3  0878               	movf	?___awtoft,w
  5360  06D4  0020               	movlb	0	; select bank0
  5361  06D5  00B0               	movwf	___ftdiv@f2
  5362  06D6  0879               	movf	?___awtoft+1,w
  5363  06D7  00B1               	movwf	___ftdiv@f2+1
  5364  06D8  087A               	movf	?___awtoft+2,w
  5365  06D9  00B2               	movwf	___ftdiv@f2+2
  5366  06DA  30C0               	movlw	192
  5367  06DB  00B3               	movwf	___ftdiv@f1
  5368  06DC  307F               	movlw	127
  5369  06DD  00B4               	movwf	___ftdiv@f1+1
  5370  06DE  3044               	movlw	68
  5371  06DF  00B5               	movwf	___ftdiv@f1+2
  5372  06E0  3180  20F9  3186   	fcall	___ftdiv
  5373  06E3  0020               	movlb	0	; select bank0
  5374  06E4  0830               	movf	?___ftdiv,w
  5375  06E5  00C3               	movwf	___ftadd@f2
  5376  06E6  0831               	movf	?___ftdiv+1,w
  5377  06E7  00C4               	movwf	___ftadd@f2+1
  5378  06E8  0832               	movf	?___ftdiv+2,w
  5379  06E9  00C5               	movwf	___ftadd@f2+2
  5380  06EA  3183  23CE  3186   	fcall	___ftadd
  5381  06ED  0020               	movlb	0	; select bank0
  5382  06EE  0840               	movf	?___ftadd,w
  5383  06EF  00E3               	movwf	_tempCalc$943
  5384  06F0  0841               	movf	?___ftadd+1,w
  5385  06F1  00E4               	movwf	_tempCalc$943+1
  5386  06F2  0842               	movf	?___ftadd+2,w
  5387  06F3  00E5               	movwf	_tempCalc$943+2
  5388                           
  5389                           ;tempCalc.c: 6: float R, steinhart;
  5390                           ;tempCalc.c: 8: R = 10020/(1023/(float)analogValue - 1);
  5391  06F4  0863               	movf	_tempCalc$943,w
  5392  06F5  00B0               	movwf	___ftdiv@f2
  5393  06F6  0864               	movf	_tempCalc$943+1,w
  5394  06F7  00B1               	movwf	___ftdiv@f2+1
  5395  06F8  0865               	movf	_tempCalc$943+2,w
  5396  06F9  00B2               	movwf	___ftdiv@f2+2
  5397  06FA  3090               	movlw	144
  5398  06FB  00B3               	movwf	___ftdiv@f1
  5399  06FC  301C               	movlw	28
  5400  06FD  00B4               	movwf	___ftdiv@f1+1
  5401  06FE  3046               	movlw	70
  5402  06FF  00B5               	movwf	___ftdiv@f1+2
  5403  0700  3180  20F9  3186   	fcall	___ftdiv
  5404  0703  0020               	movlb	0	; select bank0
  5405  0704  0830               	movf	?___ftdiv,w
  5406  0705  00E0               	movwf	tempCalc@R
  5407  0706  0831               	movf	?___ftdiv+1,w
  5408  0707  00E1               	movwf	tempCalc@R+1
  5409  0708  0832               	movf	?___ftdiv+2,w
  5410  0709  00E2               	movwf	tempCalc@R+2
  5411                           
  5412                           ;tempCalc.c: 10: steinhart = R /10061;
  5413  070A  3034               	movlw	52
  5414  070B  00B0               	movwf	___ftdiv@f2
  5415  070C  301D               	movlw	29
  5416  070D  00B1               	movwf	___ftdiv@f2+1
  5417  070E  3046               	movlw	70
  5418  070F  00B2               	movwf	___ftdiv@f2+2
  5419  0710  0860               	movf	tempCalc@R,w
  5420  0711  00B3               	movwf	___ftdiv@f1
  5421  0712  0861               	movf	tempCalc@R+1,w
  5422  0713  00B4               	movwf	___ftdiv@f1+1
  5423  0714  0862               	movf	tempCalc@R+2,w
  5424  0715  00B5               	movwf	___ftdiv@f1+2
  5425  0716  3180  20F9  3186   	fcall	___ftdiv
  5426  0719  0020               	movlb	0	; select bank0
  5427  071A  0830               	movf	?___ftdiv,w
  5428  071B  00E6               	movwf	tempCalc@steinhart
  5429  071C  0831               	movf	?___ftdiv+1,w
  5430  071D  00E7               	movwf	tempCalc@steinhart+1
  5431  071E  0832               	movf	?___ftdiv+2,w
  5432  071F  00E8               	movwf	tempCalc@steinhart+2
  5433                           
  5434                           ;tempCalc.c: 11: steinhart = log(steinhart);
  5435  0720  0866               	movf	tempCalc@steinhart,w
  5436  0721  00D7               	movwf	log@x
  5437  0722  0867               	movf	tempCalc@steinhart+1,w
  5438  0723  00D8               	movwf	log@x+1
  5439  0724  0868               	movf	tempCalc@steinhart+2,w
  5440  0725  00D9               	movwf	log@x+2
  5441  0726  3181  21A2  3186   	fcall	_log
  5442  0729  0020               	movlb	0	; select bank0
  5443  072A  0857               	movf	?_log,w
  5444  072B  00E6               	movwf	tempCalc@steinhart
  5445  072C  0858               	movf	?_log+1,w
  5446  072D  00E7               	movwf	tempCalc@steinhart+1
  5447  072E  0859               	movf	?_log+2,w
  5448  072F  00E8               	movwf	tempCalc@steinhart+2
  5449                           
  5450                           ;tempCalc.c: 12: steinhart /= 3995;
  5451  0730  30B0               	movlw	176
  5452  0731  00B0               	movwf	___ftdiv@f2
  5453  0732  3079               	movlw	121
  5454  0733  00B1               	movwf	___ftdiv@f2+1
  5455  0734  3045               	movlw	69
  5456  0735  00B2               	movwf	___ftdiv@f2+2
  5457  0736  0866               	movf	tempCalc@steinhart,w
  5458  0737  00B3               	movwf	___ftdiv@f1
  5459  0738  0867               	movf	tempCalc@steinhart+1,w
  5460  0739  00B4               	movwf	___ftdiv@f1+1
  5461  073A  0868               	movf	tempCalc@steinhart+2,w
  5462  073B  00B5               	movwf	___ftdiv@f1+2
  5463  073C  3180  20F9  3186   	fcall	___ftdiv
  5464  073F  0020               	movlb	0	; select bank0
  5465  0740  0830               	movf	?___ftdiv,w
  5466  0741  00E6               	movwf	tempCalc@steinhart
  5467  0742  0831               	movf	?___ftdiv+1,w
  5468  0743  00E7               	movwf	tempCalc@steinhart+1
  5469  0744  0832               	movf	?___ftdiv+2,w
  5470  0745  00E8               	movwf	tempCalc@steinhart+2
  5471                           
  5472                           ;tempCalc.c: 13: steinhart += 1.0 / (25 + 273.15);
  5473  0746  30CF               	movlw	207
  5474  0747  00C0               	movwf	___ftadd@f1
  5475  0748  305B               	movlw	91
  5476  0749  00C1               	movwf	___ftadd@f1+1
  5477  074A  303B               	movlw	59
  5478  074B  00C2               	movwf	___ftadd@f1+2
  5479  074C  0866               	movf	tempCalc@steinhart,w
  5480  074D  00C3               	movwf	___ftadd@f2
  5481  074E  0867               	movf	tempCalc@steinhart+1,w
  5482  074F  00C4               	movwf	___ftadd@f2+1
  5483  0750  0868               	movf	tempCalc@steinhart+2,w
  5484  0751  00C5               	movwf	___ftadd@f2+2
  5485  0752  3183  23CE  3186   	fcall	___ftadd
  5486  0755  0020               	movlb	0	; select bank0
  5487  0756  0840               	movf	?___ftadd,w
  5488  0757  00E6               	movwf	tempCalc@steinhart
  5489  0758  0841               	movf	?___ftadd+1,w
  5490  0759  00E7               	movwf	tempCalc@steinhart+1
  5491  075A  0842               	movf	?___ftadd+2,w
  5492  075B  00E8               	movwf	tempCalc@steinhart+2
  5493                           
  5494                           ;tempCalc.c: 14: steinhart = 1.0 / steinhart;
  5495  075C  0866               	movf	tempCalc@steinhart,w
  5496  075D  00B0               	movwf	___ftdiv@f2
  5497  075E  0867               	movf	tempCalc@steinhart+1,w
  5498  075F  00B1               	movwf	___ftdiv@f2+1
  5499  0760  0868               	movf	tempCalc@steinhart+2,w
  5500  0761  00B2               	movwf	___ftdiv@f2+2
  5501  0762  3000               	movlw	0
  5502  0763  00B3               	movwf	___ftdiv@f1
  5503  0764  3080               	movlw	128
  5504  0765  00B4               	movwf	___ftdiv@f1+1
  5505  0766  303F               	movlw	63
  5506  0767  00B5               	movwf	___ftdiv@f1+2
  5507  0768  3180  20F9  3186   	fcall	___ftdiv
  5508  076B  0020               	movlb	0	; select bank0
  5509  076C  0830               	movf	?___ftdiv,w
  5510  076D  00E6               	movwf	tempCalc@steinhart
  5511  076E  0831               	movf	?___ftdiv+1,w
  5512  076F  00E7               	movwf	tempCalc@steinhart+1
  5513  0770  0832               	movf	?___ftdiv+2,w
  5514  0771  00E8               	movwf	tempCalc@steinhart+2
  5515                           
  5516                           ;tempCalc.c: 15: steinhart -= 273.15;
  5517  0772  3093               	movlw	147
  5518  0773  00CD               	movwf	___ftsub@f2
  5519  0774  3088               	movlw	136
  5520  0775  00CE               	movwf	___ftsub@f2+1
  5521  0776  3043               	movlw	67
  5522  0777  00CF               	movwf	___ftsub@f2+2
  5523  0778  0866               	movf	tempCalc@steinhart,w
  5524  0779  00D0               	movwf	___ftsub@f1
  5525  077A  0867               	movf	tempCalc@steinhart+1,w
  5526  077B  00D1               	movwf	___ftsub@f1+1
  5527  077C  0868               	movf	tempCalc@steinhart+2,w
  5528  077D  00D2               	movwf	___ftsub@f1+2
  5529  077E  318C  245F  3186   	fcall	___ftsub
  5530  0781  0020               	movlb	0	; select bank0
  5531  0782  084D               	movf	?___ftsub,w
  5532  0783  00E6               	movwf	tempCalc@steinhart
  5533  0784  084E               	movf	?___ftsub+1,w
  5534  0785  00E7               	movwf	tempCalc@steinhart+1
  5535  0786  084F               	movf	?___ftsub+2,w
  5536  0787  00E8               	movwf	tempCalc@steinhart+2
  5537                           
  5538                           ;tempCalc.c: 17: steinhart*=10;
  5539  0788  3000               	movlw	0
  5540  0789  00A0               	movwf	___ftmul@f1
  5541  078A  3020               	movlw	32
  5542  078B  00A1               	movwf	___ftmul@f1+1
  5543  078C  3041               	movlw	65
  5544  078D  00A2               	movwf	___ftmul@f1+2
  5545  078E  0866               	movf	tempCalc@steinhart,w
  5546  078F  00A3               	movwf	___ftmul@f2
  5547  0790  0867               	movf	tempCalc@steinhart+1,w
  5548  0791  00A4               	movwf	___ftmul@f2+1
  5549  0792  0868               	movf	tempCalc@steinhart+2,w
  5550  0793  00A5               	movwf	___ftmul@f2+2
  5551  0794  3182  224F  3186   	fcall	___ftmul
  5552  0797  0020               	movlb	0	; select bank0
  5553  0798  0820               	movf	?___ftmul,w
  5554  0799  00E6               	movwf	tempCalc@steinhart
  5555  079A  0821               	movf	?___ftmul+1,w
  5556  079B  00E7               	movwf	tempCalc@steinhart+1
  5557  079C  0822               	movf	?___ftmul+2,w
  5558  079D  00E8               	movwf	tempCalc@steinhart+2
  5559                           
  5560                           ;tempCalc.c: 19: steinhart = steinhart*9/5+320;
  5561  079E  3000               	movlw	0
  5562  079F  00C0               	movwf	___ftadd@f1
  5563  07A0  30A0               	movlw	160
  5564  07A1  00C1               	movwf	___ftadd@f1+1
  5565  07A2  3043               	movlw	67
  5566  07A3  00C2               	movwf	___ftadd@f1+2
  5567  07A4  3000               	movlw	0
  5568  07A5  00B0               	movwf	___ftdiv@f2
  5569  07A6  30A0               	movlw	160
  5570  07A7  00B1               	movwf	___ftdiv@f2+1
  5571  07A8  3040               	movlw	64
  5572  07A9  00B2               	movwf	___ftdiv@f2+2
  5573  07AA  3000               	movlw	0
  5574  07AB  00A0               	movwf	___ftmul@f1
  5575  07AC  3010               	movlw	16
  5576  07AD  00A1               	movwf	___ftmul@f1+1
  5577  07AE  3041               	movlw	65
  5578  07AF  00A2               	movwf	___ftmul@f1+2
  5579  07B0  0866               	movf	tempCalc@steinhart,w
  5580  07B1  00A3               	movwf	___ftmul@f2
  5581  07B2  0867               	movf	tempCalc@steinhart+1,w
  5582  07B3  00A4               	movwf	___ftmul@f2+1
  5583  07B4  0868               	movf	tempCalc@steinhart+2,w
  5584  07B5  00A5               	movwf	___ftmul@f2+2
  5585  07B6  3182  224F  3186   	fcall	___ftmul
  5586  07B9  0020               	movlb	0	; select bank0
  5587  07BA  0820               	movf	?___ftmul,w
  5588  07BB  00B3               	movwf	___ftdiv@f1
  5589  07BC  0821               	movf	?___ftmul+1,w
  5590  07BD  00B4               	movwf	___ftdiv@f1+1
  5591  07BE  0822               	movf	?___ftmul+2,w
  5592  07BF  00B5               	movwf	___ftdiv@f1+2
  5593  07C0  3180  20F9  3186   	fcall	___ftdiv
  5594  07C3  0020               	movlb	0	; select bank0
  5595  07C4  0830               	movf	?___ftdiv,w
  5596  07C5  00C3               	movwf	___ftadd@f2
  5597  07C6  0831               	movf	?___ftdiv+1,w
  5598  07C7  00C4               	movwf	___ftadd@f2+1
  5599  07C8  0832               	movf	?___ftdiv+2,w
  5600  07C9  00C5               	movwf	___ftadd@f2+2
  5601  07CA  3183  23CE         	fcall	___ftadd
  5602  07CC  0020               	movlb	0	; select bank0
  5603  07CD  0840               	movf	?___ftadd,w
  5604  07CE  00E6               	movwf	tempCalc@steinhart
  5605  07CF  0841               	movf	?___ftadd+1,w
  5606  07D0  00E7               	movwf	tempCalc@steinhart+1
  5607  07D1  0842               	movf	?___ftadd+2,w
  5608  07D2  00E8               	movwf	tempCalc@steinhart+2
  5609                           
  5610                           ;tempCalc.c: 21: return steinhart;
  5611  07D3  0866               	movf	tempCalc@steinhart,w
  5612  07D4  00DD               	movwf	?_tempCalc
  5613  07D5  0867               	movf	tempCalc@steinhart+1,w
  5614  07D6  00DE               	movwf	?_tempCalc+1
  5615  07D7  0868               	movf	tempCalc@steinhart+2,w
  5616  07D8  00DF               	movwf	?_tempCalc+2
  5617  07D9  0008               	return
  5618  07DA                     __end_of_tempCalc:	
  5619                           
  5620                           	psect	text2
  5621  01A2                     __ptext2:	
  5622 ;; *************** function _log *****************
  5623 ;; Defined at:
  5624 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  x               3   55[BANK0 ] float 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  exponent        2   59[BANK0 ] int 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  3   55[BANK0 ] int 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5638 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;Total ram usage:        6 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    3
  5645 ;; This function calls:
  5646 ;;		___awtoft
  5647 ;;		___ftadd
  5648 ;;		___ftge
  5649 ;;		___ftmul
  5650 ;;		_eval_poly
  5651 ;;		_frexp
  5652 ;; This function is called by:
  5653 ;;		_tempCalc
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           
  5658                           ;psect for function _log
  5659  01A2                     _log:	
  5660                           
  5661                           ;incstack = 0
  5662                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5663  01A2  0020               	movlb	0	; select bank0
  5664  01A3  0857               	movf	log@x,w
  5665  01A4  00F0               	movwf	___ftge@ff1
  5666  01A5  0858               	movf	log@x+1,w
  5667  01A6  00F1               	movwf	___ftge@ff1+1
  5668  01A7  0859               	movf	log@x+2,w
  5669  01A8  00F2               	movwf	___ftge@ff1+2
  5670  01A9  3000               	movlw	0
  5671  01AA  00F3               	movwf	___ftge@ff2
  5672  01AB  3000               	movlw	0
  5673  01AC  00F4               	movwf	___ftge@ff2+1
  5674  01AD  3000               	movlw	0
  5675  01AE  00F5               	movwf	___ftge@ff2+2
  5676  01AF  318D  2558  3181   	fcall	___ftge
  5677  01B2  1803               	btfsc	3,0
  5678  01B3  29C0               	goto	l2143
  5679  01B4  3021               	movlw	33
  5680  01B5  0020               	movlb	0	; select bank0
  5681  01B6  00EB               	movwf	_errno
  5682  01B7  3000               	movlw	0
  5683  01B8  00EC               	movwf	_errno+1
  5684  01B9  3000               	movlw	0
  5685  01BA  00D7               	movwf	?_log
  5686  01BB  3000               	movlw	0
  5687  01BC  00D8               	movwf	?_log+1
  5688  01BD  3000               	movlw	0
  5689  01BE  00D9               	movwf	?_log+2
  5690  01BF  0008               	return
  5691  01C0                     l2143:	
  5692  01C0  0020               	movlb	0	; select bank0
  5693  01C1  0859               	movf	log@x+2,w
  5694  01C2  0458               	iorwf	log@x+1,w
  5695  01C3  0457               	iorwf	log@x,w
  5696  01C4  1D03               	skipz
  5697  01C5  29D1               	goto	l2149
  5698  01C6  3022               	movlw	34
  5699  01C7  00EB               	movwf	_errno
  5700  01C8  3000               	movlw	0
  5701  01C9  00EC               	movwf	_errno+1
  5702  01CA  3000               	movlw	0
  5703  01CB  00D7               	movwf	?_log
  5704  01CC  3000               	movlw	0
  5705  01CD  00D8               	movwf	?_log+1
  5706  01CE  3000               	movlw	0
  5707  01CF  00D9               	movwf	?_log+2
  5708  01D0  0008               	return
  5709  01D1                     l2149:	
  5710  01D1  3000               	movlw	0
  5711  01D2  00C0               	movwf	___ftadd@f1
  5712  01D3  3080               	movlw	128
  5713  01D4  00C1               	movwf	___ftadd@f1+1
  5714  01D5  30BF               	movlw	191
  5715  01D6  00C2               	movwf	___ftadd@f1+2
  5716  01D7  3000               	movlw	0
  5717  01D8  00A0               	movwf	___ftmul@f1
  5718  01D9  3000               	movlw	0
  5719  01DA  00A1               	movwf	___ftmul@f1+1
  5720  01DB  3040               	movlw	64
  5721  01DC  00A2               	movwf	___ftmul@f1+2
  5722  01DD  305B               	movlw	(low (log@exponent| 0))& (0+255)
  5723  01DE  00DA               	movwf	??_log
  5724  01DF  085A               	movf	??_log,w
  5725  01E0  00F3               	movwf	frexp@eptr
  5726  01E1  0857               	movf	log@x,w
  5727  01E2  00F0               	movwf	frexp@value
  5728  01E3  0858               	movf	log@x+1,w
  5729  01E4  00F1               	movwf	frexp@value+1
  5730  01E5  0859               	movf	log@x+2,w
  5731  01E6  00F2               	movwf	frexp@value+2
  5732  01E7  318D  2593  3181   	fcall	_frexp
  5733  01EA  0870               	movf	?_frexp,w
  5734  01EB  0020               	movlb	0	; select bank0
  5735  01EC  00A3               	movwf	___ftmul@f2
  5736  01ED  0871               	movf	?_frexp+1,w
  5737  01EE  00A4               	movwf	___ftmul@f2+1
  5738  01EF  0872               	movf	?_frexp+2,w
  5739  01F0  00A5               	movwf	___ftmul@f2+2
  5740  01F1  3182  224F  3181   	fcall	___ftmul
  5741  01F4  0020               	movlb	0	; select bank0
  5742  01F5  0820               	movf	?___ftmul,w
  5743  01F6  00C3               	movwf	___ftadd@f2
  5744  01F7  0821               	movf	?___ftmul+1,w
  5745  01F8  00C4               	movwf	___ftadd@f2+1
  5746  01F9  0822               	movf	?___ftmul+2,w
  5747  01FA  00C5               	movwf	___ftadd@f2+2
  5748  01FB  3183  23CE  3181   	fcall	___ftadd
  5749  01FE  0020               	movlb	0	; select bank0
  5750  01FF  0840               	movf	?___ftadd,w
  5751  0200  00D7               	movwf	log@x
  5752  0201  0841               	movf	?___ftadd+1,w
  5753  0202  00D8               	movwf	log@x+1
  5754  0203  0842               	movf	?___ftadd+2,w
  5755  0204  00D9               	movwf	log@x+2
  5756  0205  30FF               	movlw	255
  5757  0206  07DB               	addwf	log@exponent,f
  5758  0207  30FF               	movlw	255
  5759  0208  3DDC               	addwfc	log@exponent+1,f
  5760  0209  0857               	movf	log@x,w
  5761  020A  00CD               	movwf	eval_poly@x
  5762  020B  0858               	movf	log@x+1,w
  5763  020C  00CE               	movwf	eval_poly@x+1
  5764  020D  0859               	movf	log@x+2,w
  5765  020E  00CF               	movwf	eval_poly@x+2
  5766  020F  3000               	movlw	low (log@coeff| (0+32768))
  5767  0210  00D0               	movwf	eval_poly@d
  5768  0211  3090               	movlw	high (log@coeff| (0+32768))
  5769  0212  00D1               	movwf	eval_poly@d+1
  5770  0213  3008               	movlw	8
  5771  0214  00D2               	movwf	eval_poly@n
  5772  0215  3000               	movlw	0
  5773  0216  00D3               	movwf	eval_poly@n+1
  5774  0217  318E  26A3  3181   	fcall	_eval_poly
  5775  021A  0020               	movlb	0	; select bank0
  5776  021B  084D               	movf	?_eval_poly,w
  5777  021C  00D7               	movwf	log@x
  5778  021D  084E               	movf	?_eval_poly+1,w
  5779  021E  00D8               	movwf	log@x+1
  5780  021F  084F               	movf	?_eval_poly+2,w
  5781  0220  00D9               	movwf	log@x+2
  5782  0221  0857               	movf	log@x,w
  5783  0222  00C0               	movwf	___ftadd@f1
  5784  0223  0858               	movf	log@x+1,w
  5785  0224  00C1               	movwf	___ftadd@f1+1
  5786  0225  0859               	movf	log@x+2,w
  5787  0226  00C2               	movwf	___ftadd@f1+2
  5788  0227  3072               	movlw	114
  5789  0228  00A0               	movwf	___ftmul@f1
  5790  0229  3031               	movlw	49
  5791  022A  00A1               	movwf	___ftmul@f1+1
  5792  022B  303F               	movlw	63
  5793  022C  00A2               	movwf	___ftmul@f1+2
  5794  022D  085C               	movf	log@exponent+1,w
  5795  022E  00F9               	movwf	___awtoft@c+1
  5796  022F  085B               	movf	log@exponent,w
  5797  0230  00F8               	movwf	___awtoft@c
  5798  0231  318C  247D  3181   	fcall	___awtoft
  5799  0234  0878               	movf	?___awtoft,w
  5800  0235  0020               	movlb	0	; select bank0
  5801  0236  00A3               	movwf	___ftmul@f2
  5802  0237  0879               	movf	?___awtoft+1,w
  5803  0238  00A4               	movwf	___ftmul@f2+1
  5804  0239  087A               	movf	?___awtoft+2,w
  5805  023A  00A5               	movwf	___ftmul@f2+2
  5806  023B  3182  224F  3181   	fcall	___ftmul
  5807  023E  0020               	movlb	0	; select bank0
  5808  023F  0820               	movf	?___ftmul,w
  5809  0240  00C3               	movwf	___ftadd@f2
  5810  0241  0821               	movf	?___ftmul+1,w
  5811  0242  00C4               	movwf	___ftadd@f2+1
  5812  0243  0822               	movf	?___ftmul+2,w
  5813  0244  00C5               	movwf	___ftadd@f2+2
  5814  0245  3183  23CE         	fcall	___ftadd
  5815  0247  0020               	movlb	0	; select bank0
  5816  0248  0840               	movf	?___ftadd,w
  5817  0249  00D7               	movwf	?_log
  5818  024A  0841               	movf	?___ftadd+1,w
  5819  024B  00D8               	movwf	?_log+1
  5820  024C  0842               	movf	?___ftadd+2,w
  5821  024D  00D9               	movwf	?_log+2
  5822  024E  0008               	return
  5823  024F                     __end_of_log:	
  5824                           
  5825                           	psect	text3
  5826  0D93                     __ptext3:	
  5827 ;; *************** function _frexp *****************
  5828 ;; Defined at:
  5829 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  value           3    0[COMMON] int 
  5832 ;;  eptr            1    3[COMMON] PTR int 
  5833 ;;		 -> log@exponent(2), 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;		None
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  3    0[COMMON] PTR int 
  5838 ;; Registers used:
  5839 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;Total ram usage:        6 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_log
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _frexp
  5860  0D93                     _frexp:	
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5864  0D93  0872               	movf	frexp@value+2,w
  5865  0D94  0471               	iorwf	frexp@value+1,w
  5866  0D95  0470               	iorwf	frexp@value,w
  5867  0D96  1D03               	skipz
  5868  0D97  2DA5               	goto	l1949
  5869  0D98  0873               	movf	frexp@eptr,w
  5870  0D99  0086               	movwf	6
  5871  0D9A  0187               	clrf	7
  5872  0D9B  3000               	movlw	0
  5873  0D9C  3FC0               	movwi [0]fsr1
  5874  0D9D  3FC1               	movwi [1]fsr1
  5875  0D9E  3000               	movlw	0
  5876  0D9F  00F0               	movwf	?_frexp
  5877  0DA0  3000               	movlw	0
  5878  0DA1  00F1               	movwf	?_frexp+1
  5879  0DA2  3000               	movlw	0
  5880  0DA3  00F2               	movwf	?_frexp+2
  5881  0DA4  0008               	return
  5882  0DA5                     l1949:	
  5883  0DA5  0872               	movf	frexp@value+2,w
  5884  0DA6  397F               	andlw	127
  5885  0DA7  00F4               	movwf	??_frexp
  5886  0DA8  01F5               	clrf	??_frexp+1
  5887  0DA9  35F4               	lslf	??_frexp,f
  5888  0DAA  0DF5               	rlf	??_frexp+1,f
  5889  0DAB  0873               	movf	frexp@eptr,w
  5890  0DAC  0086               	movwf	6
  5891  0DAD  0187               	clrf	7
  5892  0DAE  0874               	movf	??_frexp,w
  5893  0DAF  3FC0               	movwi [0]fsr1
  5894  0DB0  0875               	movf	??_frexp+1,w
  5895  0DB1  3FC1               	movwi [1]fsr1
  5896  0DB2  0D71               	rlf	frexp@value+1,w
  5897  0DB3  0D71               	rlf	frexp@value+1,w
  5898  0DB4  3901               	andlw	1
  5899  0DB5  00F4               	movwf	??_frexp
  5900  0DB6  01F5               	clrf	??_frexp+1
  5901  0DB7  0873               	movf	frexp@eptr,w
  5902  0DB8  0086               	movwf	6
  5903  0DB9  0187               	clrf	7
  5904  0DBA  0874               	movf	??_frexp,w
  5905  0DBB  0481               	iorwf	1,f
  5906  0DBC  3141               	addfsr 1,1
  5907  0DBD  0875               	movf	??_frexp+1,w
  5908  0DBE  0481               	iorwf	1,f
  5909  0DBF  0873               	movf	frexp@eptr,w
  5910  0DC0  0086               	movwf	6
  5911  0DC1  0187               	clrf	7
  5912  0DC2  3082               	movlw	130
  5913  0DC3  0781               	addwf	1,f
  5914  0DC4  3141               	addfsr 1,1
  5915  0DC5  30FF               	movlw	255
  5916  0DC6  3D81               	addwfc	1,f
  5917  0DC7  317F               	addfsr 1,-1
  5918  0DC8  0872               	movf	frexp@value+2,w
  5919  0DC9  3980               	andlw	-128
  5920  0DCA  383F               	iorlw	63
  5921  0DCB  00F2               	movwf	frexp@value+2
  5922  0DCC  13F1               	bcf	frexp@value+1,7
  5923  0DCD  0008               	return
  5924  0DCE                     __end_of_frexp:	
  5925                           
  5926                           	psect	text4
  5927  0EA3                     __ptext4:	
  5928 ;; *************** function _eval_poly *****************
  5929 ;; Defined at:
  5930 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  x               3   45[BANK0 ] PTR int 
  5933 ;;  d               2   48[BANK0 ] PTR const 
  5934 ;;		 -> log@coeff(27), 
  5935 ;;  n               2   50[BANK0 ] int 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  res             3   52[BANK0 ] int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  3   45[BANK0 ] int 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5947 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5951 ;;Total ram usage:       10 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    2
  5954 ;; This function calls:
  5955 ;;		___ftadd
  5956 ;;		___ftmul
  5957 ;;		___wmul
  5958 ;; This function is called by:
  5959 ;;		_log
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           
  5964                           ;psect for function _eval_poly
  5965  0EA3                     _eval_poly:	
  5966                           
  5967                           ;incstack = 0
  5968                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5969  0EA3  0020               	movlb	0	; select bank0
  5970  0EA4  0853               	movf	eval_poly@n+1,w
  5971  0EA5  00F1               	movwf	___wmul@multiplier+1
  5972  0EA6  0852               	movf	eval_poly@n,w
  5973  0EA7  00F0               	movwf	___wmul@multiplier
  5974  0EA8  3003               	movlw	3
  5975  0EA9  00F2               	movwf	___wmul@multiplicand
  5976  0EAA  3000               	movlw	0
  5977  0EAB  00F3               	movwf	___wmul@multiplicand+1
  5978  0EAC  318C  2444  318E   	fcall	___wmul
  5979  0EAF  0020               	movlb	0	; select bank0
  5980  0EB0  0850               	movf	eval_poly@d,w
  5981  0EB1  0770               	addwf	?___wmul,w
  5982  0EB2  0084               	movwf	4
  5983  0EB3  0851               	movf	eval_poly@d+1,w
  5984  0EB4  3D71               	addwfc	?___wmul+1,w
  5985  0EB5  0085               	movwf	5
  5986  0EB6  3F00               	moviw [0]fsr0
  5987  0EB7  00D4               	movwf	eval_poly@res
  5988  0EB8  3F01               	moviw [1]fsr0
  5989  0EB9  00D5               	movwf	eval_poly@res+1
  5990  0EBA  3F02               	moviw [2]fsr0
  5991  0EBB                     L1:	
  5992  0EBB  00D6               	movwf	eval_poly@res+2
  5993  0EBC  0852               	movf	eval_poly@n,w
  5994  0EBD  0453               	iorwf	eval_poly@n+1,w
  5995  0EBE  1903               	btfsc	3,2
  5996  0EBF  2EFC               	goto	l1967
  5997  0EC0  30FF               	movlw	255
  5998  0EC1  07D2               	addwf	eval_poly@n,f
  5999  0EC2  30FF               	movlw	255
  6000  0EC3  3DD3               	addwfc	eval_poly@n+1,f
  6001  0EC4  0853               	movf	eval_poly@n+1,w
  6002  0EC5  00F1               	movwf	___wmul@multiplier+1
  6003  0EC6  0852               	movf	eval_poly@n,w
  6004  0EC7  00F0               	movwf	___wmul@multiplier
  6005  0EC8  3003               	movlw	3
  6006  0EC9  00F2               	movwf	___wmul@multiplicand
  6007  0ECA  3000               	movlw	0
  6008  0ECB  00F3               	movwf	___wmul@multiplicand+1
  6009  0ECC  318C  2444  318E   	fcall	___wmul
  6010  0ECF  0020               	movlb	0	; select bank0
  6011  0ED0  0850               	movf	eval_poly@d,w
  6012  0ED1  0770               	addwf	?___wmul,w
  6013  0ED2  0084               	movwf	4
  6014  0ED3  0851               	movf	eval_poly@d+1,w
  6015  0ED4  3D71               	addwfc	?___wmul+1,w
  6016  0ED5  0085               	movwf	5
  6017  0ED6  3F00               	moviw [0]fsr0
  6018  0ED7  00C0               	movwf	___ftadd@f1
  6019  0ED8  3F01               	moviw [1]fsr0
  6020  0ED9  00C1               	movwf	___ftadd@f1+1
  6021  0EDA  3F02               	moviw [2]fsr0
  6022  0EDB  00C2               	movwf	___ftadd@f1+2
  6023  0EDC  0854               	movf	eval_poly@res,w
  6024  0EDD  00A0               	movwf	___ftmul@f1
  6025  0EDE  0855               	movf	eval_poly@res+1,w
  6026  0EDF  00A1               	movwf	___ftmul@f1+1
  6027  0EE0  0856               	movf	eval_poly@res+2,w
  6028  0EE1  00A2               	movwf	___ftmul@f1+2
  6029  0EE2  084D               	movf	eval_poly@x,w
  6030  0EE3  00A3               	movwf	___ftmul@f2
  6031  0EE4  084E               	movf	eval_poly@x+1,w
  6032  0EE5  00A4               	movwf	___ftmul@f2+1
  6033  0EE6  084F               	movf	eval_poly@x+2,w
  6034  0EE7  00A5               	movwf	___ftmul@f2+2
  6035  0EE8  3182  224F  318E   	fcall	___ftmul
  6036  0EEB  0020               	movlb	0	; select bank0
  6037  0EEC  0820               	movf	?___ftmul,w
  6038  0EED  00C3               	movwf	___ftadd@f2
  6039  0EEE  0821               	movf	?___ftmul+1,w
  6040  0EEF  00C4               	movwf	___ftadd@f2+1
  6041  0EF0  0822               	movf	?___ftmul+2,w
  6042  0EF1  00C5               	movwf	___ftadd@f2+2
  6043  0EF2  3183  23CE  318E   	fcall	___ftadd
  6044  0EF5  0020               	movlb	0	; select bank0
  6045  0EF6  0840               	movf	?___ftadd,w
  6046  0EF7  00D4               	movwf	eval_poly@res
  6047  0EF8  0841               	movf	?___ftadd+1,w
  6048  0EF9  00D5               	movwf	eval_poly@res+1
  6049  0EFA  0842               	movf	?___ftadd+2,w
  6050  0EFB  2EBB               	goto	L1
  6051  0EFC                     l1967:	
  6052  0EFC  0854               	movf	eval_poly@res,w
  6053  0EFD  00CD               	movwf	?_eval_poly
  6054  0EFE  0855               	movf	eval_poly@res+1,w
  6055  0EFF  00CE               	movwf	?_eval_poly+1
  6056  0F00  0856               	movf	eval_poly@res+2,w
  6057  0F01  00CF               	movwf	?_eval_poly+2
  6058  0F02  0008               	return
  6059  0F03                     __end_of_eval_poly:	
  6060                           
  6061                           	psect	text5
  6062  0C44                     __ptext5:	
  6063 ;; *************** function ___wmul *****************
  6064 ;; Defined at:
  6065 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  multiplier      2    0[COMMON] unsigned int 
  6068 ;;  multiplicand    2    2[COMMON] unsigned int 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  product         2    4[COMMON] unsigned int 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  2    0[COMMON] unsigned int 
  6073 ;; Registers used:
  6074 ;;		wreg, status,2, status,0
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;Total ram usage:        6 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_eval_poly
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           
  6094                           ;psect for function ___wmul
  6095  0C44                     ___wmul:	
  6096                           
  6097                           ;incstack = 0
  6098                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6099  0C44  01F4               	clrf	___wmul@product
  6100  0C45  01F5               	clrf	___wmul@product+1
  6101  0C46                     l1747:	
  6102  0C46  1C70               	btfss	___wmul@multiplier,0
  6103  0C47  2C4C               	goto	l373
  6104  0C48  0872               	movf	___wmul@multiplicand,w
  6105  0C49  07F4               	addwf	___wmul@product,f
  6106  0C4A  0873               	movf	___wmul@multiplicand+1,w
  6107  0C4B  3DF5               	addwfc	___wmul@product+1,f
  6108  0C4C                     l373:	
  6109  0C4C  3001               	movlw	1
  6110  0C4D                     u1645:	
  6111  0C4D  35F2               	lslf	___wmul@multiplicand,f
  6112  0C4E  0DF3               	rlf	___wmul@multiplicand+1,f
  6113  0C4F  0B89               	decfsz	9,f
  6114  0C50  2C4D               	goto	u1645
  6115  0C51  3001               	movlw	1
  6116  0C52                     u1655:	
  6117  0C52  36F1               	lsrf	___wmul@multiplier+1,f
  6118  0C53  0CF0               	rrf	___wmul@multiplier,f
  6119  0C54  0B89               	decfsz	9,f
  6120  0C55  2C52               	goto	u1655
  6121  0C56  0870               	movf	___wmul@multiplier,w
  6122  0C57  0471               	iorwf	___wmul@multiplier+1,w
  6123  0C58  1D03               	btfss	3,2
  6124  0C59  2C46               	goto	l1747
  6125  0C5A  0875               	movf	___wmul@product+1,w
  6126  0C5B  00F1               	movwf	?___wmul+1
  6127  0C5C  0874               	movf	___wmul@product,w
  6128  0C5D  00F0               	movwf	?___wmul
  6129  0C5E  0008               	return
  6130  0C5F                     __end_of___wmul:	
  6131                           
  6132                           	psect	text6
  6133  024F                     __ptext6:	
  6134 ;; *************** function ___ftmul *****************
  6135 ;; Defined at:
  6136 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  f1              3    0[BANK0 ] float 
  6139 ;;  f2              3    3[BANK0 ] float 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  6142 ;;  sign            1   15[BANK0 ] unsigned char 
  6143 ;;  cntr            1   14[BANK0 ] unsigned char 
  6144 ;;  exp             1   10[BANK0 ] unsigned char 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  3    0[BANK0 ] float 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2, status,0, pclath, cstack
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6154 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;Total ram usage:       16 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    1
  6161 ;; This function calls:
  6162 ;;		___ftpack
  6163 ;; This function is called by:
  6164 ;;		_tempCalc
  6165 ;;		_log
  6166 ;;		_eval_poly
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function ___ftmul
  6172  024F                     ___ftmul:	
  6173                           
  6174                           ;incstack = 0
  6175                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6176  024F  0020               	movlb	0	; select bank0
  6177  0250  0820               	movf	___ftmul@f1,w
  6178  0251  00A6               	movwf	??___ftmul
  6179  0252  0821               	movf	___ftmul@f1+1,w
  6180  0253  00A7               	movwf	??___ftmul+1
  6181  0254  0822               	movf	___ftmul@f1+2,w
  6182  0255  00A8               	movwf	??___ftmul+2
  6183  0256  1003               	clrc
  6184  0257  0D27               	rlf	??___ftmul+1,w
  6185  0258  0D28               	rlf	??___ftmul+2,w
  6186  0259  00A9               	movwf	??___ftmul+3
  6187  025A  0829               	movf	??___ftmul+3,w
  6188  025B  00AA               	movwf	___ftmul@exp
  6189  025C  082A               	movf	___ftmul@exp,w
  6190  025D  1D03               	btfss	3,2
  6191  025E  2A66               	goto	l1835
  6192  025F  3000               	movlw	0
  6193  0260  00A0               	movwf	?___ftmul
  6194  0261  3000               	movlw	0
  6195  0262  00A1               	movwf	?___ftmul+1
  6196  0263  3000               	movlw	0
  6197  0264  00A2               	movwf	?___ftmul+2
  6198  0265  0008               	return
  6199  0266                     l1835:	
  6200  0266  0823               	movf	___ftmul@f2,w
  6201  0267  00A6               	movwf	??___ftmul
  6202  0268  0824               	movf	___ftmul@f2+1,w
  6203  0269  00A7               	movwf	??___ftmul+1
  6204  026A  0825               	movf	___ftmul@f2+2,w
  6205  026B  00A8               	movwf	??___ftmul+2
  6206  026C  1003               	clrc
  6207  026D  0D27               	rlf	??___ftmul+1,w
  6208  026E  0D28               	rlf	??___ftmul+2,w
  6209  026F  00A9               	movwf	??___ftmul+3
  6210  0270  0829               	movf	??___ftmul+3,w
  6211  0271  00AF               	movwf	___ftmul@sign
  6212  0272  082F               	movf	___ftmul@sign,w
  6213  0273  1D03               	btfss	3,2
  6214  0274  2A7C               	goto	l1841
  6215  0275  3000               	movlw	0
  6216  0276  00A0               	movwf	?___ftmul
  6217  0277  3000               	movlw	0
  6218  0278  00A1               	movwf	?___ftmul+1
  6219  0279  3000               	movlw	0
  6220  027A  00A2               	movwf	?___ftmul+2
  6221  027B  0008               	return
  6222  027C                     l1841:	
  6223  027C  082F               	movf	___ftmul@sign,w
  6224  027D  3E7B               	addlw	123
  6225  027E  00A6               	movwf	??___ftmul
  6226  027F  0826               	movf	??___ftmul,w
  6227  0280  07AA               	addwf	___ftmul@exp,f
  6228  0281  0820               	movf	___ftmul@f1,w
  6229  0282  00A6               	movwf	??___ftmul
  6230  0283  0821               	movf	___ftmul@f1+1,w
  6231  0284  00A7               	movwf	??___ftmul+1
  6232  0285  0822               	movf	___ftmul@f1+2,w
  6233  0286  00A8               	movwf	??___ftmul+2
  6234  0287  3010               	movlw	16
  6235  0288                     u1925:	
  6236  0288  36A8               	lsrf	??___ftmul+2,f
  6237  0289  0CA7               	rrf	??___ftmul+1,f
  6238  028A  0CA6               	rrf	??___ftmul,f
  6239  028B  0B89               	decfsz	9,f
  6240  028C  2A88               	goto	u1925
  6241  028D  0826               	movf	??___ftmul,w
  6242  028E  00A9               	movwf	??___ftmul+3
  6243  028F  0829               	movf	??___ftmul+3,w
  6244  0290  00AF               	movwf	___ftmul@sign
  6245  0291  0823               	movf	___ftmul@f2,w
  6246  0292  00A6               	movwf	??___ftmul
  6247  0293  0824               	movf	___ftmul@f2+1,w
  6248  0294  00A7               	movwf	??___ftmul+1
  6249  0295  0825               	movf	___ftmul@f2+2,w
  6250  0296  00A8               	movwf	??___ftmul+2
  6251  0297  3010               	movlw	16
  6252  0298                     u1935:	
  6253  0298  36A8               	lsrf	??___ftmul+2,f
  6254  0299  0CA7               	rrf	??___ftmul+1,f
  6255  029A  0CA6               	rrf	??___ftmul,f
  6256  029B  0B89               	decfsz	9,f
  6257  029C  2A98               	goto	u1935
  6258  029D  0826               	movf	??___ftmul,w
  6259  029E  00A9               	movwf	??___ftmul+3
  6260  029F  0829               	movf	??___ftmul+3,w
  6261  02A0  06AF               	xorwf	___ftmul@sign,f
  6262  02A1  3080               	movlw	128
  6263  02A2  00A6               	movwf	??___ftmul
  6264  02A3  0826               	movf	??___ftmul,w
  6265  02A4  05AF               	andwf	___ftmul@sign,f
  6266  02A5  17A1               	bsf	___ftmul@f1+1,7
  6267  02A6  17A4               	bsf	___ftmul@f2+1,7
  6268  02A7  30FF               	movlw	255
  6269  02A8  05A3               	andwf	___ftmul@f2,f
  6270  02A9  30FF               	movlw	255
  6271  02AA  05A4               	andwf	___ftmul@f2+1,f
  6272  02AB  3000               	movlw	0
  6273  02AC  05A5               	andwf	___ftmul@f2+2,f
  6274  02AD  3000               	movlw	0
  6275  02AE  00AB               	movwf	___ftmul@f3_as_product
  6276  02AF  3000               	movlw	0
  6277  02B0  00AC               	movwf	___ftmul@f3_as_product+1
  6278  02B1  3000               	movlw	0
  6279  02B2  00AD               	movwf	___ftmul@f3_as_product+2
  6280  02B3  3007               	movlw	7
  6281  02B4  00A6               	movwf	??___ftmul
  6282  02B5  0826               	movf	??___ftmul,w
  6283  02B6  00AE               	movwf	___ftmul@cntr
  6284  02B7                     l1853:	
  6285  02B7  1C20               	btfss	___ftmul@f1,0
  6286  02B8  2ABF               	goto	l1857
  6287  02B9  0823               	movf	___ftmul@f2,w
  6288  02BA  07AB               	addwf	___ftmul@f3_as_product,f
  6289  02BB  0824               	movf	___ftmul@f2+1,w
  6290  02BC  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6291  02BD  0825               	movf	___ftmul@f2+2,w
  6292  02BE  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6293  02BF                     l1857:	
  6294  02BF  3001               	movlw	1
  6295  02C0                     u1955:	
  6296  02C0  36A2               	lsrf	___ftmul@f1+2,f
  6297  02C1  0CA1               	rrf	___ftmul@f1+1,f
  6298  02C2  0CA0               	rrf	___ftmul@f1,f
  6299  02C3  0B89               	decfsz	9,f
  6300  02C4  2AC0               	goto	u1955
  6301  02C5  3001               	movlw	1
  6302  02C6                     u1965:	
  6303  02C6  35A3               	lslf	___ftmul@f2,f
  6304  02C7  0DA4               	rlf	___ftmul@f2+1,f
  6305  02C8  0DA5               	rlf	___ftmul@f2+2,f
  6306  02C9  0B89               	decfsz	9,f
  6307  02CA  2AC6               	goto	u1965
  6308  02CB  3001               	movlw	1
  6309  02CC  02AE               	subwf	___ftmul@cntr,f
  6310  02CD  1D03               	btfss	3,2
  6311  02CE  2AB7               	goto	l1853
  6312  02CF  3009               	movlw	9
  6313  02D0  00A6               	movwf	??___ftmul
  6314  02D1  0826               	movf	??___ftmul,w
  6315  02D2  00AE               	movwf	___ftmul@cntr
  6316  02D3                     l1865:	
  6317  02D3  1C20               	btfss	___ftmul@f1,0
  6318  02D4  2ADB               	goto	l1869
  6319  02D5  0823               	movf	___ftmul@f2,w
  6320  02D6  07AB               	addwf	___ftmul@f3_as_product,f
  6321  02D7  0824               	movf	___ftmul@f2+1,w
  6322  02D8  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6323  02D9  0825               	movf	___ftmul@f2+2,w
  6324  02DA  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6325  02DB                     l1869:	
  6326  02DB  3001               	movlw	1
  6327  02DC                     u1995:	
  6328  02DC  36A2               	lsrf	___ftmul@f1+2,f
  6329  02DD  0CA1               	rrf	___ftmul@f1+1,f
  6330  02DE  0CA0               	rrf	___ftmul@f1,f
  6331  02DF  0B89               	decfsz	9,f
  6332  02E0  2ADC               	goto	u1995
  6333  02E1  3001               	movlw	1
  6334  02E2                     u2005:	
  6335  02E2  36AD               	lsrf	___ftmul@f3_as_product+2,f
  6336  02E3  0CAC               	rrf	___ftmul@f3_as_product+1,f
  6337  02E4  0CAB               	rrf	___ftmul@f3_as_product,f
  6338  02E5  0B89               	decfsz	9,f
  6339  02E6  2AE2               	goto	u2005
  6340  02E7  3001               	movlw	1
  6341  02E8  02AE               	subwf	___ftmul@cntr,f
  6342  02E9  1D03               	btfss	3,2
  6343  02EA  2AD3               	goto	l1865
  6344  02EB  082B               	movf	___ftmul@f3_as_product,w
  6345  02EC  00F0               	movwf	___ftpack@arg
  6346  02ED  082C               	movf	___ftmul@f3_as_product+1,w
  6347  02EE  00F1               	movwf	___ftpack@arg+1
  6348  02EF  082D               	movf	___ftmul@f3_as_product+2,w
  6349  02F0  00F2               	movwf	___ftpack@arg+2
  6350  02F1  082A               	movf	___ftmul@exp,w
  6351  02F2  00A6               	movwf	??___ftmul
  6352  02F3  0826               	movf	??___ftmul,w
  6353  02F4  00F3               	movwf	___ftpack@exp
  6354  02F5  082F               	movf	___ftmul@sign,w
  6355  02F6  00A7               	movwf	??___ftmul+1
  6356  02F7  0827               	movf	??___ftmul+1,w
  6357  02F8  00F4               	movwf	___ftpack@sign
  6358  02F9  3180  200F         	fcall	___ftpack
  6359  02FB  0870               	movf	?___ftpack,w
  6360  02FC  0020               	movlb	0	; select bank0
  6361  02FD  00A0               	movwf	?___ftmul
  6362  02FE  0871               	movf	?___ftpack+1,w
  6363  02FF  00A1               	movwf	?___ftmul+1
  6364  0300  0872               	movf	?___ftpack+2,w
  6365  0301  00A2               	movwf	?___ftmul+2
  6366  0302  0008               	return
  6367  0303                     __end_of___ftmul:	
  6368                           
  6369                           	psect	text7
  6370  0D58                     __ptext7:	
  6371 ;; *************** function ___ftge *****************
  6372 ;; Defined at:
  6373 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  ff1             3    0[COMMON] float 
  6376 ;;  ff2             3    3[COMMON] float 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;		None
  6379 ;; Return value:  Size  Location     Type
  6380 ;;		None               void
  6381 ;; Registers used:
  6382 ;;		wreg, status,2, status,0
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6388 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6390 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6391 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;Total ram usage:        9 bytes
  6393 ;; Hardware stack levels used:    1
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_log
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           
  6402                           ;psect for function ___ftge
  6403  0D58                     ___ftge:	
  6404                           
  6405                           ;incstack = 0
  6406                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6407  0D58  1FF2               	btfss	___ftge@ff1+2,7
  6408  0D59  2D6E               	goto	l1925
  6409  0D5A  0970               	comf	___ftge@ff1,w
  6410  0D5B  00F6               	movwf	??___ftge
  6411  0D5C  0971               	comf	___ftge@ff1+1,w
  6412  0D5D  00F7               	movwf	??___ftge+1
  6413  0D5E  0972               	comf	___ftge@ff1+2,w
  6414  0D5F  00F8               	movwf	??___ftge+2
  6415  0D60  0AF6               	incf	??___ftge,f
  6416  0D61  1903               	skipnz
  6417  0D62  0AF7               	incf	??___ftge+1,f
  6418  0D63  1903               	skipnz
  6419  0D64  0AF8               	incf	??___ftge+2,f
  6420  0D65  3000               	movlw	0
  6421  0D66  0776               	addwf	??___ftge,w
  6422  0D67  00F0               	movwf	___ftge@ff1
  6423  0D68  3000               	movlw	0
  6424  0D69  3D77               	addwfc	??___ftge+1,w
  6425  0D6A  00F1               	movwf	___ftge@ff1+1
  6426  0D6B  3080               	movlw	128
  6427  0D6C  3D78               	addwfc	??___ftge+2,w
  6428  0D6D  00F2               	movwf	___ftge@ff1+2
  6429  0D6E                     l1925:	
  6430  0D6E  1FF5               	btfss	___ftge@ff2+2,7
  6431  0D6F  2D84               	goto	l1929
  6432  0D70  0973               	comf	___ftge@ff2,w
  6433  0D71  00F6               	movwf	??___ftge
  6434  0D72  0974               	comf	___ftge@ff2+1,w
  6435  0D73  00F7               	movwf	??___ftge+1
  6436  0D74  0975               	comf	___ftge@ff2+2,w
  6437  0D75  00F8               	movwf	??___ftge+2
  6438  0D76  0AF6               	incf	??___ftge,f
  6439  0D77  1903               	skipnz
  6440  0D78  0AF7               	incf	??___ftge+1,f
  6441  0D79  1903               	skipnz
  6442  0D7A  0AF8               	incf	??___ftge+2,f
  6443  0D7B  3000               	movlw	0
  6444  0D7C  0776               	addwf	??___ftge,w
  6445  0D7D  00F3               	movwf	___ftge@ff2
  6446  0D7E  3000               	movlw	0
  6447  0D7F  3D77               	addwfc	??___ftge+1,w
  6448  0D80  00F4               	movwf	___ftge@ff2+1
  6449  0D81  3080               	movlw	128
  6450  0D82  3D78               	addwfc	??___ftge+2,w
  6451  0D83  00F5               	movwf	___ftge@ff2+2
  6452  0D84                     l1929:	
  6453  0D84  3080               	movlw	128
  6454  0D85  06F2               	xorwf	___ftge@ff1+2,f
  6455  0D86  3080               	movlw	128
  6456  0D87  06F5               	xorwf	___ftge@ff2+2,f
  6457  0D88  0875               	movf	___ftge@ff2+2,w
  6458  0D89  0272               	subwf	___ftge@ff1+2,w
  6459  0D8A  1D03               	skipz
  6460  0D8B  0008               	return
  6461  0D8C  0874               	movf	___ftge@ff2+1,w
  6462  0D8D  0271               	subwf	___ftge@ff1+1,w
  6463  0D8E  1D03               	skipz
  6464  0D8F  0008               	return
  6465  0D90  0873               	movf	___ftge@ff2,w
  6466  0D91  0270               	subwf	___ftge@ff1,w
  6467  0D92  0008               	return
  6468  0D93                     __end_of___ftge:	
  6469                           
  6470                           	psect	text8
  6471  0C7D                     __ptext8:	
  6472 ;; *************** function ___awtoft *****************
  6473 ;; Defined at:
  6474 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  c               2    8[COMMON] int 
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  sign            1   13[COMMON] unsigned char 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  3    8[COMMON] float 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0, pclath, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6488 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;Total ram usage:        6 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    1
  6495 ;; This function calls:
  6496 ;;		___ftpack
  6497 ;; This function is called by:
  6498 ;;		_tempCalc
  6499 ;;		_log
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function ___awtoft
  6505  0C7D                     ___awtoft:	
  6506                           
  6507                           ;incstack = 0
  6508                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6509  0C7D  01FD               	clrf	___awtoft@sign
  6510  0C7E  1FF9               	btfss	___awtoft@c+1,7
  6511  0C7F  2C87               	goto	l1917
  6512  0C80  09F8               	comf	___awtoft@c,f
  6513  0C81  09F9               	comf	___awtoft@c+1,f
  6514  0C82  0AF8               	incf	___awtoft@c,f
  6515  0C83  1903               	skipnz
  6516  0C84  0AF9               	incf	___awtoft@c+1,f
  6517  0C85  01FD               	clrf	___awtoft@sign
  6518  0C86  0AFD               	incf	___awtoft@sign,f
  6519  0C87                     l1917:	
  6520  0C87  0878               	movf	___awtoft@c,w
  6521  0C88  00F0               	movwf	___ftpack@arg
  6522  0C89  0879               	movf	___awtoft@c+1,w
  6523  0C8A  00F1               	movwf	___ftpack@arg+1
  6524  0C8B  01F2               	clrf	___ftpack@arg+2
  6525  0C8C  308E               	movlw	142
  6526  0C8D  00FB               	movwf	??___awtoft
  6527  0C8E  087B               	movf	??___awtoft,w
  6528  0C8F  00F3               	movwf	___ftpack@exp
  6529  0C90  087D               	movf	___awtoft@sign,w
  6530  0C91  00FC               	movwf	??___awtoft+1
  6531  0C92  087C               	movf	??___awtoft+1,w
  6532  0C93  00F4               	movwf	___ftpack@sign
  6533  0C94  3180  200F         	fcall	___ftpack
  6534  0C96  0870               	movf	?___ftpack,w
  6535  0C97  00F8               	movwf	?___awtoft
  6536  0C98  0871               	movf	?___ftpack+1,w
  6537  0C99  00F9               	movwf	?___awtoft+1
  6538  0C9A  0872               	movf	?___ftpack+2,w
  6539  0C9B  00FA               	movwf	?___awtoft+2
  6540  0C9C  0008               	return
  6541  0C9D                     __end_of___awtoft:	
  6542                           
  6543                           	psect	text9
  6544  0C5F                     __ptext9:	
  6545 ;; *************** function ___ftsub *****************
  6546 ;; Defined at:
  6547 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;  f2              3   45[BANK0 ] float 
  6550 ;;  f1              3   48[BANK0 ] float 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;		None
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  3   45[BANK0 ] float 
  6555 ;; Registers used:
  6556 ;;		wreg, status,2, status,0, pclath, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6562 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;Total ram usage:        6 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    2
  6569 ;; This function calls:
  6570 ;;		___ftadd
  6571 ;; This function is called by:
  6572 ;;		_tempCalc
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           
  6577                           ;psect for function ___ftsub
  6578  0C5F                     ___ftsub:	
  6579                           
  6580                           ;incstack = 0
  6581                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6582  0C5F  0020               	movlb	0	; select bank0
  6583  0C60  084F               	movf	___ftsub@f2+2,w
  6584  0C61  044E               	iorwf	___ftsub@f2+1,w
  6585  0C62  044D               	iorwf	___ftsub@f2,w
  6586  0C63  1903               	skipnz
  6587  0C64  2C67               	goto	l2327
  6588  0C65  3080               	movlw	128
  6589  0C66  06CF               	xorwf	___ftsub@f2+2,f
  6590  0C67                     l2327:	
  6591  0C67  0850               	movf	___ftsub@f1,w
  6592  0C68  00C0               	movwf	___ftadd@f1
  6593  0C69  0851               	movf	___ftsub@f1+1,w
  6594  0C6A  00C1               	movwf	___ftadd@f1+1
  6595  0C6B  0852               	movf	___ftsub@f1+2,w
  6596  0C6C  00C2               	movwf	___ftadd@f1+2
  6597  0C6D  084D               	movf	___ftsub@f2,w
  6598  0C6E  00C3               	movwf	___ftadd@f2
  6599  0C6F  084E               	movf	___ftsub@f2+1,w
  6600  0C70  00C4               	movwf	___ftadd@f2+1
  6601  0C71  084F               	movf	___ftsub@f2+2,w
  6602  0C72  00C5               	movwf	___ftadd@f2+2
  6603  0C73  3183  23CE         	fcall	___ftadd
  6604  0C75  0020               	movlb	0	; select bank0
  6605  0C76  0840               	movf	?___ftadd,w
  6606  0C77  00CD               	movwf	?___ftsub
  6607  0C78  0841               	movf	?___ftadd+1,w
  6608  0C79  00CE               	movwf	?___ftsub+1
  6609  0C7A  0842               	movf	?___ftadd+2,w
  6610  0C7B  00CF               	movwf	?___ftsub+2
  6611  0C7C  0008               	return
  6612  0C7D                     __end_of___ftsub:	
  6613                           
  6614                           	psect	text10
  6615  03CE                     __ptext10:	
  6616 ;; *************** function ___ftadd *****************
  6617 ;; Defined at:
  6618 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  f1              3   32[BANK0 ] float 
  6621 ;;  f2              3   35[BANK0 ] float 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  exp1            1   44[BANK0 ] unsigned char 
  6624 ;;  exp2            1   43[BANK0 ] unsigned char 
  6625 ;;  sign            1   42[BANK0 ] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  3   32[BANK0 ] float 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0, pclath, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6635 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;Total ram usage:       13 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    1
  6642 ;; This function calls:
  6643 ;;		___ftpack
  6644 ;; This function is called by:
  6645 ;;		_tempCalc
  6646 ;;		___ftsub
  6647 ;;		_log
  6648 ;;		_eval_poly
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           
  6653                           ;psect for function ___ftadd
  6654  03CE                     ___ftadd:	
  6655                           
  6656                           ;incstack = 0
  6657                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6658  03CE  0020               	movlb	0	; select bank0
  6659  03CF  0840               	movf	___ftadd@f1,w
  6660  03D0  00C6               	movwf	??___ftadd
  6661  03D1  0841               	movf	___ftadd@f1+1,w
  6662  03D2  00C7               	movwf	??___ftadd+1
  6663  03D3  0842               	movf	___ftadd@f1+2,w
  6664  03D4  00C8               	movwf	??___ftadd+2
  6665  03D5  1003               	clrc
  6666  03D6  0D47               	rlf	??___ftadd+1,w
  6667  03D7  0D48               	rlf	??___ftadd+2,w
  6668  03D8  00C9               	movwf	??___ftadd+3
  6669  03D9  0849               	movf	??___ftadd+3,w
  6670  03DA  00CC               	movwf	___ftadd@exp1
  6671  03DB  0843               	movf	___ftadd@f2,w
  6672  03DC  00C6               	movwf	??___ftadd
  6673  03DD  0844               	movf	___ftadd@f2+1,w
  6674  03DE  00C7               	movwf	??___ftadd+1
  6675  03DF  0845               	movf	___ftadd@f2+2,w
  6676  03E0  00C8               	movwf	??___ftadd+2
  6677  03E1  1003               	clrc
  6678  03E2  0D47               	rlf	??___ftadd+1,w
  6679  03E3  0D48               	rlf	??___ftadd+2,w
  6680  03E4  00C9               	movwf	??___ftadd+3
  6681  03E5  0849               	movf	??___ftadd+3,w
  6682  03E6  00CB               	movwf	___ftadd@exp2
  6683  03E7  084C               	movf	___ftadd@exp1,w
  6684  03E8  1903               	btfsc	3,2
  6685  03E9  2BF6               	goto	l1765
  6686  03EA  084B               	movf	___ftadd@exp2,w
  6687  03EB  024C               	subwf	___ftadd@exp1,w
  6688  03EC  1803               	skipnc
  6689  03ED  2BFD               	goto	l1769
  6690  03EE  034C               	decf	___ftadd@exp1,w
  6691  03EF  3AFF               	xorlw	255
  6692  03F0  074B               	addwf	___ftadd@exp2,w
  6693  03F1  00C6               	movwf	??___ftadd
  6694  03F2  3019               	movlw	25
  6695  03F3  0246               	subwf	??___ftadd,w
  6696  03F4  1C03               	skipc
  6697  03F5  2BFD               	goto	l1769
  6698  03F6                     l1765:	
  6699  03F6  0843               	movf	___ftadd@f2,w
  6700  03F7  00C0               	movwf	?___ftadd
  6701  03F8  0844               	movf	___ftadd@f2+1,w
  6702  03F9  00C1               	movwf	?___ftadd+1
  6703  03FA  0845               	movf	___ftadd@f2+2,w
  6704  03FB  00C2               	movwf	?___ftadd+2
  6705  03FC  0008               	return
  6706  03FD                     l1769:	
  6707  03FD  084B               	movf	___ftadd@exp2,w
  6708  03FE  1903               	btfsc	3,2
  6709  03FF  0008               	return
  6710  0400  084C               	movf	___ftadd@exp1,w
  6711  0401  024B               	subwf	___ftadd@exp2,w
  6712  0402  1803               	skipnc
  6713  0403  2C0C               	goto	l1775
  6714  0404  034B               	decf	___ftadd@exp2,w
  6715  0405  3AFF               	xorlw	255
  6716  0406  074C               	addwf	___ftadd@exp1,w
  6717  0407  00C6               	movwf	??___ftadd
  6718  0408  3019               	movlw	25
  6719  0409  0246               	subwf	??___ftadd,w
  6720  040A  1803               	btfsc	3,0
  6721  040B  0008               	return
  6722  040C                     l1775:	
  6723  040C  3006               	movlw	6
  6724  040D  00C6               	movwf	??___ftadd
  6725  040E  0846               	movf	??___ftadd,w
  6726  040F  00CA               	movwf	___ftadd@sign
  6727  0410  1BC2               	btfsc	___ftadd@f1+2,7
  6728  0411  17CA               	bsf	___ftadd@sign,7
  6729  0412  1BC5               	btfsc	___ftadd@f2+2,7
  6730  0413  174A               	bsf	___ftadd@sign,6
  6731  0414  17C1               	bsf	___ftadd@f1+1,7
  6732  0415  30FF               	movlw	255
  6733  0416  05C0               	andwf	___ftadd@f1,f
  6734  0417  30FF               	movlw	255
  6735  0418  05C1               	andwf	___ftadd@f1+1,f
  6736  0419  3000               	movlw	0
  6737  041A  05C2               	andwf	___ftadd@f1+2,f
  6738  041B  17C4               	bsf	___ftadd@f2+1,7
  6739  041C  30FF               	movlw	255
  6740  041D  05C3               	andwf	___ftadd@f2,f
  6741  041E  30FF               	movlw	255
  6742  041F  05C4               	andwf	___ftadd@f2+1,f
  6743  0420  3000               	movlw	0
  6744  0421  05C5               	andwf	___ftadd@f2+2,f
  6745  0422  084B               	movf	___ftadd@exp2,w
  6746  0423  024C               	subwf	___ftadd@exp1,w
  6747  0424  1803               	skipnc
  6748  0425  2C48               	goto	l1797
  6749  0426                     l1787:	
  6750  0426  3001               	movlw	1
  6751  0427                     u1765:	
  6752  0427  35C3               	lslf	___ftadd@f2,f
  6753  0428  0DC4               	rlf	___ftadd@f2+1,f
  6754  0429  0DC5               	rlf	___ftadd@f2+2,f
  6755  042A  0B89               	decfsz	9,f
  6756  042B  2C27               	goto	u1765
  6757  042C  3001               	movlw	1
  6758  042D  02CB               	subwf	___ftadd@exp2,f
  6759  042E  084B               	movf	___ftadd@exp2,w
  6760  042F  064C               	xorwf	___ftadd@exp1,w
  6761  0430  1903               	skipnz
  6762  0431  2C43               	goto	l1795
  6763  0432  3001               	movlw	1
  6764  0433  02CA               	subwf	___ftadd@sign,f
  6765  0434  084A               	movf	___ftadd@sign,w
  6766  0435  3907               	andlw	7
  6767  0436  1903               	btfsc	3,2
  6768  0437  2C43               	goto	l1795
  6769  0438  2C26               	goto	l1787
  6770  0439                     l1793:	
  6771  0439  3001               	movlw	1
  6772  043A                     u1795:	
  6773  043A  36C2               	lsrf	___ftadd@f1+2,f
  6774  043B  0CC1               	rrf	___ftadd@f1+1,f
  6775  043C  0CC0               	rrf	___ftadd@f1,f
  6776  043D  0B89               	decfsz	9,f
  6777  043E  2C3A               	goto	u1795
  6778  043F  3001               	movlw	1
  6779  0440  00C6               	movwf	??___ftadd
  6780  0441  0846               	movf	??___ftadd,w
  6781  0442  07CC               	addwf	___ftadd@exp1,f
  6782  0443                     l1795:	
  6783  0443  084C               	movf	___ftadd@exp1,w
  6784  0444  064B               	xorwf	___ftadd@exp2,w
  6785  0445  1903               	btfsc	3,2
  6786  0446  2C6D               	goto	l565
  6787  0447  2C39               	goto	l1793
  6788  0448                     l1797:	
  6789  0448  084C               	movf	___ftadd@exp1,w
  6790  0449  024B               	subwf	___ftadd@exp2,w
  6791  044A  1803               	skipnc
  6792  044B  2C6D               	goto	l565
  6793  044C                     l1799:	
  6794  044C  3001               	movlw	1
  6795  044D                     u1825:	
  6796  044D  35C0               	lslf	___ftadd@f1,f
  6797  044E  0DC1               	rlf	___ftadd@f1+1,f
  6798  044F  0DC2               	rlf	___ftadd@f1+2,f
  6799  0450  0B89               	decfsz	9,f
  6800  0451  2C4D               	goto	u1825
  6801  0452  3001               	movlw	1
  6802  0453  02CC               	subwf	___ftadd@exp1,f
  6803  0454  084B               	movf	___ftadd@exp2,w
  6804  0455  064C               	xorwf	___ftadd@exp1,w
  6805  0456  1903               	skipnz
  6806  0457  2C69               	goto	l1807
  6807  0458  3001               	movlw	1
  6808  0459  02CA               	subwf	___ftadd@sign,f
  6809  045A  084A               	movf	___ftadd@sign,w
  6810  045B  3907               	andlw	7
  6811  045C  1903               	btfsc	3,2
  6812  045D  2C69               	goto	l1807
  6813  045E  2C4C               	goto	l1799
  6814  045F                     l1805:	
  6815  045F  3001               	movlw	1
  6816  0460                     u1855:	
  6817  0460  36C5               	lsrf	___ftadd@f2+2,f
  6818  0461  0CC4               	rrf	___ftadd@f2+1,f
  6819  0462  0CC3               	rrf	___ftadd@f2,f
  6820  0463  0B89               	decfsz	9,f
  6821  0464  2C60               	goto	u1855
  6822  0465  3001               	movlw	1
  6823  0466  00C6               	movwf	??___ftadd
  6824  0467  0846               	movf	??___ftadd,w
  6825  0468  07CB               	addwf	___ftadd@exp2,f
  6826  0469                     l1807:	
  6827  0469  084C               	movf	___ftadd@exp1,w
  6828  046A  064B               	xorwf	___ftadd@exp2,w
  6829  046B  1D03               	skipz
  6830  046C  2C5F               	goto	l1805
  6831  046D                     l565:	
  6832  046D  1FCA               	btfss	___ftadd@sign,7
  6833  046E  2C7F               	goto	l1811
  6834  046F  30FF               	movlw	255
  6835  0470  06C0               	xorwf	___ftadd@f1,f
  6836  0471  30FF               	movlw	255
  6837  0472  06C1               	xorwf	___ftadd@f1+1,f
  6838  0473  30FF               	movlw	255
  6839  0474  06C2               	xorwf	___ftadd@f1+2,f
  6840  0475  3001               	movlw	1
  6841  0476  07C0               	addwf	___ftadd@f1,f
  6842  0477  3000               	movlw	0
  6843  0478  1803               	skipnc
  6844  0479  3001               	movlw	1
  6845  047A  07C1               	addwf	___ftadd@f1+1,f
  6846  047B  3000               	movlw	0
  6847  047C  1803               	skipnc
  6848  047D  3001               	movlw	1
  6849  047E  07C2               	addwf	___ftadd@f1+2,f
  6850  047F                     l1811:	
  6851  047F  1F4A               	btfss	___ftadd@sign,6
  6852  0480  2C91               	goto	l1815
  6853  0481  30FF               	movlw	255
  6854  0482  06C3               	xorwf	___ftadd@f2,f
  6855  0483  30FF               	movlw	255
  6856  0484  06C4               	xorwf	___ftadd@f2+1,f
  6857  0485  30FF               	movlw	255
  6858  0486  06C5               	xorwf	___ftadd@f2+2,f
  6859  0487  3001               	movlw	1
  6860  0488  07C3               	addwf	___ftadd@f2,f
  6861  0489  3000               	movlw	0
  6862  048A  1803               	skipnc
  6863  048B  3001               	movlw	1
  6864  048C  07C4               	addwf	___ftadd@f2+1,f
  6865  048D  3000               	movlw	0
  6866  048E  1803               	skipnc
  6867  048F  3001               	movlw	1
  6868  0490  07C5               	addwf	___ftadd@f2+2,f
  6869  0491                     l1815:	
  6870  0491  01CA               	clrf	___ftadd@sign
  6871  0492  0840               	movf	___ftadd@f1,w
  6872  0493  07C3               	addwf	___ftadd@f2,f
  6873  0494  0841               	movf	___ftadd@f1+1,w
  6874  0495  3DC4               	addwfc	___ftadd@f2+1,f
  6875  0496  0842               	movf	___ftadd@f1+2,w
  6876  0497  3DC5               	addwfc	___ftadd@f2+2,f
  6877  0498  1FC5               	btfss	___ftadd@f2+2,7
  6878  0499  2CAC               	goto	l1825
  6879  049A  30FF               	movlw	255
  6880  049B  06C3               	xorwf	___ftadd@f2,f
  6881  049C  30FF               	movlw	255
  6882  049D  06C4               	xorwf	___ftadd@f2+1,f
  6883  049E  30FF               	movlw	255
  6884  049F  06C5               	xorwf	___ftadd@f2+2,f
  6885  04A0  3001               	movlw	1
  6886  04A1  07C3               	addwf	___ftadd@f2,f
  6887  04A2  3000               	movlw	0
  6888  04A3  1803               	skipnc
  6889  04A4  3001               	movlw	1
  6890  04A5  07C4               	addwf	___ftadd@f2+1,f
  6891  04A6  3000               	movlw	0
  6892  04A7  1803               	skipnc
  6893  04A8  3001               	movlw	1
  6894  04A9  07C5               	addwf	___ftadd@f2+2,f
  6895  04AA  01CA               	clrf	___ftadd@sign
  6896  04AB  0ACA               	incf	___ftadd@sign,f
  6897  04AC                     l1825:	
  6898  04AC  0843               	movf	___ftadd@f2,w
  6899  04AD  00F0               	movwf	___ftpack@arg
  6900  04AE  0844               	movf	___ftadd@f2+1,w
  6901  04AF  00F1               	movwf	___ftpack@arg+1
  6902  04B0  0845               	movf	___ftadd@f2+2,w
  6903  04B1  00F2               	movwf	___ftpack@arg+2
  6904  04B2  084C               	movf	___ftadd@exp1,w
  6905  04B3  00C6               	movwf	??___ftadd
  6906  04B4  0846               	movf	??___ftadd,w
  6907  04B5  00F3               	movwf	___ftpack@exp
  6908  04B6  084A               	movf	___ftadd@sign,w
  6909  04B7  00C7               	movwf	??___ftadd+1
  6910  04B8  0847               	movf	??___ftadd+1,w
  6911  04B9  00F4               	movwf	___ftpack@sign
  6912  04BA  3180  200F         	fcall	___ftpack
  6913  04BC  0870               	movf	?___ftpack,w
  6914  04BD  0020               	movlb	0	; select bank0
  6915  04BE  00C0               	movwf	?___ftadd
  6916  04BF  0871               	movf	?___ftpack+1,w
  6917  04C0  00C1               	movwf	?___ftadd+1
  6918  04C1  0872               	movf	?___ftpack+2,w
  6919  04C2  00C2               	movwf	?___ftadd+2
  6920  04C3  0008               	return
  6921  04C4                     __end_of___ftadd:	
  6922                           
  6923                           	psect	text11
  6924  00F9                     __ptext11:	
  6925 ;; *************** function ___ftdiv *****************
  6926 ;; Defined at:
  6927 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  f2              3   16[BANK0 ] float 
  6930 ;;  f1              3   19[BANK0 ] float 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  f3              3   27[BANK0 ] float 
  6933 ;;  sign            1   31[BANK0 ] unsigned char 
  6934 ;;  exp             1   30[BANK0 ] unsigned char 
  6935 ;;  cntr            1   26[BANK0 ] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  3   16[BANK0 ] float 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0, pclath, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6945 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6948 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6949 ;;Total ram usage:       16 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    1
  6952 ;; This function calls:
  6953 ;;		___ftpack
  6954 ;; This function is called by:
  6955 ;;		_tempCalc
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           
  6960                           ;psect for function ___ftdiv
  6961  00F9                     ___ftdiv:	
  6962                           
  6963                           ;incstack = 0
  6964                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6965  00F9  0020               	movlb	0	; select bank0
  6966  00FA  0833               	movf	___ftdiv@f1,w
  6967  00FB  00B6               	movwf	??___ftdiv
  6968  00FC  0834               	movf	___ftdiv@f1+1,w
  6969  00FD  00B7               	movwf	??___ftdiv+1
  6970  00FE  0835               	movf	___ftdiv@f1+2,w
  6971  00FF  00B8               	movwf	??___ftdiv+2
  6972  0100  1003               	clrc
  6973  0101  0D37               	rlf	??___ftdiv+1,w
  6974  0102  0D38               	rlf	??___ftdiv+2,w
  6975  0103  00B9               	movwf	??___ftdiv+3
  6976  0104  0839               	movf	??___ftdiv+3,w
  6977  0105  00BE               	movwf	___ftdiv@exp
  6978  0106  083E               	movf	___ftdiv@exp,w
  6979  0107  1D03               	btfss	3,2
  6980  0108  2910               	goto	l2287
  6981  0109  3000               	movlw	0
  6982  010A  00B0               	movwf	?___ftdiv
  6983  010B  3000               	movlw	0
  6984  010C  00B1               	movwf	?___ftdiv+1
  6985  010D  3000               	movlw	0
  6986  010E  00B2               	movwf	?___ftdiv+2
  6987  010F  0008               	return
  6988  0110                     l2287:	
  6989  0110  0830               	movf	___ftdiv@f2,w
  6990  0111  00B6               	movwf	??___ftdiv
  6991  0112  0831               	movf	___ftdiv@f2+1,w
  6992  0113  00B7               	movwf	??___ftdiv+1
  6993  0114  0832               	movf	___ftdiv@f2+2,w
  6994  0115  00B8               	movwf	??___ftdiv+2
  6995  0116  1003               	clrc
  6996  0117  0D37               	rlf	??___ftdiv+1,w
  6997  0118  0D38               	rlf	??___ftdiv+2,w
  6998  0119  00B9               	movwf	??___ftdiv+3
  6999  011A  0839               	movf	??___ftdiv+3,w
  7000  011B  00BF               	movwf	___ftdiv@sign
  7001  011C  083F               	movf	___ftdiv@sign,w
  7002  011D  1D03               	btfss	3,2
  7003  011E  2926               	goto	l2293
  7004  011F  3000               	movlw	0
  7005  0120  00B0               	movwf	?___ftdiv
  7006  0121  3000               	movlw	0
  7007  0122  00B1               	movwf	?___ftdiv+1
  7008  0123  3000               	movlw	0
  7009  0124  00B2               	movwf	?___ftdiv+2
  7010  0125  0008               	return
  7011  0126                     l2293:	
  7012  0126  3000               	movlw	0
  7013  0127  00BB               	movwf	___ftdiv@f3
  7014  0128  3000               	movlw	0
  7015  0129  00BC               	movwf	___ftdiv@f3+1
  7016  012A  3000               	movlw	0
  7017  012B  00BD               	movwf	___ftdiv@f3+2
  7018  012C  3089               	movlw	137
  7019  012D  073F               	addwf	___ftdiv@sign,w
  7020  012E  00B6               	movwf	??___ftdiv
  7021  012F  0836               	movf	??___ftdiv,w
  7022  0130  02BE               	subwf	___ftdiv@exp,f
  7023  0131  0833               	movf	___ftdiv@f1,w
  7024  0132  00B6               	movwf	??___ftdiv
  7025  0133  0834               	movf	___ftdiv@f1+1,w
  7026  0134  00B7               	movwf	??___ftdiv+1
  7027  0135  0835               	movf	___ftdiv@f1+2,w
  7028  0136  00B8               	movwf	??___ftdiv+2
  7029  0137  3010               	movlw	16
  7030  0138                     u2475:	
  7031  0138  36B8               	lsrf	??___ftdiv+2,f
  7032  0139  0CB7               	rrf	??___ftdiv+1,f
  7033  013A  0CB6               	rrf	??___ftdiv,f
  7034  013B  0B89               	decfsz	9,f
  7035  013C  2938               	goto	u2475
  7036  013D  0836               	movf	??___ftdiv,w
  7037  013E  00B9               	movwf	??___ftdiv+3
  7038  013F  0839               	movf	??___ftdiv+3,w
  7039  0140  00BF               	movwf	___ftdiv@sign
  7040  0141  0830               	movf	___ftdiv@f2,w
  7041  0142  00B6               	movwf	??___ftdiv
  7042  0143  0831               	movf	___ftdiv@f2+1,w
  7043  0144  00B7               	movwf	??___ftdiv+1
  7044  0145  0832               	movf	___ftdiv@f2+2,w
  7045  0146  00B8               	movwf	??___ftdiv+2
  7046  0147  3010               	movlw	16
  7047  0148                     u2485:	
  7048  0148  36B8               	lsrf	??___ftdiv+2,f
  7049  0149  0CB7               	rrf	??___ftdiv+1,f
  7050  014A  0CB6               	rrf	??___ftdiv,f
  7051  014B  0B89               	decfsz	9,f
  7052  014C  2948               	goto	u2485
  7053  014D  0836               	movf	??___ftdiv,w
  7054  014E  00B9               	movwf	??___ftdiv+3
  7055  014F  0839               	movf	??___ftdiv+3,w
  7056  0150  06BF               	xorwf	___ftdiv@sign,f
  7057  0151  3080               	movlw	128
  7058  0152  00B6               	movwf	??___ftdiv
  7059  0153  0836               	movf	??___ftdiv,w
  7060  0154  05BF               	andwf	___ftdiv@sign,f
  7061  0155  17B4               	bsf	___ftdiv@f1+1,7
  7062  0156  30FF               	movlw	255
  7063  0157  05B3               	andwf	___ftdiv@f1,f
  7064  0158  30FF               	movlw	255
  7065  0159  05B4               	andwf	___ftdiv@f1+1,f
  7066  015A  3000               	movlw	0
  7067  015B  05B5               	andwf	___ftdiv@f1+2,f
  7068  015C  17B1               	bsf	___ftdiv@f2+1,7
  7069  015D  30FF               	movlw	255
  7070  015E  05B0               	andwf	___ftdiv@f2,f
  7071  015F  30FF               	movlw	255
  7072  0160  05B1               	andwf	___ftdiv@f2+1,f
  7073  0161  3000               	movlw	0
  7074  0162  05B2               	andwf	___ftdiv@f2+2,f
  7075  0163  3018               	movlw	24
  7076  0164  00B6               	movwf	??___ftdiv
  7077  0165  0836               	movf	??___ftdiv,w
  7078  0166  00BA               	movwf	___ftdiv@cntr
  7079  0167                     l2307:	
  7080  0167  3001               	movlw	1
  7081  0168                     u2495:	
  7082  0168  35BB               	lslf	___ftdiv@f3,f
  7083  0169  0DBC               	rlf	___ftdiv@f3+1,f
  7084  016A  0DBD               	rlf	___ftdiv@f3+2,f
  7085  016B  0B89               	decfsz	9,f
  7086  016C  2968               	goto	u2495
  7087  016D  0832               	movf	___ftdiv@f2+2,w
  7088  016E  0235               	subwf	___ftdiv@f1+2,w
  7089  016F  1D03               	skipz
  7090  0170  2977               	goto	u2505
  7091  0171  0831               	movf	___ftdiv@f2+1,w
  7092  0172  0234               	subwf	___ftdiv@f1+1,w
  7093  0173  1D03               	skipz
  7094  0174  2977               	goto	u2505
  7095  0175  0830               	movf	___ftdiv@f2,w
  7096  0176  0233               	subwf	___ftdiv@f1,w
  7097  0177                     u2505:	
  7098  0177  1C03               	skipc
  7099  0178  2980               	goto	l2315
  7100  0179  0830               	movf	___ftdiv@f2,w
  7101  017A  02B3               	subwf	___ftdiv@f1,f
  7102  017B  0831               	movf	___ftdiv@f2+1,w
  7103  017C  3BB4               	subwfb	___ftdiv@f1+1,f
  7104  017D  0832               	movf	___ftdiv@f2+2,w
  7105  017E  3BB5               	subwfb	___ftdiv@f1+2,f
  7106  017F  143B               	bsf	___ftdiv@f3,0
  7107  0180                     l2315:	
  7108  0180  3001               	movlw	1
  7109  0181                     u2515:	
  7110  0181  35B3               	lslf	___ftdiv@f1,f
  7111  0182  0DB4               	rlf	___ftdiv@f1+1,f
  7112  0183  0DB5               	rlf	___ftdiv@f1+2,f
  7113  0184  0B89               	decfsz	9,f
  7114  0185  2981               	goto	u2515
  7115  0186  3001               	movlw	1
  7116  0187  02BA               	subwf	___ftdiv@cntr,f
  7117  0188  1D03               	btfss	3,2
  7118  0189  2967               	goto	l2307
  7119  018A  083B               	movf	___ftdiv@f3,w
  7120  018B  00F0               	movwf	___ftpack@arg
  7121  018C  083C               	movf	___ftdiv@f3+1,w
  7122  018D  00F1               	movwf	___ftpack@arg+1
  7123  018E  083D               	movf	___ftdiv@f3+2,w
  7124  018F  00F2               	movwf	___ftpack@arg+2
  7125  0190  083E               	movf	___ftdiv@exp,w
  7126  0191  00B6               	movwf	??___ftdiv
  7127  0192  0836               	movf	??___ftdiv,w
  7128  0193  00F3               	movwf	___ftpack@exp
  7129  0194  083F               	movf	___ftdiv@sign,w
  7130  0195  00B7               	movwf	??___ftdiv+1
  7131  0196  0837               	movf	??___ftdiv+1,w
  7132  0197  00F4               	movwf	___ftpack@sign
  7133  0198  3180  200F         	fcall	___ftpack
  7134  019A  0870               	movf	?___ftpack,w
  7135  019B  0020               	movlb	0	; select bank0
  7136  019C  00B0               	movwf	?___ftdiv
  7137  019D  0871               	movf	?___ftpack+1,w
  7138  019E  00B1               	movwf	?___ftdiv+1
  7139  019F  0872               	movf	?___ftpack+2,w
  7140  01A0  00B2               	movwf	?___ftdiv+2
  7141  01A1  0008               	return
  7142  01A2                     __end_of___ftdiv:	
  7143                           
  7144                           	psect	text12
  7145  000F                     __ptext12:	
  7146 ;; *************** function ___ftpack *****************
  7147 ;; Defined at:
  7148 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  arg             3    0[COMMON] unsigned um
  7151 ;;  exp             1    3[COMMON] unsigned char 
  7152 ;;  sign            1    4[COMMON] unsigned char 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  3    0[COMMON] float 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:        8 bytes
  7169 ;; Hardware stack levels used:    1
  7170 ;; This function calls:
  7171 ;;		Nothing
  7172 ;; This function is called by:
  7173 ;;		___awtoft
  7174 ;;		___ftadd
  7175 ;;		___ftdiv
  7176 ;;		___ftmul
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           
  7181                           ;psect for function ___ftpack
  7182  000F                     ___ftpack:	
  7183                           
  7184                           ;incstack = 0
  7185                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7186  000F  0873               	movf	___ftpack@exp,w
  7187  0010  1903               	btfsc	3,2
  7188  0011  2817               	goto	l1701
  7189  0012  0872               	movf	___ftpack@arg+2,w
  7190  0013  0471               	iorwf	___ftpack@arg+1,w
  7191  0014  0470               	iorwf	___ftpack@arg,w
  7192  0015  1D03               	skipz
  7193  0016  2828               	goto	l1707
  7194  0017                     l1701:	
  7195  0017  3000               	movlw	0
  7196  0018  00F0               	movwf	?___ftpack
  7197  0019  3000               	movlw	0
  7198  001A  00F1               	movwf	?___ftpack+1
  7199  001B  3000               	movlw	0
  7200  001C  00F2               	movwf	?___ftpack+2
  7201  001D  0008               	return
  7202  001E                     l1705:	
  7203  001E  3001               	movlw	1
  7204  001F  00F5               	movwf	??___ftpack
  7205  0020  0875               	movf	??___ftpack,w
  7206  0021  07F3               	addwf	___ftpack@exp,f
  7207  0022  3001               	movlw	1
  7208  0023                     u1495:	
  7209  0023  36F2               	lsrf	___ftpack@arg+2,f
  7210  0024  0CF1               	rrf	___ftpack@arg+1,f
  7211  0025  0CF0               	rrf	___ftpack@arg,f
  7212  0026  0B89               	decfsz	9,f
  7213  0027  2823               	goto	u1495
  7214  0028                     l1707:	
  7215  0028  30FE               	movlw	254
  7216  0029  0572               	andwf	___ftpack@arg+2,w
  7217  002A  1903               	btfsc	3,2
  7218  002B  2841               	goto	l534
  7219  002C  281E               	goto	l1705
  7220  002D                     l1709:	
  7221  002D  3001               	movlw	1
  7222  002E  00F5               	movwf	??___ftpack
  7223  002F  0875               	movf	??___ftpack,w
  7224  0030  07F3               	addwf	___ftpack@exp,f
  7225  0031  3001               	movlw	1
  7226  0032  07F0               	addwf	___ftpack@arg,f
  7227  0033  3000               	movlw	0
  7228  0034  1803               	skipnc
  7229  0035  3001               	movlw	1
  7230  0036  07F1               	addwf	___ftpack@arg+1,f
  7231  0037  3000               	movlw	0
  7232  0038  1803               	skipnc
  7233  0039  3001               	movlw	1
  7234  003A  07F2               	addwf	___ftpack@arg+2,f
  7235  003B  3001               	movlw	1
  7236  003C                     u1515:	
  7237  003C  36F2               	lsrf	___ftpack@arg+2,f
  7238  003D  0CF1               	rrf	___ftpack@arg+1,f
  7239  003E  0CF0               	rrf	___ftpack@arg,f
  7240  003F  0B89               	decfsz	9,f
  7241  0040  283C               	goto	u1515
  7242  0041                     l534:	
  7243  0041  30FF               	movlw	255
  7244  0042  0572               	andwf	___ftpack@arg+2,w
  7245  0043  1903               	btfsc	3,2
  7246  0044  284E               	goto	l1717
  7247  0045  282D               	goto	l1709
  7248  0046                     l1715:	
  7249  0046  3001               	movlw	1
  7250  0047  02F3               	subwf	___ftpack@exp,f
  7251  0048  3001               	movlw	1
  7252  0049                     u1535:	
  7253  0049  35F0               	lslf	___ftpack@arg,f
  7254  004A  0DF1               	rlf	___ftpack@arg+1,f
  7255  004B  0DF2               	rlf	___ftpack@arg+2,f
  7256  004C  0B89               	decfsz	9,f
  7257  004D  2849               	goto	u1535
  7258  004E                     l1717:	
  7259  004E  1BF1               	btfsc	___ftpack@arg+1,7
  7260  004F  2854               	goto	l541
  7261  0050  3002               	movlw	2
  7262  0051  0273               	subwf	___ftpack@exp,w
  7263  0052  1803               	skipnc
  7264  0053  2846               	goto	l1715
  7265  0054                     l541:	
  7266  0054  1873               	btfsc	___ftpack@exp,0
  7267  0055  285C               	goto	l542
  7268  0056  30FF               	movlw	255
  7269  0057  05F0               	andwf	___ftpack@arg,f
  7270  0058  307F               	movlw	127
  7271  0059  05F1               	andwf	___ftpack@arg+1,f
  7272  005A  30FF               	movlw	255
  7273  005B  05F2               	andwf	___ftpack@arg+2,f
  7274  005C                     l542:	
  7275  005C  1003               	clrc
  7276  005D  0CF3               	rrf	___ftpack@exp,f
  7277  005E  0873               	movf	___ftpack@exp,w
  7278  005F  00F5               	movwf	??___ftpack
  7279  0060  01F6               	clrf	??___ftpack+1
  7280  0061  01F7               	clrf	??___ftpack+2
  7281  0062  3010               	movlw	16
  7282  0063                     u1575:	
  7283  0063  35F5               	lslf	??___ftpack,f
  7284  0064  0DF6               	rlf	??___ftpack+1,f
  7285  0065  0DF7               	rlf	??___ftpack+2,f
  7286  0066  0B89               	decfsz	9,f
  7287  0067  2863               	goto	u1575
  7288  0068  0875               	movf	??___ftpack,w
  7289  0069  04F0               	iorwf	___ftpack@arg,f
  7290  006A  0876               	movf	??___ftpack+1,w
  7291  006B  04F1               	iorwf	___ftpack@arg+1,f
  7292  006C  0877               	movf	??___ftpack+2,w
  7293  006D  04F2               	iorwf	___ftpack@arg+2,f
  7294  006E  0874               	movf	___ftpack@sign,w
  7295  006F  1903               	btfsc	3,2
  7296  0070  0008               	return
  7297  0071  17F2               	bsf	___ftpack@arg+2,7
  7298  0072  0008               	return
  7299  0073                     __end_of___ftpack:	
  7300                           
  7301                           	psect	text13
  7302  04C4                     __ptext13:	
  7303 ;; *************** function _readAnalog *****************
  7304 ;; Defined at:
  7305 ;;		line 87 in file "adcc.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  channel         2    6[BANK0 ] int 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;  value           2   11[COMMON] int 
  7310 ;;  analog_chann    2    9[COMMON] int 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  2    6[BANK0 ] int 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7322 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7323 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;Total ram usage:       21 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    1
  7327 ;; This function calls:
  7328 ;;		_ADCRead
  7329 ;;		___aldiv
  7330 ;; This function is called by:
  7331 ;;		_main
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           
  7336                           ;psect for function _readAnalog
  7337  04C4                     _readAnalog:	
  7338                           
  7339                           ;adcc.c: 89: int value;
  7340                           ;adcc.c: 91: int analog_channel = channels[channel];
  7341                           
  7342                           ;incstack = 0
  7343                           ; Regs used in _readAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7344  04C4  0020               	movlb	0	; select bank0
  7345  04C5  3526               	lslf	readAnalog@channel,w
  7346  04C6  3EDF               	addlw	(low (_channels| 0))& (0+255)
  7347  04C7  0086               	movwf	6
  7348  04C8  0187               	clrf	7
  7349  04C9  3F40               	moviw [0]fsr1
  7350  04CA  00F9               	movwf	readAnalog@analog_channel
  7351  04CB  3F41               	moviw [1]fsr1
  7352  04CC  00FA               	movwf	readAnalog@analog_channel+1
  7353                           
  7354                           ;adcc.c: 93: value = ADCRead(analog_channel);
  7355  04CD  0879               	movf	readAnalog@analog_channel,w
  7356  04CE  318B  23AA  3184   	fcall	_ADCRead
  7357  04D1  0871               	movf	?_ADCRead+1,w
  7358  04D2  00FC               	movwf	readAnalog@value+1
  7359  04D3  0870               	movf	?_ADCRead,w
  7360  04D4  00FB               	movwf	readAnalog@value
  7361                           
  7362                           ;adcc.c: 97: totals[channel] = totals[channel] - samples[channel][sampleIndex];
  7363  04D5  0020               	movlb	0	; select bank0
  7364  04D6  0826               	movf	readAnalog@channel,w
  7365  04D7  00A8               	movwf	??_readAnalog
  7366  04D8  3001               	movlw	1
  7367  04D9                     u2545:	
  7368  04D9  35A8               	lslf	??_readAnalog,f
  7369  04DA  3EFF               	addlw	-1
  7370  04DB  1D03               	skipz
  7371  04DC  2CD9               	goto	u2545
  7372  04DD  3528               	lslf	??_readAnalog,w
  7373  04DE  3EB8               	addlw	(low (_totals| 0))& (0+255)
  7374  04DF  0086               	movwf	6
  7375  04E0  0187               	clrf	7
  7376  04E1  3F40               	moviw [0]fsr1
  7377  04E2  00A9               	movwf	??_readAnalog+1
  7378  04E3  3F41               	moviw [1]fsr1
  7379  04E4  00AA               	movwf	??_readAnalog+2
  7380  04E5  3F42               	moviw [2]fsr1
  7381  04E6  00AB               	movwf	??_readAnalog+3
  7382  04E7  3F43               	moviw [3]fsr1
  7383  04E8  00AC               	movwf	??_readAnalog+4
  7384  04E9  0826               	movf	readAnalog@channel,w
  7385  04EA  00AD               	movwf	??_readAnalog+5
  7386  04EB  3003               	movlw	3
  7387  04EC                     u2555:	
  7388  04EC  35AD               	lslf	??_readAnalog+5,f
  7389  04ED  0B89               	decfsz	9,f
  7390  04EE  2CEC               	goto	u2555
  7391  04EF  30A0               	movlw	(low (_samples| 0))& (0+255)
  7392  04F0  072D               	addwf	??_readAnalog+5,w
  7393  04F1  00AE               	movwf	??_readAnalog+6
  7394  04F2  356D               	lslf	_sampleIndex,w
  7395  04F3  072E               	addwf	??_readAnalog+6,w
  7396  04F4  00AF               	movwf	??_readAnalog+7
  7397  04F5  082F               	movf	??_readAnalog+7,w
  7398  04F6  0086               	movwf	6
  7399  04F7  0187               	clrf	7
  7400  04F8  3F40               	moviw [0]fsr1
  7401  04F9  00B0               	movwf	??_readAnalog+8
  7402  04FA  3F41               	moviw [1]fsr1
  7403  04FB  00B1               	movwf	??_readAnalog+9
  7404  04FC  0830               	movf	??_readAnalog+8,w
  7405  04FD  00B2               	movwf	??_readAnalog+10
  7406  04FE  0831               	movf	??_readAnalog+9,w
  7407  04FF  00B3               	movwf	??_readAnalog+11
  7408  0500  01B4               	clrf	??_readAnalog+12
  7409  0501  01B5               	clrf	??_readAnalog+13
  7410  0502  09B2               	comf	??_readAnalog+10,f
  7411  0503  09B3               	comf	??_readAnalog+11,f
  7412  0504  09B4               	comf	??_readAnalog+12,f
  7413  0505  09B5               	comf	??_readAnalog+13,f
  7414  0506  0AB2               	incf	??_readAnalog+10,f
  7415  0507  1903               	skipnz
  7416  0508  0AB3               	incf	??_readAnalog+11,f
  7417  0509  1903               	skipnz
  7418  050A  0AB4               	incf	??_readAnalog+12,f
  7419  050B  1903               	skipnz
  7420  050C  0AB5               	incf	??_readAnalog+13,f
  7421  050D  0832               	movf	??_readAnalog+10,w
  7422  050E  07A9               	addwf	??_readAnalog+1,f
  7423  050F  0833               	movf	??_readAnalog+11,w
  7424  0510  3DAA               	addwfc	??_readAnalog+2,f
  7425  0511  0834               	movf	??_readAnalog+12,w
  7426  0512  3DAB               	addwfc	??_readAnalog+3,f
  7427  0513  0835               	movf	??_readAnalog+13,w
  7428  0514  3DAC               	addwfc	??_readAnalog+4,f
  7429  0515  0826               	movf	readAnalog@channel,w
  7430  0516  00B6               	movwf	??_readAnalog+14
  7431  0517  3001               	movlw	1
  7432  0518                     u2565:	
  7433  0518  35B6               	lslf	??_readAnalog+14,f
  7434  0519  3EFF               	addlw	-1
  7435  051A  1D03               	skipz
  7436  051B  2D18               	goto	u2565
  7437  051C  3536               	lslf	??_readAnalog+14,w
  7438  051D  3EB8               	addlw	(low (_totals| 0))& (0+255)
  7439  051E  0086               	movwf	6
  7440  051F  0187               	clrf	7
  7441  0520  0829               	movf	??_readAnalog+1,w
  7442  0521  3FC0               	movwi [0]fsr1
  7443  0522  082A               	movf	??_readAnalog+2,w
  7444  0523  3FC1               	movwi [1]fsr1
  7445  0524  082B               	movf	??_readAnalog+3,w
  7446  0525  3FC2               	movwi [2]fsr1
  7447  0526  082C               	movf	??_readAnalog+4,w
  7448  0527  3FC3               	movwi [3]fsr1
  7449                           
  7450                           ;adcc.c: 99: samples[channel][sampleIndex] = value;
  7451  0528  0826               	movf	readAnalog@channel,w
  7452  0529  00A8               	movwf	??_readAnalog
  7453  052A  3003               	movlw	3
  7454  052B                     u2575:	
  7455  052B  35A8               	lslf	??_readAnalog,f
  7456  052C  0B89               	decfsz	9,f
  7457  052D  2D2B               	goto	u2575
  7458  052E  30A0               	movlw	(low (_samples| 0))& (0+255)
  7459  052F  0728               	addwf	??_readAnalog,w
  7460  0530  00A9               	movwf	??_readAnalog+1
  7461  0531  356D               	lslf	_sampleIndex,w
  7462  0532  0729               	addwf	??_readAnalog+1,w
  7463  0533  00AA               	movwf	??_readAnalog+2
  7464  0534  082A               	movf	??_readAnalog+2,w
  7465  0535  0086               	movwf	6
  7466  0536  0187               	clrf	7
  7467  0537  087B               	movf	readAnalog@value,w
  7468  0538  3FC0               	movwi [0]fsr1
  7469  0539  087C               	movf	readAnalog@value+1,w
  7470  053A  3FC1               	movwi [1]fsr1
  7471                           
  7472                           ;adcc.c: 101: totals[channel] = totals[channel] + samples[channel][sampleIndex];
  7473  053B  0826               	movf	readAnalog@channel,w
  7474  053C  00A8               	movwf	??_readAnalog
  7475  053D  3001               	movlw	1
  7476  053E                     u2585:	
  7477  053E  35A8               	lslf	??_readAnalog,f
  7478  053F  3EFF               	addlw	-1
  7479  0540  1D03               	skipz
  7480  0541  2D3E               	goto	u2585
  7481  0542  3528               	lslf	??_readAnalog,w
  7482  0543  3EB8               	addlw	(low (_totals| 0))& (0+255)
  7483  0544  0086               	movwf	6
  7484  0545  0187               	clrf	7
  7485  0546  3F40               	moviw [0]fsr1
  7486  0547  00A9               	movwf	??_readAnalog+1
  7487  0548  3F41               	moviw [1]fsr1
  7488  0549  00AA               	movwf	??_readAnalog+2
  7489  054A  3F42               	moviw [2]fsr1
  7490  054B  00AB               	movwf	??_readAnalog+3
  7491  054C  3F43               	moviw [3]fsr1
  7492  054D  00AC               	movwf	??_readAnalog+4
  7493  054E  0826               	movf	readAnalog@channel,w
  7494  054F  00AD               	movwf	??_readAnalog+5
  7495  0550  3003               	movlw	3
  7496  0551                     u2595:	
  7497  0551  35AD               	lslf	??_readAnalog+5,f
  7498  0552  0B89               	decfsz	9,f
  7499  0553  2D51               	goto	u2595
  7500  0554  30A0               	movlw	(low (_samples| 0))& (0+255)
  7501  0555  072D               	addwf	??_readAnalog+5,w
  7502  0556  00AE               	movwf	??_readAnalog+6
  7503  0557  356D               	lslf	_sampleIndex,w
  7504  0558  072E               	addwf	??_readAnalog+6,w
  7505  0559  00AF               	movwf	??_readAnalog+7
  7506  055A  082F               	movf	??_readAnalog+7,w
  7507  055B  0086               	movwf	6
  7508  055C  0187               	clrf	7
  7509  055D  3F40               	moviw [0]fsr1
  7510  055E  00B0               	movwf	??_readAnalog+8
  7511  055F  3F41               	moviw [1]fsr1
  7512  0560  00B1               	movwf	??_readAnalog+9
  7513  0561  0830               	movf	??_readAnalog+8,w
  7514  0562  00B2               	movwf	??_readAnalog+10
  7515  0563  0831               	movf	??_readAnalog+9,w
  7516  0564  00B3               	movwf	??_readAnalog+11
  7517  0565  01B4               	clrf	??_readAnalog+12
  7518  0566  01B5               	clrf	??_readAnalog+13
  7519  0567  0832               	movf	??_readAnalog+10,w
  7520  0568  07A9               	addwf	??_readAnalog+1,f
  7521  0569  0833               	movf	??_readAnalog+11,w
  7522  056A  3DAA               	addwfc	??_readAnalog+2,f
  7523  056B  0834               	movf	??_readAnalog+12,w
  7524  056C  3DAB               	addwfc	??_readAnalog+3,f
  7525  056D  0835               	movf	??_readAnalog+13,w
  7526  056E  3DAC               	addwfc	??_readAnalog+4,f
  7527  056F  0826               	movf	readAnalog@channel,w
  7528  0570  00B6               	movwf	??_readAnalog+14
  7529  0571  3001               	movlw	1
  7530  0572                     u2605:	
  7531  0572  35B6               	lslf	??_readAnalog+14,f
  7532  0573  3EFF               	addlw	-1
  7533  0574  1D03               	skipz
  7534  0575  2D72               	goto	u2605
  7535  0576  3536               	lslf	??_readAnalog+14,w
  7536  0577  3EB8               	addlw	(low (_totals| 0))& (0+255)
  7537  0578  0086               	movwf	6
  7538  0579  0187               	clrf	7
  7539  057A  0829               	movf	??_readAnalog+1,w
  7540  057B  3FC0               	movwi [0]fsr1
  7541  057C  082A               	movf	??_readAnalog+2,w
  7542  057D  3FC1               	movwi [1]fsr1
  7543  057E  082B               	movf	??_readAnalog+3,w
  7544  057F  3FC2               	movwi [2]fsr1
  7545  0580  082C               	movf	??_readAnalog+4,w
  7546  0581  3FC3               	movwi [3]fsr1
  7547                           
  7548                           ;adcc.c: 103: if(channel>1)
  7549  0582  0827               	movf	readAnalog@channel+1,w
  7550  0583  3A80               	xorlw	128
  7551  0584  00A8               	movwf	??_readAnalog
  7552  0585  3080               	movlw	128
  7553  0586  0228               	subwf	??_readAnalog,w
  7554  0587  1D03               	skipz
  7555  0588  2D8B               	goto	u2615
  7556  0589  3002               	movlw	2
  7557  058A  0226               	subwf	readAnalog@channel,w
  7558  058B                     u2615:	
  7559  058B  1C03               	skipc
  7560  058C  2D9B               	goto	l2347
  7561                           
  7562                           ;adcc.c: 104: {
  7563                           ;adcc.c: 105: sampleIndex += 1;
  7564  058D  3001               	movlw	1
  7565  058E  0020               	movlb	0	; select bank0
  7566  058F  07ED               	addwf	_sampleIndex,f
  7567  0590  3000               	movlw	0
  7568  0591  3DEE               	addwfc	_sampleIndex+1,f
  7569                           
  7570                           ;adcc.c: 107: if(sampleIndex >= 4)
  7571  0592  3000               	movlw	0
  7572  0593  026E               	subwf	_sampleIndex+1,w
  7573  0594  3004               	movlw	4
  7574  0595  1903               	skipnz
  7575  0596  026D               	subwf	_sampleIndex,w
  7576  0597  1C03               	skipc
  7577  0598  2D9B               	goto	l2347
  7578                           
  7579                           ;adcc.c: 108: {
  7580                           ;adcc.c: 109: sampleIndex = 0;
  7581  0599  01ED               	clrf	_sampleIndex
  7582  059A  01EE               	clrf	_sampleIndex+1
  7583  059B                     l2347:	
  7584                           
  7585                           ;adcc.c: 110: }
  7586                           ;adcc.c: 111: }
  7587                           ;adcc.c: 113: value = totals[channel] / 4;
  7588  059B  3000               	movlw	0
  7589  059C  00F3               	movwf	___aldiv@divisor+3
  7590  059D  3000               	movlw	0
  7591  059E  00F2               	movwf	___aldiv@divisor+2
  7592  059F  3000               	movlw	0
  7593  05A0  00F1               	movwf	___aldiv@divisor+1
  7594  05A1  3004               	movlw	4
  7595  05A2  00F0               	movwf	___aldiv@divisor
  7596  05A3  0020               	movlb	0	; select bank0
  7597  05A4  0826               	movf	readAnalog@channel,w
  7598  05A5  00A8               	movwf	??_readAnalog
  7599  05A6  3001               	movlw	1
  7600  05A7                     u2635:	
  7601  05A7  35A8               	lslf	??_readAnalog,f
  7602  05A8  3EFF               	addlw	-1
  7603  05A9  1D03               	skipz
  7604  05AA  2DA7               	goto	u2635
  7605  05AB  3528               	lslf	??_readAnalog,w
  7606  05AC  3EB8               	addlw	(low (_totals| 0))& (0+255)
  7607  05AD  0086               	movwf	6
  7608  05AE  0187               	clrf	7
  7609  05AF  3F40               	moviw [0]fsr1
  7610  05B0  00F4               	movwf	___aldiv@dividend
  7611  05B1  3F41               	moviw [1]fsr1
  7612  05B2  00F5               	movwf	___aldiv@dividend+1
  7613  05B3  3F42               	moviw [2]fsr1
  7614  05B4  00F6               	movwf	___aldiv@dividend+2
  7615  05B5  3F43               	moviw [3]fsr1
  7616  05B6  00F7               	movwf	___aldiv@dividend+3
  7617  05B7  318F  277E         	fcall	___aldiv
  7618  05B9  0871               	movf	?___aldiv+1,w
  7619  05BA  00FC               	movwf	readAnalog@value+1
  7620  05BB  0870               	movf	?___aldiv,w
  7621  05BC  00FB               	movwf	readAnalog@value
  7622                           
  7623                           ;adcc.c: 115: return value;
  7624  05BD  087C               	movf	readAnalog@value+1,w
  7625  05BE  0020               	movlb	0	; select bank0
  7626  05BF  00A7               	movwf	?_readAnalog+1
  7627  05C0  087B               	movf	readAnalog@value,w
  7628  05C1  00A6               	movwf	?_readAnalog
  7629  05C2  0008               	return
  7630  05C3                     __end_of_readAnalog:	
  7631                           
  7632                           	psect	text14
  7633  0F7E                     __ptext14:	
  7634 ;; *************** function ___aldiv *****************
  7635 ;; Defined at:
  7636 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  divisor         4    0[COMMON] long 
  7639 ;;  dividend        4    4[COMMON] long 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  quotient        4    2[BANK0 ] long 
  7642 ;;  sign            1    1[BANK0 ] unsigned char 
  7643 ;;  counter         1    0[BANK0 ] unsigned char 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  4    0[COMMON] long 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;Total ram usage:       15 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_readAnalog
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function ___aldiv
  7668  0F7E                     ___aldiv:	
  7669                           
  7670                           ;incstack = 0
  7671                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7672  0F7E  0020               	movlb	0	; select bank0
  7673  0F7F  01A1               	clrf	___aldiv@sign
  7674  0F80  1FF3               	btfss	___aldiv@divisor+3,7
  7675  0F81  2F8F               	goto	l428
  7676  0F82  09F0               	comf	___aldiv@divisor,f
  7677  0F83  09F1               	comf	___aldiv@divisor+1,f
  7678  0F84  09F2               	comf	___aldiv@divisor+2,f
  7679  0F85  09F3               	comf	___aldiv@divisor+3,f
  7680  0F86  0AF0               	incf	___aldiv@divisor,f
  7681  0F87  1903               	skipnz
  7682  0F88  0AF1               	incf	___aldiv@divisor+1,f
  7683  0F89  1903               	skipnz
  7684  0F8A  0AF2               	incf	___aldiv@divisor+2,f
  7685  0F8B  1903               	skipnz
  7686  0F8C  0AF3               	incf	___aldiv@divisor+3,f
  7687  0F8D  01A1               	clrf	___aldiv@sign
  7688  0F8E  0AA1               	incf	___aldiv@sign,f
  7689  0F8F                     l428:	
  7690  0F8F  1FF7               	btfss	___aldiv@dividend+3,7
  7691  0F90  2FA0               	goto	l2169
  7692  0F91  09F4               	comf	___aldiv@dividend,f
  7693  0F92  09F5               	comf	___aldiv@dividend+1,f
  7694  0F93  09F6               	comf	___aldiv@dividend+2,f
  7695  0F94  09F7               	comf	___aldiv@dividend+3,f
  7696  0F95  0AF4               	incf	___aldiv@dividend,f
  7697  0F96  1903               	skipnz
  7698  0F97  0AF5               	incf	___aldiv@dividend+1,f
  7699  0F98  1903               	skipnz
  7700  0F99  0AF6               	incf	___aldiv@dividend+2,f
  7701  0F9A  1903               	skipnz
  7702  0F9B  0AF7               	incf	___aldiv@dividend+3,f
  7703  0F9C  3001               	movlw	1
  7704  0F9D  00F8               	movwf	??___aldiv
  7705  0F9E  0878               	movf	??___aldiv,w
  7706  0F9F  06A1               	xorwf	___aldiv@sign,f
  7707  0FA0                     l2169:	
  7708  0FA0  3000               	movlw	0
  7709  0FA1  00A5               	movwf	___aldiv@quotient+3
  7710  0FA2  3000               	movlw	0
  7711  0FA3  00A4               	movwf	___aldiv@quotient+2
  7712  0FA4  3000               	movlw	0
  7713  0FA5  00A3               	movwf	___aldiv@quotient+1
  7714  0FA6  3000               	movlw	0
  7715  0FA7  00A2               	movwf	___aldiv@quotient
  7716  0FA8  0873               	movf	___aldiv@divisor+3,w
  7717  0FA9  0472               	iorwf	___aldiv@divisor+2,w
  7718  0FAA  0471               	iorwf	___aldiv@divisor+1,w
  7719  0FAB  0470               	iorwf	___aldiv@divisor,w
  7720  0FAC  1903               	skipnz
  7721  0FAD  2FE9               	goto	l2191
  7722  0FAE  01A0               	clrf	___aldiv@counter
  7723  0FAF  0AA0               	incf	___aldiv@counter,f
  7724  0FB0                     l2177:	
  7725  0FB0  1BF3               	btfsc	___aldiv@divisor+3,7
  7726  0FB1  2FBE               	goto	l2179
  7727  0FB2  3001               	movlw	1
  7728  0FB3                     u2195:	
  7729  0FB3  35F0               	lslf	___aldiv@divisor,f
  7730  0FB4  0DF1               	rlf	___aldiv@divisor+1,f
  7731  0FB5  0DF2               	rlf	___aldiv@divisor+2,f
  7732  0FB6  0DF3               	rlf	___aldiv@divisor+3,f
  7733  0FB7  0B89               	decfsz	9,f
  7734  0FB8  2FB3               	goto	u2195
  7735  0FB9  3001               	movlw	1
  7736  0FBA  00F8               	movwf	??___aldiv
  7737  0FBB  0878               	movf	??___aldiv,w
  7738  0FBC  07A0               	addwf	___aldiv@counter,f
  7739  0FBD  2FB0               	goto	l2177
  7740  0FBE                     l2179:	
  7741  0FBE  3001               	movlw	1
  7742  0FBF                     u2215:	
  7743  0FBF  35A2               	lslf	___aldiv@quotient,f
  7744  0FC0  0DA3               	rlf	___aldiv@quotient+1,f
  7745  0FC1  0DA4               	rlf	___aldiv@quotient+2,f
  7746  0FC2  0DA5               	rlf	___aldiv@quotient+3,f
  7747  0FC3  0B89               	decfsz	9,f
  7748  0FC4  2FBF               	goto	u2215
  7749  0FC5  0873               	movf	___aldiv@divisor+3,w
  7750  0FC6  0277               	subwf	___aldiv@dividend+3,w
  7751  0FC7  1D03               	skipz
  7752  0FC8  2FD3               	goto	u2225
  7753  0FC9  0872               	movf	___aldiv@divisor+2,w
  7754  0FCA  0276               	subwf	___aldiv@dividend+2,w
  7755  0FCB  1D03               	skipz
  7756  0FCC  2FD3               	goto	u2225
  7757  0FCD  0871               	movf	___aldiv@divisor+1,w
  7758  0FCE  0275               	subwf	___aldiv@dividend+1,w
  7759  0FCF  1D03               	skipz
  7760  0FD0  2FD3               	goto	u2225
  7761  0FD1  0870               	movf	___aldiv@divisor,w
  7762  0FD2  0274               	subwf	___aldiv@dividend,w
  7763  0FD3                     u2225:	
  7764  0FD3  1C03               	skipc
  7765  0FD4  2FDE               	goto	l2187
  7766  0FD5  0870               	movf	___aldiv@divisor,w
  7767  0FD6  02F4               	subwf	___aldiv@dividend,f
  7768  0FD7  0871               	movf	___aldiv@divisor+1,w
  7769  0FD8  3BF5               	subwfb	___aldiv@dividend+1,f
  7770  0FD9  0872               	movf	___aldiv@divisor+2,w
  7771  0FDA  3BF6               	subwfb	___aldiv@dividend+2,f
  7772  0FDB  0873               	movf	___aldiv@divisor+3,w
  7773  0FDC  3BF7               	subwfb	___aldiv@dividend+3,f
  7774  0FDD  1422               	bsf	___aldiv@quotient,0
  7775  0FDE                     l2187:	
  7776  0FDE  3001               	movlw	1
  7777  0FDF                     u2235:	
  7778  0FDF  36F3               	lsrf	___aldiv@divisor+3,f
  7779  0FE0  0CF2               	rrf	___aldiv@divisor+2,f
  7780  0FE1  0CF1               	rrf	___aldiv@divisor+1,f
  7781  0FE2  0CF0               	rrf	___aldiv@divisor,f
  7782  0FE3  0B89               	decfsz	9,f
  7783  0FE4  2FDF               	goto	u2235
  7784  0FE5  3001               	movlw	1
  7785  0FE6  02A0               	subwf	___aldiv@counter,f
  7786  0FE7  1D03               	btfss	3,2
  7787  0FE8  2FBE               	goto	l2179
  7788  0FE9                     l2191:	
  7789  0FE9  0821               	movf	___aldiv@sign,w
  7790  0FEA  1903               	btfsc	3,2
  7791  0FEB  2FF7               	goto	l2195
  7792  0FEC  09A2               	comf	___aldiv@quotient,f
  7793  0FED  09A3               	comf	___aldiv@quotient+1,f
  7794  0FEE  09A4               	comf	___aldiv@quotient+2,f
  7795  0FEF  09A5               	comf	___aldiv@quotient+3,f
  7796  0FF0  0AA2               	incf	___aldiv@quotient,f
  7797  0FF1  1903               	skipnz
  7798  0FF2  0AA3               	incf	___aldiv@quotient+1,f
  7799  0FF3  1903               	skipnz
  7800  0FF4  0AA4               	incf	___aldiv@quotient+2,f
  7801  0FF5  1903               	skipnz
  7802  0FF6  0AA5               	incf	___aldiv@quotient+3,f
  7803  0FF7                     l2195:	
  7804  0FF7  0825               	movf	___aldiv@quotient+3,w
  7805  0FF8  00F3               	movwf	?___aldiv+3
  7806  0FF9  0824               	movf	___aldiv@quotient+2,w
  7807  0FFA  00F2               	movwf	?___aldiv+2
  7808  0FFB  0823               	movf	___aldiv@quotient+1,w
  7809  0FFC  00F1               	movwf	?___aldiv+1
  7810  0FFD  0822               	movf	___aldiv@quotient,w
  7811  0FFE  00F0               	movwf	?___aldiv
  7812  0FFF  0008               	return
  7813  1000                     __end_of___aldiv:	
  7814                           
  7815                           	psect	text15
  7816  0BAA                     __ptext15:	
  7817 ;; *************** function _ADCRead *****************
  7818 ;; Defined at:
  7819 ;;		line 64 in file "adcc.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  channel         1    wreg     enum E13559
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  channel         1    3[COMMON] enum E13559
  7824 ;; Return value:  Size  Location     Type
  7825 ;;                  2    0[COMMON] unsigned int 
  7826 ;; Registers used:
  7827 ;;		wreg
  7828 ;; Tracked objects:
  7829 ;;		On entry : 0/0
  7830 ;;		On exit  : 0/0
  7831 ;;		Unchanged: 0/0
  7832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7833 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;Total ram usage:        4 bytes
  7838 ;; Hardware stack levels used:    1
  7839 ;; This function calls:
  7840 ;;		Nothing
  7841 ;; This function is called by:
  7842 ;;		_readAnalog
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           
  7847                           ;psect for function _ADCRead
  7848  0BAA                     _ADCRead:	
  7849                           
  7850                           ;incstack = 0
  7851                           ; Regs used in _ADCRead: [wreg]
  7852                           ;ADCRead@channel stored from wreg
  7853  0BAA  00F3               	movwf	ADCRead@channel
  7854                           
  7855                           ;adcc.c: 67: ADPCH = channel;
  7856  0BAB  0873               	movf	ADCRead@channel,w
  7857  0BAC  0021               	movlb	1	; select bank1
  7858  0BAD  009E               	movwf	30	;volatile
  7859                           
  7860                           ;adcc.c: 70: ADCON0bits.ADON = 1;
  7861  0BAE  1793               	bsf	19,7	;volatile
  7862                           
  7863                           ;adcc.c: 73: ADCON0bits.ADCONT = 0;
  7864  0BAF  1313               	bcf	19,6	;volatile
  7865                           
  7866                           ;adcc.c: 76: ADCON0bits.ADGO = 1;
  7867  0BB0  1413               	bsf	19,0	;volatile
  7868  0BB1                     l58:	
  7869                           ;adcc.c: 80: {
  7870                           
  7871                           ;adcc.c: 79: while (ADCON0bits.ADGO)
  7872                           
  7873  0BB1  1813               	btfsc	19,0	;volatile
  7874  0BB2  2BB1               	goto	l58
  7875                           
  7876                           ;adcc.c: 81: }
  7877                           ;adcc.c: 84: return ((ADRESH << 8) + ADRESL);
  7878  0BB3  080D               	movf	13,w	;volatile
  7879  0BB4  00F1               	movwf	?_ADCRead+1
  7880  0BB5  080C               	movf	12,w	;volatile
  7881  0BB6  00F0               	movwf	?_ADCRead
  7882  0BB7  0008               	return
  7883  0BB8                     __end_of_ADCRead:	
  7884                           
  7885                           	psect	text16
  7886  0073                     __ptext16:	
  7887 ;; *************** function ___fttol *****************
  7888 ;; Defined at:
  7889 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  f1              3    0[COMMON] float 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  lval            4    9[COMMON] unsigned long 
  7894 ;;  exp1            1   13[COMMON] unsigned char 
  7895 ;;  sign1           1    8[COMMON] unsigned char 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  4    0[COMMON] long 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;Total ram usage:       14 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_main
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           
  7919                           ;psect for function ___fttol
  7920  0073                     ___fttol:	
  7921                           
  7922                           ;incstack = 0
  7923                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7924  0073  0870               	movf	___fttol@f1,w
  7925  0074  00F4               	movwf	??___fttol
  7926  0075  0871               	movf	___fttol@f1+1,w
  7927  0076  00F5               	movwf	??___fttol+1
  7928  0077  0872               	movf	___fttol@f1+2,w
  7929  0078  00F6               	movwf	??___fttol+2
  7930  0079  1003               	clrc
  7931  007A  0D75               	rlf	??___fttol+1,w
  7932  007B  0D76               	rlf	??___fttol+2,w
  7933  007C  00F7               	movwf	??___fttol+3
  7934  007D  0877               	movf	??___fttol+3,w
  7935  007E  00FD               	movwf	___fttol@exp1
  7936  007F  087D               	movf	___fttol@exp1,w
  7937  0080  1D03               	btfss	3,2
  7938  0081  288B               	goto	l2481
  7939  0082  3000               	movlw	0
  7940  0083  00F3               	movwf	?___fttol+3
  7941  0084  3000               	movlw	0
  7942  0085  00F2               	movwf	?___fttol+2
  7943  0086  3000               	movlw	0
  7944  0087  00F1               	movwf	?___fttol+1
  7945  0088  3000               	movlw	0
  7946  0089  00F0               	movwf	?___fttol
  7947  008A  0008               	return
  7948  008B                     l2481:	
  7949  008B  0870               	movf	___fttol@f1,w
  7950  008C  00F4               	movwf	??___fttol
  7951  008D  0871               	movf	___fttol@f1+1,w
  7952  008E  00F5               	movwf	??___fttol+1
  7953  008F  0872               	movf	___fttol@f1+2,w
  7954  0090  00F6               	movwf	??___fttol+2
  7955  0091  3017               	movlw	23
  7956  0092                     u2805:	
  7957  0092  36F6               	lsrf	??___fttol+2,f
  7958  0093  0CF5               	rrf	??___fttol+1,f
  7959  0094  0CF4               	rrf	??___fttol,f
  7960  0095  0B89               	decfsz	9,f
  7961  0096  2892               	goto	u2805
  7962  0097  0874               	movf	??___fttol,w
  7963  0098  00F7               	movwf	??___fttol+3
  7964  0099  0877               	movf	??___fttol+3,w
  7965  009A  00F8               	movwf	___fttol@sign1
  7966  009B  17F1               	bsf	___fttol@f1+1,7
  7967  009C  30FF               	movlw	255
  7968  009D  05F0               	andwf	___fttol@f1,f
  7969  009E  30FF               	movlw	255
  7970  009F  05F1               	andwf	___fttol@f1+1,f
  7971  00A0  3000               	movlw	0
  7972  00A1  05F2               	andwf	___fttol@f1+2,f
  7973  00A2  0870               	movf	___fttol@f1,w
  7974  00A3  00F9               	movwf	___fttol@lval
  7975  00A4  0871               	movf	___fttol@f1+1,w
  7976  00A5  00FA               	movwf	___fttol@lval+1
  7977  00A6  0872               	movf	___fttol@f1+2,w
  7978  00A7  00FB               	movwf	___fttol@lval+2
  7979  00A8  01FC               	clrf	___fttol@lval+3
  7980  00A9  308E               	movlw	142
  7981  00AA  02FD               	subwf	___fttol@exp1,f
  7982  00AB  1FFD               	btfss	___fttol@exp1,7
  7983  00AC  28C9               	goto	l2501
  7984  00AD  087D               	movf	___fttol@exp1,w
  7985  00AE  3A80               	xorlw	128
  7986  00AF  3E8F               	addlw	143
  7987  00B0  1803               	skipnc
  7988  00B1  28BB               	goto	l2499
  7989  00B2  3000               	movlw	0
  7990  00B3  00F3               	movwf	?___fttol+3
  7991  00B4  3000               	movlw	0
  7992  00B5  00F2               	movwf	?___fttol+2
  7993  00B6  3000               	movlw	0
  7994  00B7  00F1               	movwf	?___fttol+1
  7995  00B8  3000               	movlw	0
  7996  00B9  00F0               	movwf	?___fttol
  7997  00BA  0008               	return
  7998  00BB                     l2499:	
  7999  00BB  3001               	movlw	1
  8000  00BC                     u2835:	
  8001  00BC  36FC               	lsrf	___fttol@lval+3,f
  8002  00BD  0CFB               	rrf	___fttol@lval+2,f
  8003  00BE  0CFA               	rrf	___fttol@lval+1,f
  8004  00BF  0CF9               	rrf	___fttol@lval,f
  8005  00C0  0B89               	decfsz	9,f
  8006  00C1  28BC               	goto	u2835
  8007  00C2  3001               	movlw	1
  8008  00C3  00F4               	movwf	??___fttol
  8009  00C4  0874               	movf	??___fttol,w
  8010  00C5  07FD               	addwf	___fttol@exp1,f
  8011  00C6  1903               	btfsc	3,2
  8012  00C7  28E2               	goto	l2509
  8013  00C8  28BB               	goto	l2499
  8014  00C9                     l2501:	
  8015  00C9  3018               	movlw	24
  8016  00CA  027D               	subwf	___fttol@exp1,w
  8017  00CB  1C03               	skipc
  8018  00CC  28DF               	goto	l625
  8019  00CD  3000               	movlw	0
  8020  00CE  00F3               	movwf	?___fttol+3
  8021  00CF  3000               	movlw	0
  8022  00D0  00F2               	movwf	?___fttol+2
  8023  00D1  3000               	movlw	0
  8024  00D2  00F1               	movwf	?___fttol+1
  8025  00D3  3000               	movlw	0
  8026  00D4  00F0               	movwf	?___fttol
  8027  00D5  0008               	return
  8028  00D6                     l2507:	
  8029  00D6  3001               	movlw	1
  8030  00D7                     u2865:	
  8031  00D7  35F9               	lslf	___fttol@lval,f
  8032  00D8  0DFA               	rlf	___fttol@lval+1,f
  8033  00D9  0DFB               	rlf	___fttol@lval+2,f
  8034  00DA  0DFC               	rlf	___fttol@lval+3,f
  8035  00DB  0B89               	decfsz	9,f
  8036  00DC  28D7               	goto	u2865
  8037  00DD  3001               	movlw	1
  8038  00DE  02FD               	subwf	___fttol@exp1,f
  8039  00DF                     l625:	
  8040  00DF  087D               	movf	___fttol@exp1,w
  8041  00E0  1D03               	btfss	3,2
  8042  00E1  28D6               	goto	l2507
  8043  00E2                     l2509:	
  8044  00E2  0878               	movf	___fttol@sign1,w
  8045  00E3  1903               	btfsc	3,2
  8046  00E4  28F0               	goto	l2513
  8047  00E5  09F9               	comf	___fttol@lval,f
  8048  00E6  09FA               	comf	___fttol@lval+1,f
  8049  00E7  09FB               	comf	___fttol@lval+2,f
  8050  00E8  09FC               	comf	___fttol@lval+3,f
  8051  00E9  0AF9               	incf	___fttol@lval,f
  8052  00EA  1903               	skipnz
  8053  00EB  0AFA               	incf	___fttol@lval+1,f
  8054  00EC  1903               	skipnz
  8055  00ED  0AFB               	incf	___fttol@lval+2,f
  8056  00EE  1903               	skipnz
  8057  00EF  0AFC               	incf	___fttol@lval+3,f
  8058  00F0                     l2513:	
  8059  00F0  087C               	movf	___fttol@lval+3,w
  8060  00F1  00F3               	movwf	?___fttol+3
  8061  00F2  087B               	movf	___fttol@lval+2,w
  8062  00F3  00F2               	movwf	?___fttol+2
  8063  00F4  087A               	movf	___fttol@lval+1,w
  8064  00F5  00F1               	movwf	?___fttol+1
  8065  00F6  0879               	movf	___fttol@lval,w
  8066  00F7  00F0               	movwf	?___fttol
  8067  00F8  0008               	return
  8068  00F9                     __end_of___fttol:	
  8069                           
  8070                           	psect	text17
  8071  0D21                     __ptext17:	
  8072 ;; *************** function _SYSTEM_Initialize *****************
  8073 ;; Defined at:
  8074 ;;		line 37 in file "system.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8090 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8092 ;;Total ram usage:        2 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    3
  8095 ;; This function calls:
  8096 ;;		_ADCC_Initialize
  8097 ;;		_InitCustomChars
  8098 ;;		_LCD_Clear
  8099 ;;		_LCD_Init
  8100 ;;		_OSCILLATOR_Initialize
  8101 ;;		_PIN_MANAGER_Initialize
  8102 ;;		_PWM6_Initialize
  8103 ;;		_TMR2_Initialize
  8104 ;; This function is called by:
  8105 ;;		_main
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           
  8110                           ;psect for function _SYSTEM_Initialize
  8111  0D21                     _SYSTEM_Initialize:	
  8112                           
  8113                           ;system.c: 39: PIN_MANAGER_Initialize();
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8117  0D21  318C  24ED  318D   	fcall	_PIN_MANAGER_Initialize
  8118                           
  8119                           ;system.c: 40: OSCILLATOR_Initialize();
  8120  0D24  318B  2394  318D   	fcall	_OSCILLATOR_Initialize
  8121                           
  8122                           ;system.c: 41: FVRCON = 0x00;
  8123  0D27  0032               	movlb	18	; select bank18
  8124  0D28  018C               	clrf	12	;volatile
  8125                           
  8126                           ;system.c: 42: ADCC_Initialize();
  8127  0D29  318C  242A  318D   	fcall	_ADCC_Initialize
  8128                           
  8129                           ;system.c: 43: PWM6_Initialize();
  8130  0D2C  3180  2004  318D   	fcall	_PWM6_Initialize
  8131                           
  8132                           ;system.c: 45: TMR2_Initialize();
  8133  0D2F  318B  239C  318D   	fcall	_TMR2_Initialize
  8134                           
  8135                           ;system.c: 46: LCD_Init(0X00);
  8136  0D32  3000               	movlw	0
  8137  0D33  318F  2703  318D   	fcall	_LCD_Init
  8138                           
  8139                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  8140  0D36  3041               	movlw	65
  8141  0D37  00F8               	movwf	??_SYSTEM_Initialize+1
  8142  0D38  30EE               	movlw	238
  8143  0D39  00F7               	movwf	??_SYSTEM_Initialize
  8144  0D3A                     u2947:	
  8145  0D3A  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8146  0D3B  2D3A               	goto	u2947
  8147  0D3C  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8148  0D3D  2D3A               	goto	u2947
  8149  0D3E  0000               	nop
  8150                           
  8151                           ;system.c: 48: LCD_Clear();
  8152  0D3F  318B  238C  318D   	fcall	_LCD_Clear
  8153                           
  8154                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  8155  0D42  3021               	movlw	33
  8156  0D43  00F8               	movwf	??_SYSTEM_Initialize+1
  8157  0D44  3076               	movlw	118
  8158  0D45  00F7               	movwf	??_SYSTEM_Initialize
  8159  0D46                     u2957:	
  8160  0D46  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8161  0D47  2D46               	goto	u2957
  8162  0D48  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8163  0D49  2D46               	goto	u2957
  8164  0D4A  0000               	nop
  8165                           
  8166                           ;system.c: 50: InitCustomChars();
  8167  0D4B  318C  249D  318D   	fcall	_InitCustomChars
  8168                           
  8169                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  8170  0D4E  3041               	movlw	65
  8171  0D4F  00F8               	movwf	??_SYSTEM_Initialize+1
  8172  0D50  30EE               	movlw	238
  8173  0D51  00F7               	movwf	??_SYSTEM_Initialize
  8174  0D52                     u2967:	
  8175  0D52  0BF7               	decfsz	??_SYSTEM_Initialize,f
  8176  0D53  2D52               	goto	u2967
  8177  0D54  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  8178  0D55  2D52               	goto	u2967
  8179  0D56  0000               	nop
  8180  0D57  0008               	return
  8181  0D58                     __end_of_SYSTEM_Initialize:	
  8182                           
  8183                           	psect	text18
  8184  0B9C                     __ptext18:	
  8185 ;; *************** function _TMR2_Initialize *****************
  8186 ;; Defined at:
  8187 ;;		line 3 in file "tmr2.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;		None
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      void 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;Total ram usage:        0 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_SYSTEM_Initialize
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           
  8215                           ;psect for function _TMR2_Initialize
  8216  0B9C                     _TMR2_Initialize:	
  8217                           
  8218                           ;tmr2.c: 5: T2CON = 0x00;
  8219                           
  8220                           ;incstack = 0
  8221                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8222  0B9C  0025               	movlb	5	; select bank5
  8223  0B9D  018E               	clrf	14	;volatile
  8224                           
  8225                           ;tmr2.c: 7: T2CLKCON = 0x01;
  8226  0B9E  3001               	movlw	1
  8227  0B9F  0090               	movwf	16	;volatile
  8228                           
  8229                           ;tmr2.c: 9: T2HLT = 0x00;
  8230  0BA0  018F               	clrf	15	;volatile
  8231                           
  8232                           ;tmr2.c: 11: T2RST = 0x00;
  8233  0BA1  0191               	clrf	17	;volatile
  8234                           
  8235                           ;tmr2.c: 13: T2PR = 0xFF;
  8236  0BA2  30FF               	movlw	255
  8237  0BA3  008D               	movwf	13	;volatile
  8238                           
  8239                           ;tmr2.c: 15: T2TMR = 0x00;
  8240  0BA4  018C               	clrf	12	;volatile
  8241                           
  8242                           ;tmr2.c: 17: PIR4bits.TMR2IF = 0;
  8243  0BA5  002E               	movlb	14	; select bank14
  8244  0BA6  1090               	bcf	16,1	;volatile
  8245                           
  8246                           ;tmr2.c: 19: T2CONbits.TMR2ON = 1;
  8247  0BA7  0025               	movlb	5	; select bank5
  8248  0BA8  178E               	bsf	14,7	;volatile
  8249  0BA9  0008               	return
  8250  0BAA                     __end_of_TMR2_Initialize:	
  8251                           
  8252                           	psect	text19
  8253  0004                     __ptext19:	
  8254 ;; *************** function _PWM6_Initialize *****************
  8255 ;; Defined at:
  8256 ;;		line 3 in file "pwm6.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;Total ram usage:        0 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_SYSTEM_Initialize
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           
  8284                           ;psect for function _PWM6_Initialize
  8285  0004                     _PWM6_Initialize:	
  8286                           
  8287                           ;pwm6.c: 5: PWM6CON = 0x80;
  8288                           
  8289                           ;incstack = 0
  8290                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  8291  0004  3080               	movlw	128
  8292  0005  0027               	movlb	7	; select bank7
  8293  0006  008E               	movwf	14	;volatile
  8294                           
  8295                           ;pwm6.c: 7: PWM6DCH = 0x00;
  8296  0007  018D               	clrf	13	;volatile
  8297                           
  8298                           ;pwm6.c: 9: PWM6DCL = 0x00;
  8299  0008  018C               	clrf	12	;volatile
  8300                           
  8301                           ;pwm6.c: 11: CCPTMRS1bits.P6TSEL = 0x1;
  8302  0009  0024               	movlb	4	; select bank4
  8303  000A  081F               	movf	31,w	;volatile
  8304  000B  39F3               	andlw	-13
  8305  000C  3804               	iorlw	4
  8306  000D  009F               	movwf	31	;volatile
  8307  000E  0008               	return
  8308  000F                     __end_of_PWM6_Initialize:	
  8309                           
  8310                           	psect	text20
  8311  0CED                     __ptext20:	
  8312 ;; *************** function _PIN_MANAGER_Initialize *****************
  8313 ;; Defined at:
  8314 ;;		line 5 in file "pin_manager.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;		None
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;  state           1    0[COMMON] unsigned char 
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  1    wreg      void 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;Total ram usage:        1 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		_SYSTEM_Initialize
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function _PIN_MANAGER_Initialize
  8343  0CED                     _PIN_MANAGER_Initialize:	
  8344                           
  8345                           ;pin_manager.c: 7: LATA = 0x00;
  8346                           
  8347                           ;incstack = 0
  8348                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8349  0CED  0020               	movlb	0	; select bank0
  8350  0CEE  0196               	clrf	22	;volatile
  8351                           
  8352                           ;pin_manager.c: 8: LATB = 0x00;
  8353  0CEF  0197               	clrf	23	;volatile
  8354                           
  8355                           ;pin_manager.c: 9: LATC = 0x00;
  8356  0CF0  0198               	clrf	24	;volatile
  8357                           
  8358                           ;pin_manager.c: 11: WPUA = 0x02;
  8359  0CF1  3002               	movlw	2
  8360  0CF2  003E               	movlb	30	; select bank30
  8361  0CF3  00B9               	movwf	57	;volatile
  8362                           
  8363                           ;pin_manager.c: 12: WPUB = 0x00;
  8364  0CF4  01C4               	clrf	68	;volatile
  8365                           
  8366                           ;pin_manager.c: 13: WPUC = 0x00;
  8367  0CF5  01CF               	clrf	79	;volatile
  8368                           
  8369                           ;pin_manager.c: 14: WPUE = 0x8;
  8370  0CF6  3008               	movlw	8
  8371  0CF7  00E5               	movwf	101	;volatile
  8372                           
  8373                           ;pin_manager.c: 16: TRISA = 0x02;
  8374  0CF8  3002               	movlw	2
  8375  0CF9  0020               	movlb	0	; select bank0
  8376  0CFA  0091               	movwf	17	;volatile
  8377                           
  8378                           ;pin_manager.c: 17: TRISB = 0x0A;
  8379  0CFB  300A               	movlw	10
  8380  0CFC  0092               	movwf	18	;volatile
  8381                           
  8382                           ;pin_manager.c: 18: TRISC = 0x10;
  8383  0CFD  3010               	movlw	16
  8384  0CFE  0093               	movwf	19	;volatile
  8385                           
  8386                           ;pin_manager.c: 20: ANSELA = 0x02;
  8387  0CFF  3002               	movlw	2
  8388  0D00  003E               	movlb	30	; select bank30
  8389  0D01  00B8               	movwf	56	;volatile
  8390                           
  8391                           ;pin_manager.c: 21: ANSELB = 0x0A;
  8392  0D02  300A               	movlw	10
  8393  0D03  00C3               	movwf	67	;volatile
  8394                           
  8395                           ;pin_manager.c: 22: ANSELC = 0x00;
  8396  0D04  01CE               	clrf	78	;volatile
  8397                           
  8398                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  8399  0D05  002E               	movlb	14	; select bank14
  8400  0D06  1216               	bcf	22,4	;volatile
  8401                           
  8402                           ;pin_manager.c: 25: bool state = GIE;
  8403  0D07  3000               	movlw	0
  8404  0D08  1B8B               	btfsc	11,7	;volatile
  8405  0D09  3001               	movlw	1
  8406  0D0A  00F0               	movwf	PIN_MANAGER_Initialize@state
  8407                           
  8408                           ;pin_manager.c: 26: GIE = 0;
  8409  0D0B  138B               	bcf	11,7	;volatile
  8410                           
  8411                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  8412  0D0C  3055               	movlw	85
  8413  0D0D  003D               	movlb	29	; select bank29
  8414  0D0E  008F               	movwf	15	;volatile
  8415                           
  8416                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  8417  0D0F  30AA               	movlw	170
  8418  0D10  008F               	movwf	15	;volatile
  8419                           
  8420                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  8421  0D11  100F               	bcf	15,0	;volatile
  8422                           
  8423                           ;pin_manager.c: 32: RC2PPS = 0x000E;
  8424  0D12  300E               	movlw	14
  8425  0D13  003E               	movlb	30	; select bank30
  8426  0D14  00A2               	movwf	34	;volatile
  8427                           
  8428                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  8429  0D15  3055               	movlw	85
  8430  0D16  003D               	movlb	29	; select bank29
  8431  0D17  008F               	movwf	15	;volatile
  8432                           
  8433                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  8434  0D18  30AA               	movlw	170
  8435  0D19  008F               	movwf	15	;volatile
  8436                           
  8437                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  8438  0D1A  140F               	bsf	15,0	;volatile
  8439                           
  8440                           ;pin_manager.c: 39: GIE = state;
  8441  0D1B  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  8442  0D1C  2D1F               	goto	u2120
  8443  0D1D  178B               	bsf	11,7	;volatile
  8444  0D1E  0008               	return
  8445  0D1F                     u2120:	
  8446  0D1F  138B               	bcf	11,7	;volatile
  8447  0D20  0008               	return
  8448  0D21                     __end_of_PIN_MANAGER_Initialize:	
  8449                           
  8450                           	psect	text21
  8451  0B94                     __ptext21:	
  8452 ;; *************** function _OSCILLATOR_Initialize *****************
  8453 ;; Defined at:
  8454 ;;		line 55 in file "system.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1    wreg      void 
  8461 ;; Registers used:
  8462 ;;		wreg, status,2
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8472 ;;Total ram usage:        0 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; This function calls:
  8475 ;;		Nothing
  8476 ;; This function is called by:
  8477 ;;		_SYSTEM_Initialize
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           
  8482                           ;psect for function _OSCILLATOR_Initialize
  8483  0B94                     _OSCILLATOR_Initialize:	
  8484                           
  8485                           ;system.c: 57: OSCCON1 = 0x60;
  8486                           
  8487                           ;incstack = 0
  8488                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8489  0B94  3060               	movlw	96
  8490  0B95  0031               	movlb	17	; select bank17
  8491  0B96  008D               	movwf	13	;volatile
  8492                           
  8493                           ;system.c: 58: OSCCON3 = 0x00;
  8494  0B97  018F               	clrf	15	;volatile
  8495                           
  8496                           ;system.c: 59: OSCEN = 0x00;
  8497  0B98  0191               	clrf	17	;volatile
  8498                           
  8499                           ;system.c: 60: OSCFRQ = 0x00;
  8500  0B99  0193               	clrf	19	;volatile
  8501                           
  8502                           ;system.c: 61: OSCTUNE = 0x00;
  8503  0B9A  0192               	clrf	18	;volatile
  8504  0B9B  0008               	return
  8505  0B9C                     __end_of_OSCILLATOR_Initialize:	
  8506                           
  8507                           	psect	text22
  8508  0F03                     __ptext22:	
  8509 ;; *************** function _LCD_Init *****************
  8510 ;; Defined at:
  8511 ;;		line 154 in file "lcd.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  style           1    wreg     unsigned char 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  style           1    5[COMMON] unsigned char 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, status,2, status,0, pclath, cstack
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8528 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;Total ram usage:        3 bytes
  8530 ;; Hardware stack levels used:    1
  8531 ;; Hardware stack levels required when called:    2
  8532 ;; This function calls:
  8533 ;;		_LCD_Cmd
  8534 ;;		_LCD_Port
  8535 ;; This function is called by:
  8536 ;;		_SYSTEM_Initialize
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           
  8541                           ;psect for function _LCD_Init
  8542  0F03                     _LCD_Init:	
  8543                           
  8544                           ;incstack = 0
  8545                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  8546                           ;LCD_Init@style stored from wreg
  8547  0F03  00F5               	movwf	LCD_Init@style
  8548                           
  8549                           ;lcd.c: 156: LCD_Port(0x00);
  8550  0F04  3000               	movlw	0
  8551  0F05  318B  23E0  318F   	fcall	_LCD_Port
  8552                           
  8553                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  8554  0F08  3021               	movlw	33
  8555  0F09  00F4               	movwf	??_LCD_Init+1
  8556  0F0A  3076               	movlw	118
  8557  0F0B  00F3               	movwf	??_LCD_Init
  8558  0F0C                     u2977:	
  8559  0F0C  0BF3               	decfsz	??_LCD_Init,f
  8560  0F0D  2F0C               	goto	u2977
  8561  0F0E  0BF4               	decfsz	??_LCD_Init+1,f
  8562  0F0F  2F0C               	goto	u2977
  8563  0F10  0000               	nop
  8564                           
  8565                           ;lcd.c: 160: LCD_Cmd(0x03);
  8566  0F11  3003               	movlw	3
  8567  0F12  318B  23B8  318F   	fcall	_LCD_Cmd
  8568                           
  8569                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  8570  0F15  3004               	movlw	4
  8571  0F16  00F4               	movwf	??_LCD_Init+1
  8572  0F17  303D               	movlw	61
  8573  0F18  00F3               	movwf	??_LCD_Init
  8574  0F19                     u2987:	
  8575  0F19  0BF3               	decfsz	??_LCD_Init,f
  8576  0F1A  2F19               	goto	u2987
  8577  0F1B  0BF4               	decfsz	??_LCD_Init+1,f
  8578  0F1C  2F19               	goto	u2987
  8579  0F1D  3200               	nop2
  8580                           
  8581                           ;lcd.c: 164: LCD_Cmd(0x03);
  8582  0F1E  3003               	movlw	3
  8583  0F1F  318B  23B8  318F   	fcall	_LCD_Cmd
  8584                           
  8585                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8586  0F22  3009               	movlw	9
  8587  0F23  00F3               	movwf	??_LCD_Init
  8588  0F24                     u2997:	
  8589  0F24  0BF3               	decfsz	??_LCD_Init,f
  8590  0F25  2F24               	goto	u2997
  8591  0F26  3200               	nop2	;nop
  8592                           
  8593                           ;lcd.c: 168: LCD_Cmd(0x03);
  8594  0F27  3003               	movlw	3
  8595  0F28  318B  23B8  318F   	fcall	_LCD_Cmd
  8596                           
  8597                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8598  0F2B  3009               	movlw	9
  8599  0F2C  00F3               	movwf	??_LCD_Init
  8600  0F2D                     u3007:	
  8601  0F2D  0BF3               	decfsz	??_LCD_Init,f
  8602  0F2E  2F2D               	goto	u3007
  8603  0F2F  3200               	nop2	;nop
  8604                           
  8605                           ;lcd.c: 172: LCD_Cmd(0x02);
  8606  0F30  3002               	movlw	2
  8607  0F31  318B  23B8  318F   	fcall	_LCD_Cmd
  8608                           
  8609                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8610  0F34  3009               	movlw	9
  8611  0F35  00F3               	movwf	??_LCD_Init
  8612  0F36                     u3017:	
  8613  0F36  0BF3               	decfsz	??_LCD_Init,f
  8614  0F37  2F36               	goto	u3017
  8615  0F38  3200               	nop2	;nop
  8616                           
  8617                           ;lcd.c: 176: LCD_Cmd(0x2);
  8618  0F39  3002               	movlw	2
  8619  0F3A  318B  23B8  318F   	fcall	_LCD_Cmd
  8620                           
  8621                           ;lcd.c: 178: LCD_Cmd(0x8);
  8622  0F3D  3008               	movlw	8
  8623  0F3E  318B  23B8  318F   	fcall	_LCD_Cmd
  8624                           
  8625                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8626  0F41  3009               	movlw	9
  8627  0F42  00F3               	movwf	??_LCD_Init
  8628  0F43                     u3027:	
  8629  0F43  0BF3               	decfsz	??_LCD_Init,f
  8630  0F44  2F43               	goto	u3027
  8631  0F45  3200               	nop2	;nop
  8632                           
  8633                           ;lcd.c: 182: LCD_Cmd(0x0);
  8634  0F46  3000               	movlw	0
  8635  0F47  318B  23B8  318F   	fcall	_LCD_Cmd
  8636                           
  8637                           ;lcd.c: 184: LCD_Cmd(0x8);
  8638  0F4A  3008               	movlw	8
  8639  0F4B  318B  23B8  318F   	fcall	_LCD_Cmd
  8640                           
  8641                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8642  0F4E  3009               	movlw	9
  8643  0F4F  00F3               	movwf	??_LCD_Init
  8644  0F50                     u3037:	
  8645  0F50  0BF3               	decfsz	??_LCD_Init,f
  8646  0F51  2F50               	goto	u3037
  8647  0F52  3200               	nop2	;nop
  8648                           
  8649                           ;lcd.c: 188: LCD_Cmd(0x0);
  8650  0F53  3000               	movlw	0
  8651  0F54  318B  23B8  318F   	fcall	_LCD_Cmd
  8652                           
  8653                           ;lcd.c: 190: LCD_Cmd(0x1);
  8654  0F57  3001               	movlw	1
  8655  0F58  318B  23B8  318F   	fcall	_LCD_Cmd
  8656                           
  8657                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  8658  0F5B  30F9               	movlw	249
  8659  0F5C  00F3               	movwf	??_LCD_Init
  8660  0F5D                     u3047:	
  8661  0F5D  3200               	nop2
  8662  0F5E  0BF3               	decfsz	??_LCD_Init,f
  8663  0F5F  2F5D               	goto	u3047
  8664  0F60  3200               	nop2	;nop
  8665  0F61  3200               	nop2	;nop
  8666                           
  8667                           ;lcd.c: 194: LCD_Cmd(0x0);
  8668  0F62  3000               	movlw	0
  8669  0F63  318B  23B8  318F   	fcall	_LCD_Cmd
  8670                           
  8671                           ;lcd.c: 196: LCD_Cmd(0x6);
  8672  0F66  3006               	movlw	6
  8673  0F67  318B  23B8  318F   	fcall	_LCD_Cmd
  8674                           
  8675                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8676  0F6A  3009               	movlw	9
  8677  0F6B  00F3               	movwf	??_LCD_Init
  8678  0F6C                     u3057:	
  8679  0F6C  0BF3               	decfsz	??_LCD_Init,f
  8680  0F6D  2F6C               	goto	u3057
  8681  0F6E  3200               	nop2	;nop
  8682                           
  8683                           ;lcd.c: 200: LCD_Cmd(0x0);
  8684  0F6F  3000               	movlw	0
  8685  0F70  318B  23B8  318F   	fcall	_LCD_Cmd
  8686                           
  8687                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  8688  0F73  0875               	movf	LCD_Init@style,w
  8689  0F74  380C               	iorlw	12
  8690  0F75  318B  23B8  318F   	fcall	_LCD_Cmd
  8691                           
  8692                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  8693  0F78  3009               	movlw	9
  8694  0F79  00F3               	movwf	??_LCD_Init
  8695  0F7A                     u3067:	
  8696  0F7A  0BF3               	decfsz	??_LCD_Init,f
  8697  0F7B  2F7A               	goto	u3067
  8698  0F7C  3200               	nop2	;nop
  8699  0F7D  0008               	return
  8700  0F7E                     __end_of_LCD_Init:	
  8701                           
  8702                           	psect	text23
  8703  0B8C                     __ptext23:	
  8704 ;; *************** function _LCD_Clear *****************
  8705 ;; Defined at:
  8706 ;;		line 75 in file "lcd.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;		None
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      void 
  8713 ;; Registers used:
  8714 ;;		wreg, status,2, status,0, pclath, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;Total ram usage:        0 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:    2
  8727 ;; This function calls:
  8728 ;;		_LCD_Cmd
  8729 ;; This function is called by:
  8730 ;;		_SYSTEM_Initialize
  8731 ;;		_main
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           
  8736                           ;psect for function _LCD_Clear
  8737  0B8C                     _LCD_Clear:	
  8738                           
  8739                           ;lcd.c: 77: LCD_Cmd(0);
  8740                           
  8741                           ;incstack = 0
  8742                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  8743  0B8C  3000               	movlw	0
  8744  0B8D  318B  23B8  318B   	fcall	_LCD_Cmd
  8745                           
  8746                           ;lcd.c: 78: LCD_Cmd(1);
  8747  0B90  3001               	movlw	1
  8748  0B91  318B  23B8         	fcall	_LCD_Cmd
  8749  0B93  0008               	return
  8750  0B94                     __end_of_LCD_Clear:	
  8751                           
  8752                           	psect	text24
  8753  0C9D                     __ptext24:	
  8754 ;; *************** function _InitCustomChars *****************
  8755 ;; Defined at:
  8756 ;;		line 29 in file "lcd.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  i               1    6[COMMON] unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;Total ram usage:        2 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    2
  8777 ;; This function calls:
  8778 ;;		_LCD_Cmd
  8779 ;;		_LCD_Write_Char
  8780 ;; This function is called by:
  8781 ;;		_SYSTEM_Initialize
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           
  8786                           ;psect for function _InitCustomChars
  8787  0C9D                     _InitCustomChars:	
  8788                           
  8789                           ;lcd.c: 31: uint8_t i;
  8790                           ;lcd.c: 32: LCD_Cmd(0x04);
  8791                           
  8792                           ;incstack = 0
  8793                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8794  0C9D  3004               	movlw	4
  8795  0C9E  318B  23B8  318C   	fcall	_LCD_Cmd
  8796                           
  8797                           ;lcd.c: 33: LCD_Cmd(0x00);
  8798  0CA1  3000               	movlw	0
  8799  0CA2  318B  23B8  318C   	fcall	_LCD_Cmd
  8800                           
  8801                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  8802  0CA5  01F6               	clrf	InitCustomChars@i
  8803  0CA6  3018               	movlw	24
  8804  0CA7  0276               	subwf	InitCustomChars@i,w
  8805  0CA8  1803               	btfsc	3,0
  8806  0CA9  2CBB               	goto	l2023
  8807  0CAA                     l2017:	
  8808                           
  8809                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  8810  0CAA  0876               	movf	InitCustomChars@i,w
  8811  0CAB  3E20               	addlw	(low (___cgram| (0+256)))& (0+255)
  8812  0CAC  0086               	movwf	6
  8813  0CAD  3001               	movlw	1	; select bank2/3
  8814  0CAE  0087               	movwf	7
  8815  0CAF  0801               	movf	1,w
  8816  0CB0  318C  24C3  318C   	fcall	_LCD_Write_Char
  8817  0CB3  3001               	movlw	1
  8818  0CB4  00F5               	movwf	??_InitCustomChars
  8819  0CB5  0875               	movf	??_InitCustomChars,w
  8820  0CB6  07F6               	addwf	InitCustomChars@i,f
  8821  0CB7  3018               	movlw	24
  8822  0CB8  0276               	subwf	InitCustomChars@i,w
  8823  0CB9  1C03               	skipc
  8824  0CBA  2CAA               	goto	l2017
  8825  0CBB                     l2023:	
  8826                           
  8827                           ;lcd.c: 36: LCD_Cmd(0);
  8828  0CBB  3000               	movlw	0
  8829  0CBC  318B  23B8  318C   	fcall	_LCD_Cmd
  8830                           
  8831                           ;lcd.c: 37: LCD_Cmd(2);
  8832  0CBF  3002               	movlw	2
  8833  0CC0  318B  23B8         	fcall	_LCD_Cmd
  8834  0CC2  0008               	return
  8835  0CC3                     __end_of_InitCustomChars:	
  8836                           
  8837                           	psect	text25
  8838  0C2A                     __ptext25:	
  8839 ;; *************** function _ADCC_Initialize *****************
  8840 ;; Defined at:
  8841 ;;		line 16 in file "adcc.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;		None
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;		None
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;Total ram usage:        0 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_SYSTEM_Initialize
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           
  8869                           ;psect for function _ADCC_Initialize
  8870  0C2A                     _ADCC_Initialize:	
  8871                           
  8872                           ;adcc.c: 19: ADCON1 = 0x00;
  8873                           
  8874                           ;incstack = 0
  8875                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  8876  0C2A  0021               	movlb	1	; select bank1
  8877  0C2B  0194               	clrf	20	;volatile
  8878                           
  8879                           ;adcc.c: 21: ADCON2 = 0x00;
  8880  0C2C  0195               	clrf	21	;volatile
  8881                           
  8882                           ;adcc.c: 23: ADCON3 = 0x00;
  8883  0C2D  0196               	clrf	22	;volatile
  8884                           
  8885                           ;adcc.c: 25: ADACT = 0x00;
  8886  0C2E  0199               	clrf	25	;volatile
  8887                           
  8888                           ;adcc.c: 27: ADSTAT = 0x00;
  8889  0C2F  0197               	clrf	23	;volatile
  8890                           
  8891                           ;adcc.c: 29: ADCLK = 0x0F;
  8892  0C30  300F               	movlw	15
  8893  0C31  0098               	movwf	24	;volatile
  8894                           
  8895                           ;adcc.c: 33: ADREF = 0x00;
  8896  0C32  019A               	clrf	26	;volatile
  8897                           
  8898                           ;adcc.c: 35: ADCAP = 0x1F;
  8899  0C33  301F               	movlw	31
  8900  0C34  009B               	movwf	27	;volatile
  8901                           
  8902                           ;adcc.c: 37: ADPRE = 0x00;
  8903  0C35  019C               	clrf	28	;volatile
  8904                           
  8905                           ;adcc.c: 39: ADACQ = 0x00;
  8906  0C36  019D               	clrf	29	;volatile
  8907                           
  8908                           ;adcc.c: 41: ADPCH = 0x00;
  8909  0C37  019E               	clrf	30	;volatile
  8910                           
  8911                           ;adcc.c: 43: ADRPT = 0x00;
  8912  0C38  0022               	movlb	2	; select bank2
  8913  0C39  018D               	clrf	13	;volatile
  8914                           
  8915                           ;adcc.c: 45: ADLTHL = 0x00;
  8916  0C3A  018E               	clrf	14	;volatile
  8917                           
  8918                           ;adcc.c: 47: ADLTHH = 0x00;
  8919  0C3B  018F               	clrf	15	;volatile
  8920                           
  8921                           ;adcc.c: 49: ADUTHL = 0x00;
  8922  0C3C  0190               	clrf	16	;volatile
  8923                           
  8924                           ;adcc.c: 51: ADUTHH = 0x00;
  8925  0C3D  0191               	clrf	17	;volatile
  8926                           
  8927                           ;adcc.c: 53: ADSTPTL = 0x00;
  8928  0C3E  0192               	clrf	18	;volatile
  8929                           
  8930                           ;adcc.c: 55: ADSTPTH = 0x00;
  8931  0C3F  0193               	clrf	19	;volatile
  8932                           
  8933                           ;adcc.c: 58: ADCON0 = 0x84;
  8934  0C40  3084               	movlw	132
  8935  0C41  0021               	movlb	1	; select bank1
  8936  0C42  0093               	movwf	19	;volatile
  8937  0C43  0008               	return
  8938  0C44                     __end_of_ADCC_Initialize:	
  8939                           
  8940                           	psect	text26
  8941  0BCA                     __ptext26:	
  8942 ;; *************** function _PWM6_LoadDutyValue *****************
  8943 ;; Defined at:
  8944 ;;		line 14 in file "pwm6.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  dutyCycle       2    0[COMMON] unsigned int 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8962 ;;Total ram usage:        4 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; This function calls:
  8965 ;;		Nothing
  8966 ;; This function is called by:
  8967 ;;		_main
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           
  8972                           ;psect for function _PWM6_LoadDutyValue
  8973  0BCA                     _PWM6_LoadDutyValue:	
  8974                           
  8975                           ;pwm6.c: 16: PWM6DCH = (dutyCycle & 0x03FC)>>2;
  8976                           
  8977                           ;incstack = 0
  8978                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  8979  0BCA  0871               	movf	PWM6_LoadDutyValue@dutyCycle+1,w
  8980  0BCB  00F3               	movwf	??_PWM6_LoadDutyValue+1
  8981  0BCC  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  8982  0BCD  00F2               	movwf	??_PWM6_LoadDutyValue
  8983  0BCE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  8984  0BCF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  8985  0BD0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
  8986  0BD1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
  8987  0BD2  0872               	movf	??_PWM6_LoadDutyValue,w
  8988  0BD3  0027               	movlb	7	; select bank7
  8989  0BD4  008D               	movwf	13	;volatile
  8990                           
  8991                           ;pwm6.c: 18: PWM6DCL = (dutyCycle & 0x0003)<<6;
  8992  0BD5  0870               	movf	PWM6_LoadDutyValue@dutyCycle,w
  8993  0BD6  3903               	andlw	3
  8994  0BD7  00F2               	movwf	??_PWM6_LoadDutyValue
  8995  0BD8  3005               	movlw	5
  8996  0BD9                     u2785:	
  8997  0BD9  35F2               	lslf	??_PWM6_LoadDutyValue,f
  8998  0BDA  3EFF               	addlw	-1
  8999  0BDB  1D03               	skipz
  9000  0BDC  2BD9               	goto	u2785
  9001  0BDD  3572               	lslf	??_PWM6_LoadDutyValue,w
  9002  0BDE  008C               	movwf	12	;volatile
  9003  0BDF  0008               	return
  9004  0BE0                     __end_of_PWM6_LoadDutyValue:	
  9005                           
  9006                           	psect	text27
  9007  0C10                     __ptext27:	
  9008 ;; *************** function _LCD_Write_String *****************
  9009 ;; Defined at:
  9010 ;;		line 239 in file "lcd.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  a               2    5[COMMON] PTR const unsigned char 
  9013 ;;		 -> STR_2(7), STR_1(9), 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  i               2    8[COMMON] int 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;Total ram usage:        5 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    2
  9032 ;; This function calls:
  9033 ;;		_LCD_Write_Char
  9034 ;; This function is called by:
  9035 ;;		_main
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           
  9040                           ;psect for function _LCD_Write_String
  9041  0C10                     _LCD_Write_String:	
  9042                           
  9043                           ;lcd.c: 241: int i;
  9044                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  9045                           
  9046                           ;incstack = 0
  9047                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9048  0C10  01F8               	clrf	LCD_Write_String@i
  9049  0C11  01F9               	clrf	LCD_Write_String@i+1
  9050  0C12                     l2379:	
  9051  0C12  0875               	movf	LCD_Write_String@a,w
  9052  0C13  0778               	addwf	LCD_Write_String@i,w
  9053  0C14  0084               	movwf	4
  9054  0C15  0876               	movf	LCD_Write_String@a+1,w
  9055  0C16  3D79               	addwfc	LCD_Write_String@i+1,w
  9056  0C17  0085               	movwf	5
  9057  0C18  0012               	moviw fsr0++
  9058  0C19  1903               	btfsc	3,2
  9059  0C1A  0008               	return
  9060                           
  9061                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  9062  0C1B  0875               	movf	LCD_Write_String@a,w
  9063  0C1C  0778               	addwf	LCD_Write_String@i,w
  9064  0C1D  0084               	movwf	4
  9065  0C1E  0876               	movf	LCD_Write_String@a+1,w
  9066  0C1F  3D79               	addwfc	LCD_Write_String@i+1,w
  9067  0C20  0085               	movwf	5
  9068  0C21  0800               	movf	0,w	;code access
  9069  0C22  318C  24C3  318C   	fcall	_LCD_Write_Char
  9070  0C25  3001               	movlw	1
  9071  0C26  07F8               	addwf	LCD_Write_String@i,f
  9072  0C27  3000               	movlw	0
  9073  0C28  3DF9               	addwfc	LCD_Write_String@i+1,f
  9074  0C29  2C12               	goto	l2379
  9075  0C2A                     __end_of_LCD_Write_String:	
  9076                           
  9077                           	psect	text28
  9078  0303                     __ptext28:	
  9079 ;; *************** function _LCD_Write_Int *****************
  9080 ;; Defined at:
  9081 ;;		line 246 in file "lcd.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;  value           2    0[BANK0 ] int 
  9084 ;;  fieldLength     1    2[BANK0 ] char 
  9085 ;;  numPlaces       1    3[BANK0 ] char 
  9086 ;;  sign            1    4[BANK0 ] char 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;  str             5   10[BANK0 ] unsigned char [5]
  9089 ;;  i               2   17[BANK0 ] int 
  9090 ;;  j               2   15[BANK0 ] int 
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  1    wreg      void 
  9093 ;; Registers used:
  9094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9100 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;Total ram usage:       19 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    2
  9107 ;; This function calls:
  9108 ;;		_LCD_Write_Char
  9109 ;;		___awdiv
  9110 ;;		___awmod
  9111 ;; This function is called by:
  9112 ;;		_main
  9113 ;; This function uses a non-reentrant model
  9114 ;;
  9115                           
  9116                           
  9117                           ;psect for function _LCD_Write_Int
  9118  0303                     _LCD_Write_Int:	
  9119                           
  9120                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  9121                           
  9122                           ;incstack = 0
  9123                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9124  0303  30CA               	movlw	low LCD_Write_Int@F13687
  9125  0304  0086               	movwf	6
  9126  0305  3000               	movlw	high LCD_Write_Int@F13687
  9127  0306  0087               	movwf	7
  9128  0307  302A               	movlw	low LCD_Write_Int@str
  9129  0308  0084               	movwf	4
  9130  0309  3000               	movlw	high LCD_Write_Int@str
  9131  030A  0085               	movwf	5
  9132  030B  3005               	movlw	5
  9133  030C  0020               	movlb	0	; select bank0
  9134  030D  00A5               	movwf	??_LCD_Write_Int
  9135  030E                     u2690:	
  9136  030E  0016               	moviw fsr1++
  9137  030F  001A               	movwi fsr0++
  9138  0310  0BA5               	decfsz	??_LCD_Write_Int,f
  9139  0311  2B0E               	goto	u2690
  9140                           
  9141                           ;lcd.c: 249: int i=4,j=0;
  9142  0312  3004               	movlw	4
  9143  0313  00B1               	movwf	LCD_Write_Int@i
  9144  0314  3000               	movlw	0
  9145  0315  00B2               	movwf	LCD_Write_Int@i+1
  9146  0316  01AF               	clrf	LCD_Write_Int@j
  9147  0317  01B0               	clrf	LCD_Write_Int@j+1
  9148                           
  9149                           ;lcd.c: 251: if(value<0)
  9150  0318  1FA1               	btfss	LCD_Write_Int@value+1,7
  9151  0319  2B25               	goto	l2393
  9152                           
  9153                           ;lcd.c: 252: {
  9154                           ;lcd.c: 253: LCD_Write_Char('-');
  9155  031A  302D               	movlw	45
  9156  031B  318C  24C3  3183   	fcall	_LCD_Write_Char
  9157                           
  9158                           ;lcd.c: 254: value=value*-1;
  9159  031E  0020               	movlb	0	; select bank0
  9160  031F  09A0               	comf	LCD_Write_Int@value,f
  9161  0320  09A1               	comf	LCD_Write_Int@value+1,f
  9162  0321  0AA0               	incf	LCD_Write_Int@value,f
  9163  0322  1903               	skipnz
  9164  0323  0AA1               	incf	LCD_Write_Int@value+1,f
  9165                           
  9166                           ;lcd.c: 255: }
  9167  0324  2B2C               	goto	l2403
  9168  0325                     l2393:	
  9169                           
  9170                           ;lcd.c: 257: else
  9171                           ;lcd.c: 258: {
  9172                           ;lcd.c: 259: if(sign == 1)
  9173  0325  0324               	decf	LCD_Write_Int@sign,w
  9174  0326  1D03               	btfss	3,2
  9175  0327  2B2C               	goto	l2403
  9176                           
  9177                           ;lcd.c: 260: {
  9178                           ;lcd.c: 261: LCD_Write_Char('+');
  9179  0328  302B               	movlw	43
  9180  0329  318C  24C3  3183   	fcall	_LCD_Write_Char
  9181  032C                     l2403:	
  9182                           ;lcd.c: 262: }
  9183                           ;lcd.c: 263: }
  9184                           ;lcd.c: 265: while(value)
  9185                           
  9186  032C  0020               	movlb	0	; select bank0
  9187  032D  0820               	movf	LCD_Write_Int@value,w
  9188  032E  0421               	iorwf	LCD_Write_Int@value+1,w
  9189  032F  1903               	btfsc	3,2
  9190  0330  2B5B               	goto	l2405
  9191                           
  9192                           ;lcd.c: 266: {
  9193                           ;lcd.c: 267: str[i]=value%10;
  9194  0331  300A               	movlw	10
  9195  0332  00F0               	movwf	___awmod@divisor
  9196  0333  3000               	movlw	0
  9197  0334  00F1               	movwf	___awmod@divisor+1
  9198  0335  0020               	movlb	0	; select bank0
  9199  0336  0821               	movf	LCD_Write_Int@value+1,w
  9200  0337  00F3               	movwf	___awmod@dividend+1
  9201  0338  0820               	movf	LCD_Write_Int@value,w
  9202  0339  00F2               	movwf	___awmod@dividend
  9203  033A  318E  260D  3183   	fcall	___awmod
  9204  033D  0870               	movf	?___awmod,w
  9205  033E  0020               	movlb	0	; select bank0
  9206  033F  00A5               	movwf	??_LCD_Write_Int
  9207  0340  0831               	movf	LCD_Write_Int@i,w
  9208  0341  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9209  0342  0086               	movwf	6
  9210  0343  0187               	clrf	7
  9211  0344  0825               	movf	??_LCD_Write_Int,w
  9212  0345  0081               	movwf	1
  9213                           
  9214                           ;lcd.c: 268: value=value/10;
  9215  0346  300A               	movlw	10
  9216  0347  00F0               	movwf	___awdiv@divisor
  9217  0348  3000               	movlw	0
  9218  0349  00F1               	movwf	___awdiv@divisor+1
  9219  034A  0821               	movf	LCD_Write_Int@value+1,w
  9220  034B  00F3               	movwf	___awdiv@dividend+1
  9221  034C  0820               	movf	LCD_Write_Int@value,w
  9222  034D  00F2               	movwf	___awdiv@dividend
  9223  034E  318E  2652  3183   	fcall	___awdiv
  9224  0351  0871               	movf	?___awdiv+1,w
  9225  0352  0020               	movlb	0	; select bank0
  9226  0353  00A1               	movwf	LCD_Write_Int@value+1
  9227  0354  0870               	movf	?___awdiv,w
  9228  0355  00A0               	movwf	LCD_Write_Int@value
  9229                           
  9230                           ;lcd.c: 269: i--;
  9231  0356  30FF               	movlw	255
  9232  0357  07B1               	addwf	LCD_Write_Int@i,f
  9233  0358  30FF               	movlw	255
  9234  0359  3DB2               	addwfc	LCD_Write_Int@i+1,f
  9235  035A  2B2C               	goto	l2403
  9236  035B                     l2405:	
  9237                           
  9238                           ;lcd.c: 270: }
  9239                           ;lcd.c: 271: if(fieldLength==-1)
  9240  035B  0A22               	incf	LCD_Write_Int@fieldLength,w
  9241  035C  1903               	btfsc	3,2
  9242  035D  2B63               	goto	l2411
  9243  035E  2B6B               	goto	l2413
  9244  035F                     l2409:	
  9245                           ;lcd.c: 272: {
  9246                           ;lcd.c: 273: while(str[j]==0)
  9247                           
  9248                           
  9249                           ;lcd.c: 274: {
  9250                           ;lcd.c: 275: j++;
  9251  035F  3001               	movlw	1
  9252  0360  07AF               	addwf	LCD_Write_Int@j,f
  9253  0361  3000               	movlw	0
  9254  0362  3DB0               	addwfc	LCD_Write_Int@j+1,f
  9255  0363                     l2411:	
  9256  0363  082F               	movf	LCD_Write_Int@j,w
  9257  0364  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9258  0365  0086               	movwf	6
  9259  0366  0187               	clrf	7
  9260  0367  0801               	movf	1,w
  9261  0368  1D03               	btfss	3,2
  9262  0369  2B7B               	goto	l2415
  9263  036A  2B5F               	goto	l2409
  9264  036B                     l2413:	
  9265                           ;lcd.c: 276: }
  9266                           ;lcd.c: 277: }
  9267                           
  9268                           
  9269                           ;lcd.c: 278: else
  9270                           ;lcd.c: 279: {
  9271                           ;lcd.c: 280: j=5-fieldLength;
  9272  036B  0822               	movf	LCD_Write_Int@fieldLength,w
  9273  036C  00A5               	movwf	??_LCD_Write_Int
  9274  036D  01A6               	clrf	??_LCD_Write_Int+1
  9275  036E  1BA5               	btfsc	??_LCD_Write_Int,7
  9276  036F  03A6               	decf	??_LCD_Write_Int+1,f
  9277  0370  09A5               	comf	??_LCD_Write_Int,f
  9278  0371  09A6               	comf	??_LCD_Write_Int+1,f
  9279  0372  0AA5               	incf	??_LCD_Write_Int,f
  9280  0373  1903               	skipnz
  9281  0374  0AA6               	incf	??_LCD_Write_Int+1,f
  9282  0375  0825               	movf	??_LCD_Write_Int,w
  9283  0376  3E05               	addlw	5
  9284  0377  00AF               	movwf	LCD_Write_Int@j
  9285  0378  3000               	movlw	0
  9286  0379  3D26               	addwfc	??_LCD_Write_Int+1,w
  9287  037A  00B0               	movwf	LCD_Write_Int@j+1
  9288  037B                     l2415:	
  9289                           
  9290                           ;lcd.c: 281: }
  9291                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  9292  037B  0830               	movf	LCD_Write_Int@j+1,w
  9293  037C  00B2               	movwf	LCD_Write_Int@i+1
  9294  037D  082F               	movf	LCD_Write_Int@j,w
  9295  037E  00B1               	movwf	LCD_Write_Int@i
  9296  037F                     l2421:	
  9297  037F  0823               	movf	LCD_Write_Int@numPlaces,w
  9298  0380  00A5               	movwf	??_LCD_Write_Int
  9299  0381  01A6               	clrf	??_LCD_Write_Int+1
  9300  0382  1BA5               	btfsc	??_LCD_Write_Int,7
  9301  0383  03A6               	decf	??_LCD_Write_Int+1,f
  9302  0384  09A5               	comf	??_LCD_Write_Int,f
  9303  0385  09A6               	comf	??_LCD_Write_Int+1,f
  9304  0386  0AA5               	incf	??_LCD_Write_Int,f
  9305  0387  1903               	skipnz
  9306  0388  0AA6               	incf	??_LCD_Write_Int+1,f
  9307  0389  0825               	movf	??_LCD_Write_Int,w
  9308  038A  3E05               	addlw	5
  9309  038B  00A7               	movwf	??_LCD_Write_Int+2
  9310  038C  3000               	movlw	0
  9311  038D  3D26               	addwfc	??_LCD_Write_Int+1,w
  9312  038E  00A8               	movwf	??_LCD_Write_Int+3
  9313  038F  0832               	movf	LCD_Write_Int@i+1,w
  9314  0390  3A80               	xorlw	128
  9315  0391  00A9               	movwf	??_LCD_Write_Int+4
  9316  0392  0828               	movf	??_LCD_Write_Int+3,w
  9317  0393  3A80               	xorlw	128
  9318  0394  0229               	subwf	??_LCD_Write_Int+4,w
  9319  0395  1D03               	skipz
  9320  0396  2B99               	goto	u2755
  9321  0397  0827               	movf	??_LCD_Write_Int+2,w
  9322  0398  0231               	subwf	LCD_Write_Int@i,w
  9323  0399                     u2755:	
  9324  0399  1803               	btfsc	3,0
  9325  039A  2BAB               	goto	l2423
  9326                           
  9327                           ;lcd.c: 284: {
  9328                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  9329  039B  0020               	movlb	0	; select bank0
  9330  039C  0831               	movf	LCD_Write_Int@i,w
  9331  039D  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  9332  039E  0086               	movwf	6
  9333  039F  0187               	clrf	7
  9334  03A0  0801               	movf	1,w
  9335  03A1  3E30               	addlw	48
  9336  03A2  318C  24C3  3183   	fcall	_LCD_Write_Char
  9337  03A5  3001               	movlw	1
  9338  03A6  0020               	movlb	0	; select bank0
  9339  03A7  07B1               	addwf	LCD_Write_Int@i,f
  9340  03A8  3000               	movlw	0
  9341  03A9  3DB2               	addwfc	LCD_Write_Int@i+1,f
  9342  03AA  2B7F               	goto	l2421
  9343  03AB                     l2423:	
  9344                           
  9345                           ;lcd.c: 286: }
  9346                           ;lcd.c: 288: if(numPlaces == 1)
  9347  03AB  0020               	movlb	0	; select bank0
  9348  03AC  0323               	decf	LCD_Write_Int@numPlaces,w
  9349  03AD  1D03               	btfss	3,2
  9350  03AE  2BB9               	goto	l2427
  9351                           
  9352                           ;lcd.c: 289: {
  9353                           ;lcd.c: 290: LCD_Write_Char(46);
  9354  03AF  302E               	movlw	46
  9355  03B0  318C  24C3  3183   	fcall	_LCD_Write_Char
  9356                           
  9357                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  9358  03B3  0020               	movlb	0	; select bank0
  9359  03B4  082E               	movf	LCD_Write_Int@str+4,w
  9360  03B5  3E30               	addlw	48
  9361  03B6  318C  24C3  3183   	fcall	_LCD_Write_Char
  9362  03B9                     l2427:	
  9363                           
  9364                           ;lcd.c: 292: }
  9365                           ;lcd.c: 294: if(numPlaces == 2)
  9366  03B9  3002               	movlw	2
  9367  03BA  0020               	movlb	0	; select bank0
  9368  03BB  0623               	xorwf	LCD_Write_Int@numPlaces,w
  9369  03BC  1D03               	btfss	3,2
  9370  03BD  0008               	return
  9371                           
  9372                           ;lcd.c: 295: {
  9373                           ;lcd.c: 296: LCD_Write_Char(46);
  9374  03BE  302E               	movlw	46
  9375  03BF  318C  24C3  3183   	fcall	_LCD_Write_Char
  9376                           
  9377                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  9378  03C2  0020               	movlb	0	; select bank0
  9379  03C3  082D               	movf	LCD_Write_Int@str+3,w
  9380  03C4  3E30               	addlw	48
  9381  03C5  318C  24C3  3183   	fcall	_LCD_Write_Char
  9382                           
  9383                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  9384  03C8  0020               	movlb	0	; select bank0
  9385  03C9  082E               	movf	LCD_Write_Int@str+4,w
  9386  03CA  3E30               	addlw	48
  9387  03CB  318C  24C3         	fcall	_LCD_Write_Char
  9388  03CD  0008               	return
  9389  03CE                     __end_of_LCD_Write_Int:	
  9390                           
  9391                           	psect	text29
  9392  0E0D                     __ptext29:	
  9393 ;; *************** function ___awmod *****************
  9394 ;; Defined at:
  9395 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  divisor         2    0[COMMON] int 
  9398 ;;  dividend        2    2[COMMON] int 
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;  sign            1    6[COMMON] unsigned char 
  9401 ;;  counter         1    5[COMMON] unsigned char 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  2    0[COMMON] int 
  9404 ;; Registers used:
  9405 ;;		wreg, status,2, status,0
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;Total ram usage:        7 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; This function calls:
  9418 ;;		Nothing
  9419 ;; This function is called by:
  9420 ;;		_LCD_Write_Int
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           
  9425                           ;psect for function ___awmod
  9426  0E0D                     ___awmod:	
  9427                           
  9428                           ;incstack = 0
  9429                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9430  0E0D  01F6               	clrf	___awmod@sign
  9431  0E0E  1FF3               	btfss	___awmod@dividend+1,7
  9432  0E0F  2E17               	goto	l2251
  9433  0E10  09F2               	comf	___awmod@dividend,f
  9434  0E11  09F3               	comf	___awmod@dividend+1,f
  9435  0E12  0AF2               	incf	___awmod@dividend,f
  9436  0E13  1903               	skipnz
  9437  0E14  0AF3               	incf	___awmod@dividend+1,f
  9438  0E15  01F6               	clrf	___awmod@sign
  9439  0E16  0AF6               	incf	___awmod@sign,f
  9440  0E17                     l2251:	
  9441  0E17  1FF1               	btfss	___awmod@divisor+1,7
  9442  0E18  2E1E               	goto	l2255
  9443  0E19  09F0               	comf	___awmod@divisor,f
  9444  0E1A  09F1               	comf	___awmod@divisor+1,f
  9445  0E1B  0AF0               	incf	___awmod@divisor,f
  9446  0E1C  1903               	skipnz
  9447  0E1D  0AF1               	incf	___awmod@divisor+1,f
  9448  0E1E                     l2255:	
  9449  0E1E  0870               	movf	___awmod@divisor,w
  9450  0E1F  0471               	iorwf	___awmod@divisor+1,w
  9451  0E20  1903               	btfsc	3,2
  9452  0E21  2E45               	goto	l2273
  9453  0E22  01F5               	clrf	___awmod@counter
  9454  0E23  0AF5               	incf	___awmod@counter,f
  9455  0E24                     l2263:	
  9456  0E24  1BF1               	btfsc	___awmod@divisor+1,7
  9457  0E25  2E30               	goto	l2265
  9458  0E26  3001               	movlw	1
  9459  0E27                     u2395:	
  9460  0E27  35F0               	lslf	___awmod@divisor,f
  9461  0E28  0DF1               	rlf	___awmod@divisor+1,f
  9462  0E29  0B89               	decfsz	9,f
  9463  0E2A  2E27               	goto	u2395
  9464  0E2B  3001               	movlw	1
  9465  0E2C  00F4               	movwf	??___awmod
  9466  0E2D  0874               	movf	??___awmod,w
  9467  0E2E  07F5               	addwf	___awmod@counter,f
  9468  0E2F  2E24               	goto	l2263
  9469  0E30                     l2265:	
  9470  0E30  0871               	movf	___awmod@divisor+1,w
  9471  0E31  0273               	subwf	___awmod@dividend+1,w
  9472  0E32  1D03               	skipz
  9473  0E33  2E36               	goto	u2415
  9474  0E34  0870               	movf	___awmod@divisor,w
  9475  0E35  0272               	subwf	___awmod@dividend,w
  9476  0E36                     u2415:	
  9477  0E36  1C03               	skipc
  9478  0E37  2E3C               	goto	l2269
  9479  0E38  0870               	movf	___awmod@divisor,w
  9480  0E39  02F2               	subwf	___awmod@dividend,f
  9481  0E3A  0871               	movf	___awmod@divisor+1,w
  9482  0E3B  3BF3               	subwfb	___awmod@dividend+1,f
  9483  0E3C                     l2269:	
  9484  0E3C  3001               	movlw	1
  9485  0E3D                     u2425:	
  9486  0E3D  36F1               	lsrf	___awmod@divisor+1,f
  9487  0E3E  0CF0               	rrf	___awmod@divisor,f
  9488  0E3F  0B89               	decfsz	9,f
  9489  0E40  2E3D               	goto	u2425
  9490  0E41  3001               	movlw	1
  9491  0E42  02F5               	subwf	___awmod@counter,f
  9492  0E43  1D03               	btfss	3,2
  9493  0E44  2E30               	goto	l2265
  9494  0E45                     l2273:	
  9495  0E45  0876               	movf	___awmod@sign,w
  9496  0E46  1903               	btfsc	3,2
  9497  0E47  2E4D               	goto	l2277
  9498  0E48  09F2               	comf	___awmod@dividend,f
  9499  0E49  09F3               	comf	___awmod@dividend+1,f
  9500  0E4A  0AF2               	incf	___awmod@dividend,f
  9501  0E4B  1903               	skipnz
  9502  0E4C  0AF3               	incf	___awmod@dividend+1,f
  9503  0E4D                     l2277:	
  9504  0E4D  0873               	movf	___awmod@dividend+1,w
  9505  0E4E  00F1               	movwf	?___awmod+1
  9506  0E4F  0872               	movf	___awmod@dividend,w
  9507  0E50  00F0               	movwf	?___awmod
  9508  0E51  0008               	return
  9509  0E52                     __end_of___awmod:	
  9510                           
  9511                           	psect	text30
  9512  0E52                     __ptext30:	
  9513 ;; *************** function ___awdiv *****************
  9514 ;; Defined at:
  9515 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  divisor         2    0[COMMON] int 
  9518 ;;  dividend        2    2[COMMON] int 
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  quotient        2    7[COMMON] int 
  9521 ;;  sign            1    6[COMMON] unsigned char 
  9522 ;;  counter         1    5[COMMON] unsigned char 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  2    0[COMMON] int 
  9525 ;; Registers used:
  9526 ;;		wreg, status,2, status,0
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9533 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9535 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;Total ram usage:        9 bytes
  9537 ;; Hardware stack levels used:    1
  9538 ;; This function calls:
  9539 ;;		Nothing
  9540 ;; This function is called by:
  9541 ;;		_LCD_Write_Int
  9542 ;; This function uses a non-reentrant model
  9543 ;;
  9544                           
  9545                           
  9546                           ;psect for function ___awdiv
  9547  0E52                     ___awdiv:	
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9551  0E52  01F6               	clrf	___awdiv@sign
  9552  0E53  1FF1               	btfss	___awdiv@divisor+1,7
  9553  0E54  2E5C               	goto	l2207
  9554  0E55  09F0               	comf	___awdiv@divisor,f
  9555  0E56  09F1               	comf	___awdiv@divisor+1,f
  9556  0E57  0AF0               	incf	___awdiv@divisor,f
  9557  0E58  1903               	skipnz
  9558  0E59  0AF1               	incf	___awdiv@divisor+1,f
  9559  0E5A  01F6               	clrf	___awdiv@sign
  9560  0E5B  0AF6               	incf	___awdiv@sign,f
  9561  0E5C                     l2207:	
  9562  0E5C  1FF3               	btfss	___awdiv@dividend+1,7
  9563  0E5D  2E67               	goto	l2213
  9564  0E5E  09F2               	comf	___awdiv@dividend,f
  9565  0E5F  09F3               	comf	___awdiv@dividend+1,f
  9566  0E60  0AF2               	incf	___awdiv@dividend,f
  9567  0E61  1903               	skipnz
  9568  0E62  0AF3               	incf	___awdiv@dividend+1,f
  9569  0E63  3001               	movlw	1
  9570  0E64  00F4               	movwf	??___awdiv
  9571  0E65  0874               	movf	??___awdiv,w
  9572  0E66  06F6               	xorwf	___awdiv@sign,f
  9573  0E67                     l2213:	
  9574  0E67  01F7               	clrf	___awdiv@quotient
  9575  0E68  01F8               	clrf	___awdiv@quotient+1
  9576  0E69  0870               	movf	___awdiv@divisor,w
  9577  0E6A  0471               	iorwf	___awdiv@divisor+1,w
  9578  0E6B  1903               	btfsc	3,2
  9579  0E6C  2E96               	goto	l2235
  9580  0E6D  01F5               	clrf	___awdiv@counter
  9581  0E6E  0AF5               	incf	___awdiv@counter,f
  9582  0E6F                     l2223:	
  9583  0E6F  1BF1               	btfsc	___awdiv@divisor+1,7
  9584  0E70  2E7B               	goto	l2225
  9585  0E71  3001               	movlw	1
  9586  0E72                     u2295:	
  9587  0E72  35F0               	lslf	___awdiv@divisor,f
  9588  0E73  0DF1               	rlf	___awdiv@divisor+1,f
  9589  0E74  0B89               	decfsz	9,f
  9590  0E75  2E72               	goto	u2295
  9591  0E76  3001               	movlw	1
  9592  0E77  00F4               	movwf	??___awdiv
  9593  0E78  0874               	movf	??___awdiv,w
  9594  0E79  07F5               	addwf	___awdiv@counter,f
  9595  0E7A  2E6F               	goto	l2223
  9596  0E7B                     l2225:	
  9597  0E7B  3001               	movlw	1
  9598  0E7C                     u2315:	
  9599  0E7C  35F7               	lslf	___awdiv@quotient,f
  9600  0E7D  0DF8               	rlf	___awdiv@quotient+1,f
  9601  0E7E  0B89               	decfsz	9,f
  9602  0E7F  2E7C               	goto	u2315
  9603  0E80  0871               	movf	___awdiv@divisor+1,w
  9604  0E81  0273               	subwf	___awdiv@dividend+1,w
  9605  0E82  1D03               	skipz
  9606  0E83  2E86               	goto	u2325
  9607  0E84  0870               	movf	___awdiv@divisor,w
  9608  0E85  0272               	subwf	___awdiv@dividend,w
  9609  0E86                     u2325:	
  9610  0E86  1C03               	skipc
  9611  0E87  2E8D               	goto	l2231
  9612  0E88  0870               	movf	___awdiv@divisor,w
  9613  0E89  02F2               	subwf	___awdiv@dividend,f
  9614  0E8A  0871               	movf	___awdiv@divisor+1,w
  9615  0E8B  3BF3               	subwfb	___awdiv@dividend+1,f
  9616  0E8C  1477               	bsf	___awdiv@quotient,0
  9617  0E8D                     l2231:	
  9618  0E8D  3001               	movlw	1
  9619  0E8E                     u2335:	
  9620  0E8E  36F1               	lsrf	___awdiv@divisor+1,f
  9621  0E8F  0CF0               	rrf	___awdiv@divisor,f
  9622  0E90  0B89               	decfsz	9,f
  9623  0E91  2E8E               	goto	u2335
  9624  0E92  3001               	movlw	1
  9625  0E93  02F5               	subwf	___awdiv@counter,f
  9626  0E94  1D03               	btfss	3,2
  9627  0E95  2E7B               	goto	l2225
  9628  0E96                     l2235:	
  9629  0E96  0876               	movf	___awdiv@sign,w
  9630  0E97  1903               	btfsc	3,2
  9631  0E98  2E9E               	goto	l2239
  9632  0E99  09F7               	comf	___awdiv@quotient,f
  9633  0E9A  09F8               	comf	___awdiv@quotient+1,f
  9634  0E9B  0AF7               	incf	___awdiv@quotient,f
  9635  0E9C  1903               	skipnz
  9636  0E9D  0AF8               	incf	___awdiv@quotient+1,f
  9637  0E9E                     l2239:	
  9638  0E9E  0878               	movf	___awdiv@quotient+1,w
  9639  0E9F  00F1               	movwf	?___awdiv+1
  9640  0EA0  0877               	movf	___awdiv@quotient,w
  9641  0EA1  00F0               	movwf	?___awdiv
  9642  0EA2  0008               	return
  9643  0EA3                     __end_of___awdiv:	
  9644                           
  9645                           	psect	text31
  9646  0CC3                     __ptext31:	
  9647 ;; *************** function _LCD_Write_Char *****************
  9648 ;; Defined at:
  9649 ;;		line 223 in file "lcd.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  a               1    wreg     const unsigned char 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  a               1    4[COMMON] const unsigned char 
  9654 ;;  y               1    3[COMMON] unsigned char 
  9655 ;;  temp            1    2[COMMON] unsigned char 
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg, status,2, status,0, pclath, cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;Total ram usage:        4 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    1
  9672 ;; This function calls:
  9673 ;;		_LCD_Port
  9674 ;; This function is called by:
  9675 ;;		_InitCustomChars
  9676 ;;		_LCD_Write_String
  9677 ;;		_LCD_Write_Int
  9678 ;;		_main
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           
  9683                           ;psect for function _LCD_Write_Char
  9684  0CC3                     _LCD_Write_Char:	
  9685                           
  9686                           ;incstack = 0
  9687                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9688                           ;LCD_Write_Char@a stored from wreg
  9689  0CC3  00F4               	movwf	LCD_Write_Char@a
  9690                           
  9691                           ;lcd.c: 225: char temp,y;
  9692                           ;lcd.c: 226: temp = a&0x0F;
  9693  0CC4  0874               	movf	LCD_Write_Char@a,w
  9694  0CC5  390F               	andlw	15
  9695  0CC6  00F1               	movwf	??_LCD_Write_Char
  9696  0CC7  0871               	movf	??_LCD_Write_Char,w
  9697  0CC8  00F2               	movwf	LCD_Write_Char@temp
  9698                           
  9699                           ;lcd.c: 227: y = a&0xF0;
  9700  0CC9  0874               	movf	LCD_Write_Char@a,w
  9701  0CCA  39F0               	andlw	240
  9702  0CCB  00F1               	movwf	??_LCD_Write_Char
  9703  0CCC  0871               	movf	??_LCD_Write_Char,w
  9704  0CCD  00F3               	movwf	LCD_Write_Char@y
  9705                           
  9706                           ;lcd.c: 228: RA0 = 1;
  9707  0CCE  0020               	movlb	0	; select bank0
  9708  0CCF  140C               	bsf	12,0	;volatile
  9709                           
  9710                           ;lcd.c: 229: LCD_Port(y>>4);
  9711  0CD0  0873               	movf	LCD_Write_Char@y,w
  9712  0CD1  00F1               	movwf	??_LCD_Write_Char
  9713  0CD2  3004               	movlw	4
  9714  0CD3                     u2025:	
  9715  0CD3  36F1               	lsrf	??_LCD_Write_Char,f
  9716  0CD4  0B89               	decfsz	9,f
  9717  0CD5  2CD3               	goto	u2025
  9718  0CD6  0871               	movf	??_LCD_Write_Char,w
  9719  0CD7  318B  23E0  318C   	fcall	_LCD_Port
  9720                           
  9721                           ;lcd.c: 230: RA2 = 1;
  9722  0CDA  0020               	movlb	0	; select bank0
  9723  0CDB  150C               	bsf	12,2	;volatile
  9724                           
  9725                           ;lcd.c: 231: RA2 = 0;
  9726  0CDC  110C               	bcf	12,2	;volatile
  9727                           
  9728                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9729  0CDD  3003               	movlw	3
  9730  0CDE  00F1               	movwf	??_LCD_Write_Char
  9731  0CDF                     u3077:	
  9732  0CDF  0BF1               	decfsz	??_LCD_Write_Char,f
  9733  0CE0  2CDF               	goto	u3077
  9734                           
  9735                           ;lcd.c: 233: LCD_Port(temp);
  9736  0CE1  0872               	movf	LCD_Write_Char@temp,w
  9737  0CE2  318B  23E0  318C   	fcall	_LCD_Port
  9738                           
  9739                           ;lcd.c: 234: RA2 = 1;
  9740  0CE5  0020               	movlb	0	; select bank0
  9741  0CE6  150C               	bsf	12,2	;volatile
  9742                           
  9743                           ;lcd.c: 235: RA2 = 0;
  9744  0CE7  110C               	bcf	12,2	;volatile
  9745                           
  9746                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  9747  0CE8  3003               	movlw	3
  9748  0CE9  00F1               	movwf	??_LCD_Write_Char
  9749  0CEA                     u3087:	
  9750  0CEA  0BF1               	decfsz	??_LCD_Write_Char,f
  9751  0CEB  2CEA               	goto	u3087
  9752  0CEC  0008               	return
  9753  0CED                     __end_of_LCD_Write_Char:	
  9754                           
  9755                           	psect	text32
  9756  0DCE                     __ptext32:	
  9757 ;; *************** function _LCD_Set_Cursor *****************
  9758 ;; Defined at:
  9759 ;;		line 82 in file "lcd.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  x               1    wreg     unsigned char 
  9762 ;;  y               1    3[COMMON] unsigned char 
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;  x               1    6[COMMON] unsigned char 
  9765 ;;  temp            1    9[COMMON] unsigned char 
  9766 ;;  w               1    8[COMMON] unsigned char 
  9767 ;;  z               1    7[COMMON] unsigned char 
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0, pclath, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9777 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;Total ram usage:        7 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    2
  9784 ;; This function calls:
  9785 ;;		_LCD_Cmd
  9786 ;; This function is called by:
  9787 ;;		_main
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           
  9792                           ;psect for function _LCD_Set_Cursor
  9793  0DCE                     _LCD_Set_Cursor:	
  9794                           
  9795                           ;incstack = 0
  9796                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9797                           ;LCD_Set_Cursor@x stored from wreg
  9798  0DCE  00F6               	movwf	LCD_Set_Cursor@x
  9799                           
  9800                           ;lcd.c: 86: char temp,z,w;
  9801                           ;lcd.c: 88: if(y == 0)
  9802  0DCF  0873               	movf	LCD_Set_Cursor@y,w
  9803  0DD0  1D03               	btfss	3,2
  9804  0DD1  2DEE               	goto	l2363
  9805                           
  9806                           ;lcd.c: 89: {
  9807                           ;lcd.c: 90: temp = 0x80 + x;
  9808  0DD2  0876               	movf	LCD_Set_Cursor@x,w
  9809  0DD3  3E80               	addlw	128
  9810  0DD4  00F4               	movwf	??_LCD_Set_Cursor
  9811  0DD5  0874               	movf	??_LCD_Set_Cursor,w
  9812  0DD6  00F9               	movwf	LCD_Set_Cursor@temp
  9813                           
  9814                           ;lcd.c: 91: z = temp>>4;
  9815  0DD7  0879               	movf	LCD_Set_Cursor@temp,w
  9816  0DD8  00F4               	movwf	??_LCD_Set_Cursor
  9817  0DD9  3004               	movlw	4
  9818  0DDA                     u2655:	
  9819  0DDA  36F4               	lsrf	??_LCD_Set_Cursor,f
  9820  0DDB  0B89               	decfsz	9,f
  9821  0DDC  2DDA               	goto	u2655
  9822  0DDD  0874               	movf	??_LCD_Set_Cursor,w
  9823  0DDE  00F5               	movwf	??_LCD_Set_Cursor+1
  9824  0DDF  0875               	movf	??_LCD_Set_Cursor+1,w
  9825  0DE0  00F7               	movwf	LCD_Set_Cursor@z
  9826                           
  9827                           ;lcd.c: 92: w = temp & 0x0F;
  9828  0DE1  0879               	movf	LCD_Set_Cursor@temp,w
  9829  0DE2  390F               	andlw	15
  9830  0DE3  00F4               	movwf	??_LCD_Set_Cursor
  9831  0DE4  0874               	movf	??_LCD_Set_Cursor,w
  9832  0DE5  00F8               	movwf	LCD_Set_Cursor@w
  9833                           
  9834                           ;lcd.c: 93: LCD_Cmd(z);
  9835  0DE6  0877               	movf	LCD_Set_Cursor@z,w
  9836  0DE7  318B  23B8  318D   	fcall	_LCD_Cmd
  9837                           
  9838                           ;lcd.c: 94: LCD_Cmd(w);
  9839  0DEA  0878               	movf	LCD_Set_Cursor@w,w
  9840  0DEB  318B  23B8         	fcall	_LCD_Cmd
  9841                           
  9842                           ;lcd.c: 95: }
  9843  0DED  0008               	return
  9844  0DEE                     l2363:	
  9845                           
  9846                           ;lcd.c: 97: else if(y == 1)
  9847  0DEE  0373               	decf	LCD_Set_Cursor@y,w
  9848  0DEF  1D03               	btfss	3,2
  9849  0DF0  0008               	return
  9850                           
  9851                           ;lcd.c: 98: {
  9852                           ;lcd.c: 99: temp = 0xC0 + x;
  9853  0DF1  0876               	movf	LCD_Set_Cursor@x,w
  9854  0DF2  3EC0               	addlw	192
  9855  0DF3  00F4               	movwf	??_LCD_Set_Cursor
  9856  0DF4  0874               	movf	??_LCD_Set_Cursor,w
  9857  0DF5  00F9               	movwf	LCD_Set_Cursor@temp
  9858                           
  9859                           ;lcd.c: 100: z = temp>>4;
  9860  0DF6  0879               	movf	LCD_Set_Cursor@temp,w
  9861  0DF7  00F4               	movwf	??_LCD_Set_Cursor
  9862  0DF8  3004               	movlw	4
  9863  0DF9                     u2675:	
  9864  0DF9  36F4               	lsrf	??_LCD_Set_Cursor,f
  9865  0DFA  0B89               	decfsz	9,f
  9866  0DFB  2DF9               	goto	u2675
  9867  0DFC  0874               	movf	??_LCD_Set_Cursor,w
  9868  0DFD  00F5               	movwf	??_LCD_Set_Cursor+1
  9869  0DFE  0875               	movf	??_LCD_Set_Cursor+1,w
  9870  0DFF  00F7               	movwf	LCD_Set_Cursor@z
  9871                           
  9872                           ;lcd.c: 101: w = temp & 0x0F;
  9873  0E00  0879               	movf	LCD_Set_Cursor@temp,w
  9874  0E01  390F               	andlw	15
  9875  0E02  00F4               	movwf	??_LCD_Set_Cursor
  9876  0E03  0874               	movf	??_LCD_Set_Cursor,w
  9877  0E04  00F8               	movwf	LCD_Set_Cursor@w
  9878                           
  9879                           ;lcd.c: 102: LCD_Cmd(z);
  9880  0E05  0877               	movf	LCD_Set_Cursor@z,w
  9881  0E06  318B  23B8  318D   	fcall	_LCD_Cmd
  9882                           
  9883                           ;lcd.c: 103: LCD_Cmd(w);
  9884  0E09  0878               	movf	LCD_Set_Cursor@w,w
  9885  0E0A  318B  23B8         	fcall	_LCD_Cmd
  9886  0E0C  0008               	return
  9887  0E0D                     __end_of_LCD_Set_Cursor:	
  9888                           
  9889                           	psect	text33
  9890  0BB8                     __ptext33:	
  9891 ;; *************** function _LCD_Cmd *****************
  9892 ;; Defined at:
  9893 ;;		line 65 in file "lcd.c"
  9894 ;; Parameters:    Size  Location     Type
  9895 ;;  a               1    wreg     unsigned char 
  9896 ;; Auto vars:     Size  Location     Type
  9897 ;;  a               1    2[COMMON] unsigned char 
  9898 ;; Return value:  Size  Location     Type
  9899 ;;                  1    wreg      void 
  9900 ;; Registers used:
  9901 ;;		wreg, status,2, status,0, pclath, cstack
  9902 ;; Tracked objects:
  9903 ;;		On entry : 0/0
  9904 ;;		On exit  : 0/0
  9905 ;;		Unchanged: 0/0
  9906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9911 ;;Total ram usage:        2 bytes
  9912 ;; Hardware stack levels used:    1
  9913 ;; Hardware stack levels required when called:    1
  9914 ;; This function calls:
  9915 ;;		_LCD_Port
  9916 ;; This function is called by:
  9917 ;;		_InitCustomChars
  9918 ;;		_LCD_Clear
  9919 ;;		_LCD_Set_Cursor
  9920 ;;		_LCD_Init
  9921 ;; This function uses a non-reentrant model
  9922 ;;
  9923                           
  9924                           
  9925                           ;psect for function _LCD_Cmd
  9926  0BB8                     _LCD_Cmd:	
  9927                           
  9928                           ;incstack = 0
  9929                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9930                           ;LCD_Cmd@a stored from wreg
  9931  0BB8  00F2               	movwf	LCD_Cmd@a
  9932                           
  9933                           ;lcd.c: 67: RA0 = 0;
  9934  0BB9  0020               	movlb	0	; select bank0
  9935  0BBA  100C               	bcf	12,0	;volatile
  9936                           
  9937                           ;lcd.c: 68: LCD_Port(a);
  9938  0BBB  0872               	movf	LCD_Cmd@a,w
  9939  0BBC  318B  23E0  318B   	fcall	_LCD_Port
  9940                           
  9941                           ;lcd.c: 69: RA2 = 1;
  9942  0BBF  0020               	movlb	0	; select bank0
  9943  0BC0  150C               	bsf	12,2	;volatile
  9944                           
  9945                           ;lcd.c: 70: RA2 = 0;
  9946  0BC1  110C               	bcf	12,2	;volatile
  9947                           
  9948                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  9949  0BC2  30F9               	movlw	249
  9950  0BC3  00F1               	movwf	??_LCD_Cmd
  9951  0BC4                     u3097:	
  9952  0BC4  0000               	nop
  9953  0BC5  0BF1               	decfsz	??_LCD_Cmd,f
  9954  0BC6  2BC4               	goto	u3097
  9955  0BC7  3200               	nop2	;nop
  9956  0BC8  0000               	nop
  9957  0BC9  0008               	return
  9958  0BCA                     __end_of_LCD_Cmd:	
  9959                           
  9960                           	psect	text34
  9961  0BE0                     __ptext34:	
  9962 ;; *************** function _LCD_Port *****************
  9963 ;; Defined at:
  9964 ;;		line 41 in file "lcd.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  a               1    wreg     unsigned char 
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;  a               1    0[COMMON] unsigned char 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  1    wreg      void 
  9971 ;; Registers used:
  9972 ;;		wreg
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9982 ;;Total ram usage:        1 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; This function calls:
  9985 ;;		Nothing
  9986 ;; This function is called by:
  9987 ;;		_LCD_Cmd
  9988 ;;		_LCD_Init
  9989 ;;		_LCD_Write_Char
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           
  9994                           ;psect for function _LCD_Port
  9995  0BE0                     _LCD_Port:	
  9996                           
  9997                           ;incstack = 0
  9998                           ; Regs used in _LCD_Port: [wreg]
  9999                           ;LCD_Port@a stored from wreg
 10000  0BE0  00F0               	movwf	LCD_Port@a
 10001                           
 10002                           ;lcd.c: 43: if(a & 1)
 10003  0BE1  1C70               	btfss	LCD_Port@a,0
 10004  0BE2  2BE6               	goto	l94
 10005                           
 10006                           ;lcd.c: 44: RA7 = 1;
 10007  0BE3  0020               	movlb	0	; select bank0
 10008  0BE4  178C               	bsf	12,7	;volatile
 10009  0BE5  2BE8               	goto	l1733
 10010  0BE6                     l94:	
 10011                           
 10012                           ;lcd.c: 45: else
 10013                           ;lcd.c: 46: RA7 = 0;
 10014  0BE6  0020               	movlb	0	; select bank0
 10015  0BE7  138C               	bcf	12,7	;volatile
 10016  0BE8                     l1733:	
 10017                           
 10018                           ;lcd.c: 48: if(a & 2)
 10019  0BE8  1CF0               	btfss	LCD_Port@a,1
 10020  0BE9  2BEC               	goto	l96
 10021                           
 10022                           ;lcd.c: 49: RA6 = 1;
 10023  0BEA  170C               	bsf	12,6	;volatile
 10024  0BEB  2BED               	goto	l1737
 10025  0BEC                     l96:	
 10026                           
 10027                           ;lcd.c: 50: else
 10028                           ;lcd.c: 51: RA6 = 0;
 10029  0BEC  130C               	bcf	12,6	;volatile
 10030  0BED                     l1737:	
 10031                           
 10032                           ;lcd.c: 53: if(a & 4)
 10033  0BED  1D70               	btfss	LCD_Port@a,2
 10034  0BEE  2BF1               	goto	l98
 10035                           
 10036                           ;lcd.c: 54: RC0 = 1;
 10037  0BEF  140E               	bsf	14,0	;volatile
 10038  0BF0  2BF2               	goto	l1741
 10039  0BF1                     l98:	
 10040                           
 10041                           ;lcd.c: 55: else
 10042                           ;lcd.c: 56: RC0 = 0;
 10043  0BF1  100E               	bcf	14,0	;volatile
 10044  0BF2                     l1741:	
 10045                           
 10046                           ;lcd.c: 58: if(a & 8)
 10047  0BF2  1DF0               	btfss	LCD_Port@a,3
 10048  0BF3  2BF6               	goto	l100
 10049                           
 10050                           ;lcd.c: 59: RC1 = 1;
 10051  0BF4  148E               	bsf	14,1	;volatile
 10052  0BF5  0008               	return
 10053  0BF6                     l100:	
 10054                           
 10055                           ;lcd.c: 60: else
 10056                           ;lcd.c: 61: RC1 = 0;
 10057  0BF6  108E               	bcf	14,1	;volatile
 10058  0BF7  0008               	return
 10059  0BF8                     __end_of_LCD_Port:	
 10060  007E                     btemp	set	126	;btemp
 10061  007E                     wtemp	set	126
 10062  007E                     wtemp0	set	126
 10063  0080                     wtemp1	set	128
 10064  0082                     wtemp2	set	130
 10065  0084                     wtemp3	set	132
 10066  0086                     wtemp4	set	134
 10067  0088                     wtemp5	set	136
 10068  007F                     wtemp6	set	127
 10069  007E                     ttemp	set	126
 10070  007E                     ttemp0	set	126
 10071  0081                     ttemp1	set	129
 10072  0084                     ttemp2	set	132
 10073  0087                     ttemp3	set	135
 10074  007F                     ttemp4	set	127
 10075  007E                     ltemp	set	126
 10076  007E                     ltemp0	set	126
 10077  0082                     ltemp1	set	130
 10078  0086                     ltemp2	set	134
 10079  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    27
    Data        30
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80     16      69
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[7]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _tempCalc->___awtoft
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    _readAnalog->___aldiv
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_tempCalc
    _tempCalc->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    _readAnalog->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   35028
                                             73 BANK0      2     2      0
                                              0 BANK1     16    16      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
                            ___fttol
                         _readAnalog
                           _tempCalc
 ---------------------------------------------------------------------------------
 (1) _tempCalc                                            12     9      3   29598
                                             61 BANK0     12     9      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   15319
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7    6573
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2643
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1904
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3462
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3289
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2623
                                             16 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _readAnalog                                          21    19      2     770
                                              9 COMMON     4     4      0
                                              6 BANK0     17    15      2
                            _ADCRead
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM6_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     150
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     374
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    1911
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     592
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Cmd
       _LCD_Port
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _PWM6_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM6_Initialize
     _TMR2_Initialize
   ___fttol
   _readAnalog
     _ADCRead
     ___aldiv
   _tempCalc
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftsub
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___wmul
       _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      45       7       86.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      18       9       30.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Jan 26 02:51:37 2018

                    __CFG_CP$OFF 0000                               l58 0BB1                               l94 0BE6  
                             l96 0BEC                               l98 0BF1                     ___awdiv@sign 0076  
            ___wmul@multiplicand 0072      __size_of_PWM6_LoadDutyValue 0016                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l100 0BF6                              l428 0F8F                              l541 0054  
                            l373 0C4C                              l542 005C                              l534 0041  
                            l625 00DF                              l565 046D                              _GIE 005F  
                            _RA0 0060                              _RA2 0062                              _RC0 0070  
                            _RC1 0071                              _RA6 0066                              _RA7 0067  
                   __CFG_CPD$OFF 0000                              _log 01A2                  __end_of_ADCRead 0BB8  
                   ___awmod@sign 0076                  _TMR2_Initialize 0B9C                     __CFG_BORV$LO 0000  
                            wreg 0009                      main@analogs 00D5                  __end_of_LCD_Cmd 0BCA  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0DCE  
                   ___ftdiv@sign 003F                             l2023 0CBB                             l2017 0CAA  
                           l2213 0E67                             l2231 0E8D                             l2223 0E6F  
                           l2207 0E5C                             l2143 01C0                             l2225 0E7B  
                           l2235 0E96                             l2251 0E17                             l2411 0363  
                           l2403 032C                             l2315 0180                             l2307 0167  
                           l2421 037F                             l2413 036B                             l2405 035B  
                           l2501 00C9                             l1701 0017                             l2149 01D1  
                           l2239 0E9E                             l2263 0E24                             l2255 0E1E  
                           l2423 03AB                             l2415 037B                             l2191 0FE9  
                           l2327 0C67                             l2265 0E30                             l2273 0E45  
                           l2409 035F                             l2513 00F0                             l2177 0FB0  
                           l2169 0FA0                             l1705 001E                             l2363 0DEE  
                           l2427 03B9                             l2507 00D6                             l2195 0FF7  
                           l2187 0FDE                             l2179 0FBE                             l2347 059B  
                           l1715 0046                             l1707 0028                             l1811 047F  
                           l1741 0BF2                             l1733 0BE8                             l2277 0E4D  
                           l2269 0E3C                             l2509 00E2                             l1717 004E  
                           l1709 002D                             l2293 0126                             l1805 045F  
                           l2287 0110                             l1815 0491                             l1807 0469  
                           l2543 0604                             l2535 05F6                             l1737 0BED  
                           l2393 0325                             l2481 008B                             l1825 04AC  
                           l1841 027C                             l2379 0C12                             l1835 0266  
                           l1747 0C46                             l1765 03F6                             l1917 0C87  
                           l1925 0D6E                             l1853 02B7                             l2549 0622  
                           l1775 040C                             l2575 0692                             l1793 0439  
                           l1769 03FD                             l1929 0D84                             l1865 02D3  
                           l1857 02BF                             l2499 00BB                             l1795 0443  
                           l1787 0426                             l1797 0448                             l1869 02DB  
                           l1949 0DA5                             l1799 044C                             l1967 0EFC  
                           ?_log 0057                             STR_1 101B                             STR_2 1024  
                           u2005 02E2                             u2120 0D1F                             u2025 0CD3  
                           _LATA 0016                             _LATB 0017                             u3007 0F2D  
                           u2215 0FBF                             _LATC 0018                             u3017 0F36  
                           u2225 0FD3                             u2315 0E7C                             u3027 0F43  
                           u2235 0FDF                             u1515 003C                             u2325 0E86  
                           u3037 0F50                             u2335 0E8E                             u2415 0E36  
                           u3047 0F5D                             u1535 0049                             u2425 0E3D  
                           u3057 0F6C                             u2505 0177                             _T2PR 028D  
                           u3067 0F7A                             u2195 0FB3                             u2515 0181  
                           u3077 0CDF                             u2605 0572                             u1645 0C4D  
                           u3087 0CEA                             u2295 0E72                             u2615 058B  
                           u1575 0063                             u1495 0023                             u1655 0C52  
                           u3097 0BC4                             u2545 04D9                             u1825 044D  
                           u2395 0E27                             u2635 05A7                             u2555 04EC  
                           u2475 0138                             u2805 0092                             u2565 0518  
                           u2485 0148                             u1765 0427                             u1925 0288  
                           u2655 0DDA                             u2575 052B                             u2495 0168  
                           u1855 0460                             u1935 0298                             u2585 053E  
                           u2690 030E                             u2675 0DF9                             u2755 0399  
                           u2835 00BC                             u2595 0551                             u1795 043A  
                           u1955 02C0                             u1965 02C6                             u2785 0BD9  
                           u2865 00D7                             u2937 05EB                             u2890 05D1  
                           u2947 0D3A                             u1995 02DC                             u2957 0D46  
                           u2967 0D52                             u2977 0F0C                             u2987 0F19  
                           u2997 0F24              tempCalc@analogValue 005D                             _WPUA 0F39  
                           _WPUB 0F44                             _WPUC 0F4F                             _WPUE 0F65  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075  
                           _main 05C3                     ___ftpack@arg 0070               __size_of_LCD_Clear 0008  
                   ___ftpack@exp 0073                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                             log@x 0057  
                           ltemp 007E                             start 0002               ??_LCD_Write_String 0077  
                           ttemp 007E                             wtemp 007E                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E                    _LCD_Write_Int 0303  
                   ___ftmul@sign 002F                     ___fttol@exp1 007D                            ??_log 005A  
                   ___fttol@lval 0079                 __end_of_LCD_Init 0F7E                 __end_of_LCD_Port 0BF8  
 __size_of_OSCILLATOR_Initialize 0008    __end_of_OSCILLATOR_Initialize 0B9C                  __end_of___aldiv 1000  
                          _ADACQ 009D                            _ADCAP 009B                            _ADACT 0099  
                          ?_main 0070                            _ADCLK 0098                            _ADPCH 009E  
                          _ADREF 009A                  __end_of___awdiv 0EA3                            _ADPRE 009C  
                __end_of___ftadd 04C4                    __CFG_WDTE$OFF 0000                  __end_of___awmod 0E52  
                          _ADRPT 010D                  __end_of___ftdiv 01A2                  __end_of___ftmul 0303  
                ___awdiv@divisor 0070                  __end_of___ftsub 0C7D                  __end_of___fttol 00F9  
                          _T2CON 028E                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                  ___awdiv@counter 0075                            _OSCEN 0891  
                          _TRISA 0011                            _TRISB 0012                            _TRISC 0013  
                _PWM6_Initialize 0004           __end_of_LCD_Set_Cursor 0E0D                    ___awtoft@sign 007D  
                          _frexp 0D93                            _errno 006B                    ___ftpack@sign 0074  
                          main@x 00DE                   __CFG_BOREN$OFF 0000                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0020  
                 _LCD_Write_Char 0CC3                  __initialization 07DA                      log@exponent 005B  
                   __end_of_main 06C5                readAnalog@channel 0026          __end_of_TMR2_Initialize 0BAA  
                      ??_ADCRead 0073                           ??_main 0069                    ___fttol@sign1 0078  
              __end_of_LCD_Clear 0B94                        ??_LCD_Cmd 0071                  ?_LCD_Set_Cursor 0073  
                         _ADCON0 0093                           _ADCON1 0094                           _ADCON2 0095  
                         _ADCON3 0096                           ?_frexp 0070                           _ADLTHH 010F  
                         _ADLTHL 010E                           _ADRESH 008D                           _ADRESL 008C  
                         _ADSTAT 0097                           _ADUTHH 0111                 ___awdiv@dividend 0072  
                         _ADUTHL 0110                 __end_of___awtoft 0C9D                           _ANSELA 0F38  
                         _ANSELB 0F43                           _ANSELC 0F4E                 __end_of___ftpack 0073  
             __CFG_RSTOSC$HFINT1 0000                           _RC2PPS 0F22                   __CFG_WDTCCS$SC 0000  
                         _FVRCON 090C                           _OSCFRQ 0893                    main@dutyCycle 00DC  
         __end_of_LCD_Write_Char 0CED                   __CFG_PWRTE$OFF 0000                     _CCPTMRS1bits 021F  
                         ___ftge 0D58           LCD_Write_Int@numPlaces 0023                        ??___aldiv 0078  
                         ___wmul 0C44                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                        ??___ftdiv 0036  
                      ??___ftmul 0026                        ??___ftsub 007E                        ??___fttol 0074  
        __end_of_PWM6_Initialize 000F                 ___awdiv@quotient 0077                  ___awmod@divisor 0070  
                ___awmod@counter 0075                           _totals 00B8            ___ftmul@f3_as_product 002B  
               __end_of_tempCalc 07DA                  _ADCC_Initialize 0C2A                 LCD_Write_Int@str 002A  
                _InitCustomChars 0C9D                  LCD_Set_Cursor@w 0078                  LCD_Set_Cursor@x 0076  
                LCD_Set_Cursor@y 0073                  LCD_Set_Cursor@z 0077         readAnalog@analog_channel 0079  
              _SYSTEM_Initialize 0D21                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0075                       ___awtoft@c 0078  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                       ___fttol@f1 0070                   __pcstackCOMMON 0070  
                      LCD_Port@a 0070                     __pidataBANK1 0B86                     __pidataBANK2 0BF8  
            ??_SYSTEM_Initialize 0077                    __end_of_frexp 0DCE                 ?_TMR2_Initialize 0070  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 0D58                       __pbssBANK0 006B  
                     __pbssBANK1 00A0               __size_of_eval_poly 0060                       ??_LCD_Init 0073  
                     ??_LCD_Port 0070                       __pmaintext 05C3                          ?___ftge 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 0C44  
     __end_of_PWM6_LoadDutyValue 0BE0                          _ADCRead 0BAA        __size_of_LCD_Write_String 001A  
               ?_PWM6_Initialize 0070                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112                 main@displayTemp2 00D2  
        __end_of_InitCustomChars 0CC3                          _LCD_Cmd 0BB8                          _OSCCON1 088D  
                        _OSCCON3 088F                          _OSCTUNE 0892                          _PWM6DCH 038D  
                        _PWM6DCL 038C                          _PWM6CON 038E                          _PPSLOCK 0E8F  
                      ?_tempCalc 005D                       _readAnalog 04C4             __CFG_SCANE$available 0000  
                        ___aldiv 0F7E                          ___cgram 0120                  __size_of___ftge 003B  
                        ___awdiv 0E52                          ___ftadd 03CE                          ___awmod 0E0D  
                        ___ftdiv 00F9                  __size_of___wmul 001B                          ___ftmul 024F  
                        ___ftsub 0C5F                          ___fttol 0073                       ??___awtoft 007B  
                     ??___ftpack 0075                __end_of_eval_poly 0F03                 ??_LCD_Set_Cursor 0074  
                        __ptext1 06C5                          __ptext2 01A2                          __ptext3 0D93  
                        __ptext4 0EA3                          __ptext5 0C44                          __ptext6 024F  
                        __ptext7 0D58                          __ptext8 0C7D                          __ptext9 0C5F  
          _OSCILLATOR_Initialize 0B94                        _T2CONbits 028E                     __size_of_log 00AD  
               ___awmod@dividend 0072                   ADCRead@channel 0073                 ___aldiv@dividend 0074  
       ??_PIN_MANAGER_Initialize 0070                          _samples 00A0                        _LCD_Clear 0B8C  
     __size_of_SYSTEM_Initialize 0037                          clrloop0 0B7B             end_of_initialization 07FD  
                        init_ram 0B80                          initloop 0B81                       ??_tempCalc 007E  
               ___aldiv@quotient 0022                LCD_Write_Int@sign 0024                       main@F13657 00C4  
                   __pstringtext 1000                 ?_ADCC_Initialize 0070            __CFG_WDTCPS$WDTCPS_31 0000  
               ?_InitCustomChars 0070                       ?_LCD_Clear 0070                 __CFG_FEXTOSC$OFF 0000  
              LCD_Write_String@a 0075                LCD_Write_String@i 0078                 ??_LCD_Write_Char 0071  
                    ___ftdiv@exp 003E                __size_of_LCD_Init 007B                __size_of_LCD_Port 0018  
                    ___ftmul@exp 002A                      ?_readAnalog 0026                   __end_of___ftge 0D93  
                 __end_of___wmul 0C5F                 _LCD_Write_String 0C10           ?_OSCILLATOR_Initialize 0070  
            start_initialization 07DA                       eval_poly@d 0050                       eval_poly@n 0052  
                     eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 0034                      __end_of_log 024F  
                     frexp@value 0070         LCD_Write_Int@fieldLength 0022            __end_of_LCD_Write_Int 03CE  
               __CFG_LPBOREN$OFF 0000                         ??___ftge 0076                tempCalc@steinhart 0066  
                       ??___wmul 0074                      __pdataBANK1 00DF                      __pdataBANK2 0120  
                LCD_Write_Char@a 0074                  LCD_Write_Char@y 0073                         ?_ADCRead 0070  
                       ?_LCD_Cmd 0070                __size_of___awtoft 0020                __size_of___ftpack 0064  
                       LCD_Cmd@a 0072                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00CF               _PWM6_LoadDutyValue 0BCA         __size_of_TMR2_Initialize 000E  
                    ??_LCD_Clear 0073              __size_of_readAnalog 00FF              ?_PWM6_LoadDutyValue 0070  
         _PIN_MANAGER_Initialize 0CED                         ?___aldiv 0070                __size_of_tempCalc 0115  
                       ?___awdiv 0070                         ?___ftadd 0040                         ?___awmod 0070  
                       ?___ftdiv 0030                         ?___ftmul 0020                         ?___ftsub 004D  
                       ?___fttol 0070                  main@displayTemp 00CF             ??_PWM6_LoadDutyValue 0072  
                      _eval_poly 0EA3         __size_of_PWM6_Initialize 000B                   __size_of_frexp 003B  
                       _T2CLKCON 0290                  ___aldiv@divisor 0070                  ___aldiv@counter 0020  
                       _LCD_Init 0F03                   ___wmul@product 0074                         _LCD_Port 0BE0  
                      clear_ram0 0B7A                         _PIE0bits 0716                         _PIR4bits 0710  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0070  
                      main@count 00DB                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0012  
       __end_of_LCD_Write_String 0C2A                ??_TMR2_Initialize 0070                  readAnalog@value 007B  
                      frexp@eptr 0073                     ??_readAnalog 0028                     _tempCalc$943 0063  
        ??_OSCILLATOR_Initialize 0070                   LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F  
               __size_of___aldiv 0082                 __size_of___awdiv 0051                 __size_of___ftadd 00F6  
               __size_of___awmod 0045                 __size_of___ftdiv 00A9                 __size_of___ftmul 00B4  
               __size_of___ftsub 001E                 __size_of___fttol 0086                         ___awtoft 0C7D  
                       ___ftpack 000F         __size_of_ADCC_Initialize 001A                         _channels 00DF  
                       __ptext10 03CE                         __ptext11 00F9                         __ptext20 0CED  
                       __ptext12 000F                         __ptext21 0B94                         __ptext13 04C4  
                       __ptext30 0E52                         __ptext22 0F03                         __ptext14 0F7E  
                       __ptext31 0CC3                         __ptext23 0B8C                         __ptext15 0BAA  
                       __ptext32 0DCE                         __ptext24 0C9D                         __ptext16 0073  
                       __ptext33 0BB8                         __ptext25 0C2A                         __ptext17 0D21  
                       __ptext34 0BE0                         __ptext26 0BCA                         __ptext18 0B9C  
                       __ptext27 0C10                         __ptext19 0004                         __ptext28 0303  
                       __ptext29 0E0D               __end_of_readAnalog 05C3          __size_of_LCD_Set_Cursor 003F  
                      tempCalc@R 0060         __size_of_InitCustomChars 0026              LCD_Write_Int@F13687 00CA  
              ??_PWM6_Initialize 0070                    __size_of_main 0102             __CFG_WDTCWS$WDTCWS_7 0000  
                       _tempCalc 06C5      PIN_MANAGER_Initialize@state 0070                         log@coeff 1000  
                    ??_eval_poly 007E                      _sampleIndex 006D               LCD_Write_Char@temp 0072  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F  
        __size_of_LCD_Write_Char 002A               LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0020  
                   ___aldiv@sign 0021      PWM6_LoadDutyValue@dutyCycle 0070           __size_of_LCD_Write_Int 00CB  
 __end_of_PIN_MANAGER_Initialize 0D21                ??_ADCC_Initialize 0070                ??_InitCustomChars 0075  
