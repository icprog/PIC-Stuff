

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Jan 16 01:47:07 2018

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x620,48
    47                           	dabs	1,0x5A0,80
    48                           	dabs	1,0x528,72
    49                           	dabs	1,0x2328,0,_samples
    50                           	dabs	1,0x7E,2
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  001C                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  008C                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0093                     	;# 
    89  0094                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  0110                     	;# 
   106  0110                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0112                     	;# 
   110  0113                     	;# 
   111  0114                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0119                     	;# 
   118  0119                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011A                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011B                     	;# 
   125  011B                     	;# 
   126  011B                     	;# 
   127  011B                     	;# 
   128  011C                     	;# 
   129  011C                     	;# 
   130  011C                     	;# 
   131  011D                     	;# 
   132  011D                     	;# 
   133  011D                     	;# 
   134  011E                     	;# 
   135  011E                     	;# 
   136  011E                     	;# 
   137  011F                     	;# 
   138  011F                     	;# 
   139  011F                     	;# 
   140  011F                     	;# 
   141  011F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  018E                     	;# 
   145  018F                     	;# 
   146  0190                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0196                     	;# 
   150  0197                     	;# 
   151  0198                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  020E                     	;# 
   159  020F                     	;# 
   160  020F                     	;# 
   161  0210                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0218                     	;# 
   175  0219                     	;# 
   176  021A                     	;# 
   177  021B                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021C                     	;# 
   181  021D                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  028C                     	;# 
   186  028C                     	;# 
   187  028D                     	;# 
   188  028D                     	;# 
   189  028E                     	;# 
   190  028F                     	;# 
   191  0290                     	;# 
   192  0290                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0292                     	;# 
   196  0293                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0296                     	;# 
   201  0296                     	;# 
   202  0297                     	;# 
   203  0298                     	;# 
   204  0298                     	;# 
   205  0299                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029C                     	;# 
   210  029C                     	;# 
   211  029D                     	;# 
   212  030C                     	;# 
   213  030C                     	;# 
   214  030D                     	;# 
   215  030E                     	;# 
   216  030F                     	;# 
   217  0310                     	;# 
   218  0310                     	;# 
   219  0311                     	;# 
   220  0312                     	;# 
   221  0313                     	;# 
   222  0314                     	;# 
   223  0314                     	;# 
   224  0315                     	;# 
   225  0316                     	;# 
   226  0317                     	;# 
   227  0318                     	;# 
   228  0318                     	;# 
   229  0319                     	;# 
   230  031A                     	;# 
   231  031B                     	;# 
   232  031C                     	;# 
   233  031C                     	;# 
   234  031D                     	;# 
   235  031E                     	;# 
   236  031F                     	;# 
   237  038C                     	;# 
   238  038D                     	;# 
   239  038E                     	;# 
   240  0390                     	;# 
   241  0391                     	;# 
   242  0392                     	;# 
   243  040C                     	;# 
   244  040D                     	;# 
   245  040E                     	;# 
   246  040F                     	;# 
   247  0410                     	;# 
   248  0411                     	;# 
   249  0416                     	;# 
   250  0416                     	;# 
   251  0417                     	;# 
   252  0418                     	;# 
   253  0418                     	;# 
   254  0419                     	;# 
   255  041A                     	;# 
   256  041A                     	;# 
   257  041B                     	;# 
   258  041C                     	;# 
   259  041C                     	;# 
   260  041D                     	;# 
   261  041E                     	;# 
   262  041F                     	;# 
   263  048C                     	;# 
   264  048C                     	;# 
   265  048D                     	;# 
   266  048E                     	;# 
   267  048F                     	;# 
   268  048F                     	;# 
   269  0490                     	;# 
   270  0491                     	;# 
   271  0492                     	;# 
   272  0492                     	;# 
   273  0493                     	;# 
   274  0494                     	;# 
   275  0495                     	;# 
   276  0495                     	;# 
   277  0496                     	;# 
   278  0497                     	;# 
   279  0498                     	;# 
   280  0499                     	;# 
   281  049A                     	;# 
   282  049B                     	;# 
   283  049C                     	;# 
   284  049D                     	;# 
   285  050C                     	;# 
   286  050C                     	;# 
   287  050D                     	;# 
   288  050E                     	;# 
   289  050F                     	;# 
   290  050F                     	;# 
   291  0510                     	;# 
   292  0511                     	;# 
   293  0512                     	;# 
   294  0512                     	;# 
   295  0513                     	;# 
   296  0514                     	;# 
   297  0515                     	;# 
   298  0515                     	;# 
   299  0516                     	;# 
   300  0517                     	;# 
   301  0518                     	;# 
   302  0519                     	;# 
   303  051A                     	;# 
   304  051B                     	;# 
   305  051C                     	;# 
   306  051D                     	;# 
   307  058C                     	;# 
   308  058C                     	;# 
   309  058D                     	;# 
   310  058E                     	;# 
   311  058F                     	;# 
   312  058F                     	;# 
   313  0590                     	;# 
   314  0591                     	;# 
   315  0592                     	;# 
   316  0593                     	;# 
   317  060C                     	;# 
   318  060D                     	;# 
   319  060E                     	;# 
   320  060F                     	;# 
   321  0610                     	;# 
   322  0611                     	;# 
   323  0612                     	;# 
   324  0613                     	;# 
   325  0614                     	;# 
   326  0616                     	;# 
   327  0617                     	;# 
   328  0618                     	;# 
   329  0619                     	;# 
   330  061A                     	;# 
   331  061B                     	;# 
   332  061C                     	;# 
   333  061D                     	;# 
   334  061E                     	;# 
   335  068C                     	;# 
   336  068D                     	;# 
   337  068E                     	;# 
   338  068F                     	;# 
   339  0690                     	;# 
   340  0691                     	;# 
   341  0692                     	;# 
   342  0693                     	;# 
   343  0694                     	;# 
   344  070C                     	;# 
   345  070D                     	;# 
   346  070E                     	;# 
   347  070F                     	;# 
   348  0710                     	;# 
   349  0711                     	;# 
   350  0712                     	;# 
   351  0713                     	;# 
   352  0714                     	;# 
   353  0716                     	;# 
   354  0717                     	;# 
   355  0718                     	;# 
   356  0719                     	;# 
   357  071A                     	;# 
   358  071B                     	;# 
   359  071C                     	;# 
   360  071D                     	;# 
   361  071E                     	;# 
   362  0796                     	;# 
   363  0797                     	;# 
   364  0798                     	;# 
   365  0799                     	;# 
   366  079A                     	;# 
   367  079B                     	;# 
   368  080C                     	;# 
   369  080D                     	;# 
   370  080E                     	;# 
   371  080F                     	;# 
   372  0810                     	;# 
   373  0811                     	;# 
   374  0812                     	;# 
   375  0813                     	;# 
   376  0814                     	;# 
   377  081A                     	;# 
   378  081B                     	;# 
   379  081C                     	;# 
   380  081D                     	;# 
   381  081E                     	;# 
   382  081F                     	;# 
   383  088C                     	;# 
   384  088D                     	;# 
   385  088E                     	;# 
   386  088F                     	;# 
   387  0890                     	;# 
   388  0891                     	;# 
   389  0892                     	;# 
   390  0893                     	;# 
   391  0895                     	;# 
   392  0896                     	;# 
   393  0897                     	;# 
   394  0898                     	;# 
   395  0899                     	;# 
   396  089A                     	;# 
   397  089B                     	;# 
   398  090C                     	;# 
   399  090E                     	;# 
   400  090F                     	;# 
   401  091F                     	;# 
   402  091F                     	;# 
   403  098F                     	;# 
   404  098F                     	;# 
   405  0990                     	;# 
   406  0991                     	;# 
   407  0992                     	;# 
   408  0993                     	;# 
   409  0994                     	;# 
   410  0995                     	;# 
   411  0996                     	;# 
   412  0997                     	;# 
   413  0E0F                     	;# 
   414  0E10                     	;# 
   415  0E11                     	;# 
   416  0E12                     	;# 
   417  0E13                     	;# 
   418  0E14                     	;# 
   419  0E15                     	;# 
   420  0E16                     	;# 
   421  0E17                     	;# 
   422  0E18                     	;# 
   423  0E19                     	;# 
   424  0E1A                     	;# 
   425  0E1B                     	;# 
   426  0E1C                     	;# 
   427  0E1D                     	;# 
   428  0E1E                     	;# 
   429  0E1F                     	;# 
   430  0E20                     	;# 
   431  0E21                     	;# 
   432  0E22                     	;# 
   433  0E23                     	;# 
   434  0E24                     	;# 
   435  0E25                     	;# 
   436  0E26                     	;# 
   437  0E27                     	;# 
   438  0E28                     	;# 
   439  0E29                     	;# 
   440  0E2A                     	;# 
   441  0E2B                     	;# 
   442  0E2C                     	;# 
   443  0E2D                     	;# 
   444  0E2E                     	;# 
   445  0E2F                     	;# 
   446  0E30                     	;# 
   447  0E31                     	;# 
   448  0E32                     	;# 
   449  0E33                     	;# 
   450  0E34                     	;# 
   451  0E35                     	;# 
   452  0E36                     	;# 
   453  0E37                     	;# 
   454  0E8F                     	;# 
   455  0E90                     	;# 
   456  0E91                     	;# 
   457  0E92                     	;# 
   458  0E93                     	;# 
   459  0E94                     	;# 
   460  0E95                     	;# 
   461  0E96                     	;# 
   462  0E97                     	;# 
   463  0E9C                     	;# 
   464  0E9D                     	;# 
   465  0E9E                     	;# 
   466  0EA1                     	;# 
   467  0EA2                     	;# 
   468  0EA3                     	;# 
   469  0EA4                     	;# 
   470  0EA5                     	;# 
   471  0EA9                     	;# 
   472  0EAA                     	;# 
   473  0EAB                     	;# 
   474  0EAC                     	;# 
   475  0EB1                     	;# 
   476  0EB2                     	;# 
   477  0EB3                     	;# 
   478  0EB8                     	;# 
   479  0EB9                     	;# 
   480  0EBA                     	;# 
   481  0EBB                     	;# 
   482  0EBC                     	;# 
   483  0EBD                     	;# 
   484  0EBE                     	;# 
   485  0EC3                     	;# 
   486  0EC5                     	;# 
   487  0EC6                     	;# 
   488  0EC7                     	;# 
   489  0EC8                     	;# 
   490  0EC9                     	;# 
   491  0ECA                     	;# 
   492  0ECB                     	;# 
   493  0ECC                     	;# 
   494  0F10                     	;# 
   495  0F11                     	;# 
   496  0F12                     	;# 
   497  0F13                     	;# 
   498  0F14                     	;# 
   499  0F15                     	;# 
   500  0F16                     	;# 
   501  0F17                     	;# 
   502  0F18                     	;# 
   503  0F19                     	;# 
   504  0F1A                     	;# 
   505  0F1B                     	;# 
   506  0F1C                     	;# 
   507  0F1D                     	;# 
   508  0F1E                     	;# 
   509  0F1F                     	;# 
   510  0F20                     	;# 
   511  0F21                     	;# 
   512  0F22                     	;# 
   513  0F23                     	;# 
   514  0F24                     	;# 
   515  0F25                     	;# 
   516  0F26                     	;# 
   517  0F27                     	;# 
   518  0F38                     	;# 
   519  0F39                     	;# 
   520  0F3A                     	;# 
   521  0F3B                     	;# 
   522  0F3C                     	;# 
   523  0F3D                     	;# 
   524  0F3E                     	;# 
   525  0F3F                     	;# 
   526  0F40                     	;# 
   527  0F41                     	;# 
   528  0F43                     	;# 
   529  0F44                     	;# 
   530  0F45                     	;# 
   531  0F46                     	;# 
   532  0F47                     	;# 
   533  0F48                     	;# 
   534  0F49                     	;# 
   535  0F4A                     	;# 
   536  0F4B                     	;# 
   537  0F4C                     	;# 
   538  0F4E                     	;# 
   539  0F4F                     	;# 
   540  0F50                     	;# 
   541  0F51                     	;# 
   542  0F52                     	;# 
   543  0F53                     	;# 
   544  0F54                     	;# 
   545  0F55                     	;# 
   546  0F56                     	;# 
   547  0F57                     	;# 
   548  0F65                     	;# 
   549  0F68                     	;# 
   550  0F69                     	;# 
   551  0F6A                     	;# 
   552  0F6B                     	;# 
   553  0FE4                     	;# 
   554  0FE5                     	;# 
   555  0FE6                     	;# 
   556  0FE7                     	;# 
   557  0FE8                     	;# 
   558  0FE9                     	;# 
   559  0FEA                     	;# 
   560  0FEB                     	;# 
   561  0FED                     	;# 
   562  0FEE                     	;# 
   563  0FEF                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0008                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  000E                     	;# 
   579  0010                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0013                     	;# 
   583  0016                     	;# 
   584  0017                     	;# 
   585  0018                     	;# 
   586  001C                     	;# 
   587  001C                     	;# 
   588  001D                     	;# 
   589  001D                     	;# 
   590  001E                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  008E                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0090                     	;# 
   600  0091                     	;# 
   601  0093                     	;# 
   602  0094                     	;# 
   603  0095                     	;# 
   604  0096                     	;# 
   605  0097                     	;# 
   606  0098                     	;# 
   607  0099                     	;# 
   608  009A                     	;# 
   609  009B                     	;# 
   610  009C                     	;# 
   611  009D                     	;# 
   612  009E                     	;# 
   613  010C                     	;# 
   614  010D                     	;# 
   615  010E                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  0110                     	;# 
   619  0110                     	;# 
   620  0111                     	;# 
   621  0112                     	;# 
   622  0112                     	;# 
   623  0113                     	;# 
   624  0114                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0116                     	;# 
   629  0117                     	;# 
   630  0119                     	;# 
   631  0119                     	;# 
   632  0119                     	;# 
   633  011A                     	;# 
   634  011A                     	;# 
   635  011A                     	;# 
   636  011B                     	;# 
   637  011B                     	;# 
   638  011B                     	;# 
   639  011B                     	;# 
   640  011B                     	;# 
   641  011C                     	;# 
   642  011C                     	;# 
   643  011C                     	;# 
   644  011D                     	;# 
   645  011D                     	;# 
   646  011D                     	;# 
   647  011E                     	;# 
   648  011E                     	;# 
   649  011E                     	;# 
   650  011F                     	;# 
   651  011F                     	;# 
   652  011F                     	;# 
   653  011F                     	;# 
   654  011F                     	;# 
   655  018C                     	;# 
   656  018D                     	;# 
   657  018E                     	;# 
   658  018F                     	;# 
   659  0190                     	;# 
   660  0191                     	;# 
   661  0192                     	;# 
   662  0196                     	;# 
   663  0197                     	;# 
   664  0198                     	;# 
   665  0199                     	;# 
   666  019A                     	;# 
   667  019B                     	;# 
   668  019C                     	;# 
   669  020C                     	;# 
   670  020D                     	;# 
   671  020E                     	;# 
   672  020F                     	;# 
   673  020F                     	;# 
   674  0210                     	;# 
   675  0210                     	;# 
   676  0211                     	;# 
   677  0211                     	;# 
   678  0212                     	;# 
   679  0213                     	;# 
   680  0214                     	;# 
   681  0215                     	;# 
   682  0215                     	;# 
   683  0216                     	;# 
   684  0216                     	;# 
   685  0217                     	;# 
   686  0217                     	;# 
   687  0218                     	;# 
   688  0219                     	;# 
   689  021A                     	;# 
   690  021B                     	;# 
   691  021B                     	;# 
   692  021C                     	;# 
   693  021C                     	;# 
   694  021D                     	;# 
   695  021D                     	;# 
   696  021E                     	;# 
   697  021F                     	;# 
   698  028C                     	;# 
   699  028C                     	;# 
   700  028D                     	;# 
   701  028D                     	;# 
   702  028E                     	;# 
   703  028F                     	;# 
   704  0290                     	;# 
   705  0290                     	;# 
   706  0291                     	;# 
   707  0292                     	;# 
   708  0292                     	;# 
   709  0293                     	;# 
   710  0293                     	;# 
   711  0294                     	;# 
   712  0295                     	;# 
   713  0296                     	;# 
   714  0296                     	;# 
   715  0297                     	;# 
   716  0298                     	;# 
   717  0298                     	;# 
   718  0299                     	;# 
   719  0299                     	;# 
   720  029A                     	;# 
   721  029B                     	;# 
   722  029C                     	;# 
   723  029C                     	;# 
   724  029D                     	;# 
   725  030C                     	;# 
   726  030C                     	;# 
   727  030D                     	;# 
   728  030E                     	;# 
   729  030F                     	;# 
   730  0310                     	;# 
   731  0310                     	;# 
   732  0311                     	;# 
   733  0312                     	;# 
   734  0313                     	;# 
   735  0314                     	;# 
   736  0314                     	;# 
   737  0315                     	;# 
   738  0316                     	;# 
   739  0317                     	;# 
   740  0318                     	;# 
   741  0318                     	;# 
   742  0319                     	;# 
   743  031A                     	;# 
   744  031B                     	;# 
   745  031C                     	;# 
   746  031C                     	;# 
   747  031D                     	;# 
   748  031E                     	;# 
   749  031F                     	;# 
   750  038C                     	;# 
   751  038D                     	;# 
   752  038E                     	;# 
   753  0390                     	;# 
   754  0391                     	;# 
   755  0392                     	;# 
   756  040C                     	;# 
   757  040D                     	;# 
   758  040E                     	;# 
   759  040F                     	;# 
   760  0410                     	;# 
   761  0411                     	;# 
   762  0416                     	;# 
   763  0416                     	;# 
   764  0417                     	;# 
   765  0418                     	;# 
   766  0418                     	;# 
   767  0419                     	;# 
   768  041A                     	;# 
   769  041A                     	;# 
   770  041B                     	;# 
   771  041C                     	;# 
   772  041C                     	;# 
   773  041D                     	;# 
   774  041E                     	;# 
   775  041F                     	;# 
   776  048C                     	;# 
   777  048C                     	;# 
   778  048D                     	;# 
   779  048E                     	;# 
   780  048F                     	;# 
   781  048F                     	;# 
   782  0490                     	;# 
   783  0491                     	;# 
   784  0492                     	;# 
   785  0492                     	;# 
   786  0493                     	;# 
   787  0494                     	;# 
   788  0495                     	;# 
   789  0495                     	;# 
   790  0496                     	;# 
   791  0497                     	;# 
   792  0498                     	;# 
   793  0499                     	;# 
   794  049A                     	;# 
   795  049B                     	;# 
   796  049C                     	;# 
   797  049D                     	;# 
   798  050C                     	;# 
   799  050C                     	;# 
   800  050D                     	;# 
   801  050E                     	;# 
   802  050F                     	;# 
   803  050F                     	;# 
   804  0510                     	;# 
   805  0511                     	;# 
   806  0512                     	;# 
   807  0512                     	;# 
   808  0513                     	;# 
   809  0514                     	;# 
   810  0515                     	;# 
   811  0515                     	;# 
   812  0516                     	;# 
   813  0517                     	;# 
   814  0518                     	;# 
   815  0519                     	;# 
   816  051A                     	;# 
   817  051B                     	;# 
   818  051C                     	;# 
   819  051D                     	;# 
   820  058C                     	;# 
   821  058C                     	;# 
   822  058D                     	;# 
   823  058E                     	;# 
   824  058F                     	;# 
   825  058F                     	;# 
   826  0590                     	;# 
   827  0591                     	;# 
   828  0592                     	;# 
   829  0593                     	;# 
   830  060C                     	;# 
   831  060D                     	;# 
   832  060E                     	;# 
   833  060F                     	;# 
   834  0610                     	;# 
   835  0611                     	;# 
   836  0612                     	;# 
   837  0613                     	;# 
   838  0614                     	;# 
   839  0616                     	;# 
   840  0617                     	;# 
   841  0618                     	;# 
   842  0619                     	;# 
   843  061A                     	;# 
   844  061B                     	;# 
   845  061C                     	;# 
   846  061D                     	;# 
   847  061E                     	;# 
   848  068C                     	;# 
   849  068D                     	;# 
   850  068E                     	;# 
   851  068F                     	;# 
   852  0690                     	;# 
   853  0691                     	;# 
   854  0692                     	;# 
   855  0693                     	;# 
   856  0694                     	;# 
   857  070C                     	;# 
   858  070D                     	;# 
   859  070E                     	;# 
   860  070F                     	;# 
   861  0710                     	;# 
   862  0711                     	;# 
   863  0712                     	;# 
   864  0713                     	;# 
   865  0714                     	;# 
   866  0716                     	;# 
   867  0717                     	;# 
   868  0718                     	;# 
   869  0719                     	;# 
   870  071A                     	;# 
   871  071B                     	;# 
   872  071C                     	;# 
   873  071D                     	;# 
   874  071E                     	;# 
   875  0796                     	;# 
   876  0797                     	;# 
   877  0798                     	;# 
   878  0799                     	;# 
   879  079A                     	;# 
   880  079B                     	;# 
   881  080C                     	;# 
   882  080D                     	;# 
   883  080E                     	;# 
   884  080F                     	;# 
   885  0810                     	;# 
   886  0811                     	;# 
   887  0812                     	;# 
   888  0813                     	;# 
   889  0814                     	;# 
   890  081A                     	;# 
   891  081B                     	;# 
   892  081C                     	;# 
   893  081D                     	;# 
   894  081E                     	;# 
   895  081F                     	;# 
   896  088C                     	;# 
   897  088D                     	;# 
   898  088E                     	;# 
   899  088F                     	;# 
   900  0890                     	;# 
   901  0891                     	;# 
   902  0892                     	;# 
   903  0893                     	;# 
   904  0895                     	;# 
   905  0896                     	;# 
   906  0897                     	;# 
   907  0898                     	;# 
   908  0899                     	;# 
   909  089A                     	;# 
   910  089B                     	;# 
   911  090C                     	;# 
   912  090E                     	;# 
   913  090F                     	;# 
   914  091F                     	;# 
   915  091F                     	;# 
   916  098F                     	;# 
   917  098F                     	;# 
   918  0990                     	;# 
   919  0991                     	;# 
   920  0992                     	;# 
   921  0993                     	;# 
   922  0994                     	;# 
   923  0995                     	;# 
   924  0996                     	;# 
   925  0997                     	;# 
   926  0E0F                     	;# 
   927  0E10                     	;# 
   928  0E11                     	;# 
   929  0E12                     	;# 
   930  0E13                     	;# 
   931  0E14                     	;# 
   932  0E15                     	;# 
   933  0E16                     	;# 
   934  0E17                     	;# 
   935  0E18                     	;# 
   936  0E19                     	;# 
   937  0E1A                     	;# 
   938  0E1B                     	;# 
   939  0E1C                     	;# 
   940  0E1D                     	;# 
   941  0E1E                     	;# 
   942  0E1F                     	;# 
   943  0E20                     	;# 
   944  0E21                     	;# 
   945  0E22                     	;# 
   946  0E23                     	;# 
   947  0E24                     	;# 
   948  0E25                     	;# 
   949  0E26                     	;# 
   950  0E27                     	;# 
   951  0E28                     	;# 
   952  0E29                     	;# 
   953  0E2A                     	;# 
   954  0E2B                     	;# 
   955  0E2C                     	;# 
   956  0E2D                     	;# 
   957  0E2E                     	;# 
   958  0E2F                     	;# 
   959  0E30                     	;# 
   960  0E31                     	;# 
   961  0E32                     	;# 
   962  0E33                     	;# 
   963  0E34                     	;# 
   964  0E35                     	;# 
   965  0E36                     	;# 
   966  0E37                     	;# 
   967  0E8F                     	;# 
   968  0E90                     	;# 
   969  0E91                     	;# 
   970  0E92                     	;# 
   971  0E93                     	;# 
   972  0E94                     	;# 
   973  0E95                     	;# 
   974  0E96                     	;# 
   975  0E97                     	;# 
   976  0E9C                     	;# 
   977  0E9D                     	;# 
   978  0E9E                     	;# 
   979  0EA1                     	;# 
   980  0EA2                     	;# 
   981  0EA3                     	;# 
   982  0EA4                     	;# 
   983  0EA5                     	;# 
   984  0EA9                     	;# 
   985  0EAA                     	;# 
   986  0EAB                     	;# 
   987  0EAC                     	;# 
   988  0EB1                     	;# 
   989  0EB2                     	;# 
   990  0EB3                     	;# 
   991  0EB8                     	;# 
   992  0EB9                     	;# 
   993  0EBA                     	;# 
   994  0EBB                     	;# 
   995  0EBC                     	;# 
   996  0EBD                     	;# 
   997  0EBE                     	;# 
   998  0EC3                     	;# 
   999  0EC5                     	;# 
  1000  0EC6                     	;# 
  1001  0EC7                     	;# 
  1002  0EC8                     	;# 
  1003  0EC9                     	;# 
  1004  0ECA                     	;# 
  1005  0ECB                     	;# 
  1006  0ECC                     	;# 
  1007  0F10                     	;# 
  1008  0F11                     	;# 
  1009  0F12                     	;# 
  1010  0F13                     	;# 
  1011  0F14                     	;# 
  1012  0F15                     	;# 
  1013  0F16                     	;# 
  1014  0F17                     	;# 
  1015  0F18                     	;# 
  1016  0F19                     	;# 
  1017  0F1A                     	;# 
  1018  0F1B                     	;# 
  1019  0F1C                     	;# 
  1020  0F1D                     	;# 
  1021  0F1E                     	;# 
  1022  0F1F                     	;# 
  1023  0F20                     	;# 
  1024  0F21                     	;# 
  1025  0F22                     	;# 
  1026  0F23                     	;# 
  1027  0F24                     	;# 
  1028  0F25                     	;# 
  1029  0F26                     	;# 
  1030  0F27                     	;# 
  1031  0F38                     	;# 
  1032  0F39                     	;# 
  1033  0F3A                     	;# 
  1034  0F3B                     	;# 
  1035  0F3C                     	;# 
  1036  0F3D                     	;# 
  1037  0F3E                     	;# 
  1038  0F3F                     	;# 
  1039  0F40                     	;# 
  1040  0F41                     	;# 
  1041  0F43                     	;# 
  1042  0F44                     	;# 
  1043  0F45                     	;# 
  1044  0F46                     	;# 
  1045  0F47                     	;# 
  1046  0F48                     	;# 
  1047  0F49                     	;# 
  1048  0F4A                     	;# 
  1049  0F4B                     	;# 
  1050  0F4C                     	;# 
  1051  0F4E                     	;# 
  1052  0F4F                     	;# 
  1053  0F50                     	;# 
  1054  0F51                     	;# 
  1055  0F52                     	;# 
  1056  0F53                     	;# 
  1057  0F54                     	;# 
  1058  0F55                     	;# 
  1059  0F56                     	;# 
  1060  0F57                     	;# 
  1061  0F65                     	;# 
  1062  0F68                     	;# 
  1063  0F69                     	;# 
  1064  0F6A                     	;# 
  1065  0F6B                     	;# 
  1066  0FE4                     	;# 
  1067  0FE5                     	;# 
  1068  0FE6                     	;# 
  1069  0FE7                     	;# 
  1070  0FE8                     	;# 
  1071  0FE9                     	;# 
  1072  0FEA                     	;# 
  1073  0FEB                     	;# 
  1074  0FED                     	;# 
  1075  0FEE                     	;# 
  1076  0FEF                     	;# 
  1077  0000                     	;# 
  1078  0001                     	;# 
  1079  0002                     	;# 
  1080  0003                     	;# 
  1081  0004                     	;# 
  1082  0005                     	;# 
  1083  0006                     	;# 
  1084  0007                     	;# 
  1085  0008                     	;# 
  1086  0009                     	;# 
  1087  000A                     	;# 
  1088  000B                     	;# 
  1089  000C                     	;# 
  1090  000D                     	;# 
  1091  000E                     	;# 
  1092  0010                     	;# 
  1093  0011                     	;# 
  1094  0012                     	;# 
  1095  0013                     	;# 
  1096  0016                     	;# 
  1097  0017                     	;# 
  1098  0018                     	;# 
  1099  001C                     	;# 
  1100  001C                     	;# 
  1101  001D                     	;# 
  1102  001D                     	;# 
  1103  001E                     	;# 
  1104  001F                     	;# 
  1105  008C                     	;# 
  1106  008C                     	;# 
  1107  008D                     	;# 
  1108  008E                     	;# 
  1109  008E                     	;# 
  1110  008F                     	;# 
  1111  0090                     	;# 
  1112  0090                     	;# 
  1113  0091                     	;# 
  1114  0093                     	;# 
  1115  0094                     	;# 
  1116  0095                     	;# 
  1117  0096                     	;# 
  1118  0097                     	;# 
  1119  0098                     	;# 
  1120  0099                     	;# 
  1121  009A                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  010C                     	;# 
  1127  010D                     	;# 
  1128  010E                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  0110                     	;# 
  1132  0110                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0112                     	;# 
  1136  0113                     	;# 
  1137  0114                     	;# 
  1138  0114                     	;# 
  1139  0115                     	;# 
  1140  0116                     	;# 
  1141  0116                     	;# 
  1142  0117                     	;# 
  1143  0119                     	;# 
  1144  0119                     	;# 
  1145  0119                     	;# 
  1146  011A                     	;# 
  1147  011A                     	;# 
  1148  011A                     	;# 
  1149  011B                     	;# 
  1150  011B                     	;# 
  1151  011B                     	;# 
  1152  011B                     	;# 
  1153  011B                     	;# 
  1154  011C                     	;# 
  1155  011C                     	;# 
  1156  011C                     	;# 
  1157  011D                     	;# 
  1158  011D                     	;# 
  1159  011D                     	;# 
  1160  011E                     	;# 
  1161  011E                     	;# 
  1162  011E                     	;# 
  1163  011F                     	;# 
  1164  011F                     	;# 
  1165  011F                     	;# 
  1166  011F                     	;# 
  1167  011F                     	;# 
  1168  018C                     	;# 
  1169  018D                     	;# 
  1170  018E                     	;# 
  1171  018F                     	;# 
  1172  0190                     	;# 
  1173  0191                     	;# 
  1174  0192                     	;# 
  1175  0196                     	;# 
  1176  0197                     	;# 
  1177  0198                     	;# 
  1178  0199                     	;# 
  1179  019A                     	;# 
  1180  019B                     	;# 
  1181  019C                     	;# 
  1182  020C                     	;# 
  1183  020D                     	;# 
  1184  020E                     	;# 
  1185  020F                     	;# 
  1186  020F                     	;# 
  1187  0210                     	;# 
  1188  0210                     	;# 
  1189  0211                     	;# 
  1190  0211                     	;# 
  1191  0212                     	;# 
  1192  0213                     	;# 
  1193  0214                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0216                     	;# 
  1197  0216                     	;# 
  1198  0217                     	;# 
  1199  0217                     	;# 
  1200  0218                     	;# 
  1201  0219                     	;# 
  1202  021A                     	;# 
  1203  021B                     	;# 
  1204  021B                     	;# 
  1205  021C                     	;# 
  1206  021C                     	;# 
  1207  021D                     	;# 
  1208  021D                     	;# 
  1209  021E                     	;# 
  1210  021F                     	;# 
  1211  028C                     	;# 
  1212  028C                     	;# 
  1213  028D                     	;# 
  1214  028D                     	;# 
  1215  028E                     	;# 
  1216  028F                     	;# 
  1217  0290                     	;# 
  1218  0290                     	;# 
  1219  0291                     	;# 
  1220  0292                     	;# 
  1221  0292                     	;# 
  1222  0293                     	;# 
  1223  0293                     	;# 
  1224  0294                     	;# 
  1225  0295                     	;# 
  1226  0296                     	;# 
  1227  0296                     	;# 
  1228  0297                     	;# 
  1229  0298                     	;# 
  1230  0298                     	;# 
  1231  0299                     	;# 
  1232  0299                     	;# 
  1233  029A                     	;# 
  1234  029B                     	;# 
  1235  029C                     	;# 
  1236  029C                     	;# 
  1237  029D                     	;# 
  1238  030C                     	;# 
  1239  030C                     	;# 
  1240  030D                     	;# 
  1241  030E                     	;# 
  1242  030F                     	;# 
  1243  0310                     	;# 
  1244  0310                     	;# 
  1245  0311                     	;# 
  1246  0312                     	;# 
  1247  0313                     	;# 
  1248  0314                     	;# 
  1249  0314                     	;# 
  1250  0315                     	;# 
  1251  0316                     	;# 
  1252  0317                     	;# 
  1253  0318                     	;# 
  1254  0318                     	;# 
  1255  0319                     	;# 
  1256  031A                     	;# 
  1257  031B                     	;# 
  1258  031C                     	;# 
  1259  031C                     	;# 
  1260  031D                     	;# 
  1261  031E                     	;# 
  1262  031F                     	;# 
  1263  038C                     	;# 
  1264  038D                     	;# 
  1265  038E                     	;# 
  1266  0390                     	;# 
  1267  0391                     	;# 
  1268  0392                     	;# 
  1269  040C                     	;# 
  1270  040D                     	;# 
  1271  040E                     	;# 
  1272  040F                     	;# 
  1273  0410                     	;# 
  1274  0411                     	;# 
  1275  0416                     	;# 
  1276  0416                     	;# 
  1277  0417                     	;# 
  1278  0418                     	;# 
  1279  0418                     	;# 
  1280  0419                     	;# 
  1281  041A                     	;# 
  1282  041A                     	;# 
  1283  041B                     	;# 
  1284  041C                     	;# 
  1285  041C                     	;# 
  1286  041D                     	;# 
  1287  041E                     	;# 
  1288  041F                     	;# 
  1289  048C                     	;# 
  1290  048C                     	;# 
  1291  048D                     	;# 
  1292  048E                     	;# 
  1293  048F                     	;# 
  1294  048F                     	;# 
  1295  0490                     	;# 
  1296  0491                     	;# 
  1297  0492                     	;# 
  1298  0492                     	;# 
  1299  0493                     	;# 
  1300  0494                     	;# 
  1301  0495                     	;# 
  1302  0495                     	;# 
  1303  0496                     	;# 
  1304  0497                     	;# 
  1305  0498                     	;# 
  1306  0499                     	;# 
  1307  049A                     	;# 
  1308  049B                     	;# 
  1309  049C                     	;# 
  1310  049D                     	;# 
  1311  050C                     	;# 
  1312  050C                     	;# 
  1313  050D                     	;# 
  1314  050E                     	;# 
  1315  050F                     	;# 
  1316  050F                     	;# 
  1317  0510                     	;# 
  1318  0511                     	;# 
  1319  0512                     	;# 
  1320  0512                     	;# 
  1321  0513                     	;# 
  1322  0514                     	;# 
  1323  0515                     	;# 
  1324  0515                     	;# 
  1325  0516                     	;# 
  1326  0517                     	;# 
  1327  0518                     	;# 
  1328  0519                     	;# 
  1329  051A                     	;# 
  1330  051B                     	;# 
  1331  051C                     	;# 
  1332  051D                     	;# 
  1333  058C                     	;# 
  1334  058C                     	;# 
  1335  058D                     	;# 
  1336  058E                     	;# 
  1337  058F                     	;# 
  1338  058F                     	;# 
  1339  0590                     	;# 
  1340  0591                     	;# 
  1341  0592                     	;# 
  1342  0593                     	;# 
  1343  060C                     	;# 
  1344  060D                     	;# 
  1345  060E                     	;# 
  1346  060F                     	;# 
  1347  0610                     	;# 
  1348  0611                     	;# 
  1349  0612                     	;# 
  1350  0613                     	;# 
  1351  0614                     	;# 
  1352  0616                     	;# 
  1353  0617                     	;# 
  1354  0618                     	;# 
  1355  0619                     	;# 
  1356  061A                     	;# 
  1357  061B                     	;# 
  1358  061C                     	;# 
  1359  061D                     	;# 
  1360  061E                     	;# 
  1361  068C                     	;# 
  1362  068D                     	;# 
  1363  068E                     	;# 
  1364  068F                     	;# 
  1365  0690                     	;# 
  1366  0691                     	;# 
  1367  0692                     	;# 
  1368  0693                     	;# 
  1369  0694                     	;# 
  1370  070C                     	;# 
  1371  070D                     	;# 
  1372  070E                     	;# 
  1373  070F                     	;# 
  1374  0710                     	;# 
  1375  0711                     	;# 
  1376  0712                     	;# 
  1377  0713                     	;# 
  1378  0714                     	;# 
  1379  0716                     	;# 
  1380  0717                     	;# 
  1381  0718                     	;# 
  1382  0719                     	;# 
  1383  071A                     	;# 
  1384  071B                     	;# 
  1385  071C                     	;# 
  1386  071D                     	;# 
  1387  071E                     	;# 
  1388  0796                     	;# 
  1389  0797                     	;# 
  1390  0798                     	;# 
  1391  0799                     	;# 
  1392  079A                     	;# 
  1393  079B                     	;# 
  1394  080C                     	;# 
  1395  080D                     	;# 
  1396  080E                     	;# 
  1397  080F                     	;# 
  1398  0810                     	;# 
  1399  0811                     	;# 
  1400  0812                     	;# 
  1401  0813                     	;# 
  1402  0814                     	;# 
  1403  081A                     	;# 
  1404  081B                     	;# 
  1405  081C                     	;# 
  1406  081D                     	;# 
  1407  081E                     	;# 
  1408  081F                     	;# 
  1409  088C                     	;# 
  1410  088D                     	;# 
  1411  088E                     	;# 
  1412  088F                     	;# 
  1413  0890                     	;# 
  1414  0891                     	;# 
  1415  0892                     	;# 
  1416  0893                     	;# 
  1417  0895                     	;# 
  1418  0896                     	;# 
  1419  0897                     	;# 
  1420  0898                     	;# 
  1421  0899                     	;# 
  1422  089A                     	;# 
  1423  089B                     	;# 
  1424  090C                     	;# 
  1425  090E                     	;# 
  1426  090F                     	;# 
  1427  091F                     	;# 
  1428  091F                     	;# 
  1429  098F                     	;# 
  1430  098F                     	;# 
  1431  0990                     	;# 
  1432  0991                     	;# 
  1433  0992                     	;# 
  1434  0993                     	;# 
  1435  0994                     	;# 
  1436  0995                     	;# 
  1437  0996                     	;# 
  1438  0997                     	;# 
  1439  0E0F                     	;# 
  1440  0E10                     	;# 
  1441  0E11                     	;# 
  1442  0E12                     	;# 
  1443  0E13                     	;# 
  1444  0E14                     	;# 
  1445  0E15                     	;# 
  1446  0E16                     	;# 
  1447  0E17                     	;# 
  1448  0E18                     	;# 
  1449  0E19                     	;# 
  1450  0E1A                     	;# 
  1451  0E1B                     	;# 
  1452  0E1C                     	;# 
  1453  0E1D                     	;# 
  1454  0E1E                     	;# 
  1455  0E1F                     	;# 
  1456  0E20                     	;# 
  1457  0E21                     	;# 
  1458  0E22                     	;# 
  1459  0E23                     	;# 
  1460  0E24                     	;# 
  1461  0E25                     	;# 
  1462  0E26                     	;# 
  1463  0E27                     	;# 
  1464  0E28                     	;# 
  1465  0E29                     	;# 
  1466  0E2A                     	;# 
  1467  0E2B                     	;# 
  1468  0E2C                     	;# 
  1469  0E2D                     	;# 
  1470  0E2E                     	;# 
  1471  0E2F                     	;# 
  1472  0E30                     	;# 
  1473  0E31                     	;# 
  1474  0E32                     	;# 
  1475  0E33                     	;# 
  1476  0E34                     	;# 
  1477  0E35                     	;# 
  1478  0E36                     	;# 
  1479  0E37                     	;# 
  1480  0E8F                     	;# 
  1481  0E90                     	;# 
  1482  0E91                     	;# 
  1483  0E92                     	;# 
  1484  0E93                     	;# 
  1485  0E94                     	;# 
  1486  0E95                     	;# 
  1487  0E96                     	;# 
  1488  0E97                     	;# 
  1489  0E9C                     	;# 
  1490  0E9D                     	;# 
  1491  0E9E                     	;# 
  1492  0EA1                     	;# 
  1493  0EA2                     	;# 
  1494  0EA3                     	;# 
  1495  0EA4                     	;# 
  1496  0EA5                     	;# 
  1497  0EA9                     	;# 
  1498  0EAA                     	;# 
  1499  0EAB                     	;# 
  1500  0EAC                     	;# 
  1501  0EB1                     	;# 
  1502  0EB2                     	;# 
  1503  0EB3                     	;# 
  1504  0EB8                     	;# 
  1505  0EB9                     	;# 
  1506  0EBA                     	;# 
  1507  0EBB                     	;# 
  1508  0EBC                     	;# 
  1509  0EBD                     	;# 
  1510  0EBE                     	;# 
  1511  0EC3                     	;# 
  1512  0EC5                     	;# 
  1513  0EC6                     	;# 
  1514  0EC7                     	;# 
  1515  0EC8                     	;# 
  1516  0EC9                     	;# 
  1517  0ECA                     	;# 
  1518  0ECB                     	;# 
  1519  0ECC                     	;# 
  1520  0F10                     	;# 
  1521  0F11                     	;# 
  1522  0F12                     	;# 
  1523  0F13                     	;# 
  1524  0F14                     	;# 
  1525  0F15                     	;# 
  1526  0F16                     	;# 
  1527  0F17                     	;# 
  1528  0F18                     	;# 
  1529  0F19                     	;# 
  1530  0F1A                     	;# 
  1531  0F1B                     	;# 
  1532  0F1C                     	;# 
  1533  0F1D                     	;# 
  1534  0F1E                     	;# 
  1535  0F1F                     	;# 
  1536  0F20                     	;# 
  1537  0F21                     	;# 
  1538  0F22                     	;# 
  1539  0F23                     	;# 
  1540  0F24                     	;# 
  1541  0F25                     	;# 
  1542  0F26                     	;# 
  1543  0F27                     	;# 
  1544  0F38                     	;# 
  1545  0F39                     	;# 
  1546  0F3A                     	;# 
  1547  0F3B                     	;# 
  1548  0F3C                     	;# 
  1549  0F3D                     	;# 
  1550  0F3E                     	;# 
  1551  0F3F                     	;# 
  1552  0F40                     	;# 
  1553  0F41                     	;# 
  1554  0F43                     	;# 
  1555  0F44                     	;# 
  1556  0F45                     	;# 
  1557  0F46                     	;# 
  1558  0F47                     	;# 
  1559  0F48                     	;# 
  1560  0F49                     	;# 
  1561  0F4A                     	;# 
  1562  0F4B                     	;# 
  1563  0F4C                     	;# 
  1564  0F4E                     	;# 
  1565  0F4F                     	;# 
  1566  0F50                     	;# 
  1567  0F51                     	;# 
  1568  0F52                     	;# 
  1569  0F53                     	;# 
  1570  0F54                     	;# 
  1571  0F55                     	;# 
  1572  0F56                     	;# 
  1573  0F57                     	;# 
  1574  0F65                     	;# 
  1575  0F68                     	;# 
  1576  0F69                     	;# 
  1577  0F6A                     	;# 
  1578  0F6B                     	;# 
  1579  0FE4                     	;# 
  1580  0FE5                     	;# 
  1581  0FE6                     	;# 
  1582  0FE7                     	;# 
  1583  0FE8                     	;# 
  1584  0FE9                     	;# 
  1585  0FEA                     	;# 
  1586  0FEB                     	;# 
  1587  0FED                     	;# 
  1588  0FEE                     	;# 
  1589  0FEF                     	;# 
  1590  0000                     	;# 
  1591  0001                     	;# 
  1592  0002                     	;# 
  1593  0003                     	;# 
  1594  0004                     	;# 
  1595  0005                     	;# 
  1596  0006                     	;# 
  1597  0007                     	;# 
  1598  0008                     	;# 
  1599  0009                     	;# 
  1600  000A                     	;# 
  1601  000B                     	;# 
  1602  000C                     	;# 
  1603  000D                     	;# 
  1604  000E                     	;# 
  1605  0010                     	;# 
  1606  0011                     	;# 
  1607  0012                     	;# 
  1608  0013                     	;# 
  1609  0016                     	;# 
  1610  0017                     	;# 
  1611  0018                     	;# 
  1612  001C                     	;# 
  1613  001C                     	;# 
  1614  001D                     	;# 
  1615  001D                     	;# 
  1616  001E                     	;# 
  1617  001F                     	;# 
  1618  008C                     	;# 
  1619  008C                     	;# 
  1620  008D                     	;# 
  1621  008E                     	;# 
  1622  008E                     	;# 
  1623  008F                     	;# 
  1624  0090                     	;# 
  1625  0090                     	;# 
  1626  0091                     	;# 
  1627  0093                     	;# 
  1628  0094                     	;# 
  1629  0095                     	;# 
  1630  0096                     	;# 
  1631  0097                     	;# 
  1632  0098                     	;# 
  1633  0099                     	;# 
  1634  009A                     	;# 
  1635  009B                     	;# 
  1636  009C                     	;# 
  1637  009D                     	;# 
  1638  009E                     	;# 
  1639  010C                     	;# 
  1640  010D                     	;# 
  1641  010E                     	;# 
  1642  010E                     	;# 
  1643  010F                     	;# 
  1644  0110                     	;# 
  1645  0110                     	;# 
  1646  0111                     	;# 
  1647  0112                     	;# 
  1648  0112                     	;# 
  1649  0113                     	;# 
  1650  0114                     	;# 
  1651  0114                     	;# 
  1652  0115                     	;# 
  1653  0116                     	;# 
  1654  0116                     	;# 
  1655  0117                     	;# 
  1656  0119                     	;# 
  1657  0119                     	;# 
  1658  0119                     	;# 
  1659  011A                     	;# 
  1660  011A                     	;# 
  1661  011A                     	;# 
  1662  011B                     	;# 
  1663  011B                     	;# 
  1664  011B                     	;# 
  1665  011B                     	;# 
  1666  011B                     	;# 
  1667  011C                     	;# 
  1668  011C                     	;# 
  1669  011C                     	;# 
  1670  011D                     	;# 
  1671  011D                     	;# 
  1672  011D                     	;# 
  1673  011E                     	;# 
  1674  011E                     	;# 
  1675  011E                     	;# 
  1676  011F                     	;# 
  1677  011F                     	;# 
  1678  011F                     	;# 
  1679  011F                     	;# 
  1680  011F                     	;# 
  1681  018C                     	;# 
  1682  018D                     	;# 
  1683  018E                     	;# 
  1684  018F                     	;# 
  1685  0190                     	;# 
  1686  0191                     	;# 
  1687  0192                     	;# 
  1688  0196                     	;# 
  1689  0197                     	;# 
  1690  0198                     	;# 
  1691  0199                     	;# 
  1692  019A                     	;# 
  1693  019B                     	;# 
  1694  019C                     	;# 
  1695  020C                     	;# 
  1696  020D                     	;# 
  1697  020E                     	;# 
  1698  020F                     	;# 
  1699  020F                     	;# 
  1700  0210                     	;# 
  1701  0210                     	;# 
  1702  0211                     	;# 
  1703  0211                     	;# 
  1704  0212                     	;# 
  1705  0213                     	;# 
  1706  0214                     	;# 
  1707  0215                     	;# 
  1708  0215                     	;# 
  1709  0216                     	;# 
  1710  0216                     	;# 
  1711  0217                     	;# 
  1712  0217                     	;# 
  1713  0218                     	;# 
  1714  0219                     	;# 
  1715  021A                     	;# 
  1716  021B                     	;# 
  1717  021B                     	;# 
  1718  021C                     	;# 
  1719  021C                     	;# 
  1720  021D                     	;# 
  1721  021D                     	;# 
  1722  021E                     	;# 
  1723  021F                     	;# 
  1724  028C                     	;# 
  1725  028C                     	;# 
  1726  028D                     	;# 
  1727  028D                     	;# 
  1728  028E                     	;# 
  1729  028F                     	;# 
  1730  0290                     	;# 
  1731  0290                     	;# 
  1732  0291                     	;# 
  1733  0292                     	;# 
  1734  0292                     	;# 
  1735  0293                     	;# 
  1736  0293                     	;# 
  1737  0294                     	;# 
  1738  0295                     	;# 
  1739  0296                     	;# 
  1740  0296                     	;# 
  1741  0297                     	;# 
  1742  0298                     	;# 
  1743  0298                     	;# 
  1744  0299                     	;# 
  1745  0299                     	;# 
  1746  029A                     	;# 
  1747  029B                     	;# 
  1748  029C                     	;# 
  1749  029C                     	;# 
  1750  029D                     	;# 
  1751  030C                     	;# 
  1752  030C                     	;# 
  1753  030D                     	;# 
  1754  030E                     	;# 
  1755  030F                     	;# 
  1756  0310                     	;# 
  1757  0310                     	;# 
  1758  0311                     	;# 
  1759  0312                     	;# 
  1760  0313                     	;# 
  1761  0314                     	;# 
  1762  0314                     	;# 
  1763  0315                     	;# 
  1764  0316                     	;# 
  1765  0317                     	;# 
  1766  0318                     	;# 
  1767  0318                     	;# 
  1768  0319                     	;# 
  1769  031A                     	;# 
  1770  031B                     	;# 
  1771  031C                     	;# 
  1772  031C                     	;# 
  1773  031D                     	;# 
  1774  031E                     	;# 
  1775  031F                     	;# 
  1776  038C                     	;# 
  1777  038D                     	;# 
  1778  038E                     	;# 
  1779  0390                     	;# 
  1780  0391                     	;# 
  1781  0392                     	;# 
  1782  040C                     	;# 
  1783  040D                     	;# 
  1784  040E                     	;# 
  1785  040F                     	;# 
  1786  0410                     	;# 
  1787  0411                     	;# 
  1788  0416                     	;# 
  1789  0416                     	;# 
  1790  0417                     	;# 
  1791  0418                     	;# 
  1792  0418                     	;# 
  1793  0419                     	;# 
  1794  041A                     	;# 
  1795  041A                     	;# 
  1796  041B                     	;# 
  1797  041C                     	;# 
  1798  041C                     	;# 
  1799  041D                     	;# 
  1800  041E                     	;# 
  1801  041F                     	;# 
  1802  048C                     	;# 
  1803  048C                     	;# 
  1804  048D                     	;# 
  1805  048E                     	;# 
  1806  048F                     	;# 
  1807  048F                     	;# 
  1808  0490                     	;# 
  1809  0491                     	;# 
  1810  0492                     	;# 
  1811  0492                     	;# 
  1812  0493                     	;# 
  1813  0494                     	;# 
  1814  0495                     	;# 
  1815  0495                     	;# 
  1816  0496                     	;# 
  1817  0497                     	;# 
  1818  0498                     	;# 
  1819  0499                     	;# 
  1820  049A                     	;# 
  1821  049B                     	;# 
  1822  049C                     	;# 
  1823  049D                     	;# 
  1824  050C                     	;# 
  1825  050C                     	;# 
  1826  050D                     	;# 
  1827  050E                     	;# 
  1828  050F                     	;# 
  1829  050F                     	;# 
  1830  0510                     	;# 
  1831  0511                     	;# 
  1832  0512                     	;# 
  1833  0512                     	;# 
  1834  0513                     	;# 
  1835  0514                     	;# 
  1836  0515                     	;# 
  1837  0515                     	;# 
  1838  0516                     	;# 
  1839  0517                     	;# 
  1840  0518                     	;# 
  1841  0519                     	;# 
  1842  051A                     	;# 
  1843  051B                     	;# 
  1844  051C                     	;# 
  1845  051D                     	;# 
  1846  058C                     	;# 
  1847  058C                     	;# 
  1848  058D                     	;# 
  1849  058E                     	;# 
  1850  058F                     	;# 
  1851  058F                     	;# 
  1852  0590                     	;# 
  1853  0591                     	;# 
  1854  0592                     	;# 
  1855  0593                     	;# 
  1856  060C                     	;# 
  1857  060D                     	;# 
  1858  060E                     	;# 
  1859  060F                     	;# 
  1860  0610                     	;# 
  1861  0611                     	;# 
  1862  0612                     	;# 
  1863  0613                     	;# 
  1864  0614                     	;# 
  1865  0616                     	;# 
  1866  0617                     	;# 
  1867  0618                     	;# 
  1868  0619                     	;# 
  1869  061A                     	;# 
  1870  061B                     	;# 
  1871  061C                     	;# 
  1872  061D                     	;# 
  1873  061E                     	;# 
  1874  068C                     	;# 
  1875  068D                     	;# 
  1876  068E                     	;# 
  1877  068F                     	;# 
  1878  0690                     	;# 
  1879  0691                     	;# 
  1880  0692                     	;# 
  1881  0693                     	;# 
  1882  0694                     	;# 
  1883  070C                     	;# 
  1884  070D                     	;# 
  1885  070E                     	;# 
  1886  070F                     	;# 
  1887  0710                     	;# 
  1888  0711                     	;# 
  1889  0712                     	;# 
  1890  0713                     	;# 
  1891  0714                     	;# 
  1892  0716                     	;# 
  1893  0717                     	;# 
  1894  0718                     	;# 
  1895  0719                     	;# 
  1896  071A                     	;# 
  1897  071B                     	;# 
  1898  071C                     	;# 
  1899  071D                     	;# 
  1900  071E                     	;# 
  1901  0796                     	;# 
  1902  0797                     	;# 
  1903  0798                     	;# 
  1904  0799                     	;# 
  1905  079A                     	;# 
  1906  079B                     	;# 
  1907  080C                     	;# 
  1908  080D                     	;# 
  1909  080E                     	;# 
  1910  080F                     	;# 
  1911  0810                     	;# 
  1912  0811                     	;# 
  1913  0812                     	;# 
  1914  0813                     	;# 
  1915  0814                     	;# 
  1916  081A                     	;# 
  1917  081B                     	;# 
  1918  081C                     	;# 
  1919  081D                     	;# 
  1920  081E                     	;# 
  1921  081F                     	;# 
  1922  088C                     	;# 
  1923  088D                     	;# 
  1924  088E                     	;# 
  1925  088F                     	;# 
  1926  0890                     	;# 
  1927  0891                     	;# 
  1928  0892                     	;# 
  1929  0893                     	;# 
  1930  0895                     	;# 
  1931  0896                     	;# 
  1932  0897                     	;# 
  1933  0898                     	;# 
  1934  0899                     	;# 
  1935  089A                     	;# 
  1936  089B                     	;# 
  1937  090C                     	;# 
  1938  090E                     	;# 
  1939  090F                     	;# 
  1940  091F                     	;# 
  1941  091F                     	;# 
  1942  098F                     	;# 
  1943  098F                     	;# 
  1944  0990                     	;# 
  1945  0991                     	;# 
  1946  0992                     	;# 
  1947  0993                     	;# 
  1948  0994                     	;# 
  1949  0995                     	;# 
  1950  0996                     	;# 
  1951  0997                     	;# 
  1952  0E0F                     	;# 
  1953  0E10                     	;# 
  1954  0E11                     	;# 
  1955  0E12                     	;# 
  1956  0E13                     	;# 
  1957  0E14                     	;# 
  1958  0E15                     	;# 
  1959  0E16                     	;# 
  1960  0E17                     	;# 
  1961  0E18                     	;# 
  1962  0E19                     	;# 
  1963  0E1A                     	;# 
  1964  0E1B                     	;# 
  1965  0E1C                     	;# 
  1966  0E1D                     	;# 
  1967  0E1E                     	;# 
  1968  0E1F                     	;# 
  1969  0E20                     	;# 
  1970  0E21                     	;# 
  1971  0E22                     	;# 
  1972  0E23                     	;# 
  1973  0E24                     	;# 
  1974  0E25                     	;# 
  1975  0E26                     	;# 
  1976  0E27                     	;# 
  1977  0E28                     	;# 
  1978  0E29                     	;# 
  1979  0E2A                     	;# 
  1980  0E2B                     	;# 
  1981  0E2C                     	;# 
  1982  0E2D                     	;# 
  1983  0E2E                     	;# 
  1984  0E2F                     	;# 
  1985  0E30                     	;# 
  1986  0E31                     	;# 
  1987  0E32                     	;# 
  1988  0E33                     	;# 
  1989  0E34                     	;# 
  1990  0E35                     	;# 
  1991  0E36                     	;# 
  1992  0E37                     	;# 
  1993  0E8F                     	;# 
  1994  0E90                     	;# 
  1995  0E91                     	;# 
  1996  0E92                     	;# 
  1997  0E93                     	;# 
  1998  0E94                     	;# 
  1999  0E95                     	;# 
  2000  0E96                     	;# 
  2001  0E97                     	;# 
  2002  0E9C                     	;# 
  2003  0E9D                     	;# 
  2004  0E9E                     	;# 
  2005  0EA1                     	;# 
  2006  0EA2                     	;# 
  2007  0EA3                     	;# 
  2008  0EA4                     	;# 
  2009  0EA5                     	;# 
  2010  0EA9                     	;# 
  2011  0EAA                     	;# 
  2012  0EAB                     	;# 
  2013  0EAC                     	;# 
  2014  0EB1                     	;# 
  2015  0EB2                     	;# 
  2016  0EB3                     	;# 
  2017  0EB8                     	;# 
  2018  0EB9                     	;# 
  2019  0EBA                     	;# 
  2020  0EBB                     	;# 
  2021  0EBC                     	;# 
  2022  0EBD                     	;# 
  2023  0EBE                     	;# 
  2024  0EC3                     	;# 
  2025  0EC5                     	;# 
  2026  0EC6                     	;# 
  2027  0EC7                     	;# 
  2028  0EC8                     	;# 
  2029  0EC9                     	;# 
  2030  0ECA                     	;# 
  2031  0ECB                     	;# 
  2032  0ECC                     	;# 
  2033  0F10                     	;# 
  2034  0F11                     	;# 
  2035  0F12                     	;# 
  2036  0F13                     	;# 
  2037  0F14                     	;# 
  2038  0F15                     	;# 
  2039  0F16                     	;# 
  2040  0F17                     	;# 
  2041  0F18                     	;# 
  2042  0F19                     	;# 
  2043  0F1A                     	;# 
  2044  0F1B                     	;# 
  2045  0F1C                     	;# 
  2046  0F1D                     	;# 
  2047  0F1E                     	;# 
  2048  0F1F                     	;# 
  2049  0F20                     	;# 
  2050  0F21                     	;# 
  2051  0F22                     	;# 
  2052  0F23                     	;# 
  2053  0F24                     	;# 
  2054  0F25                     	;# 
  2055  0F26                     	;# 
  2056  0F27                     	;# 
  2057  0F38                     	;# 
  2058  0F39                     	;# 
  2059  0F3A                     	;# 
  2060  0F3B                     	;# 
  2061  0F3C                     	;# 
  2062  0F3D                     	;# 
  2063  0F3E                     	;# 
  2064  0F3F                     	;# 
  2065  0F40                     	;# 
  2066  0F41                     	;# 
  2067  0F43                     	;# 
  2068  0F44                     	;# 
  2069  0F45                     	;# 
  2070  0F46                     	;# 
  2071  0F47                     	;# 
  2072  0F48                     	;# 
  2073  0F49                     	;# 
  2074  0F4A                     	;# 
  2075  0F4B                     	;# 
  2076  0F4C                     	;# 
  2077  0F4E                     	;# 
  2078  0F4F                     	;# 
  2079  0F50                     	;# 
  2080  0F51                     	;# 
  2081  0F52                     	;# 
  2082  0F53                     	;# 
  2083  0F54                     	;# 
  2084  0F55                     	;# 
  2085  0F56                     	;# 
  2086  0F57                     	;# 
  2087  0F65                     	;# 
  2088  0F68                     	;# 
  2089  0F69                     	;# 
  2090  0F6A                     	;# 
  2091  0F6B                     	;# 
  2092  0FE4                     	;# 
  2093  0FE5                     	;# 
  2094  0FE6                     	;# 
  2095  0FE7                     	;# 
  2096  0FE8                     	;# 
  2097  0FE9                     	;# 
  2098  0FEA                     	;# 
  2099  0FEB                     	;# 
  2100  0FED                     	;# 
  2101  0FEE                     	;# 
  2102  0FEF                     	;# 
  2103  0000                     	;# 
  2104  0001                     	;# 
  2105  0002                     	;# 
  2106  0003                     	;# 
  2107  0004                     	;# 
  2108  0005                     	;# 
  2109  0006                     	;# 
  2110  0007                     	;# 
  2111  0008                     	;# 
  2112  0009                     	;# 
  2113  000A                     	;# 
  2114  000B                     	;# 
  2115  000C                     	;# 
  2116  000D                     	;# 
  2117  000E                     	;# 
  2118  0010                     	;# 
  2119  0011                     	;# 
  2120  0012                     	;# 
  2121  0013                     	;# 
  2122  0016                     	;# 
  2123  0017                     	;# 
  2124  0018                     	;# 
  2125  001C                     	;# 
  2126  001C                     	;# 
  2127  001D                     	;# 
  2128  001D                     	;# 
  2129  001E                     	;# 
  2130  001F                     	;# 
  2131  008C                     	;# 
  2132  008C                     	;# 
  2133  008D                     	;# 
  2134  008E                     	;# 
  2135  008E                     	;# 
  2136  008F                     	;# 
  2137  0090                     	;# 
  2138  0090                     	;# 
  2139  0091                     	;# 
  2140  0093                     	;# 
  2141  0094                     	;# 
  2142  0095                     	;# 
  2143  0096                     	;# 
  2144  0097                     	;# 
  2145  0098                     	;# 
  2146  0099                     	;# 
  2147  009A                     	;# 
  2148  009B                     	;# 
  2149  009C                     	;# 
  2150  009D                     	;# 
  2151  009E                     	;# 
  2152  010C                     	;# 
  2153  010D                     	;# 
  2154  010E                     	;# 
  2155  010E                     	;# 
  2156  010F                     	;# 
  2157  0110                     	;# 
  2158  0110                     	;# 
  2159  0111                     	;# 
  2160  0112                     	;# 
  2161  0112                     	;# 
  2162  0113                     	;# 
  2163  0114                     	;# 
  2164  0114                     	;# 
  2165  0115                     	;# 
  2166  0116                     	;# 
  2167  0116                     	;# 
  2168  0117                     	;# 
  2169  0119                     	;# 
  2170  0119                     	;# 
  2171  0119                     	;# 
  2172  011A                     	;# 
  2173  011A                     	;# 
  2174  011A                     	;# 
  2175  011B                     	;# 
  2176  011B                     	;# 
  2177  011B                     	;# 
  2178  011B                     	;# 
  2179  011B                     	;# 
  2180  011C                     	;# 
  2181  011C                     	;# 
  2182  011C                     	;# 
  2183  011D                     	;# 
  2184  011D                     	;# 
  2185  011D                     	;# 
  2186  011E                     	;# 
  2187  011E                     	;# 
  2188  011E                     	;# 
  2189  011F                     	;# 
  2190  011F                     	;# 
  2191  011F                     	;# 
  2192  011F                     	;# 
  2193  011F                     	;# 
  2194  018C                     	;# 
  2195  018D                     	;# 
  2196  018E                     	;# 
  2197  018F                     	;# 
  2198  0190                     	;# 
  2199  0191                     	;# 
  2200  0192                     	;# 
  2201  0196                     	;# 
  2202  0197                     	;# 
  2203  0198                     	;# 
  2204  0199                     	;# 
  2205  019A                     	;# 
  2206  019B                     	;# 
  2207  019C                     	;# 
  2208  020C                     	;# 
  2209  020D                     	;# 
  2210  020E                     	;# 
  2211  020F                     	;# 
  2212  020F                     	;# 
  2213  0210                     	;# 
  2214  0210                     	;# 
  2215  0211                     	;# 
  2216  0211                     	;# 
  2217  0212                     	;# 
  2218  0213                     	;# 
  2219  0214                     	;# 
  2220  0215                     	;# 
  2221  0215                     	;# 
  2222  0216                     	;# 
  2223  0216                     	;# 
  2224  0217                     	;# 
  2225  0217                     	;# 
  2226  0218                     	;# 
  2227  0219                     	;# 
  2228  021A                     	;# 
  2229  021B                     	;# 
  2230  021B                     	;# 
  2231  021C                     	;# 
  2232  021C                     	;# 
  2233  021D                     	;# 
  2234  021D                     	;# 
  2235  021E                     	;# 
  2236  021F                     	;# 
  2237  028C                     	;# 
  2238  028C                     	;# 
  2239  028D                     	;# 
  2240  028D                     	;# 
  2241  028E                     	;# 
  2242  028F                     	;# 
  2243  0290                     	;# 
  2244  0290                     	;# 
  2245  0291                     	;# 
  2246  0292                     	;# 
  2247  0292                     	;# 
  2248  0293                     	;# 
  2249  0293                     	;# 
  2250  0294                     	;# 
  2251  0295                     	;# 
  2252  0296                     	;# 
  2253  0296                     	;# 
  2254  0297                     	;# 
  2255  0298                     	;# 
  2256  0298                     	;# 
  2257  0299                     	;# 
  2258  0299                     	;# 
  2259  029A                     	;# 
  2260  029B                     	;# 
  2261  029C                     	;# 
  2262  029C                     	;# 
  2263  029D                     	;# 
  2264  030C                     	;# 
  2265  030C                     	;# 
  2266  030D                     	;# 
  2267  030E                     	;# 
  2268  030F                     	;# 
  2269  0310                     	;# 
  2270  0310                     	;# 
  2271  0311                     	;# 
  2272  0312                     	;# 
  2273  0313                     	;# 
  2274  0314                     	;# 
  2275  0314                     	;# 
  2276  0315                     	;# 
  2277  0316                     	;# 
  2278  0317                     	;# 
  2279  0318                     	;# 
  2280  0318                     	;# 
  2281  0319                     	;# 
  2282  031A                     	;# 
  2283  031B                     	;# 
  2284  031C                     	;# 
  2285  031C                     	;# 
  2286  031D                     	;# 
  2287  031E                     	;# 
  2288  031F                     	;# 
  2289  038C                     	;# 
  2290  038D                     	;# 
  2291  038E                     	;# 
  2292  0390                     	;# 
  2293  0391                     	;# 
  2294  0392                     	;# 
  2295  040C                     	;# 
  2296  040D                     	;# 
  2297  040E                     	;# 
  2298  040F                     	;# 
  2299  0410                     	;# 
  2300  0411                     	;# 
  2301  0416                     	;# 
  2302  0416                     	;# 
  2303  0417                     	;# 
  2304  0418                     	;# 
  2305  0418                     	;# 
  2306  0419                     	;# 
  2307  041A                     	;# 
  2308  041A                     	;# 
  2309  041B                     	;# 
  2310  041C                     	;# 
  2311  041C                     	;# 
  2312  041D                     	;# 
  2313  041E                     	;# 
  2314  041F                     	;# 
  2315  048C                     	;# 
  2316  048C                     	;# 
  2317  048D                     	;# 
  2318  048E                     	;# 
  2319  048F                     	;# 
  2320  048F                     	;# 
  2321  0490                     	;# 
  2322  0491                     	;# 
  2323  0492                     	;# 
  2324  0492                     	;# 
  2325  0493                     	;# 
  2326  0494                     	;# 
  2327  0495                     	;# 
  2328  0495                     	;# 
  2329  0496                     	;# 
  2330  0497                     	;# 
  2331  0498                     	;# 
  2332  0499                     	;# 
  2333  049A                     	;# 
  2334  049B                     	;# 
  2335  049C                     	;# 
  2336  049D                     	;# 
  2337  050C                     	;# 
  2338  050C                     	;# 
  2339  050D                     	;# 
  2340  050E                     	;# 
  2341  050F                     	;# 
  2342  050F                     	;# 
  2343  0510                     	;# 
  2344  0511                     	;# 
  2345  0512                     	;# 
  2346  0512                     	;# 
  2347  0513                     	;# 
  2348  0514                     	;# 
  2349  0515                     	;# 
  2350  0515                     	;# 
  2351  0516                     	;# 
  2352  0517                     	;# 
  2353  0518                     	;# 
  2354  0519                     	;# 
  2355  051A                     	;# 
  2356  051B                     	;# 
  2357  051C                     	;# 
  2358  051D                     	;# 
  2359  058C                     	;# 
  2360  058C                     	;# 
  2361  058D                     	;# 
  2362  058E                     	;# 
  2363  058F                     	;# 
  2364  058F                     	;# 
  2365  0590                     	;# 
  2366  0591                     	;# 
  2367  0592                     	;# 
  2368  0593                     	;# 
  2369  060C                     	;# 
  2370  060D                     	;# 
  2371  060E                     	;# 
  2372  060F                     	;# 
  2373  0610                     	;# 
  2374  0611                     	;# 
  2375  0612                     	;# 
  2376  0613                     	;# 
  2377  0614                     	;# 
  2378  0616                     	;# 
  2379  0617                     	;# 
  2380  0618                     	;# 
  2381  0619                     	;# 
  2382  061A                     	;# 
  2383  061B                     	;# 
  2384  061C                     	;# 
  2385  061D                     	;# 
  2386  061E                     	;# 
  2387  068C                     	;# 
  2388  068D                     	;# 
  2389  068E                     	;# 
  2390  068F                     	;# 
  2391  0690                     	;# 
  2392  0691                     	;# 
  2393  0692                     	;# 
  2394  0693                     	;# 
  2395  0694                     	;# 
  2396  070C                     	;# 
  2397  070D                     	;# 
  2398  070E                     	;# 
  2399  070F                     	;# 
  2400  0710                     	;# 
  2401  0711                     	;# 
  2402  0712                     	;# 
  2403  0713                     	;# 
  2404  0714                     	;# 
  2405  0716                     	;# 
  2406  0717                     	;# 
  2407  0718                     	;# 
  2408  0719                     	;# 
  2409  071A                     	;# 
  2410  071B                     	;# 
  2411  071C                     	;# 
  2412  071D                     	;# 
  2413  071E                     	;# 
  2414  0796                     	;# 
  2415  0797                     	;# 
  2416  0798                     	;# 
  2417  0799                     	;# 
  2418  079A                     	;# 
  2419  079B                     	;# 
  2420  080C                     	;# 
  2421  080D                     	;# 
  2422  080E                     	;# 
  2423  080F                     	;# 
  2424  0810                     	;# 
  2425  0811                     	;# 
  2426  0812                     	;# 
  2427  0813                     	;# 
  2428  0814                     	;# 
  2429  081A                     	;# 
  2430  081B                     	;# 
  2431  081C                     	;# 
  2432  081D                     	;# 
  2433  081E                     	;# 
  2434  081F                     	;# 
  2435  088C                     	;# 
  2436  088D                     	;# 
  2437  088E                     	;# 
  2438  088F                     	;# 
  2439  0890                     	;# 
  2440  0891                     	;# 
  2441  0892                     	;# 
  2442  0893                     	;# 
  2443  0895                     	;# 
  2444  0896                     	;# 
  2445  0897                     	;# 
  2446  0898                     	;# 
  2447  0899                     	;# 
  2448  089A                     	;# 
  2449  089B                     	;# 
  2450  090C                     	;# 
  2451  090E                     	;# 
  2452  090F                     	;# 
  2453  091F                     	;# 
  2454  091F                     	;# 
  2455  098F                     	;# 
  2456  098F                     	;# 
  2457  0990                     	;# 
  2458  0991                     	;# 
  2459  0992                     	;# 
  2460  0993                     	;# 
  2461  0994                     	;# 
  2462  0995                     	;# 
  2463  0996                     	;# 
  2464  0997                     	;# 
  2465  0E0F                     	;# 
  2466  0E10                     	;# 
  2467  0E11                     	;# 
  2468  0E12                     	;# 
  2469  0E13                     	;# 
  2470  0E14                     	;# 
  2471  0E15                     	;# 
  2472  0E16                     	;# 
  2473  0E17                     	;# 
  2474  0E18                     	;# 
  2475  0E19                     	;# 
  2476  0E1A                     	;# 
  2477  0E1B                     	;# 
  2478  0E1C                     	;# 
  2479  0E1D                     	;# 
  2480  0E1E                     	;# 
  2481  0E1F                     	;# 
  2482  0E20                     	;# 
  2483  0E21                     	;# 
  2484  0E22                     	;# 
  2485  0E23                     	;# 
  2486  0E24                     	;# 
  2487  0E25                     	;# 
  2488  0E26                     	;# 
  2489  0E27                     	;# 
  2490  0E28                     	;# 
  2491  0E29                     	;# 
  2492  0E2A                     	;# 
  2493  0E2B                     	;# 
  2494  0E2C                     	;# 
  2495  0E2D                     	;# 
  2496  0E2E                     	;# 
  2497  0E2F                     	;# 
  2498  0E30                     	;# 
  2499  0E31                     	;# 
  2500  0E32                     	;# 
  2501  0E33                     	;# 
  2502  0E34                     	;# 
  2503  0E35                     	;# 
  2504  0E36                     	;# 
  2505  0E37                     	;# 
  2506  0E8F                     	;# 
  2507  0E90                     	;# 
  2508  0E91                     	;# 
  2509  0E92                     	;# 
  2510  0E93                     	;# 
  2511  0E94                     	;# 
  2512  0E95                     	;# 
  2513  0E96                     	;# 
  2514  0E97                     	;# 
  2515  0E9C                     	;# 
  2516  0E9D                     	;# 
  2517  0E9E                     	;# 
  2518  0EA1                     	;# 
  2519  0EA2                     	;# 
  2520  0EA3                     	;# 
  2521  0EA4                     	;# 
  2522  0EA5                     	;# 
  2523  0EA9                     	;# 
  2524  0EAA                     	;# 
  2525  0EAB                     	;# 
  2526  0EAC                     	;# 
  2527  0EB1                     	;# 
  2528  0EB2                     	;# 
  2529  0EB3                     	;# 
  2530  0EB8                     	;# 
  2531  0EB9                     	;# 
  2532  0EBA                     	;# 
  2533  0EBB                     	;# 
  2534  0EBC                     	;# 
  2535  0EBD                     	;# 
  2536  0EBE                     	;# 
  2537  0EC3                     	;# 
  2538  0EC5                     	;# 
  2539  0EC6                     	;# 
  2540  0EC7                     	;# 
  2541  0EC8                     	;# 
  2542  0EC9                     	;# 
  2543  0ECA                     	;# 
  2544  0ECB                     	;# 
  2545  0ECC                     	;# 
  2546  0F10                     	;# 
  2547  0F11                     	;# 
  2548  0F12                     	;# 
  2549  0F13                     	;# 
  2550  0F14                     	;# 
  2551  0F15                     	;# 
  2552  0F16                     	;# 
  2553  0F17                     	;# 
  2554  0F18                     	;# 
  2555  0F19                     	;# 
  2556  0F1A                     	;# 
  2557  0F1B                     	;# 
  2558  0F1C                     	;# 
  2559  0F1D                     	;# 
  2560  0F1E                     	;# 
  2561  0F1F                     	;# 
  2562  0F20                     	;# 
  2563  0F21                     	;# 
  2564  0F22                     	;# 
  2565  0F23                     	;# 
  2566  0F24                     	;# 
  2567  0F25                     	;# 
  2568  0F26                     	;# 
  2569  0F27                     	;# 
  2570  0F38                     	;# 
  2571  0F39                     	;# 
  2572  0F3A                     	;# 
  2573  0F3B                     	;# 
  2574  0F3C                     	;# 
  2575  0F3D                     	;# 
  2576  0F3E                     	;# 
  2577  0F3F                     	;# 
  2578  0F40                     	;# 
  2579  0F41                     	;# 
  2580  0F43                     	;# 
  2581  0F44                     	;# 
  2582  0F45                     	;# 
  2583  0F46                     	;# 
  2584  0F47                     	;# 
  2585  0F48                     	;# 
  2586  0F49                     	;# 
  2587  0F4A                     	;# 
  2588  0F4B                     	;# 
  2589  0F4C                     	;# 
  2590  0F4E                     	;# 
  2591  0F4F                     	;# 
  2592  0F50                     	;# 
  2593  0F51                     	;# 
  2594  0F52                     	;# 
  2595  0F53                     	;# 
  2596  0F54                     	;# 
  2597  0F55                     	;# 
  2598  0F56                     	;# 
  2599  0F57                     	;# 
  2600  0F65                     	;# 
  2601  0F68                     	;# 
  2602  0F69                     	;# 
  2603  0F6A                     	;# 
  2604  0F6B                     	;# 
  2605  0FE4                     	;# 
  2606  0FE5                     	;# 
  2607  0FE6                     	;# 
  2608  0FE7                     	;# 
  2609  0FE8                     	;# 
  2610  0FE9                     	;# 
  2611  0FEA                     	;# 
  2612  0FEB                     	;# 
  2613  0FED                     	;# 
  2614  0FEE                     	;# 
  2615  0FEF                     	;_samples
  2616                           
  2617                           	psect	idataBANK1
  2618  09E5                     __pidataBANK1:	
  2619                           
  2620                           ;initializer for ___cgram
  2621  09E5  340C               	retlw	12
  2622  09E6  3412               	retlw	18
  2623  09E7  3412               	retlw	18
  2624  09E8  340C               	retlw	12
  2625  09E9  3400               	retlw	0
  2626  09EA  3400               	retlw	0
  2627  09EB  3400               	retlw	0
  2628  09EC  3400               	retlw	0
  2629  09ED  340A               	retlw	10
  2630  09EE  3415               	retlw	21
  2631  09EF  3411               	retlw	17
  2632  09F0  340A               	retlw	10
  2633  09F1  3404               	retlw	4
  2634  09F2  3400               	retlw	0
  2635  09F3  3400               	retlw	0
  2636  09F4  3400               	retlw	0
  2637  09F5  340A               	retlw	10
  2638  09F6  341F               	retlw	31
  2639  09F7  341F               	retlw	31
  2640  09F8  340E               	retlw	14
  2641  09F9  3404               	retlw	4
  2642  09FA  3400               	retlw	0
  2643  09FB  3400               	retlw	0
  2644  09FC  3400               	retlw	0
  2645                           
  2646                           	psect	stringtext
  2647  1000                     __pstringtext:	
  2648  1000                     log@coeff:	
  2649  1000  3400               	retlw	0
  2650  1001  3400               	retlw	0
  2651  1002  3400               	retlw	0
  2652  1003  3400               	retlw	0
  2653  1004  3480               	retlw	128
  2654  1005  343F               	retlw	63
  2655  1006  34F0               	retlw	240
  2656  1007  34FF               	retlw	255
  2657  1008  34BE               	retlw	190
  2658  1009  34E2               	retlw	226
  2659  100A  34A9               	retlw	169
  2660  100B  343E               	retlw	62
  2661  100C  3483               	retlw	131
  2662  100D  3476               	retlw	118
  2663  100E  34BE               	retlw	190
  2664  100F  34AE               	retlw	174
  2665  1010  342B               	retlw	43
  2666  1011  343E               	retlw	62
  2667  1012  343C               	retlw	60
  2668  1013  34C3               	retlw	195
  2669  1014  34BD               	retlw	189
  2670  1015  34D2               	retlw	210
  2671  1016  3413               	retlw	19
  2672  1017  343D               	retlw	61
  2673  1018  3478               	retlw	120
  2674  1019  34D3               	retlw	211
  2675  101A  34BB               	retlw	187
  2676  101B                     __end_oflog@coeff:	
  2677  0016                     _LATA	set	22
  2678  0017                     _LATB	set	23
  2679  0018                     _LATC	set	24
  2680  0011                     _TRISA	set	17
  2681  0012                     _TRISB	set	18
  2682  0013                     _TRISC	set	19
  2683  005F                     _GIE	set	95
  2684  0060                     _RA0	set	96
  2685  0062                     _RA2	set	98
  2686  0066                     _RA6	set	102
  2687  0067                     _RA7	set	103
  2688  0070                     _RC0	set	112
  2689  0071                     _RC1	set	113
  2690  009D                     _ADACQ	set	157
  2691  0099                     _ADACT	set	153
  2692  009B                     _ADCAP	set	155
  2693  0098                     _ADCLK	set	152
  2694  0093                     _ADCON0	set	147
  2695  0093                     _ADCON0bits	set	147
  2696  0094                     _ADCON1	set	148
  2697  0095                     _ADCON2	set	149
  2698  0096                     _ADCON3	set	150
  2699  009E                     _ADPCH	set	158
  2700  009C                     _ADPRE	set	156
  2701  009A                     _ADREF	set	154
  2702  008D                     _ADRESH	set	141
  2703  008C                     _ADRESL	set	140
  2704  0097                     _ADSTAT	set	151
  2705  010F                     _ADLTHH	set	271
  2706  010E                     _ADLTHL	set	270
  2707  010D                     _ADRPT	set	269
  2708  0113                     _ADSTPTH	set	275
  2709  0112                     _ADSTPTL	set	274
  2710  0111                     _ADUTHH	set	273
  2711  0110                     _ADUTHL	set	272
  2712  0716                     _PIE0bits	set	1814
  2713  088D                     _OSCCON1	set	2189
  2714  088F                     _OSCCON3	set	2191
  2715  0891                     _OSCEN	set	2193
  2716  0893                     _OSCFRQ	set	2195
  2717  0892                     _OSCTUNE	set	2194
  2718  090C                     _FVRCON	set	2316
  2719  0E8F                     _PPSLOCK	set	3727
  2720  0E8F                     _PPSLOCKbits	set	3727
  2721  0F38                     _ANSELA	set	3896
  2722  0F43                     _ANSELB	set	3907
  2723  0F4E                     _ANSELC	set	3918
  2724  0F11                     _RA1PPS	set	3857
  2725  0F39                     _WPUA	set	3897
  2726  0F44                     _WPUB	set	3908
  2727  0F4F                     _WPUC	set	3919
  2728  0F65                     _WPUE	set	3941
  2729  101B                     STR_2:	
  2730  101B  3450               	retlw	80	;'P'
  2731  101C  346F               	retlw	111	;'o'
  2732  101D  346F               	retlw	111	;'o'
  2733  101E  346C               	retlw	108	;'l'
  2734  101F  3420               	retlw	32	;' '
  2735  1020  3452               	retlw	82	;'R'
  2736  1021  3465               	retlw	101	;'e'
  2737  1022  3474               	retlw	116	;'t'
  2738  1023  3475               	retlw	117	;'u'
  2739  1024  3472               	retlw	114	;'r'
  2740  1025  346E               	retlw	110	;'n'
  2741  1026  3400               	retlw	0
  2742  1027                     STR_1:	
  2743  1027  3453               	retlw	83	;'S'
  2744  1028  346F               	retlw	111	;'o'
  2745  1029  346C               	retlw	108	;'l'
  2746  102A  3461               	retlw	97	;'a'
  2747  102B  3472               	retlw	114	;'r'
  2748  102C  3420               	retlw	32	;' '
  2749  102D  3449               	retlw	73	;'I'
  2750  102E  346E               	retlw	110	;'n'
  2751  102F  3400               	retlw	0
  2752                           
  2753                           ; #config settings
  2754  0000                     
  2755                           	psect	cinit
  2756  07D3                     start_initialization:	
  2757  07D3                     __initialization:		;BIGRAM
  2758                           
  2759                           ; Initialize objects allocated to BANK1
  2760  07D3  30E5               	movlw	low __pidataBANK1
  2761  07D4  0084               	movwf	4
  2762  07D5  3089               	movlw	(high __pidataBANK1)| (0+128)
  2763  07D6  0085               	movwf	5
  2764  07D7  30BC               	movlw	low __pdataBANK1
  2765  07D8  0086               	movwf	6
  2766  07D9  3000               	movlw	high __pdataBANK1
  2767  07DA  0087               	movwf	7
  2768  07DB  3000               	movlw	0
  2769  07DC  00FF               	movwf	btemp+1
  2770  07DD  3018               	movlw	24
  2771  07DE  3189  218E  3187   	fcall	init_ram
  2772                           
  2773                           ; Clear objects allocated to BIGRAM
  2774  07E1  3028               	movlw	low (0+9000)
  2775  07E2  0084               	movwf	4
  2776  07E3  3023               	movlw	high (0+9000)
  2777  07E4  0085               	movwf	5
  2778  07E5  30C8               	movlw	200
  2779  07E6  00FE               	movwf	btemp
  2780  07E7  3000               	movlw	0
  2781  07E8  00FF               	movwf	btemp+1
  2782  07E9  3189  2182  3187   	fcall	clear_ram0
  2783                           
  2784                           ; Clear objects allocated to BANK0
  2785  07EC  01E7               	clrf	__pbssBANK0& (0+127)
  2786  07ED  01E8               	clrf	(__pbssBANK0+1)& (0+127)
  2787  07EE  01E9               	clrf	(__pbssBANK0+2)& (0+127)
  2788  07EF  01EA               	clrf	(__pbssBANK0+3)& (0+127)
  2789  07F0  01EB               	clrf	(__pbssBANK0+4)& (0+127)
  2790  07F1  01EC               	clrf	(__pbssBANK0+5)& (0+127)
  2791  07F2  01ED               	clrf	(__pbssBANK0+6)& (0+127)
  2792                           
  2793                           ; Clear objects allocated to BANK1
  2794  07F3  30D4               	movlw	low __pbssBANK1
  2795  07F4  0084               	movwf	4
  2796  07F5  3000               	movlw	high __pbssBANK1
  2797  07F6  0085               	movwf	5
  2798  07F7  300C               	movlw	12
  2799  07F8  00FE               	movwf	btemp
  2800  07F9  3000               	movlw	0
  2801  07FA  00FF               	movwf	btemp+1
  2802  07FB  3189  2182         	fcall	clear_ram0
  2803  07FD                     end_of_initialization:	
  2804                           ;End of C runtime variable initialization code
  2805                           
  2806  07FD                     __end_of__initialization:	
  2807  07FD  0020               	movlb	0
  2808  07FE  3182  2A9C         	ljmp	_main	;jump to C main() function
  2809                           
  2810                           	psect	bssBANK0
  2811  0067                     __pbssBANK0:	
  2812  0067                     LCD_Write_Int@F13677:	
  2813  0067                     	ds	5
  2814  006C                     _errno:	
  2815  006C                     	ds	2
  2816                           
  2817                           	psect	bssBANK1
  2818  00D4                     __pbssBANK1:	
  2819  00D4                     main@F13717:	
  2820  00D4                     	ds	8
  2821  00DC                     main@sampleIndex0:	
  2822  00DC                     	ds	2
  2823  00DE                     main@sampleIndex1:	
  2824  00DE                     	ds	2
  2825                           
  2826                           	psect	dataBANK1
  2827  00BC                     __pdataBANK1:	
  2828  00BC                     ___cgram:	
  2829  00BC                     	ds	24
  2830                           
  2831                           	psect	inittext
  2832  098E                     init_ram:	
  2833  098E  00FE               	movwf	126
  2834  098F                     initloop:	
  2835  098F  0012               	moviw fsr0++
  2836  0990  001E               	movwi fsr1++
  2837  0991  3001               	movlw	1
  2838  0992  02FE               	subwf	126,f
  2839  0993  3000               	movlw	0
  2840  0994  3BFF               	subwfb	127,f
  2841  0995  087F               	movf	127,w
  2842  0996  047E               	iorwf	126,w
  2843  0997  1903               	btfsc	3,2
  2844  0998  3400               	retlw	0
  2845  0999  298F               	goto	initloop
  2846                           
  2847                           	psect	clrtext
  2848  0982                     clear_ram0:	
  2849                           ;	Called with FSR0 containing the base address, and
  2850                           ;	btemp/btemp+1 has the size to clear
  2851                           
  2852  0982  0064               	clrwdt	;clear the watchdog before getting into this loop
  2853  0983                     clrloop0:	
  2854  0983  0180               	clrf	0	;clear RAM location pointed to by FSR
  2855  0984  3101               	addfsr 0,1
  2856  0985  3001               	movlw	1
  2857  0986  02FE               	subwf	126,f
  2858  0987  3000               	movlw	0
  2859  0988  3BFF               	subwfb	127,f
  2860  0989  087F               	movf	127,w
  2861  098A  047E               	iorwf	126,w
  2862  098B  1903               	btfsc	3,2
  2863  098C  3400               	retlw	0	;all done for this memory range, return
  2864  098D  2983               	goto	clrloop0	;have we reached the end yet?
  2865                           
  2866                           	psect	cstackBANK1
  2867  00A0                     __pcstackBANK1:	
  2868  00A0                     main@count:	
  2869                           
  2870                           ; 1 bytes @ 0x0
  2871  00A0                     	ds	1
  2872  00A1                     main@R:	
  2873                           
  2874                           ; 3 bytes @ 0x1
  2875  00A1                     	ds	3
  2876  00A4                     main@displayTemp:	
  2877                           
  2878                           ; 3 bytes @ 0x4
  2879  00A4                     	ds	3
  2880  00A7                     main@displayTemp2:	
  2881                           
  2882                           ; 3 bytes @ 0x7
  2883  00A7                     	ds	3
  2884  00AA                     _main$789:	
  2885                           
  2886                           ; 3 bytes @ 0xA
  2887  00AA                     	ds	3
  2888  00AD                     main@solarInTemp:	
  2889                           
  2890                           ; 2 bytes @ 0xD
  2891  00AD                     	ds	2
  2892  00AF                     main@solarOutTemp:	
  2893                           
  2894                           ; 2 bytes @ 0xF
  2895  00AF                     	ds	2
  2896  00B1                     main@totals:	
  2897                           
  2898                           ; 8 bytes @ 0x11
  2899  00B1                     	ds	8
  2900  00B9                     main@steinhart:	
  2901                           
  2902                           ; 3 bytes @ 0x19
  2903  00B9                     	ds	3
  2904                           
  2905                           	psect	cstackCOMMON
  2906  0070                     __pcstackCOMMON:	
  2907  0070                     ?___ftge:	
  2908  0070                     ?_LCD_Cmd:	
  2909                           ; 1 bit 
  2910                           
  2911  0070                     ?_LCD_Write_Char:	
  2912                           ; 1 bytes @ 0x0
  2913                           
  2914  0070                     ?_OSCILLATOR_Initialize:	
  2915                           ; 1 bytes @ 0x0
  2916                           
  2917  0070                     ??_OSCILLATOR_Initialize:	
  2918                           ; 1 bytes @ 0x0
  2919                           
  2920  0070                     ?_ADCC_Initialize:	
  2921                           ; 1 bytes @ 0x0
  2922                           
  2923  0070                     ??_ADCC_Initialize:	
  2924                           ; 1 bytes @ 0x0
  2925                           
  2926  0070                     ?_InitCustomChars:	
  2927                           ; 1 bytes @ 0x0
  2928                           
  2929  0070                     ?_LCD_Port:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  0070                     ??_LCD_Port:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  0070                     ?_LCD_Clear:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  0070                     ?_LCD_Init:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  0070                     ?_PIN_MANAGER_Initialize:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  0070                     ??_PIN_MANAGER_Initialize:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  0070                     ?_SYSTEM_Initialize:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  0070                     ?_main:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  0070                     ?_ADCRead:	
  2954                           ; 1 bytes @ 0x0
  2955                           
  2956  0070                     ?___wmul:	
  2957                           ; 2 bytes @ 0x0
  2958                           
  2959  0070                     ?___awdiv:	
  2960                           ; 2 bytes @ 0x0
  2961                           
  2962  0070                     ?___awmod:	
  2963                           ; 2 bytes @ 0x0
  2964                           
  2965  0070                     ?___ftpack:	
  2966                           ; 2 bytes @ 0x0
  2967                           
  2968  0070                     ?_frexp:	
  2969                           ; 3 bytes @ 0x0
  2970                           
  2971  0070                     ?___aldiv:	
  2972                           ; 3 bytes @ 0x0
  2973                           
  2974  0070                     ?___fttol:	
  2975                           ; 4 bytes @ 0x0
  2976                           
  2977  0070                     LCD_Port@a:	
  2978                           ; 4 bytes @ 0x0
  2979                           
  2980  0070                     PIN_MANAGER_Initialize@state:	
  2981                           ; 1 bytes @ 0x0
  2982                           
  2983  0070                     ___wmul@multiplier:	
  2984                           ; 1 bytes @ 0x0
  2985                           
  2986  0070                     ___awdiv@divisor:	
  2987                           ; 2 bytes @ 0x0
  2988                           
  2989  0070                     ___awmod@divisor:	
  2990                           ; 2 bytes @ 0x0
  2991                           
  2992  0070                     ___ftpack@arg:	
  2993                           ; 2 bytes @ 0x0
  2994                           
  2995  0070                     ___ftge@ff1:	
  2996                           ; 3 bytes @ 0x0
  2997                           
  2998  0070                     ___fttol@f1:	
  2999                           ; 3 bytes @ 0x0
  3000                           
  3001  0070                     frexp@value:	
  3002                           ; 3 bytes @ 0x0
  3003                           
  3004  0070                     ___aldiv@divisor:	
  3005                           ; 3 bytes @ 0x0
  3006                           
  3007                           
  3008                           ; 4 bytes @ 0x0
  3009  0070                     	ds	1
  3010  0071                     ??_LCD_Cmd:	
  3011  0071                     ??_LCD_Write_Char:	
  3012                           ; 1 bytes @ 0x1
  3013                           
  3014                           
  3015                           ; 1 bytes @ 0x1
  3016  0071                     	ds	1
  3017  0072                     LCD_Cmd@a:	
  3018  0072                     LCD_Write_Char@temp:	
  3019                           ; 1 bytes @ 0x2
  3020                           
  3021  0072                     ___wmul@multiplicand:	
  3022                           ; 1 bytes @ 0x2
  3023                           
  3024  0072                     ___awdiv@dividend:	
  3025                           ; 2 bytes @ 0x2
  3026                           
  3027  0072                     ___awmod@dividend:	
  3028                           ; 2 bytes @ 0x2
  3029                           
  3030                           
  3031                           ; 2 bytes @ 0x2
  3032  0072                     	ds	1
  3033  0073                     ??_ADCRead:	
  3034  0073                     ??_LCD_Clear:	
  3035                           ; 1 bytes @ 0x3
  3036                           
  3037  0073                     ?_LCD_Set_Cursor:	
  3038                           ; 1 bytes @ 0x3
  3039                           
  3040  0073                     ??_LCD_Init:	
  3041                           ; 1 bytes @ 0x3
  3042                           
  3043  0073                     ADCRead@channel:	
  3044                           ; 1 bytes @ 0x3
  3045                           
  3046  0073                     LCD_Set_Cursor@y:	
  3047                           ; 1 bytes @ 0x3
  3048                           
  3049  0073                     LCD_Write_Char@y:	
  3050                           ; 1 bytes @ 0x3
  3051                           
  3052  0073                     ___ftpack@exp:	
  3053                           ; 1 bytes @ 0x3
  3054                           
  3055  0073                     frexp@eptr:	
  3056                           ; 1 bytes @ 0x3
  3057                           
  3058  0073                     ___ftge@ff2:	
  3059                           ; 1 bytes @ 0x3
  3060                           
  3061                           
  3062                           ; 3 bytes @ 0x3
  3063  0073                     	ds	1
  3064  0074                     ??_frexp:	
  3065  0074                     ??_LCD_Set_Cursor:	
  3066                           ; 1 bytes @ 0x4
  3067                           
  3068  0074                     ??___wmul:	
  3069                           ; 1 bytes @ 0x4
  3070                           
  3071  0074                     ??___awdiv:	
  3072                           ; 1 bytes @ 0x4
  3073                           
  3074  0074                     ??___awmod:	
  3075                           ; 1 bytes @ 0x4
  3076                           
  3077  0074                     ??___fttol:	
  3078                           ; 1 bytes @ 0x4
  3079                           
  3080  0074                     LCD_Write_Char@a:	
  3081                           ; 1 bytes @ 0x4
  3082                           
  3083  0074                     ___ftpack@sign:	
  3084                           ; 1 bytes @ 0x4
  3085                           
  3086  0074                     ___wmul@product:	
  3087                           ; 1 bytes @ 0x4
  3088                           
  3089  0074                     ___aldiv@dividend:	
  3090                           ; 2 bytes @ 0x4
  3091                           
  3092                           
  3093                           ; 4 bytes @ 0x4
  3094  0074                     	ds	1
  3095  0075                     ??___ftpack:	
  3096  0075                     ??_InitCustomChars:	
  3097                           ; 1 bytes @ 0x5
  3098                           
  3099  0075                     ?_LCD_Write_String:	
  3100                           ; 1 bytes @ 0x5
  3101                           
  3102  0075                     LCD_Init@style:	
  3103                           ; 1 bytes @ 0x5
  3104                           
  3105  0075                     ___awdiv@counter:	
  3106                           ; 1 bytes @ 0x5
  3107                           
  3108  0075                     ___awmod@counter:	
  3109                           ; 1 bytes @ 0x5
  3110                           
  3111  0075                     LCD_Write_String@a:	
  3112                           ; 1 bytes @ 0x5
  3113                           
  3114                           
  3115                           ; 2 bytes @ 0x5
  3116  0075                     	ds	1
  3117  0076                     ??___ftge:	
  3118  0076                     InitCustomChars@i:	
  3119                           ; 1 bytes @ 0x6
  3120                           
  3121  0076                     LCD_Set_Cursor@x:	
  3122                           ; 1 bytes @ 0x6
  3123                           
  3124  0076                     ___awdiv@sign:	
  3125                           ; 1 bytes @ 0x6
  3126                           
  3127  0076                     ___awmod@sign:	
  3128                           ; 1 bytes @ 0x6
  3129                           
  3130                           
  3131                           ; 1 bytes @ 0x6
  3132  0076                     	ds	1
  3133  0077                     ??_LCD_Write_String:	
  3134  0077                     ??_SYSTEM_Initialize:	
  3135                           ; 1 bytes @ 0x7
  3136                           
  3137  0077                     LCD_Set_Cursor@z:	
  3138                           ; 1 bytes @ 0x7
  3139                           
  3140  0077                     ___awdiv@quotient:	
  3141                           ; 1 bytes @ 0x7
  3142                           
  3143                           
  3144                           ; 2 bytes @ 0x7
  3145  0077                     	ds	1
  3146  0078                     ??___aldiv:	
  3147  0078                     ?___awtoft:	
  3148                           ; 1 bytes @ 0x8
  3149                           
  3150  0078                     ?___lwtoft:	
  3151                           ; 3 bytes @ 0x8
  3152                           
  3153  0078                     LCD_Set_Cursor@w:	
  3154                           ; 3 bytes @ 0x8
  3155                           
  3156  0078                     ___fttol@sign1:	
  3157                           ; 1 bytes @ 0x8
  3158                           
  3159  0078                     LCD_Write_String@i:	
  3160                           ; 1 bytes @ 0x8
  3161                           
  3162  0078                     ___awtoft@c:	
  3163                           ; 2 bytes @ 0x8
  3164                           
  3165  0078                     ___lwtoft@c:	
  3166                           ; 2 bytes @ 0x8
  3167                           
  3168                           
  3169                           ; 2 bytes @ 0x8
  3170  0078                     	ds	1
  3171  0079                     LCD_Set_Cursor@temp:	
  3172  0079                     ___fttol@lval:	
  3173                           ; 1 bytes @ 0x9
  3174                           
  3175                           
  3176                           ; 4 bytes @ 0x9
  3177  0079                     	ds	2
  3178  007B                     ??___awtoft:	
  3179  007B                     ??___lwtoft:	
  3180                           ; 1 bytes @ 0xB
  3181                           
  3182                           
  3183                           ; 1 bytes @ 0xB
  3184  007B                     	ds	2
  3185  007D                     ___awtoft@sign:	
  3186  007D                     ___fttol@exp1:	
  3187                           ; 1 bytes @ 0xD
  3188                           
  3189                           
  3190                           ; 1 bytes @ 0xD
  3191  007D                     	ds	1
  3192  007E                     ??_eval_poly:	
  3193  007E                     ??___ftsub:	
  3194                           ; 1 bytes @ 0xE
  3195                           
  3196                           
  3197                           	psect	cstackBANK0
  3198  0020                     __pcstackBANK0:	
  3199                           ; 1 bytes @ 0xE
  3200                           
  3201  0020                     ?_LCD_Write_Int:	
  3202  0020                     ?___ftmul:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205  0020                     ___aldiv@counter:	
  3206                           ; 3 bytes @ 0x0
  3207                           
  3208  0020                     LCD_Write_Int@value:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211  0020                     ___ftmul@f1:	
  3212                           ; 2 bytes @ 0x0
  3213                           
  3214                           
  3215                           ; 3 bytes @ 0x0
  3216  0020                     	ds	1
  3217  0021                     ___aldiv@sign:	
  3218                           
  3219                           ; 1 bytes @ 0x1
  3220  0021                     	ds	1
  3221  0022                     LCD_Write_Int@fieldLength:	
  3222  0022                     ___aldiv@quotient:	
  3223                           ; 1 bytes @ 0x2
  3224                           
  3225                           
  3226                           ; 4 bytes @ 0x2
  3227  0022                     	ds	1
  3228  0023                     LCD_Write_Int@numPlaces:	
  3229  0023                     ___ftmul@f2:	
  3230                           ; 1 bytes @ 0x3
  3231                           
  3232                           
  3233                           ; 3 bytes @ 0x3
  3234  0023                     	ds	1
  3235  0024                     LCD_Write_Int@sign:	
  3236                           
  3237                           ; 1 bytes @ 0x4
  3238  0024                     	ds	1
  3239  0025                     ??_LCD_Write_Int:	
  3240                           
  3241                           ; 1 bytes @ 0x5
  3242  0025                     	ds	1
  3243  0026                     ??___ftmul:	
  3244                           
  3245                           ; 1 bytes @ 0x6
  3246  0026                     	ds	4
  3247  002A                     ___ftmul@exp:	
  3248  002A                     LCD_Write_Int@str:	
  3249                           ; 1 bytes @ 0xA
  3250                           
  3251                           
  3252                           ; 5 bytes @ 0xA
  3253  002A                     	ds	1
  3254  002B                     ___ftmul@f3_as_product:	
  3255                           
  3256                           ; 3 bytes @ 0xB
  3257  002B                     	ds	3
  3258  002E                     ___ftmul@cntr:	
  3259                           
  3260                           ; 1 bytes @ 0xE
  3261  002E                     	ds	1
  3262  002F                     ___ftmul@sign:	
  3263  002F                     LCD_Write_Int@j:	
  3264                           ; 1 bytes @ 0xF
  3265                           
  3266                           
  3267                           ; 2 bytes @ 0xF
  3268  002F                     	ds	1
  3269  0030                     ?___ftdiv:	
  3270  0030                     ___ftdiv@f2:	
  3271                           ; 3 bytes @ 0x10
  3272                           
  3273                           
  3274                           ; 3 bytes @ 0x10
  3275  0030                     	ds	1
  3276  0031                     LCD_Write_Int@i:	
  3277                           
  3278                           ; 2 bytes @ 0x11
  3279  0031                     	ds	2
  3280  0033                     ___ftdiv@f1:	
  3281                           
  3282                           ; 3 bytes @ 0x13
  3283  0033                     	ds	3
  3284  0036                     ??___ftdiv:	
  3285                           
  3286                           ; 1 bytes @ 0x16
  3287  0036                     	ds	4
  3288  003A                     ___ftdiv@cntr:	
  3289                           
  3290                           ; 1 bytes @ 0x1A
  3291  003A                     	ds	1
  3292  003B                     ___ftdiv@f3:	
  3293                           
  3294                           ; 3 bytes @ 0x1B
  3295  003B                     	ds	3
  3296  003E                     ___ftdiv@exp:	
  3297                           
  3298                           ; 1 bytes @ 0x1E
  3299  003E                     	ds	1
  3300  003F                     ___ftdiv@sign:	
  3301                           
  3302                           ; 1 bytes @ 0x1F
  3303  003F                     	ds	1
  3304  0040                     ?___ftadd:	
  3305  0040                     ___ftadd@f1:	
  3306                           ; 3 bytes @ 0x20
  3307                           
  3308                           
  3309                           ; 3 bytes @ 0x20
  3310  0040                     	ds	3
  3311  0043                     ___ftadd@f2:	
  3312                           
  3313                           ; 3 bytes @ 0x23
  3314  0043                     	ds	3
  3315  0046                     ??___ftadd:	
  3316                           
  3317                           ; 1 bytes @ 0x26
  3318  0046                     	ds	4
  3319  004A                     ___ftadd@sign:	
  3320                           
  3321                           ; 1 bytes @ 0x2A
  3322  004A                     	ds	1
  3323  004B                     ___ftadd@exp2:	
  3324                           
  3325                           ; 1 bytes @ 0x2B
  3326  004B                     	ds	1
  3327  004C                     ___ftadd@exp1:	
  3328                           
  3329                           ; 1 bytes @ 0x2C
  3330  004C                     	ds	1
  3331  004D                     ?_eval_poly:	
  3332  004D                     ?___ftsub:	
  3333                           ; 3 bytes @ 0x2D
  3334                           
  3335  004D                     ___ftsub@f2:	
  3336                           ; 3 bytes @ 0x2D
  3337                           
  3338  004D                     eval_poly@x:	
  3339                           ; 3 bytes @ 0x2D
  3340                           
  3341                           
  3342                           ; 3 bytes @ 0x2D
  3343  004D                     	ds	3
  3344  0050                     eval_poly@d:	
  3345  0050                     ___ftsub@f1:	
  3346                           ; 2 bytes @ 0x30
  3347                           
  3348                           
  3349                           ; 3 bytes @ 0x30
  3350  0050                     	ds	2
  3351  0052                     eval_poly@n:	
  3352                           
  3353                           ; 2 bytes @ 0x32
  3354  0052                     	ds	2
  3355  0054                     eval_poly@res:	
  3356                           
  3357                           ; 3 bytes @ 0x34
  3358  0054                     	ds	3
  3359  0057                     ?_log:	
  3360  0057                     log@x:	
  3361                           ; 3 bytes @ 0x37
  3362                           
  3363                           
  3364                           ; 3 bytes @ 0x37
  3365  0057                     	ds	3
  3366  005A                     ??_log:	
  3367                           
  3368                           ; 1 bytes @ 0x3A
  3369  005A                     	ds	1
  3370  005B                     log@exponent:	
  3371                           
  3372                           ; 2 bytes @ 0x3B
  3373  005B                     	ds	2
  3374  005D                     ??_main:	
  3375                           
  3376                           ; 1 bytes @ 0x3D
  3377  005D                     	ds	10
  3378                           
  3379                           	psect	maintext
  3380  029C                     __pmaintext:	
  3381 ;;
  3382 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  3383 ;;
  3384 ;; *************** function _main *****************
  3385 ;; Defined at:
  3386 ;;		line 12 in file "main.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  totals          8   17[BANK1 ] long [2]
  3391 ;;  steinhart       3   25[BANK1 ] float 
  3392 ;;  displayTemp2    3    7[BANK1 ] float 
  3393 ;;  displayTemp     3    4[BANK1 ] float 
  3394 ;;  R               3    1[BANK1 ] float 
  3395 ;;  solarOutTemp    2   15[BANK1 ] unsigned int 
  3396 ;;  solarInTemp     2   13[BANK1 ] unsigned int 
  3397 ;;  count           1    0[BANK1 ] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : B1F/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  3409 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3410 ;;      Totals:         0      10      28       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;Total ram usage:       38 bytes
  3412 ;; Hardware stack levels required when called:    4
  3413 ;; This function calls:
  3414 ;;		_ADCRead
  3415 ;;		_LCD_Set_Cursor
  3416 ;;		_LCD_Write_Char
  3417 ;;		_LCD_Write_Int
  3418 ;;		_LCD_Write_String
  3419 ;;		_SYSTEM_Initialize
  3420 ;;		___aldiv
  3421 ;;		___ftadd
  3422 ;;		___ftdiv
  3423 ;;		___ftmul
  3424 ;;		___ftsub
  3425 ;;		___fttol
  3426 ;;		___lwtoft
  3427 ;;		_log
  3428 ;; This function is called by:
  3429 ;;		Startup code after reset
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function _main
  3435  029C                     _main:	
  3436                           
  3437                           ;main.c: 14: SYSTEM_Initialize();
  3438                           
  3439                           ;incstack = 0
  3440                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3441  029C  318A  22E7  3182   	fcall	_SYSTEM_Initialize
  3442                           
  3443                           ;main.c: 16: uint16_t solarInTemp, solarOutTemp;
  3444                           ;main.c: 18: float R, steinhart, displayTemp, displayTemp2;
  3445                           ;main.c: 20: static uint16_t sampleIndex0 = 0, sampleIndex1 = 0;
  3446                           ;main.c: 22: int32_t totals[2] = {0};
  3447  029F  30D4               	movlw	low main@F13717
  3448  02A0  0086               	movwf	6
  3449  02A1  3000               	movlw	high main@F13717
  3450  02A2  0087               	movwf	7
  3451  02A3  30B1               	movlw	low main@totals
  3452  02A4  0084               	movwf	4
  3453  02A5  3000               	movlw	high main@totals
  3454  02A6  0085               	movwf	5
  3455  02A7  3008               	movlw	8
  3456  02A8  0020               	movlb	0	; select bank0
  3457  02A9  00DD               	movwf	??_main
  3458  02AA                     u2670:	
  3459  02AA  0016               	moviw fsr1++
  3460  02AB  001A               	movwi fsr0++
  3461  02AC  0BDD               	decfsz	??_main,f
  3462  02AD  2AAA               	goto	u2670
  3463                           
  3464                           ;main.c: 24: char count = 11;
  3465  02AE  300B               	movlw	11
  3466  02AF  00DD               	movwf	??_main
  3467  02B0  085D               	movf	??_main,w
  3468  02B1  0021               	movlb	1	; select bank1
  3469  02B2  00A0               	movwf	main@count^(0+128)
  3470                           
  3471                           ;main.c: 26: _delay((unsigned long)((3000)*(1000000/4000.0)));
  3472  02B3  3004               	movlw	4
  3473  02B4  0020               	movlb	0	; select bank0
  3474  02B5  00DF               	movwf	??_main+2
  3475  02B6  30CF               	movlw	207
  3476  02B7  00DE               	movwf	??_main+1
  3477  02B8  3003               	movlw	3
  3478  02B9  00DD               	movwf	??_main
  3479  02BA                     u2717:	
  3480  02BA  0BDD               	decfsz	??_main,f
  3481  02BB  2ABA               	goto	u2717
  3482  02BC  0BDE               	decfsz	??_main+1,f
  3483  02BD  2ABA               	goto	u2717
  3484  02BE  0BDF               	decfsz	??_main+2,f
  3485  02BF  2ABA               	goto	u2717
  3486  02C0  3200               	nop2
  3487  02C1                     l2348:	
  3488                           ;main.c: 29: while (1)
  3489                           
  3490                           
  3491                           ;main.c: 30: {
  3492                           ;main.c: 31: if(count>10)
  3493  02C1  300B               	movlw	11
  3494  02C2  0021               	movlb	1	; select bank1
  3495  02C3  0220               	subwf	main@count^(0+128),w
  3496  02C4  1C03               	skipc
  3497  02C5  2B40               	goto	l2374
  3498                           
  3499                           ;main.c: 32: {
  3500                           ;main.c: 33: { LCD_Set_Cursor(0,4); LCD_Write_String("Solar In");};
  3501  02C6  3004               	movlw	4
  3502  02C7  0020               	movlb	0	; select bank0
  3503  02C8  00DD               	movwf	??_main
  3504  02C9  085D               	movf	??_main,w
  3505  02CA  00F3               	movwf	LCD_Set_Cursor@y
  3506  02CB  3000               	movlw	0
  3507  02CC  318B  238E  3182   	fcall	_LCD_Set_Cursor
  3508  02CF  3027               	movlw	low (STR_1| (0+32768))
  3509  02D0  00F5               	movwf	LCD_Write_String@a
  3510  02D1  3090               	movlw	high (STR_1| (0+32768))
  3511  02D2  00F6               	movwf	LCD_Write_String@a+1
  3512  02D3  318A  2216  3182   	fcall	_LCD_Write_String
  3513                           
  3514                           ;main.c: 34: { LCD_Set_Cursor(60,4); LCD_Write_Int((int)displayTemp,-1, 1, 0);};
  3515  02D6  3004               	movlw	4
  3516  02D7  0020               	movlb	0	; select bank0
  3517  02D8  00DD               	movwf	??_main
  3518  02D9  085D               	movf	??_main,w
  3519  02DA  00F3               	movwf	LCD_Set_Cursor@y
  3520  02DB  303C               	movlw	60
  3521  02DC  318B  238E  3182   	fcall	_LCD_Set_Cursor
  3522  02DF  0021               	movlb	1	; select bank1
  3523  02E0  0824               	movf	main@displayTemp^(0+128),w
  3524  02E1  00F0               	movwf	___fttol@f1
  3525  02E2  0825               	movf	(main@displayTemp+1)^(0+128),w
  3526  02E3  00F1               	movwf	___fttol@f1+1
  3527  02E4  0826               	movf	(main@displayTemp+2)^(0+128),w
  3528  02E5  00F2               	movwf	___fttol@f1+2
  3529  02E6  318E  2624  3182   	fcall	___fttol
  3530  02E9  0871               	movf	?___fttol+1,w
  3531  02EA  0020               	movlb	0	; select bank0
  3532  02EB  00A1               	movwf	LCD_Write_Int@value+1
  3533  02EC  0870               	movf	?___fttol,w
  3534  02ED  00A0               	movwf	LCD_Write_Int@value
  3535  02EE  01A2               	clrf	LCD_Write_Int@fieldLength
  3536  02EF  03A2               	decf	LCD_Write_Int@fieldLength,f
  3537  02F0  01A3               	clrf	LCD_Write_Int@numPlaces
  3538  02F1  0AA3               	incf	LCD_Write_Int@numPlaces,f
  3539  02F2  01A4               	clrf	LCD_Write_Int@sign
  3540  02F3  3180  20DB  3182   	fcall	_LCD_Write_Int
  3541                           
  3542                           ;main.c: 35: LCD_Write_Char(0);
  3543  02F6  3000               	movlw	0
  3544  02F7  318A  228E  3182   	fcall	_LCD_Write_Char
  3545                           
  3546                           ;main.c: 36: LCD_Write_Char('F');
  3547  02FA  3046               	movlw	70
  3548  02FB  318A  228E  3182   	fcall	_LCD_Write_Char
  3549                           
  3550                           ;main.c: 37: LCD_Write_Char(' ');
  3551  02FE  3020               	movlw	32
  3552  02FF  318A  228E  3182   	fcall	_LCD_Write_Char
  3553                           
  3554                           ;main.c: 39: { LCD_Set_Cursor(0,5); LCD_Write_String("Pool Return");};
  3555  0302  3005               	movlw	5
  3556  0303  0020               	movlb	0	; select bank0
  3557  0304  00DD               	movwf	??_main
  3558  0305  085D               	movf	??_main,w
  3559  0306  00F3               	movwf	LCD_Set_Cursor@y
  3560  0307  3000               	movlw	0
  3561  0308  318B  238E  3182   	fcall	_LCD_Set_Cursor
  3562  030B  301B               	movlw	low (STR_2| (0+32768))
  3563  030C  00F5               	movwf	LCD_Write_String@a
  3564  030D  3090               	movlw	high (STR_2| (0+32768))
  3565  030E  00F6               	movwf	LCD_Write_String@a+1
  3566  030F  318A  2216  3182   	fcall	_LCD_Write_String
  3567                           
  3568                           ;main.c: 40: { LCD_Set_Cursor(60,5); LCD_Write_Int((int)displayTemp2,-1, 1, 0);};
  3569  0312  3005               	movlw	5
  3570  0313  0020               	movlb	0	; select bank0
  3571  0314  00DD               	movwf	??_main
  3572  0315  085D               	movf	??_main,w
  3573  0316  00F3               	movwf	LCD_Set_Cursor@y
  3574  0317  303C               	movlw	60
  3575  0318  318B  238E  3182   	fcall	_LCD_Set_Cursor
  3576  031B  0021               	movlb	1	; select bank1
  3577  031C  0827               	movf	main@displayTemp2^(0+128),w
  3578  031D  00F0               	movwf	___fttol@f1
  3579  031E  0828               	movf	(main@displayTemp2+1)^(0+128),w
  3580  031F  00F1               	movwf	___fttol@f1+1
  3581  0320  0829               	movf	(main@displayTemp2+2)^(0+128),w
  3582  0321  00F2               	movwf	___fttol@f1+2
  3583  0322  318E  2624  3182   	fcall	___fttol
  3584  0325  0871               	movf	?___fttol+1,w
  3585  0326  0020               	movlb	0	; select bank0
  3586  0327  00A1               	movwf	LCD_Write_Int@value+1
  3587  0328  0870               	movf	?___fttol,w
  3588  0329  00A0               	movwf	LCD_Write_Int@value
  3589  032A  01A2               	clrf	LCD_Write_Int@fieldLength
  3590  032B  03A2               	decf	LCD_Write_Int@fieldLength,f
  3591  032C  01A3               	clrf	LCD_Write_Int@numPlaces
  3592  032D  0AA3               	incf	LCD_Write_Int@numPlaces,f
  3593  032E  01A4               	clrf	LCD_Write_Int@sign
  3594  032F  3180  20DB  3182   	fcall	_LCD_Write_Int
  3595                           
  3596                           ;main.c: 41: LCD_Write_Char(0);
  3597  0332  3000               	movlw	0
  3598  0333  318A  228E  3182   	fcall	_LCD_Write_Char
  3599                           
  3600                           ;main.c: 42: LCD_Write_Char('F');
  3601  0336  3046               	movlw	70
  3602  0337  318A  228E  3182   	fcall	_LCD_Write_Char
  3603                           
  3604                           ;main.c: 43: LCD_Write_Char(' ');
  3605  033A  3020               	movlw	32
  3606  033B  318A  228E  3182   	fcall	_LCD_Write_Char
  3607                           
  3608                           ;main.c: 44: count=0;
  3609  033E  0021               	movlb	1	; select bank1
  3610  033F  01A0               	clrf	main@count^(0+128)
  3611  0340                     l2374:	
  3612                           
  3613                           ;main.c: 45: }
  3614                           ;main.c: 47: solarInTemp = ADCRead(9);
  3615  0340  3009               	movlw	9
  3616  0341  3189  219A  3182   	fcall	_ADCRead
  3617  0344  0871               	movf	?_ADCRead+1,w
  3618  0345  0021               	movlb	1	; select bank1
  3619  0346  00AE               	movwf	(main@solarInTemp+1)^(0+128)
  3620  0347  0870               	movf	?_ADCRead,w
  3621  0348  00AD               	movwf	main@solarInTemp^(0+128)
  3622                           
  3623                           ;main.c: 49: totals[0] = totals[0] - samples[0][sampleIndex0];
  3624  0349  0831               	movf	main@totals^(0+128),w
  3625  034A  0020               	movlb	0	; select bank0
  3626  034B  00DD               	movwf	??_main
  3627  034C  0021               	movlb	1	; select bank1
  3628  034D  0832               	movf	(main@totals+1)^(0+128),w
  3629  034E  0020               	movlb	0	; select bank0
  3630  034F  00DE               	movwf	??_main+1
  3631  0350  0021               	movlb	1	; select bank1
  3632  0351  0833               	movf	(main@totals+2)^(0+128),w
  3633  0352  0020               	movlb	0	; select bank0
  3634  0353  00DF               	movwf	??_main+2
  3635  0354  0021               	movlb	1	; select bank1
  3636  0355  0834               	movf	(main@totals+3)^(0+128),w
  3637  0356  0020               	movlb	0	; select bank0
  3638  0357  00E0               	movwf	??_main+3
  3639  0358  0021               	movlb	1	; select bank1
  3640  0359  085D               	movf	(main@sampleIndex0+1)^(0+128),w
  3641  035A  0020               	movlb	0	; select bank0
  3642  035B  00E2               	movwf	??_main+5
  3643  035C  0021               	movlb	1	; select bank1
  3644  035D  085C               	movf	main@sampleIndex0^(0+128),w
  3645  035E  0020               	movlb	0	; select bank0
  3646  035F  00E1               	movwf	??_main+4
  3647  0360  35E1               	lslf	??_main+4,f
  3648  0361  0DE2               	rlf	??_main+5,f
  3649  0362  3028               	movlw	40
  3650  0363  0761               	addwf	??_main+4,w
  3651  0364  0084               	movwf	4
  3652  0365  3023               	movlw	35
  3653  0366  3D62               	addwfc	??_main+5,w
  3654  0367  0085               	movwf	5
  3655  0368  3F00               	moviw [0]fsr0
  3656  0369  00E3               	movwf	??_main+6
  3657  036A  3F01               	moviw [1]fsr0
  3658  036B  00E4               	movwf	??_main+7
  3659  036C  01E5               	clrf	??_main+8
  3660  036D  01E6               	clrf	??_main+9
  3661  036E  09E3               	comf	??_main+6,f
  3662  036F  09E4               	comf	??_main+7,f
  3663  0370  09E5               	comf	??_main+8,f
  3664  0371  09E6               	comf	??_main+9,f
  3665  0372  0AE3               	incf	??_main+6,f
  3666  0373  1903               	skipnz
  3667  0374  0AE4               	incf	??_main+7,f
  3668  0375  1903               	skipnz
  3669  0376  0AE5               	incf	??_main+8,f
  3670  0377  1903               	skipnz
  3671  0378  0AE6               	incf	??_main+9,f
  3672  0379  0863               	movf	??_main+6,w
  3673  037A  07DD               	addwf	??_main,f
  3674  037B  0864               	movf	??_main+7,w
  3675  037C  3DDE               	addwfc	??_main+1,f
  3676  037D  0865               	movf	??_main+8,w
  3677  037E  3DDF               	addwfc	??_main+2,f
  3678  037F  0866               	movf	??_main+9,w
  3679  0380  3DE0               	addwfc	??_main+3,f
  3680  0381  0860               	movf	??_main+3,w
  3681  0382  0021               	movlb	1	; select bank1
  3682  0383  00B4               	movwf	(main@totals+3)^(0+128)
  3683  0384  0020               	movlb	0	; select bank0
  3684  0385  085F               	movf	??_main+2,w
  3685  0386  0021               	movlb	1	; select bank1
  3686  0387  00B3               	movwf	(main@totals+2)^(0+128)
  3687  0388  0020               	movlb	0	; select bank0
  3688  0389  085E               	movf	??_main+1,w
  3689  038A  0021               	movlb	1	; select bank1
  3690  038B  00B2               	movwf	(main@totals+1)^(0+128)
  3691  038C  0020               	movlb	0	; select bank0
  3692  038D  085D               	movf	??_main,w
  3693  038E  0021               	movlb	1	; select bank1
  3694  038F  00B1               	movwf	main@totals^(0+128)
  3695                           
  3696                           ;main.c: 51: samples[0][sampleIndex0] = solarInTemp;
  3697  0390  085D               	movf	(main@sampleIndex0+1)^(0+128),w
  3698  0391  0020               	movlb	0	; select bank0
  3699  0392  00DE               	movwf	??_main+1
  3700  0393  0021               	movlb	1	; select bank1
  3701  0394  085C               	movf	main@sampleIndex0^(0+128),w
  3702  0395  0020               	movlb	0	; select bank0
  3703  0396  00DD               	movwf	??_main
  3704  0397  35DD               	lslf	??_main,f
  3705  0398  0DDE               	rlf	??_main+1,f
  3706  0399  3028               	movlw	40
  3707  039A  00DF               	movwf	??_main+2
  3708  039B  3023               	movlw	35
  3709  039C  00E0               	movwf	??_main+3
  3710  039D  085D               	movf	??_main,w
  3711  039E  075F               	addwf	??_main+2,w
  3712  039F  0086               	movwf	6
  3713  03A0  085E               	movf	??_main+1,w
  3714  03A1  3D60               	addwfc	??_main+3,w
  3715  03A2  0087               	movwf	7
  3716  03A3  0021               	movlb	1	; select bank1
  3717  03A4  082D               	movf	main@solarInTemp^(0+128),w
  3718  03A5  3FC0               	movwi [0]fsr1
  3719  03A6  082E               	movf	(main@solarInTemp+1)^(0+128),w
  3720  03A7  3FC1               	movwi [1]fsr1
  3721                           
  3722                           ;main.c: 53: totals[0] = totals[0] + samples[0][sampleIndex0];
  3723  03A8  0831               	movf	main@totals^(0+128),w
  3724  03A9  0020               	movlb	0	; select bank0
  3725  03AA  00DD               	movwf	??_main
  3726  03AB  0021               	movlb	1	; select bank1
  3727  03AC  0832               	movf	(main@totals+1)^(0+128),w
  3728  03AD  0020               	movlb	0	; select bank0
  3729  03AE  00DE               	movwf	??_main+1
  3730  03AF  0021               	movlb	1	; select bank1
  3731  03B0  0833               	movf	(main@totals+2)^(0+128),w
  3732  03B1  0020               	movlb	0	; select bank0
  3733  03B2  00DF               	movwf	??_main+2
  3734  03B3  0021               	movlb	1	; select bank1
  3735  03B4  0834               	movf	(main@totals+3)^(0+128),w
  3736  03B5  0020               	movlb	0	; select bank0
  3737  03B6  00E0               	movwf	??_main+3
  3738  03B7  0021               	movlb	1	; select bank1
  3739  03B8  085D               	movf	(main@sampleIndex0+1)^(0+128),w
  3740  03B9  0020               	movlb	0	; select bank0
  3741  03BA  00E2               	movwf	??_main+5
  3742  03BB  0021               	movlb	1	; select bank1
  3743  03BC  085C               	movf	main@sampleIndex0^(0+128),w
  3744  03BD  0020               	movlb	0	; select bank0
  3745  03BE  00E1               	movwf	??_main+4
  3746  03BF  35E1               	lslf	??_main+4,f
  3747  03C0  0DE2               	rlf	??_main+5,f
  3748  03C1  3028               	movlw	40
  3749  03C2  0761               	addwf	??_main+4,w
  3750  03C3  0084               	movwf	4
  3751  03C4  3023               	movlw	35
  3752  03C5  3D62               	addwfc	??_main+5,w
  3753  03C6  0085               	movwf	5
  3754  03C7  3F00               	moviw [0]fsr0
  3755  03C8  00E3               	movwf	??_main+6
  3756  03C9  3F01               	moviw [1]fsr0
  3757  03CA  00E4               	movwf	??_main+7
  3758  03CB  01E5               	clrf	??_main+8
  3759  03CC  01E6               	clrf	??_main+9
  3760  03CD  0863               	movf	??_main+6,w
  3761  03CE  07DD               	addwf	??_main,f
  3762  03CF  0864               	movf	??_main+7,w
  3763  03D0  3DDE               	addwfc	??_main+1,f
  3764  03D1  0865               	movf	??_main+8,w
  3765  03D2  3DDF               	addwfc	??_main+2,f
  3766  03D3  0866               	movf	??_main+9,w
  3767  03D4  3DE0               	addwfc	??_main+3,f
  3768  03D5  0860               	movf	??_main+3,w
  3769  03D6  0021               	movlb	1	; select bank1
  3770  03D7  00B4               	movwf	(main@totals+3)^(0+128)
  3771  03D8  0020               	movlb	0	; select bank0
  3772  03D9  085F               	movf	??_main+2,w
  3773  03DA  0021               	movlb	1	; select bank1
  3774  03DB  00B3               	movwf	(main@totals+2)^(0+128)
  3775  03DC  0020               	movlb	0	; select bank0
  3776  03DD  085E               	movf	??_main+1,w
  3777  03DE  0021               	movlb	1	; select bank1
  3778  03DF  00B2               	movwf	(main@totals+1)^(0+128)
  3779  03E0  0020               	movlb	0	; select bank0
  3780  03E1  085D               	movf	??_main,w
  3781  03E2  0021               	movlb	1	; select bank1
  3782  03E3  00B1               	movwf	main@totals^(0+128)
  3783                           
  3784                           ;main.c: 55: sampleIndex0 += 1;
  3785  03E4  3001               	movlw	1
  3786  03E5  07DC               	addwf	main@sampleIndex0^(0+128),f
  3787  03E6  3000               	movlw	0
  3788  03E7  3DDD               	addwfc	(main@sampleIndex0+1)^(0+128),f
  3789                           
  3790                           ;main.c: 57: if(sampleIndex0 >= 50)
  3791  03E8  3000               	movlw	0
  3792  03E9  025D               	subwf	(main@sampleIndex0+1)^(0+128),w
  3793  03EA  3032               	movlw	50
  3794  03EB  1903               	skipnz
  3795  03EC  025C               	subwf	main@sampleIndex0^(0+128),w
  3796  03ED  1C03               	skipc
  3797  03EE  2BF1               	goto	l2388
  3798                           
  3799                           ;main.c: 58: {
  3800                           ;main.c: 59: sampleIndex0 = 0;
  3801  03EF  01DC               	clrf	main@sampleIndex0^(0+128)
  3802  03F0  01DD               	clrf	(main@sampleIndex0+1)^(0+128)
  3803  03F1                     l2388:	
  3804                           
  3805                           ;main.c: 60: }
  3806                           ;main.c: 62: solarInTemp = totals[0] / 50;
  3807  03F1  3000               	movlw	0
  3808  03F2  00F3               	movwf	___aldiv@divisor+3
  3809  03F3  3000               	movlw	0
  3810  03F4  00F2               	movwf	___aldiv@divisor+2
  3811  03F5  3000               	movlw	0
  3812  03F6  00F1               	movwf	___aldiv@divisor+1
  3813  03F7  3032               	movlw	50
  3814  03F8  00F0               	movwf	___aldiv@divisor
  3815  03F9  0834               	movf	(main@totals+3)^(0+128),w
  3816  03FA  00F7               	movwf	___aldiv@dividend+3
  3817  03FB  0833               	movf	(main@totals+2)^(0+128),w
  3818  03FC  00F6               	movwf	___aldiv@dividend+2
  3819  03FD  0832               	movf	(main@totals+1)^(0+128),w
  3820  03FE  00F5               	movwf	___aldiv@dividend+1
  3821  03FF  0831               	movf	main@totals^(0+128),w
  3822  0400  00F4               	movwf	___aldiv@dividend
  3823  0401  318D  25A2  3182   	fcall	___aldiv
  3824  0404  0871               	movf	?___aldiv+1,w
  3825  0405  0021               	movlb	1	; select bank1
  3826  0406  00AE               	movwf	(main@solarInTemp+1)^(0+128)
  3827  0407  0870               	movf	?___aldiv,w
  3828  0408  00AD               	movwf	main@solarInTemp^(0+128)
  3829                           
  3830                           ;main.c: 66: solarOutTemp = ADCRead(11);
  3831  0409  300B               	movlw	11
  3832  040A  3189  219A  3182   	fcall	_ADCRead
  3833  040D  0871               	movf	?_ADCRead+1,w
  3834  040E  0021               	movlb	1	; select bank1
  3835  040F  00B0               	movwf	(main@solarOutTemp+1)^(0+128)
  3836  0410  0870               	movf	?_ADCRead,w
  3837  0411  00AF               	movwf	main@solarOutTemp^(0+128)
  3838                           
  3839                           ;main.c: 68: totals[1] = totals[1] - samples[1][sampleIndex1];
  3840  0412  0835               	movf	(main@totals^(0+128)+4),w
  3841  0413  0020               	movlb	0	; select bank0
  3842  0414  00DD               	movwf	??_main
  3843  0415  0021               	movlb	1	; select bank1
  3844  0416  0836               	movf	((main@totals+1)^(0+128)+4),w
  3845  0417  0020               	movlb	0	; select bank0
  3846  0418  00DE               	movwf	??_main+1
  3847  0419  0021               	movlb	1	; select bank1
  3848  041A  0837               	movf	((main@totals+2)^(0+128)+4),w
  3849  041B  0020               	movlb	0	; select bank0
  3850  041C  00DF               	movwf	??_main+2
  3851  041D  0021               	movlb	1	; select bank1
  3852  041E  0838               	movf	((main@totals+3)^(0+128)+4),w
  3853  041F  0020               	movlb	0	; select bank0
  3854  0420  00E0               	movwf	??_main+3
  3855  0421  0021               	movlb	1	; select bank1
  3856  0422  085F               	movf	(main@sampleIndex1+1)^(0+128),w
  3857  0423  0020               	movlb	0	; select bank0
  3858  0424  00E2               	movwf	??_main+5
  3859  0425  0021               	movlb	1	; select bank1
  3860  0426  085E               	movf	main@sampleIndex1^(0+128),w
  3861  0427  0020               	movlb	0	; select bank0
  3862  0428  00E1               	movwf	??_main+4
  3863  0429  35E1               	lslf	??_main+4,f
  3864  042A  0DE2               	rlf	??_main+5,f
  3865  042B  308C               	movlw	140
  3866  042C  0761               	addwf	??_main+4,w
  3867  042D  0084               	movwf	4
  3868  042E  3023               	movlw	35
  3869  042F  3D62               	addwfc	??_main+5,w
  3870  0430  0085               	movwf	5
  3871  0431  3F00               	moviw [0]fsr0
  3872  0432  00E3               	movwf	??_main+6
  3873  0433  3F01               	moviw [1]fsr0
  3874  0434  00E4               	movwf	??_main+7
  3875  0435  01E5               	clrf	??_main+8
  3876  0436  01E6               	clrf	??_main+9
  3877  0437  09E3               	comf	??_main+6,f
  3878  0438  09E4               	comf	??_main+7,f
  3879  0439  09E5               	comf	??_main+8,f
  3880  043A  09E6               	comf	??_main+9,f
  3881  043B  0AE3               	incf	??_main+6,f
  3882  043C  1903               	skipnz
  3883  043D  0AE4               	incf	??_main+7,f
  3884  043E  1903               	skipnz
  3885  043F  0AE5               	incf	??_main+8,f
  3886  0440  1903               	skipnz
  3887  0441  0AE6               	incf	??_main+9,f
  3888  0442  0863               	movf	??_main+6,w
  3889  0443  07DD               	addwf	??_main,f
  3890  0444  0864               	movf	??_main+7,w
  3891  0445  3DDE               	addwfc	??_main+1,f
  3892  0446  0865               	movf	??_main+8,w
  3893  0447  3DDF               	addwfc	??_main+2,f
  3894  0448  0866               	movf	??_main+9,w
  3895  0449  3DE0               	addwfc	??_main+3,f
  3896  044A  0860               	movf	??_main+3,w
  3897  044B  0021               	movlb	1	; select bank1
  3898  044C  00B8               	movwf	((main@totals+3)^(0+128)+4)
  3899  044D  0020               	movlb	0	; select bank0
  3900  044E  085F               	movf	??_main+2,w
  3901  044F  0021               	movlb	1	; select bank1
  3902  0450  00B7               	movwf	((main@totals+2)^(0+128)+4)
  3903  0451  0020               	movlb	0	; select bank0
  3904  0452  085E               	movf	??_main+1,w
  3905  0453  0021               	movlb	1	; select bank1
  3906  0454  00B6               	movwf	((main@totals+1)^(0+128)+4)
  3907  0455  0020               	movlb	0	; select bank0
  3908  0456  085D               	movf	??_main,w
  3909  0457  0021               	movlb	1	; select bank1
  3910  0458  00B5               	movwf	(main@totals^(0+128)+4)
  3911                           
  3912                           ;main.c: 70: samples[1][sampleIndex1] = solarOutTemp;
  3913  0459  085F               	movf	(main@sampleIndex1+1)^(0+128),w
  3914  045A  0020               	movlb	0	; select bank0
  3915  045B  00DE               	movwf	??_main+1
  3916  045C  0021               	movlb	1	; select bank1
  3917  045D  085E               	movf	main@sampleIndex1^(0+128),w
  3918  045E  0020               	movlb	0	; select bank0
  3919  045F  00DD               	movwf	??_main
  3920  0460  35DD               	lslf	??_main,f
  3921  0461  0DDE               	rlf	??_main+1,f
  3922  0462  308C               	movlw	140
  3923  0463  00DF               	movwf	??_main+2
  3924  0464  3023               	movlw	35
  3925  0465  00E0               	movwf	??_main+3
  3926  0466  085D               	movf	??_main,w
  3927  0467  075F               	addwf	??_main+2,w
  3928  0468  0086               	movwf	6
  3929  0469  085E               	movf	??_main+1,w
  3930  046A  3D60               	addwfc	??_main+3,w
  3931  046B  0087               	movwf	7
  3932  046C  0021               	movlb	1	; select bank1
  3933  046D  082F               	movf	main@solarOutTemp^(0+128),w
  3934  046E  3FC0               	movwi [0]fsr1
  3935  046F  0830               	movf	(main@solarOutTemp+1)^(0+128),w
  3936  0470  3FC1               	movwi [1]fsr1
  3937                           
  3938                           ;main.c: 72: totals[1] = totals[1] + samples[1][sampleIndex1];
  3939  0471  0835               	movf	(main@totals^(0+128)+4),w
  3940  0472  0020               	movlb	0	; select bank0
  3941  0473  00DD               	movwf	??_main
  3942  0474  0021               	movlb	1	; select bank1
  3943  0475  0836               	movf	((main@totals+1)^(0+128)+4),w
  3944  0476  0020               	movlb	0	; select bank0
  3945  0477  00DE               	movwf	??_main+1
  3946  0478  0021               	movlb	1	; select bank1
  3947  0479  0837               	movf	((main@totals+2)^(0+128)+4),w
  3948  047A  0020               	movlb	0	; select bank0
  3949  047B  00DF               	movwf	??_main+2
  3950  047C  0021               	movlb	1	; select bank1
  3951  047D  0838               	movf	((main@totals+3)^(0+128)+4),w
  3952  047E  0020               	movlb	0	; select bank0
  3953  047F  00E0               	movwf	??_main+3
  3954  0480  0021               	movlb	1	; select bank1
  3955  0481  085F               	movf	(main@sampleIndex1+1)^(0+128),w
  3956  0482  0020               	movlb	0	; select bank0
  3957  0483  00E2               	movwf	??_main+5
  3958  0484  0021               	movlb	1	; select bank1
  3959  0485  085E               	movf	main@sampleIndex1^(0+128),w
  3960  0486  0020               	movlb	0	; select bank0
  3961  0487  00E1               	movwf	??_main+4
  3962  0488  35E1               	lslf	??_main+4,f
  3963  0489  0DE2               	rlf	??_main+5,f
  3964  048A  308C               	movlw	140
  3965  048B  0761               	addwf	??_main+4,w
  3966  048C  0084               	movwf	4
  3967  048D  3023               	movlw	35
  3968  048E  3D62               	addwfc	??_main+5,w
  3969  048F  0085               	movwf	5
  3970  0490  3F00               	moviw [0]fsr0
  3971  0491  00E3               	movwf	??_main+6
  3972  0492  3F01               	moviw [1]fsr0
  3973  0493  00E4               	movwf	??_main+7
  3974  0494  01E5               	clrf	??_main+8
  3975  0495  01E6               	clrf	??_main+9
  3976  0496  0863               	movf	??_main+6,w
  3977  0497  07DD               	addwf	??_main,f
  3978  0498  0864               	movf	??_main+7,w
  3979  0499  3DDE               	addwfc	??_main+1,f
  3980  049A  0865               	movf	??_main+8,w
  3981  049B  3DDF               	addwfc	??_main+2,f
  3982  049C  0866               	movf	??_main+9,w
  3983  049D  3DE0               	addwfc	??_main+3,f
  3984  049E  0860               	movf	??_main+3,w
  3985  049F  0021               	movlb	1	; select bank1
  3986  04A0  00B8               	movwf	((main@totals+3)^(0+128)+4)
  3987  04A1  0020               	movlb	0	; select bank0
  3988  04A2  085F               	movf	??_main+2,w
  3989  04A3  0021               	movlb	1	; select bank1
  3990  04A4  00B7               	movwf	((main@totals+2)^(0+128)+4)
  3991  04A5  0020               	movlb	0	; select bank0
  3992  04A6  085E               	movf	??_main+1,w
  3993  04A7  0021               	movlb	1	; select bank1
  3994  04A8  00B6               	movwf	((main@totals+1)^(0+128)+4)
  3995  04A9  0020               	movlb	0	; select bank0
  3996  04AA  085D               	movf	??_main,w
  3997  04AB  0021               	movlb	1	; select bank1
  3998  04AC  00B5               	movwf	(main@totals^(0+128)+4)
  3999                           
  4000                           ;main.c: 74: sampleIndex1 += 1;
  4001  04AD  3001               	movlw	1
  4002  04AE  07DE               	addwf	main@sampleIndex1^(0+128),f
  4003  04AF  3000               	movlw	0
  4004  04B0  3DDF               	addwfc	(main@sampleIndex1+1)^(0+128),f
  4005                           
  4006                           ;main.c: 76: if(sampleIndex1 >= 50)
  4007  04B1  3000               	movlw	0
  4008  04B2  025F               	subwf	(main@sampleIndex1+1)^(0+128),w
  4009  04B3  3032               	movlw	50
  4010  04B4  1903               	skipnz
  4011  04B5  025E               	subwf	main@sampleIndex1^(0+128),w
  4012  04B6  1C03               	skipc
  4013  04B7  2CBA               	goto	l2404
  4014                           
  4015                           ;main.c: 77: {
  4016                           ;main.c: 78: sampleIndex1 = 0;
  4017  04B8  01DE               	clrf	main@sampleIndex1^(0+128)
  4018  04B9  01DF               	clrf	(main@sampleIndex1+1)^(0+128)
  4019  04BA                     l2404:	
  4020                           
  4021                           ;main.c: 79: }
  4022                           ;main.c: 81: solarOutTemp = totals[1] / 50;
  4023  04BA  3000               	movlw	0
  4024  04BB  00F3               	movwf	___aldiv@divisor+3
  4025  04BC  3000               	movlw	0
  4026  04BD  00F2               	movwf	___aldiv@divisor+2
  4027  04BE  3000               	movlw	0
  4028  04BF  00F1               	movwf	___aldiv@divisor+1
  4029  04C0  3032               	movlw	50
  4030  04C1  00F0               	movwf	___aldiv@divisor
  4031  04C2  3004               	movlw	4
  4032  04C3  3EB1               	addlw	(low (main@totals| 0))& (0+255)
  4033  04C4  0086               	movwf	6
  4034  04C5  0187               	clrf	7
  4035  04C6  3F40               	moviw [0]fsr1
  4036  04C7  00F4               	movwf	___aldiv@dividend
  4037  04C8  3F41               	moviw [1]fsr1
  4038  04C9  00F5               	movwf	___aldiv@dividend+1
  4039  04CA  3F42               	moviw [2]fsr1
  4040  04CB  00F6               	movwf	___aldiv@dividend+2
  4041  04CC  3F43               	moviw [3]fsr1
  4042  04CD  00F7               	movwf	___aldiv@dividend+3
  4043  04CE  318D  25A2  3182   	fcall	___aldiv
  4044  04D1  0871               	movf	?___aldiv+1,w
  4045  04D2  0021               	movlb	1	; select bank1
  4046  04D3  00B0               	movwf	(main@solarOutTemp+1)^(0+128)
  4047  04D4  0870               	movf	?___aldiv,w
  4048  04D5  00AF               	movwf	main@solarOutTemp^(0+128)
  4049                           
  4050                           ;main.c: 84: R = 10010/(1023/(float)solarInTemp - 1);
  4051  04D6  3000               	movlw	0
  4052  04D7  0020               	movlb	0	; select bank0
  4053  04D8  00C0               	movwf	___ftadd@f1
  4054  04D9  3080               	movlw	128
  4055  04DA  00C1               	movwf	___ftadd@f1+1
  4056  04DB  30BF               	movlw	191
  4057  04DC  00C2               	movwf	___ftadd@f1+2
  4058  04DD  0021               	movlb	1	; select bank1
  4059  04DE  082E               	movf	(main@solarInTemp+1)^(0+128),w
  4060  04DF  00F9               	movwf	___lwtoft@c+1
  4061  04E0  082D               	movf	main@solarInTemp^(0+128),w
  4062  04E1  00F8               	movwf	___lwtoft@c
  4063  04E2  3189  21BA  3182   	fcall	___lwtoft
  4064  04E5  0878               	movf	?___lwtoft,w
  4065  04E6  0020               	movlb	0	; select bank0
  4066  04E7  00B0               	movwf	___ftdiv@f2
  4067  04E8  0879               	movf	?___lwtoft+1,w
  4068  04E9  00B1               	movwf	___ftdiv@f2+1
  4069  04EA  087A               	movf	?___lwtoft+2,w
  4070  04EB  00B2               	movwf	___ftdiv@f2+2
  4071  04EC  30C0               	movlw	192
  4072  04ED  00B3               	movwf	___ftdiv@f1
  4073  04EE  307F               	movlw	127
  4074  04EF  00B4               	movwf	___ftdiv@f1+1
  4075  04F0  3044               	movlw	68
  4076  04F1  00B5               	movwf	___ftdiv@f1+2
  4077  04F2  318E  26AA  3182   	fcall	___ftdiv
  4078  04F5  0020               	movlb	0	; select bank0
  4079  04F6  0830               	movf	?___ftdiv,w
  4080  04F7  00C3               	movwf	___ftadd@f2
  4081  04F8  0831               	movf	?___ftdiv+1,w
  4082  04F9  00C4               	movwf	___ftadd@f2+1
  4083  04FA  0832               	movf	?___ftdiv+2,w
  4084  04FB  00C5               	movwf	___ftadd@f2+2
  4085  04FC  3181  21A6  3182   	fcall	___ftadd
  4086  04FF  0020               	movlb	0	; select bank0
  4087  0500  0840               	movf	?___ftadd,w
  4088  0501  0021               	movlb	1	; select bank1
  4089  0502  00AA               	movwf	_main$789^(0+128)
  4090  0503  0020               	movlb	0	; select bank0
  4091  0504  0841               	movf	?___ftadd+1,w
  4092  0505  0021               	movlb	1	; select bank1
  4093  0506  00AB               	movwf	(_main$789+1)^(0+128)
  4094  0507  0020               	movlb	0	; select bank0
  4095  0508  0842               	movf	?___ftadd+2,w
  4096  0509  0021               	movlb	1	; select bank1
  4097  050A  00AC               	movwf	(_main$789+2)^(0+128)
  4098                           
  4099                           ;main.c: 84: R = 10010/(1023/(float)solarInTemp - 1);
  4100  050B  082A               	movf	_main$789^(0+128),w
  4101  050C  0020               	movlb	0	; select bank0
  4102  050D  00B0               	movwf	___ftdiv@f2
  4103  050E  0021               	movlb	1	; select bank1
  4104  050F  082B               	movf	(_main$789+1)^(0+128),w
  4105  0510  0020               	movlb	0	; select bank0
  4106  0511  00B1               	movwf	___ftdiv@f2+1
  4107  0512  0021               	movlb	1	; select bank1
  4108  0513  082C               	movf	(_main$789+2)^(0+128),w
  4109  0514  0020               	movlb	0	; select bank0
  4110  0515  00B2               	movwf	___ftdiv@f2+2
  4111  0516  3068               	movlw	104
  4112  0517  00B3               	movwf	___ftdiv@f1
  4113  0518  301C               	movlw	28
  4114  0519  00B4               	movwf	___ftdiv@f1+1
  4115  051A  3046               	movlw	70
  4116  051B  00B5               	movwf	___ftdiv@f1+2
  4117  051C  318E  26AA  3182   	fcall	___ftdiv
  4118  051F  0020               	movlb	0	; select bank0
  4119  0520  0830               	movf	?___ftdiv,w
  4120  0521  0021               	movlb	1	; select bank1
  4121  0522  00A1               	movwf	main@R^(0+128)
  4122  0523  0020               	movlb	0	; select bank0
  4123  0524  0831               	movf	?___ftdiv+1,w
  4124  0525  0021               	movlb	1	; select bank1
  4125  0526  00A2               	movwf	(main@R+1)^(0+128)
  4126  0527  0020               	movlb	0	; select bank0
  4127  0528  0832               	movf	?___ftdiv+2,w
  4128  0529  0021               	movlb	1	; select bank1
  4129  052A  00A3               	movwf	(main@R+2)^(0+128)
  4130                           
  4131                           ;main.c: 86: steinhart = R /10061;
  4132  052B  3034               	movlw	52
  4133  052C  0020               	movlb	0	; select bank0
  4134  052D  00B0               	movwf	___ftdiv@f2
  4135  052E  301D               	movlw	29
  4136  052F  00B1               	movwf	___ftdiv@f2+1
  4137  0530  3046               	movlw	70
  4138  0531  00B2               	movwf	___ftdiv@f2+2
  4139  0532  0021               	movlb	1	; select bank1
  4140  0533  0821               	movf	main@R^(0+128),w
  4141  0534  0020               	movlb	0	; select bank0
  4142  0535  00B3               	movwf	___ftdiv@f1
  4143  0536  0021               	movlb	1	; select bank1
  4144  0537  0822               	movf	(main@R+1)^(0+128),w
  4145  0538  0020               	movlb	0	; select bank0
  4146  0539  00B4               	movwf	___ftdiv@f1+1
  4147  053A  0021               	movlb	1	; select bank1
  4148  053B  0823               	movf	(main@R+2)^(0+128),w
  4149  053C  0020               	movlb	0	; select bank0
  4150  053D  00B5               	movwf	___ftdiv@f1+2
  4151  053E  318E  26AA  3182   	fcall	___ftdiv
  4152  0541  0020               	movlb	0	; select bank0
  4153  0542  0830               	movf	?___ftdiv,w
  4154  0543  0021               	movlb	1	; select bank1
  4155  0544  00B9               	movwf	main@steinhart^(0+128)
  4156  0545  0020               	movlb	0	; select bank0
  4157  0546  0831               	movf	?___ftdiv+1,w
  4158  0547  0021               	movlb	1	; select bank1
  4159  0548  00BA               	movwf	(main@steinhart+1)^(0+128)
  4160  0549  0020               	movlb	0	; select bank0
  4161  054A  0832               	movf	?___ftdiv+2,w
  4162  054B  0021               	movlb	1	; select bank1
  4163  054C  00BB               	movwf	(main@steinhart+2)^(0+128)
  4164                           
  4165                           ;main.c: 87: steinhart = log(steinhart);
  4166  054D  0839               	movf	main@steinhart^(0+128),w
  4167  054E  0020               	movlb	0	; select bank0
  4168  054F  00D7               	movwf	log@x
  4169  0550  0021               	movlb	1	; select bank1
  4170  0551  083A               	movf	(main@steinhart+1)^(0+128),w
  4171  0552  0020               	movlb	0	; select bank0
  4172  0553  00D8               	movwf	log@x+1
  4173  0554  0021               	movlb	1	; select bank1
  4174  0555  083B               	movf	(main@steinhart+2)^(0+128),w
  4175  0556  0020               	movlb	0	; select bank0
  4176  0557  00D9               	movwf	log@x+2
  4177  0558  318F  2753  3182   	fcall	_log
  4178  055B  0020               	movlb	0	; select bank0
  4179  055C  0857               	movf	?_log,w
  4180  055D  0021               	movlb	1	; select bank1
  4181  055E  00B9               	movwf	main@steinhart^(0+128)
  4182  055F  0020               	movlb	0	; select bank0
  4183  0560  0858               	movf	?_log+1,w
  4184  0561  0021               	movlb	1	; select bank1
  4185  0562  00BA               	movwf	(main@steinhart+1)^(0+128)
  4186  0563  0020               	movlb	0	; select bank0
  4187  0564  0859               	movf	?_log+2,w
  4188  0565  0021               	movlb	1	; select bank1
  4189  0566  00BB               	movwf	(main@steinhart+2)^(0+128)
  4190                           
  4191                           ;main.c: 88: steinhart /= 3995;
  4192  0567  30B0               	movlw	176
  4193  0568  0020               	movlb	0	; select bank0
  4194  0569  00B0               	movwf	___ftdiv@f2
  4195  056A  3079               	movlw	121
  4196  056B  00B1               	movwf	___ftdiv@f2+1
  4197  056C  3045               	movlw	69
  4198  056D  00B2               	movwf	___ftdiv@f2+2
  4199  056E  0021               	movlb	1	; select bank1
  4200  056F  0839               	movf	main@steinhart^(0+128),w
  4201  0570  0020               	movlb	0	; select bank0
  4202  0571  00B3               	movwf	___ftdiv@f1
  4203  0572  0021               	movlb	1	; select bank1
  4204  0573  083A               	movf	(main@steinhart+1)^(0+128),w
  4205  0574  0020               	movlb	0	; select bank0
  4206  0575  00B4               	movwf	___ftdiv@f1+1
  4207  0576  0021               	movlb	1	; select bank1
  4208  0577  083B               	movf	(main@steinhart+2)^(0+128),w
  4209  0578  0020               	movlb	0	; select bank0
  4210  0579  00B5               	movwf	___ftdiv@f1+2
  4211  057A  318E  26AA  3182   	fcall	___ftdiv
  4212  057D  0020               	movlb	0	; select bank0
  4213  057E  0830               	movf	?___ftdiv,w
  4214  057F  0021               	movlb	1	; select bank1
  4215  0580  00B9               	movwf	main@steinhart^(0+128)
  4216  0581  0020               	movlb	0	; select bank0
  4217  0582  0831               	movf	?___ftdiv+1,w
  4218  0583  0021               	movlb	1	; select bank1
  4219  0584  00BA               	movwf	(main@steinhart+1)^(0+128)
  4220  0585  0020               	movlb	0	; select bank0
  4221  0586  0832               	movf	?___ftdiv+2,w
  4222  0587  0021               	movlb	1	; select bank1
  4223  0588  00BB               	movwf	(main@steinhart+2)^(0+128)
  4224                           
  4225                           ;main.c: 89: steinhart += 1.0 / (25 + 273.15);
  4226  0589  30CF               	movlw	207
  4227  058A  0020               	movlb	0	; select bank0
  4228  058B  00C0               	movwf	___ftadd@f1
  4229  058C  305B               	movlw	91
  4230  058D  00C1               	movwf	___ftadd@f1+1
  4231  058E  303B               	movlw	59
  4232  058F  00C2               	movwf	___ftadd@f1+2
  4233  0590  0021               	movlb	1	; select bank1
  4234  0591  0839               	movf	main@steinhart^(0+128),w
  4235  0592  0020               	movlb	0	; select bank0
  4236  0593  00C3               	movwf	___ftadd@f2
  4237  0594  0021               	movlb	1	; select bank1
  4238  0595  083A               	movf	(main@steinhart+1)^(0+128),w
  4239  0596  0020               	movlb	0	; select bank0
  4240  0597  00C4               	movwf	___ftadd@f2+1
  4241  0598  0021               	movlb	1	; select bank1
  4242  0599  083B               	movf	(main@steinhart+2)^(0+128),w
  4243  059A  0020               	movlb	0	; select bank0
  4244  059B  00C5               	movwf	___ftadd@f2+2
  4245  059C  3181  21A6  3182   	fcall	___ftadd
  4246  059F  0020               	movlb	0	; select bank0
  4247  05A0  0840               	movf	?___ftadd,w
  4248  05A1  0021               	movlb	1	; select bank1
  4249  05A2  00B9               	movwf	main@steinhart^(0+128)
  4250  05A3  0020               	movlb	0	; select bank0
  4251  05A4  0841               	movf	?___ftadd+1,w
  4252  05A5  0021               	movlb	1	; select bank1
  4253  05A6  00BA               	movwf	(main@steinhart+1)^(0+128)
  4254  05A7  0020               	movlb	0	; select bank0
  4255  05A8  0842               	movf	?___ftadd+2,w
  4256  05A9  0021               	movlb	1	; select bank1
  4257  05AA  00BB               	movwf	(main@steinhart+2)^(0+128)
  4258                           
  4259                           ;main.c: 90: steinhart = 1.0 / steinhart;
  4260  05AB  0839               	movf	main@steinhart^(0+128),w
  4261  05AC  0020               	movlb	0	; select bank0
  4262  05AD  00B0               	movwf	___ftdiv@f2
  4263  05AE  0021               	movlb	1	; select bank1
  4264  05AF  083A               	movf	(main@steinhart+1)^(0+128),w
  4265  05B0  0020               	movlb	0	; select bank0
  4266  05B1  00B1               	movwf	___ftdiv@f2+1
  4267  05B2  0021               	movlb	1	; select bank1
  4268  05B3  083B               	movf	(main@steinhart+2)^(0+128),w
  4269  05B4  0020               	movlb	0	; select bank0
  4270  05B5  00B2               	movwf	___ftdiv@f2+2
  4271  05B6  3000               	movlw	0
  4272  05B7  00B3               	movwf	___ftdiv@f1
  4273  05B8  3080               	movlw	128
  4274  05B9  00B4               	movwf	___ftdiv@f1+1
  4275  05BA  303F               	movlw	63
  4276  05BB  00B5               	movwf	___ftdiv@f1+2
  4277  05BC  318E  26AA  3182   	fcall	___ftdiv
  4278  05BF  0020               	movlb	0	; select bank0
  4279  05C0  0830               	movf	?___ftdiv,w
  4280  05C1  0021               	movlb	1	; select bank1
  4281  05C2  00B9               	movwf	main@steinhart^(0+128)
  4282  05C3  0020               	movlb	0	; select bank0
  4283  05C4  0831               	movf	?___ftdiv+1,w
  4284  05C5  0021               	movlb	1	; select bank1
  4285  05C6  00BA               	movwf	(main@steinhart+1)^(0+128)
  4286  05C7  0020               	movlb	0	; select bank0
  4287  05C8  0832               	movf	?___ftdiv+2,w
  4288  05C9  0021               	movlb	1	; select bank1
  4289  05CA  00BB               	movwf	(main@steinhart+2)^(0+128)
  4290                           
  4291                           ;main.c: 91: steinhart -= 273.15;
  4292  05CB  3093               	movlw	147
  4293  05CC  0020               	movlb	0	; select bank0
  4294  05CD  00CD               	movwf	___ftsub@f2
  4295  05CE  3088               	movlw	136
  4296  05CF  00CE               	movwf	___ftsub@f2+1
  4297  05D0  3043               	movlw	67
  4298  05D1  00CF               	movwf	___ftsub@f2+2
  4299  05D2  0021               	movlb	1	; select bank1
  4300  05D3  0839               	movf	main@steinhart^(0+128),w
  4301  05D4  0020               	movlb	0	; select bank0
  4302  05D5  00D0               	movwf	___ftsub@f1
  4303  05D6  0021               	movlb	1	; select bank1
  4304  05D7  083A               	movf	(main@steinhart+1)^(0+128),w
  4305  05D8  0020               	movlb	0	; select bank0
  4306  05D9  00D1               	movwf	___ftsub@f1+1
  4307  05DA  0021               	movlb	1	; select bank1
  4308  05DB  083B               	movf	(main@steinhart+2)^(0+128),w
  4309  05DC  0020               	movlb	0	; select bank0
  4310  05DD  00D2               	movwf	___ftsub@f1+2
  4311  05DE  318A  224B  3182   	fcall	___ftsub
  4312  05E1  0020               	movlb	0	; select bank0
  4313  05E2  084D               	movf	?___ftsub,w
  4314  05E3  0021               	movlb	1	; select bank1
  4315  05E4  00B9               	movwf	main@steinhart^(0+128)
  4316  05E5  0020               	movlb	0	; select bank0
  4317  05E6  084E               	movf	?___ftsub+1,w
  4318  05E7  0021               	movlb	1	; select bank1
  4319  05E8  00BA               	movwf	(main@steinhart+1)^(0+128)
  4320  05E9  0020               	movlb	0	; select bank0
  4321  05EA  084F               	movf	?___ftsub+2,w
  4322  05EB  0021               	movlb	1	; select bank1
  4323  05EC  00BB               	movwf	(main@steinhart+2)^(0+128)
  4324                           
  4325                           ;main.c: 93: displayTemp = steinhart*10;
  4326  05ED  3000               	movlw	0
  4327  05EE  0020               	movlb	0	; select bank0
  4328  05EF  00A0               	movwf	___ftmul@f1
  4329  05F0  3020               	movlw	32
  4330  05F1  00A1               	movwf	___ftmul@f1+1
  4331  05F2  3041               	movlw	65
  4332  05F3  00A2               	movwf	___ftmul@f1+2
  4333  05F4  0021               	movlb	1	; select bank1
  4334  05F5  0839               	movf	main@steinhart^(0+128),w
  4335  05F6  0020               	movlb	0	; select bank0
  4336  05F7  00A3               	movwf	___ftmul@f2
  4337  05F8  0021               	movlb	1	; select bank1
  4338  05F9  083A               	movf	(main@steinhart+1)^(0+128),w
  4339  05FA  0020               	movlb	0	; select bank0
  4340  05FB  00A4               	movwf	___ftmul@f2+1
  4341  05FC  0021               	movlb	1	; select bank1
  4342  05FD  083B               	movf	(main@steinhart+2)^(0+128),w
  4343  05FE  0020               	movlb	0	; select bank0
  4344  05FF  00A5               	movwf	___ftmul@f2+2
  4345  0600  3180  2027  3182   	fcall	___ftmul
  4346  0603  0020               	movlb	0	; select bank0
  4347  0604  0820               	movf	?___ftmul,w
  4348  0605  0021               	movlb	1	; select bank1
  4349  0606  00A4               	movwf	main@displayTemp^(0+128)
  4350  0607  0020               	movlb	0	; select bank0
  4351  0608  0821               	movf	?___ftmul+1,w
  4352  0609  0021               	movlb	1	; select bank1
  4353  060A  00A5               	movwf	(main@displayTemp+1)^(0+128)
  4354  060B  0020               	movlb	0	; select bank0
  4355  060C  0822               	movf	?___ftmul+2,w
  4356  060D  0021               	movlb	1	; select bank1
  4357  060E  00A6               	movwf	(main@displayTemp+2)^(0+128)
  4358                           
  4359                           ;main.c: 95: displayTemp = displayTemp*9/5+320;
  4360  060F  3000               	movlw	0
  4361  0610  0020               	movlb	0	; select bank0
  4362  0611  00C0               	movwf	___ftadd@f1
  4363  0612  30A0               	movlw	160
  4364  0613  00C1               	movwf	___ftadd@f1+1
  4365  0614  3043               	movlw	67
  4366  0615  00C2               	movwf	___ftadd@f1+2
  4367  0616  3000               	movlw	0
  4368  0617  00B0               	movwf	___ftdiv@f2
  4369  0618  30A0               	movlw	160
  4370  0619  00B1               	movwf	___ftdiv@f2+1
  4371  061A  3040               	movlw	64
  4372  061B  00B2               	movwf	___ftdiv@f2+2
  4373  061C  3000               	movlw	0
  4374  061D  00A0               	movwf	___ftmul@f1
  4375  061E  3010               	movlw	16
  4376  061F  00A1               	movwf	___ftmul@f1+1
  4377  0620  3041               	movlw	65
  4378  0621  00A2               	movwf	___ftmul@f1+2
  4379  0622  0021               	movlb	1	; select bank1
  4380  0623  0824               	movf	main@displayTemp^(0+128),w
  4381  0624  0020               	movlb	0	; select bank0
  4382  0625  00A3               	movwf	___ftmul@f2
  4383  0626  0021               	movlb	1	; select bank1
  4384  0627  0825               	movf	(main@displayTemp+1)^(0+128),w
  4385  0628  0020               	movlb	0	; select bank0
  4386  0629  00A4               	movwf	___ftmul@f2+1
  4387  062A  0021               	movlb	1	; select bank1
  4388  062B  0826               	movf	(main@displayTemp+2)^(0+128),w
  4389  062C  0020               	movlb	0	; select bank0
  4390  062D  00A5               	movwf	___ftmul@f2+2
  4391  062E  3180  2027  3182   	fcall	___ftmul
  4392  0631  0020               	movlb	0	; select bank0
  4393  0632  0820               	movf	?___ftmul,w
  4394  0633  00B3               	movwf	___ftdiv@f1
  4395  0634  0821               	movf	?___ftmul+1,w
  4396  0635  00B4               	movwf	___ftdiv@f1+1
  4397  0636  0822               	movf	?___ftmul+2,w
  4398  0637  00B5               	movwf	___ftdiv@f1+2
  4399  0638  318E  26AA  3182   	fcall	___ftdiv
  4400  063B  0020               	movlb	0	; select bank0
  4401  063C  0830               	movf	?___ftdiv,w
  4402  063D  00C3               	movwf	___ftadd@f2
  4403  063E  0831               	movf	?___ftdiv+1,w
  4404  063F  00C4               	movwf	___ftadd@f2+1
  4405  0640  0832               	movf	?___ftdiv+2,w
  4406  0641  00C5               	movwf	___ftadd@f2+2
  4407  0642  3181  21A6  3182   	fcall	___ftadd
  4408  0645  0020               	movlb	0	; select bank0
  4409  0646  0840               	movf	?___ftadd,w
  4410  0647  0021               	movlb	1	; select bank1
  4411  0648  00A4               	movwf	main@displayTemp^(0+128)
  4412  0649  0020               	movlb	0	; select bank0
  4413  064A  0841               	movf	?___ftadd+1,w
  4414  064B  0021               	movlb	1	; select bank1
  4415  064C  00A5               	movwf	(main@displayTemp+1)^(0+128)
  4416  064D  0020               	movlb	0	; select bank0
  4417  064E  0842               	movf	?___ftadd+2,w
  4418  064F  0021               	movlb	1	; select bank1
  4419  0650  00A6               	movwf	(main@displayTemp+2)^(0+128)
  4420                           
  4421                           ;main.c: 99: R = 9975/(1023/(float)solarOutTemp - 1);
  4422  0651  3000               	movlw	0
  4423  0652  0020               	movlb	0	; select bank0
  4424  0653  00C0               	movwf	___ftadd@f1
  4425  0654  3080               	movlw	128
  4426  0655  00C1               	movwf	___ftadd@f1+1
  4427  0656  30BF               	movlw	191
  4428  0657  00C2               	movwf	___ftadd@f1+2
  4429  0658  0021               	movlb	1	; select bank1
  4430  0659  0830               	movf	(main@solarOutTemp+1)^(0+128),w
  4431  065A  00F9               	movwf	___lwtoft@c+1
  4432  065B  082F               	movf	main@solarOutTemp^(0+128),w
  4433  065C  00F8               	movwf	___lwtoft@c
  4434  065D  3189  21BA  3182   	fcall	___lwtoft
  4435  0660  0878               	movf	?___lwtoft,w
  4436  0661  0020               	movlb	0	; select bank0
  4437  0662  00B0               	movwf	___ftdiv@f2
  4438  0663  0879               	movf	?___lwtoft+1,w
  4439  0664  00B1               	movwf	___ftdiv@f2+1
  4440  0665  087A               	movf	?___lwtoft+2,w
  4441  0666  00B2               	movwf	___ftdiv@f2+2
  4442  0667  30C0               	movlw	192
  4443  0668  00B3               	movwf	___ftdiv@f1
  4444  0669  307F               	movlw	127
  4445  066A  00B4               	movwf	___ftdiv@f1+1
  4446  066B  3044               	movlw	68
  4447  066C  00B5               	movwf	___ftdiv@f1+2
  4448  066D  318E  26AA  3182   	fcall	___ftdiv
  4449  0670  0020               	movlb	0	; select bank0
  4450  0671  0830               	movf	?___ftdiv,w
  4451  0672  00C3               	movwf	___ftadd@f2
  4452  0673  0831               	movf	?___ftdiv+1,w
  4453  0674  00C4               	movwf	___ftadd@f2+1
  4454  0675  0832               	movf	?___ftdiv+2,w
  4455  0676  00C5               	movwf	___ftadd@f2+2
  4456  0677  3181  21A6  3182   	fcall	___ftadd
  4457  067A  0020               	movlb	0	; select bank0
  4458  067B  0840               	movf	?___ftadd,w
  4459  067C  0021               	movlb	1	; select bank1
  4460  067D  00AA               	movwf	_main$789^(0+128)
  4461  067E  0020               	movlb	0	; select bank0
  4462  067F  0841               	movf	?___ftadd+1,w
  4463  0680  0021               	movlb	1	; select bank1
  4464  0681  00AB               	movwf	(_main$789+1)^(0+128)
  4465  0682  0020               	movlb	0	; select bank0
  4466  0683  0842               	movf	?___ftadd+2,w
  4467  0684  0021               	movlb	1	; select bank1
  4468  0685  00AC               	movwf	(_main$789+2)^(0+128)
  4469                           
  4470                           ;main.c: 99: R = 9975/(1023/(float)solarOutTemp - 1);
  4471  0686  082A               	movf	_main$789^(0+128),w
  4472  0687  0020               	movlb	0	; select bank0
  4473  0688  00B0               	movwf	___ftdiv@f2
  4474  0689  0021               	movlb	1	; select bank1
  4475  068A  082B               	movf	(_main$789+1)^(0+128),w
  4476  068B  0020               	movlb	0	; select bank0
  4477  068C  00B1               	movwf	___ftdiv@f2+1
  4478  068D  0021               	movlb	1	; select bank1
  4479  068E  082C               	movf	(_main$789+2)^(0+128),w
  4480  068F  0020               	movlb	0	; select bank0
  4481  0690  00B2               	movwf	___ftdiv@f2+2
  4482  0691  30DC               	movlw	220
  4483  0692  00B3               	movwf	___ftdiv@f1
  4484  0693  301B               	movlw	27
  4485  0694  00B4               	movwf	___ftdiv@f1+1
  4486  0695  3046               	movlw	70
  4487  0696  00B5               	movwf	___ftdiv@f1+2
  4488  0697  318E  26AA  3182   	fcall	___ftdiv
  4489  069A  0020               	movlb	0	; select bank0
  4490  069B  0830               	movf	?___ftdiv,w
  4491  069C  0021               	movlb	1	; select bank1
  4492  069D  00A1               	movwf	main@R^(0+128)
  4493  069E  0020               	movlb	0	; select bank0
  4494  069F  0831               	movf	?___ftdiv+1,w
  4495  06A0  0021               	movlb	1	; select bank1
  4496  06A1  00A2               	movwf	(main@R+1)^(0+128)
  4497  06A2  0020               	movlb	0	; select bank0
  4498  06A3  0832               	movf	?___ftdiv+2,w
  4499  06A4  0021               	movlb	1	; select bank1
  4500  06A5  00A3               	movwf	(main@R+2)^(0+128)
  4501                           
  4502                           ;main.c: 101: steinhart = R /10061;
  4503  06A6  3034               	movlw	52
  4504  06A7  0020               	movlb	0	; select bank0
  4505  06A8  00B0               	movwf	___ftdiv@f2
  4506  06A9  301D               	movlw	29
  4507  06AA  00B1               	movwf	___ftdiv@f2+1
  4508  06AB  3046               	movlw	70
  4509  06AC  00B2               	movwf	___ftdiv@f2+2
  4510  06AD  0021               	movlb	1	; select bank1
  4511  06AE  0821               	movf	main@R^(0+128),w
  4512  06AF  0020               	movlb	0	; select bank0
  4513  06B0  00B3               	movwf	___ftdiv@f1
  4514  06B1  0021               	movlb	1	; select bank1
  4515  06B2  0822               	movf	(main@R+1)^(0+128),w
  4516  06B3  0020               	movlb	0	; select bank0
  4517  06B4  00B4               	movwf	___ftdiv@f1+1
  4518  06B5  0021               	movlb	1	; select bank1
  4519  06B6  0823               	movf	(main@R+2)^(0+128),w
  4520  06B7  0020               	movlb	0	; select bank0
  4521  06B8  00B5               	movwf	___ftdiv@f1+2
  4522  06B9  318E  26AA  3182   	fcall	___ftdiv
  4523  06BC  0020               	movlb	0	; select bank0
  4524  06BD  0830               	movf	?___ftdiv,w
  4525  06BE  0021               	movlb	1	; select bank1
  4526  06BF  00B9               	movwf	main@steinhart^(0+128)
  4527  06C0  0020               	movlb	0	; select bank0
  4528  06C1  0831               	movf	?___ftdiv+1,w
  4529  06C2  0021               	movlb	1	; select bank1
  4530  06C3  00BA               	movwf	(main@steinhart+1)^(0+128)
  4531  06C4  0020               	movlb	0	; select bank0
  4532  06C5  0832               	movf	?___ftdiv+2,w
  4533  06C6  0021               	movlb	1	; select bank1
  4534  06C7  00BB               	movwf	(main@steinhart+2)^(0+128)
  4535                           
  4536                           ;main.c: 102: steinhart = log(steinhart);
  4537  06C8  0839               	movf	main@steinhart^(0+128),w
  4538  06C9  0020               	movlb	0	; select bank0
  4539  06CA  00D7               	movwf	log@x
  4540  06CB  0021               	movlb	1	; select bank1
  4541  06CC  083A               	movf	(main@steinhart+1)^(0+128),w
  4542  06CD  0020               	movlb	0	; select bank0
  4543  06CE  00D8               	movwf	log@x+1
  4544  06CF  0021               	movlb	1	; select bank1
  4545  06D0  083B               	movf	(main@steinhart+2)^(0+128),w
  4546  06D1  0020               	movlb	0	; select bank0
  4547  06D2  00D9               	movwf	log@x+2
  4548  06D3  318F  2753  3182   	fcall	_log
  4549  06D6  0020               	movlb	0	; select bank0
  4550  06D7  0857               	movf	?_log,w
  4551  06D8  0021               	movlb	1	; select bank1
  4552  06D9  00B9               	movwf	main@steinhart^(0+128)
  4553  06DA  0020               	movlb	0	; select bank0
  4554  06DB  0858               	movf	?_log+1,w
  4555  06DC  0021               	movlb	1	; select bank1
  4556  06DD  00BA               	movwf	(main@steinhart+1)^(0+128)
  4557  06DE  0020               	movlb	0	; select bank0
  4558  06DF  0859               	movf	?_log+2,w
  4559  06E0  0021               	movlb	1	; select bank1
  4560  06E1  00BB               	movwf	(main@steinhart+2)^(0+128)
  4561                           
  4562                           ;main.c: 103: steinhart /= 3995;
  4563  06E2  30B0               	movlw	176
  4564  06E3  0020               	movlb	0	; select bank0
  4565  06E4  00B0               	movwf	___ftdiv@f2
  4566  06E5  3079               	movlw	121
  4567  06E6  00B1               	movwf	___ftdiv@f2+1
  4568  06E7  3045               	movlw	69
  4569  06E8  00B2               	movwf	___ftdiv@f2+2
  4570  06E9  0021               	movlb	1	; select bank1
  4571  06EA  0839               	movf	main@steinhart^(0+128),w
  4572  06EB  0020               	movlb	0	; select bank0
  4573  06EC  00B3               	movwf	___ftdiv@f1
  4574  06ED  0021               	movlb	1	; select bank1
  4575  06EE  083A               	movf	(main@steinhart+1)^(0+128),w
  4576  06EF  0020               	movlb	0	; select bank0
  4577  06F0  00B4               	movwf	___ftdiv@f1+1
  4578  06F1  0021               	movlb	1	; select bank1
  4579  06F2  083B               	movf	(main@steinhart+2)^(0+128),w
  4580  06F3  0020               	movlb	0	; select bank0
  4581  06F4  00B5               	movwf	___ftdiv@f1+2
  4582  06F5  318E  26AA  3182   	fcall	___ftdiv
  4583  06F8  0020               	movlb	0	; select bank0
  4584  06F9  0830               	movf	?___ftdiv,w
  4585  06FA  0021               	movlb	1	; select bank1
  4586  06FB  00B9               	movwf	main@steinhart^(0+128)
  4587  06FC  0020               	movlb	0	; select bank0
  4588  06FD  0831               	movf	?___ftdiv+1,w
  4589  06FE  0021               	movlb	1	; select bank1
  4590  06FF  00BA               	movwf	(main@steinhart+1)^(0+128)
  4591  0700  0020               	movlb	0	; select bank0
  4592  0701  0832               	movf	?___ftdiv+2,w
  4593  0702  0021               	movlb	1	; select bank1
  4594  0703  00BB               	movwf	(main@steinhart+2)^(0+128)
  4595                           
  4596                           ;main.c: 104: steinhart += 1.0 / (25 + 273.15);
  4597  0704  30CF               	movlw	207
  4598  0705  0020               	movlb	0	; select bank0
  4599  0706  00C0               	movwf	___ftadd@f1
  4600  0707  305B               	movlw	91
  4601  0708  00C1               	movwf	___ftadd@f1+1
  4602  0709  303B               	movlw	59
  4603  070A  00C2               	movwf	___ftadd@f1+2
  4604  070B  0021               	movlb	1	; select bank1
  4605  070C  0839               	movf	main@steinhart^(0+128),w
  4606  070D  0020               	movlb	0	; select bank0
  4607  070E  00C3               	movwf	___ftadd@f2
  4608  070F  0021               	movlb	1	; select bank1
  4609  0710  083A               	movf	(main@steinhart+1)^(0+128),w
  4610  0711  0020               	movlb	0	; select bank0
  4611  0712  00C4               	movwf	___ftadd@f2+1
  4612  0713  0021               	movlb	1	; select bank1
  4613  0714  083B               	movf	(main@steinhart+2)^(0+128),w
  4614  0715  0020               	movlb	0	; select bank0
  4615  0716  00C5               	movwf	___ftadd@f2+2
  4616  0717  3181  21A6  3182   	fcall	___ftadd
  4617  071A  0020               	movlb	0	; select bank0
  4618  071B  0840               	movf	?___ftadd,w
  4619  071C  0021               	movlb	1	; select bank1
  4620  071D  00B9               	movwf	main@steinhart^(0+128)
  4621  071E  0020               	movlb	0	; select bank0
  4622  071F  0841               	movf	?___ftadd+1,w
  4623  0720  0021               	movlb	1	; select bank1
  4624  0721  00BA               	movwf	(main@steinhart+1)^(0+128)
  4625  0722  0020               	movlb	0	; select bank0
  4626  0723  0842               	movf	?___ftadd+2,w
  4627  0724  0021               	movlb	1	; select bank1
  4628  0725  00BB               	movwf	(main@steinhart+2)^(0+128)
  4629                           
  4630                           ;main.c: 105: steinhart = 1.0 / steinhart;
  4631  0726  0839               	movf	main@steinhart^(0+128),w
  4632  0727  0020               	movlb	0	; select bank0
  4633  0728  00B0               	movwf	___ftdiv@f2
  4634  0729  0021               	movlb	1	; select bank1
  4635  072A  083A               	movf	(main@steinhart+1)^(0+128),w
  4636  072B  0020               	movlb	0	; select bank0
  4637  072C  00B1               	movwf	___ftdiv@f2+1
  4638  072D  0021               	movlb	1	; select bank1
  4639  072E  083B               	movf	(main@steinhart+2)^(0+128),w
  4640  072F  0020               	movlb	0	; select bank0
  4641  0730  00B2               	movwf	___ftdiv@f2+2
  4642  0731  3000               	movlw	0
  4643  0732  00B3               	movwf	___ftdiv@f1
  4644  0733  3080               	movlw	128
  4645  0734  00B4               	movwf	___ftdiv@f1+1
  4646  0735  303F               	movlw	63
  4647  0736  00B5               	movwf	___ftdiv@f1+2
  4648  0737  318E  26AA  3182   	fcall	___ftdiv
  4649  073A  0020               	movlb	0	; select bank0
  4650  073B  0830               	movf	?___ftdiv,w
  4651  073C  0021               	movlb	1	; select bank1
  4652  073D  00B9               	movwf	main@steinhart^(0+128)
  4653  073E  0020               	movlb	0	; select bank0
  4654  073F  0831               	movf	?___ftdiv+1,w
  4655  0740  0021               	movlb	1	; select bank1
  4656  0741  00BA               	movwf	(main@steinhart+1)^(0+128)
  4657  0742  0020               	movlb	0	; select bank0
  4658  0743  0832               	movf	?___ftdiv+2,w
  4659  0744  0021               	movlb	1	; select bank1
  4660  0745  00BB               	movwf	(main@steinhart+2)^(0+128)
  4661                           
  4662                           ;main.c: 106: steinhart -= 273.15;
  4663  0746  3093               	movlw	147
  4664  0747  0020               	movlb	0	; select bank0
  4665  0748  00CD               	movwf	___ftsub@f2
  4666  0749  3088               	movlw	136
  4667  074A  00CE               	movwf	___ftsub@f2+1
  4668  074B  3043               	movlw	67
  4669  074C  00CF               	movwf	___ftsub@f2+2
  4670  074D  0021               	movlb	1	; select bank1
  4671  074E  0839               	movf	main@steinhart^(0+128),w
  4672  074F  0020               	movlb	0	; select bank0
  4673  0750  00D0               	movwf	___ftsub@f1
  4674  0751  0021               	movlb	1	; select bank1
  4675  0752  083A               	movf	(main@steinhart+1)^(0+128),w
  4676  0753  0020               	movlb	0	; select bank0
  4677  0754  00D1               	movwf	___ftsub@f1+1
  4678  0755  0021               	movlb	1	; select bank1
  4679  0756  083B               	movf	(main@steinhart+2)^(0+128),w
  4680  0757  0020               	movlb	0	; select bank0
  4681  0758  00D2               	movwf	___ftsub@f1+2
  4682  0759  318A  224B  3182   	fcall	___ftsub
  4683  075C  0020               	movlb	0	; select bank0
  4684  075D  084D               	movf	?___ftsub,w
  4685  075E  0021               	movlb	1	; select bank1
  4686  075F  00B9               	movwf	main@steinhart^(0+128)
  4687  0760  0020               	movlb	0	; select bank0
  4688  0761  084E               	movf	?___ftsub+1,w
  4689  0762  0021               	movlb	1	; select bank1
  4690  0763  00BA               	movwf	(main@steinhart+1)^(0+128)
  4691  0764  0020               	movlb	0	; select bank0
  4692  0765  084F               	movf	?___ftsub+2,w
  4693  0766  0021               	movlb	1	; select bank1
  4694  0767  00BB               	movwf	(main@steinhart+2)^(0+128)
  4695                           
  4696                           ;main.c: 109: displayTemp2 = steinhart*10;
  4697  0768  3000               	movlw	0
  4698  0769  0020               	movlb	0	; select bank0
  4699  076A  00A0               	movwf	___ftmul@f1
  4700  076B  3020               	movlw	32
  4701  076C  00A1               	movwf	___ftmul@f1+1
  4702  076D  3041               	movlw	65
  4703  076E  00A2               	movwf	___ftmul@f1+2
  4704  076F  0021               	movlb	1	; select bank1
  4705  0770  0839               	movf	main@steinhart^(0+128),w
  4706  0771  0020               	movlb	0	; select bank0
  4707  0772  00A3               	movwf	___ftmul@f2
  4708  0773  0021               	movlb	1	; select bank1
  4709  0774  083A               	movf	(main@steinhart+1)^(0+128),w
  4710  0775  0020               	movlb	0	; select bank0
  4711  0776  00A4               	movwf	___ftmul@f2+1
  4712  0777  0021               	movlb	1	; select bank1
  4713  0778  083B               	movf	(main@steinhart+2)^(0+128),w
  4714  0779  0020               	movlb	0	; select bank0
  4715  077A  00A5               	movwf	___ftmul@f2+2
  4716  077B  3180  2027  3182   	fcall	___ftmul
  4717  077E  0020               	movlb	0	; select bank0
  4718  077F  0820               	movf	?___ftmul,w
  4719  0780  0021               	movlb	1	; select bank1
  4720  0781  00A7               	movwf	main@displayTemp2^(0+128)
  4721  0782  0020               	movlb	0	; select bank0
  4722  0783  0821               	movf	?___ftmul+1,w
  4723  0784  0021               	movlb	1	; select bank1
  4724  0785  00A8               	movwf	(main@displayTemp2+1)^(0+128)
  4725  0786  0020               	movlb	0	; select bank0
  4726  0787  0822               	movf	?___ftmul+2,w
  4727  0788  0021               	movlb	1	; select bank1
  4728  0789  00A9               	movwf	(main@displayTemp2+2)^(0+128)
  4729                           
  4730                           ;main.c: 111: displayTemp2 = displayTemp2*9/5+320;
  4731  078A  3000               	movlw	0
  4732  078B  0020               	movlb	0	; select bank0
  4733  078C  00C0               	movwf	___ftadd@f1
  4734  078D  30A0               	movlw	160
  4735  078E  00C1               	movwf	___ftadd@f1+1
  4736  078F  3043               	movlw	67
  4737  0790  00C2               	movwf	___ftadd@f1+2
  4738  0791  3000               	movlw	0
  4739  0792  00B0               	movwf	___ftdiv@f2
  4740  0793  30A0               	movlw	160
  4741  0794  00B1               	movwf	___ftdiv@f2+1
  4742  0795  3040               	movlw	64
  4743  0796  00B2               	movwf	___ftdiv@f2+2
  4744  0797  3000               	movlw	0
  4745  0798  00A0               	movwf	___ftmul@f1
  4746  0799  3010               	movlw	16
  4747  079A  00A1               	movwf	___ftmul@f1+1
  4748  079B  3041               	movlw	65
  4749  079C  00A2               	movwf	___ftmul@f1+2
  4750  079D  0021               	movlb	1	; select bank1
  4751  079E  0827               	movf	main@displayTemp2^(0+128),w
  4752  079F  0020               	movlb	0	; select bank0
  4753  07A0  00A3               	movwf	___ftmul@f2
  4754  07A1  0021               	movlb	1	; select bank1
  4755  07A2  0828               	movf	(main@displayTemp2+1)^(0+128),w
  4756  07A3  0020               	movlb	0	; select bank0
  4757  07A4  00A4               	movwf	___ftmul@f2+1
  4758  07A5  0021               	movlb	1	; select bank1
  4759  07A6  0829               	movf	(main@displayTemp2+2)^(0+128),w
  4760  07A7  0020               	movlb	0	; select bank0
  4761  07A8  00A5               	movwf	___ftmul@f2+2
  4762  07A9  3180  2027  3182   	fcall	___ftmul
  4763  07AC  0020               	movlb	0	; select bank0
  4764  07AD  0820               	movf	?___ftmul,w
  4765  07AE  00B3               	movwf	___ftdiv@f1
  4766  07AF  0821               	movf	?___ftmul+1,w
  4767  07B0  00B4               	movwf	___ftdiv@f1+1
  4768  07B1  0822               	movf	?___ftmul+2,w
  4769  07B2  00B5               	movwf	___ftdiv@f1+2
  4770  07B3  318E  26AA  3182   	fcall	___ftdiv
  4771  07B6  0020               	movlb	0	; select bank0
  4772  07B7  0830               	movf	?___ftdiv,w
  4773  07B8  00C3               	movwf	___ftadd@f2
  4774  07B9  0831               	movf	?___ftdiv+1,w
  4775  07BA  00C4               	movwf	___ftadd@f2+1
  4776  07BB  0832               	movf	?___ftdiv+2,w
  4777  07BC  00C5               	movwf	___ftadd@f2+2
  4778  07BD  3181  21A6  3182   	fcall	___ftadd
  4779  07C0  0020               	movlb	0	; select bank0
  4780  07C1  0840               	movf	?___ftadd,w
  4781  07C2  0021               	movlb	1	; select bank1
  4782  07C3  00A7               	movwf	main@displayTemp2^(0+128)
  4783  07C4  0020               	movlb	0	; select bank0
  4784  07C5  0841               	movf	?___ftadd+1,w
  4785  07C6  0021               	movlb	1	; select bank1
  4786  07C7  00A8               	movwf	(main@displayTemp2+1)^(0+128)
  4787  07C8  0020               	movlb	0	; select bank0
  4788  07C9  0842               	movf	?___ftadd+2,w
  4789  07CA  0021               	movlb	1	; select bank1
  4790  07CB  00A9               	movwf	(main@displayTemp2+2)^(0+128)
  4791                           
  4792                           ;main.c: 114: count+=1;
  4793  07CC  3001               	movlw	1
  4794  07CD  0020               	movlb	0	; select bank0
  4795  07CE  00DD               	movwf	??_main
  4796  07CF  085D               	movf	??_main,w
  4797  07D0  0021               	movlb	1	; select bank1
  4798  07D1  07A0               	addwf	main@count^(0+128),f
  4799  07D2  2AC1               	goto	l2348
  4800  07D3                     __end_of_main:	
  4801                           
  4802                           	psect	text1
  4803  0F53                     __ptext1:	
  4804 ;; *************** function _log *****************
  4805 ;; Defined at:
  4806 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  x               3   55[BANK0 ] void 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  exponent        2   59[BANK0 ] int 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  3   55[BANK0 ] int 
  4813 ;; Registers used:
  4814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4820 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4822 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;Total ram usage:        6 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    3
  4827 ;; This function calls:
  4828 ;;		___awtoft
  4829 ;;		___ftadd
  4830 ;;		___ftge
  4831 ;;		___ftmul
  4832 ;;		_eval_poly
  4833 ;;		_frexp
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _log
  4841  0F53                     _log:	
  4842                           
  4843                           ;incstack = 0
  4844                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4845  0F53  0020               	movlb	0	; select bank0
  4846  0F54  0857               	movf	log@x,w
  4847  0F55  00F0               	movwf	___ftge@ff1
  4848  0F56  0858               	movf	log@x+1,w
  4849  0F57  00F1               	movwf	___ftge@ff1+1
  4850  0F58  0859               	movf	log@x+2,w
  4851  0F59  00F2               	movwf	___ftge@ff1+2
  4852  0F5A  3000               	movlw	0
  4853  0F5B  00F3               	movwf	___ftge@ff2
  4854  0F5C  3000               	movlw	0
  4855  0F5D  00F4               	movwf	___ftge@ff2+1
  4856  0F5E  3000               	movlw	0
  4857  0F5F  00F5               	movwf	___ftge@ff2+2
  4858  0F60  318B  2318  318F   	fcall	___ftge
  4859  0F63  1803               	btfsc	3,0
  4860  0F64  2F71               	goto	l2188
  4861  0F65  3021               	movlw	33
  4862  0F66  0020               	movlb	0	; select bank0
  4863  0F67  00EC               	movwf	_errno
  4864  0F68  3000               	movlw	0
  4865  0F69  00ED               	movwf	_errno+1
  4866  0F6A  3000               	movlw	0
  4867  0F6B  00D7               	movwf	?_log
  4868  0F6C  3000               	movlw	0
  4869  0F6D  00D8               	movwf	?_log+1
  4870  0F6E  3000               	movlw	0
  4871  0F6F  00D9               	movwf	?_log+2
  4872  0F70  0008               	return
  4873  0F71                     l2188:	
  4874  0F71  0020               	movlb	0	; select bank0
  4875  0F72  0859               	movf	log@x+2,w
  4876  0F73  0458               	iorwf	log@x+1,w
  4877  0F74  0457               	iorwf	log@x,w
  4878  0F75  1D03               	skipz
  4879  0F76  2F82               	goto	l2194
  4880  0F77  3022               	movlw	34
  4881  0F78  00EC               	movwf	_errno
  4882  0F79  3000               	movlw	0
  4883  0F7A  00ED               	movwf	_errno+1
  4884  0F7B  3000               	movlw	0
  4885  0F7C  00D7               	movwf	?_log
  4886  0F7D  3000               	movlw	0
  4887  0F7E  00D8               	movwf	?_log+1
  4888  0F7F  3000               	movlw	0
  4889  0F80  00D9               	movwf	?_log+2
  4890  0F81  0008               	return
  4891  0F82                     l2194:	
  4892  0F82  3000               	movlw	0
  4893  0F83  00C0               	movwf	___ftadd@f1
  4894  0F84  3080               	movlw	128
  4895  0F85  00C1               	movwf	___ftadd@f1+1
  4896  0F86  30BF               	movlw	191
  4897  0F87  00C2               	movwf	___ftadd@f1+2
  4898  0F88  3000               	movlw	0
  4899  0F89  00A0               	movwf	___ftmul@f1
  4900  0F8A  3000               	movlw	0
  4901  0F8B  00A1               	movwf	___ftmul@f1+1
  4902  0F8C  3040               	movlw	64
  4903  0F8D  00A2               	movwf	___ftmul@f1+2
  4904  0F8E  305B               	movlw	(low (log@exponent| 0))& (0+255)
  4905  0F8F  00DA               	movwf	??_log
  4906  0F90  085A               	movf	??_log,w
  4907  0F91  00F3               	movwf	frexp@eptr
  4908  0F92  0857               	movf	log@x,w
  4909  0F93  00F0               	movwf	frexp@value
  4910  0F94  0858               	movf	log@x+1,w
  4911  0F95  00F1               	movwf	frexp@value+1
  4912  0F96  0859               	movf	log@x+2,w
  4913  0F97  00F2               	movwf	frexp@value+2
  4914  0F98  318B  2353  318F   	fcall	_frexp
  4915  0F9B  0870               	movf	?_frexp,w
  4916  0F9C  0020               	movlb	0	; select bank0
  4917  0F9D  00A3               	movwf	___ftmul@f2
  4918  0F9E  0871               	movf	?_frexp+1,w
  4919  0F9F  00A4               	movwf	___ftmul@f2+1
  4920  0FA0  0872               	movf	?_frexp+2,w
  4921  0FA1  00A5               	movwf	___ftmul@f2+2
  4922  0FA2  3180  2027  318F   	fcall	___ftmul
  4923  0FA5  0020               	movlb	0	; select bank0
  4924  0FA6  0820               	movf	?___ftmul,w
  4925  0FA7  00C3               	movwf	___ftadd@f2
  4926  0FA8  0821               	movf	?___ftmul+1,w
  4927  0FA9  00C4               	movwf	___ftadd@f2+1
  4928  0FAA  0822               	movf	?___ftmul+2,w
  4929  0FAB  00C5               	movwf	___ftadd@f2+2
  4930  0FAC  3181  21A6  318F   	fcall	___ftadd
  4931  0FAF  0020               	movlb	0	; select bank0
  4932  0FB0  0840               	movf	?___ftadd,w
  4933  0FB1  00D7               	movwf	log@x
  4934  0FB2  0841               	movf	?___ftadd+1,w
  4935  0FB3  00D8               	movwf	log@x+1
  4936  0FB4  0842               	movf	?___ftadd+2,w
  4937  0FB5  00D9               	movwf	log@x+2
  4938  0FB6  30FF               	movlw	255
  4939  0FB7  07DB               	addwf	log@exponent,f
  4940  0FB8  30FF               	movlw	255
  4941  0FB9  3DDC               	addwfc	log@exponent+1,f
  4942  0FBA  0857               	movf	log@x,w
  4943  0FBB  00CD               	movwf	eval_poly@x
  4944  0FBC  0858               	movf	log@x+1,w
  4945  0FBD  00CE               	movwf	eval_poly@x+1
  4946  0FBE  0859               	movf	log@x+2,w
  4947  0FBF  00CF               	movwf	eval_poly@x+2
  4948  0FC0  3000               	movlw	low (log@coeff| (0+32768))
  4949  0FC1  00D0               	movwf	eval_poly@d
  4950  0FC2  3090               	movlw	high (log@coeff| (0+32768))
  4951  0FC3  00D1               	movwf	eval_poly@d+1
  4952  0FC4  3008               	movlw	8
  4953  0FC5  00D2               	movwf	eval_poly@n
  4954  0FC6  3000               	movlw	0
  4955  0FC7  00D3               	movwf	eval_poly@n+1
  4956  0FC8  318C  2463  318F   	fcall	_eval_poly
  4957  0FCB  0020               	movlb	0	; select bank0
  4958  0FCC  084D               	movf	?_eval_poly,w
  4959  0FCD  00D7               	movwf	log@x
  4960  0FCE  084E               	movf	?_eval_poly+1,w
  4961  0FCF  00D8               	movwf	log@x+1
  4962  0FD0  084F               	movf	?_eval_poly+2,w
  4963  0FD1  00D9               	movwf	log@x+2
  4964  0FD2  0857               	movf	log@x,w
  4965  0FD3  00C0               	movwf	___ftadd@f1
  4966  0FD4  0858               	movf	log@x+1,w
  4967  0FD5  00C1               	movwf	___ftadd@f1+1
  4968  0FD6  0859               	movf	log@x+2,w
  4969  0FD7  00C2               	movwf	___ftadd@f1+2
  4970  0FD8  3072               	movlw	114
  4971  0FD9  00A0               	movwf	___ftmul@f1
  4972  0FDA  3031               	movlw	49
  4973  0FDB  00A1               	movwf	___ftmul@f1+1
  4974  0FDC  303F               	movlw	63
  4975  0FDD  00A2               	movwf	___ftmul@f1+2
  4976  0FDE  085C               	movf	log@exponent+1,w
  4977  0FDF  00F9               	movwf	___awtoft@c+1
  4978  0FE0  085B               	movf	log@exponent,w
  4979  0FE1  00F8               	movwf	___awtoft@c
  4980  0FE2  3180  2007  318F   	fcall	___awtoft
  4981  0FE5  0878               	movf	?___awtoft,w
  4982  0FE6  0020               	movlb	0	; select bank0
  4983  0FE7  00A3               	movwf	___ftmul@f2
  4984  0FE8  0879               	movf	?___awtoft+1,w
  4985  0FE9  00A4               	movwf	___ftmul@f2+1
  4986  0FEA  087A               	movf	?___awtoft+2,w
  4987  0FEB  00A5               	movwf	___ftmul@f2+2
  4988  0FEC  3180  2027  318F   	fcall	___ftmul
  4989  0FEF  0020               	movlb	0	; select bank0
  4990  0FF0  0820               	movf	?___ftmul,w
  4991  0FF1  00C3               	movwf	___ftadd@f2
  4992  0FF2  0821               	movf	?___ftmul+1,w
  4993  0FF3  00C4               	movwf	___ftadd@f2+1
  4994  0FF4  0822               	movf	?___ftmul+2,w
  4995  0FF5  00C5               	movwf	___ftadd@f2+2
  4996  0FF6  3181  21A6         	fcall	___ftadd
  4997  0FF8  0020               	movlb	0	; select bank0
  4998  0FF9  0840               	movf	?___ftadd,w
  4999  0FFA  00D7               	movwf	?_log
  5000  0FFB  0841               	movf	?___ftadd+1,w
  5001  0FFC  00D8               	movwf	?_log+1
  5002  0FFD  0842               	movf	?___ftadd+2,w
  5003  0FFE  00D9               	movwf	?_log+2
  5004  0FFF  0008               	return
  5005  1000                     __end_of_log:	
  5006                           
  5007                           	psect	text2
  5008  0B53                     __ptext2:	
  5009 ;; *************** function _frexp *****************
  5010 ;; Defined at:
  5011 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  value           3    0[COMMON] int 
  5014 ;;  eptr            1    3[COMMON] PTR int 
  5015 ;;		 -> log@exponent(2), 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  3    0[COMMON] PTR int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;Total ram usage:        6 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_log
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _frexp
  5042  0B53                     _frexp:	
  5043                           
  5044                           ;incstack = 0
  5045                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5046  0B53  0872               	movf	frexp@value+2,w
  5047  0B54  0471               	iorwf	frexp@value+1,w
  5048  0B55  0470               	iorwf	frexp@value,w
  5049  0B56  1D03               	skipz
  5050  0B57  2B65               	goto	l2052
  5051  0B58  0873               	movf	frexp@eptr,w
  5052  0B59  0086               	movwf	6
  5053  0B5A  0187               	clrf	7
  5054  0B5B  3000               	movlw	0
  5055  0B5C  3FC0               	movwi [0]fsr1
  5056  0B5D  3FC1               	movwi [1]fsr1
  5057  0B5E  3000               	movlw	0
  5058  0B5F  00F0               	movwf	?_frexp
  5059  0B60  3000               	movlw	0
  5060  0B61  00F1               	movwf	?_frexp+1
  5061  0B62  3000               	movlw	0
  5062  0B63  00F2               	movwf	?_frexp+2
  5063  0B64  0008               	return
  5064  0B65                     l2052:	
  5065  0B65  0872               	movf	frexp@value+2,w
  5066  0B66  397F               	andlw	127
  5067  0B67  00F4               	movwf	??_frexp
  5068  0B68  01F5               	clrf	??_frexp+1
  5069  0B69  35F4               	lslf	??_frexp,f
  5070  0B6A  0DF5               	rlf	??_frexp+1,f
  5071  0B6B  0873               	movf	frexp@eptr,w
  5072  0B6C  0086               	movwf	6
  5073  0B6D  0187               	clrf	7
  5074  0B6E  0874               	movf	??_frexp,w
  5075  0B6F  3FC0               	movwi [0]fsr1
  5076  0B70  0875               	movf	??_frexp+1,w
  5077  0B71  3FC1               	movwi [1]fsr1
  5078  0B72  0D71               	rlf	frexp@value+1,w
  5079  0B73  0D71               	rlf	frexp@value+1,w
  5080  0B74  3901               	andlw	1
  5081  0B75  00F4               	movwf	??_frexp
  5082  0B76  01F5               	clrf	??_frexp+1
  5083  0B77  0873               	movf	frexp@eptr,w
  5084  0B78  0086               	movwf	6
  5085  0B79  0187               	clrf	7
  5086  0B7A  0874               	movf	??_frexp,w
  5087  0B7B  0481               	iorwf	1,f
  5088  0B7C  3141               	addfsr 1,1
  5089  0B7D  0875               	movf	??_frexp+1,w
  5090  0B7E  0481               	iorwf	1,f
  5091  0B7F  0873               	movf	frexp@eptr,w
  5092  0B80  0086               	movwf	6
  5093  0B81  0187               	clrf	7
  5094  0B82  3082               	movlw	130
  5095  0B83  0781               	addwf	1,f
  5096  0B84  3141               	addfsr 1,1
  5097  0B85  30FF               	movlw	255
  5098  0B86  3D81               	addwfc	1,f
  5099  0B87  317F               	addfsr 1,-1
  5100  0B88  0872               	movf	frexp@value+2,w
  5101  0B89  3980               	andlw	-128
  5102  0B8A  383F               	iorlw	63
  5103  0B8B  00F2               	movwf	frexp@value+2
  5104  0B8C  13F1               	bcf	frexp@value+1,7
  5105  0B8D  0008               	return
  5106  0B8E                     __end_of_frexp:	
  5107                           
  5108                           	psect	text3
  5109  0C63                     __ptext3:	
  5110 ;; *************** function _eval_poly *****************
  5111 ;; Defined at:
  5112 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  x               3   45[BANK0 ] PTR int 
  5115 ;;  d               2   48[BANK0 ] PTR const 
  5116 ;;		 -> log@coeff(27), 
  5117 ;;  n               2   50[BANK0 ] int 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  res             3   52[BANK0 ] int 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  3   45[BANK0 ] int 
  5122 ;; Registers used:
  5123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5129 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;Total ram usage:       10 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    2
  5136 ;; This function calls:
  5137 ;;		___ftadd
  5138 ;;		___ftmul
  5139 ;;		___wmul
  5140 ;; This function is called by:
  5141 ;;		_log
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           
  5146                           ;psect for function _eval_poly
  5147  0C63                     _eval_poly:	
  5148                           
  5149                           ;incstack = 0
  5150                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5151  0C63  0020               	movlb	0	; select bank0
  5152  0C64  0853               	movf	eval_poly@n+1,w
  5153  0C65  00F1               	movwf	___wmul@multiplier+1
  5154  0C66  0852               	movf	eval_poly@n,w
  5155  0C67  00F0               	movwf	___wmul@multiplier
  5156  0C68  3003               	movlw	3
  5157  0C69  00F2               	movwf	___wmul@multiplicand
  5158  0C6A  3000               	movlw	0
  5159  0C6B  00F3               	movwf	___wmul@multiplicand+1
  5160  0C6C  318A  2230  318C   	fcall	___wmul
  5161  0C6F  0020               	movlb	0	; select bank0
  5162  0C70  0850               	movf	eval_poly@d,w
  5163  0C71  0770               	addwf	?___wmul,w
  5164  0C72  0084               	movwf	4
  5165  0C73  0851               	movf	eval_poly@d+1,w
  5166  0C74  3D71               	addwfc	?___wmul+1,w
  5167  0C75  0085               	movwf	5
  5168  0C76  3F00               	moviw [0]fsr0
  5169  0C77  00D4               	movwf	eval_poly@res
  5170  0C78  3F01               	moviw [1]fsr0
  5171  0C79  00D5               	movwf	eval_poly@res+1
  5172  0C7A  3F02               	moviw [2]fsr0
  5173  0C7B                     L1:	
  5174  0C7B  00D6               	movwf	eval_poly@res+2
  5175  0C7C  0852               	movf	eval_poly@n,w
  5176  0C7D  0453               	iorwf	eval_poly@n+1,w
  5177  0C7E  1903               	btfsc	3,2
  5178  0C7F  2CBC               	goto	l2070
  5179  0C80  30FF               	movlw	255
  5180  0C81  07D2               	addwf	eval_poly@n,f
  5181  0C82  30FF               	movlw	255
  5182  0C83  3DD3               	addwfc	eval_poly@n+1,f
  5183  0C84  0853               	movf	eval_poly@n+1,w
  5184  0C85  00F1               	movwf	___wmul@multiplier+1
  5185  0C86  0852               	movf	eval_poly@n,w
  5186  0C87  00F0               	movwf	___wmul@multiplier
  5187  0C88  3003               	movlw	3
  5188  0C89  00F2               	movwf	___wmul@multiplicand
  5189  0C8A  3000               	movlw	0
  5190  0C8B  00F3               	movwf	___wmul@multiplicand+1
  5191  0C8C  318A  2230  318C   	fcall	___wmul
  5192  0C8F  0020               	movlb	0	; select bank0
  5193  0C90  0850               	movf	eval_poly@d,w
  5194  0C91  0770               	addwf	?___wmul,w
  5195  0C92  0084               	movwf	4
  5196  0C93  0851               	movf	eval_poly@d+1,w
  5197  0C94  3D71               	addwfc	?___wmul+1,w
  5198  0C95  0085               	movwf	5
  5199  0C96  3F00               	moviw [0]fsr0
  5200  0C97  00C0               	movwf	___ftadd@f1
  5201  0C98  3F01               	moviw [1]fsr0
  5202  0C99  00C1               	movwf	___ftadd@f1+1
  5203  0C9A  3F02               	moviw [2]fsr0
  5204  0C9B  00C2               	movwf	___ftadd@f1+2
  5205  0C9C  0854               	movf	eval_poly@res,w
  5206  0C9D  00A0               	movwf	___ftmul@f1
  5207  0C9E  0855               	movf	eval_poly@res+1,w
  5208  0C9F  00A1               	movwf	___ftmul@f1+1
  5209  0CA0  0856               	movf	eval_poly@res+2,w
  5210  0CA1  00A2               	movwf	___ftmul@f1+2
  5211  0CA2  084D               	movf	eval_poly@x,w
  5212  0CA3  00A3               	movwf	___ftmul@f2
  5213  0CA4  084E               	movf	eval_poly@x+1,w
  5214  0CA5  00A4               	movwf	___ftmul@f2+1
  5215  0CA6  084F               	movf	eval_poly@x+2,w
  5216  0CA7  00A5               	movwf	___ftmul@f2+2
  5217  0CA8  3180  2027  318C   	fcall	___ftmul
  5218  0CAB  0020               	movlb	0	; select bank0
  5219  0CAC  0820               	movf	?___ftmul,w
  5220  0CAD  00C3               	movwf	___ftadd@f2
  5221  0CAE  0821               	movf	?___ftmul+1,w
  5222  0CAF  00C4               	movwf	___ftadd@f2+1
  5223  0CB0  0822               	movf	?___ftmul+2,w
  5224  0CB1  00C5               	movwf	___ftadd@f2+2
  5225  0CB2  3181  21A6  318C   	fcall	___ftadd
  5226  0CB5  0020               	movlb	0	; select bank0
  5227  0CB6  0840               	movf	?___ftadd,w
  5228  0CB7  00D4               	movwf	eval_poly@res
  5229  0CB8  0841               	movf	?___ftadd+1,w
  5230  0CB9  00D5               	movwf	eval_poly@res+1
  5231  0CBA  0842               	movf	?___ftadd+2,w
  5232  0CBB  2C7B               	goto	L1
  5233  0CBC                     l2070:	
  5234  0CBC  0854               	movf	eval_poly@res,w
  5235  0CBD  00CD               	movwf	?_eval_poly
  5236  0CBE  0855               	movf	eval_poly@res+1,w
  5237  0CBF  00CE               	movwf	?_eval_poly+1
  5238  0CC0  0856               	movf	eval_poly@res+2,w
  5239  0CC1  00CF               	movwf	?_eval_poly+2
  5240  0CC2  0008               	return
  5241  0CC3                     __end_of_eval_poly:	
  5242                           
  5243                           	psect	text4
  5244  0A30                     __ptext4:	
  5245 ;; *************** function ___wmul *****************
  5246 ;; Defined at:
  5247 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  multiplier      2    0[COMMON] unsigned int 
  5250 ;;  multiplicand    2    2[COMMON] unsigned int 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  product         2    4[COMMON] unsigned int 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  2    0[COMMON] unsigned int 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;Total ram usage:        6 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_eval_poly
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function ___wmul
  5277  0A30                     ___wmul:	
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5281  0A30  01F4               	clrf	___wmul@product
  5282  0A31  01F5               	clrf	___wmul@product+1
  5283  0A32                     l1684:	
  5284  0A32  1C70               	btfss	___wmul@multiplier,0
  5285  0A33  2A38               	goto	l320
  5286  0A34  0872               	movf	___wmul@multiplicand,w
  5287  0A35  07F4               	addwf	___wmul@product,f
  5288  0A36  0873               	movf	___wmul@multiplicand+1,w
  5289  0A37  3DF5               	addwfc	___wmul@product+1,f
  5290  0A38                     l320:	
  5291  0A38  3001               	movlw	1
  5292  0A39                     u1545:	
  5293  0A39  35F2               	lslf	___wmul@multiplicand,f
  5294  0A3A  0DF3               	rlf	___wmul@multiplicand+1,f
  5295  0A3B  0B89               	decfsz	9,f
  5296  0A3C  2A39               	goto	u1545
  5297  0A3D  3001               	movlw	1
  5298  0A3E                     u1555:	
  5299  0A3E  36F1               	lsrf	___wmul@multiplier+1,f
  5300  0A3F  0CF0               	rrf	___wmul@multiplier,f
  5301  0A40  0B89               	decfsz	9,f
  5302  0A41  2A3E               	goto	u1555
  5303  0A42  0870               	movf	___wmul@multiplier,w
  5304  0A43  0471               	iorwf	___wmul@multiplier+1,w
  5305  0A44  1D03               	btfss	3,2
  5306  0A45  2A32               	goto	l1684
  5307  0A46  0875               	movf	___wmul@product+1,w
  5308  0A47  00F1               	movwf	?___wmul+1
  5309  0A48  0874               	movf	___wmul@product,w
  5310  0A49  00F0               	movwf	?___wmul
  5311  0A4A  0008               	return
  5312  0A4B                     __end_of___wmul:	
  5313                           
  5314                           	psect	text5
  5315  0027                     __ptext5:	
  5316 ;; *************** function ___ftmul *****************
  5317 ;; Defined at:
  5318 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  f1              3    0[BANK0 ] float 
  5321 ;;  f2              3    3[BANK0 ] float 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  5324 ;;  sign            1   15[BANK0 ] unsigned char 
  5325 ;;  cntr            1   14[BANK0 ] unsigned char 
  5326 ;;  exp             1   10[BANK0 ] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  3    0[BANK0 ] float 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0, pclath, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5336 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;Total ram usage:       16 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    1
  5343 ;; This function calls:
  5344 ;;		___ftpack
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;;		_log
  5348 ;;		_eval_poly
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function ___ftmul
  5354  0027                     ___ftmul:	
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5358  0027  0020               	movlb	0	; select bank0
  5359  0028  0820               	movf	___ftmul@f1,w
  5360  0029  00A6               	movwf	??___ftmul
  5361  002A  0821               	movf	___ftmul@f1+1,w
  5362  002B  00A7               	movwf	??___ftmul+1
  5363  002C  0822               	movf	___ftmul@f1+2,w
  5364  002D  00A8               	movwf	??___ftmul+2
  5365  002E  1003               	clrc
  5366  002F  0D27               	rlf	??___ftmul+1,w
  5367  0030  0D28               	rlf	??___ftmul+2,w
  5368  0031  00A9               	movwf	??___ftmul+3
  5369  0032  0829               	movf	??___ftmul+3,w
  5370  0033  00AA               	movwf	___ftmul@exp
  5371  0034  082A               	movf	___ftmul@exp,w
  5372  0035  1D03               	btfss	3,2
  5373  0036  283E               	goto	l1772
  5374  0037  3000               	movlw	0
  5375  0038  00A0               	movwf	?___ftmul
  5376  0039  3000               	movlw	0
  5377  003A  00A1               	movwf	?___ftmul+1
  5378  003B  3000               	movlw	0
  5379  003C  00A2               	movwf	?___ftmul+2
  5380  003D  0008               	return
  5381  003E                     l1772:	
  5382  003E  0823               	movf	___ftmul@f2,w
  5383  003F  00A6               	movwf	??___ftmul
  5384  0040  0824               	movf	___ftmul@f2+1,w
  5385  0041  00A7               	movwf	??___ftmul+1
  5386  0042  0825               	movf	___ftmul@f2+2,w
  5387  0043  00A8               	movwf	??___ftmul+2
  5388  0044  1003               	clrc
  5389  0045  0D27               	rlf	??___ftmul+1,w
  5390  0046  0D28               	rlf	??___ftmul+2,w
  5391  0047  00A9               	movwf	??___ftmul+3
  5392  0048  0829               	movf	??___ftmul+3,w
  5393  0049  00AF               	movwf	___ftmul@sign
  5394  004A  082F               	movf	___ftmul@sign,w
  5395  004B  1D03               	btfss	3,2
  5396  004C  2854               	goto	l1778
  5397  004D  3000               	movlw	0
  5398  004E  00A0               	movwf	?___ftmul
  5399  004F  3000               	movlw	0
  5400  0050  00A1               	movwf	?___ftmul+1
  5401  0051  3000               	movlw	0
  5402  0052  00A2               	movwf	?___ftmul+2
  5403  0053  0008               	return
  5404  0054                     l1778:	
  5405  0054  082F               	movf	___ftmul@sign,w
  5406  0055  3E7B               	addlw	123
  5407  0056  00A6               	movwf	??___ftmul
  5408  0057  0826               	movf	??___ftmul,w
  5409  0058  07AA               	addwf	___ftmul@exp,f
  5410  0059  0820               	movf	___ftmul@f1,w
  5411  005A  00A6               	movwf	??___ftmul
  5412  005B  0821               	movf	___ftmul@f1+1,w
  5413  005C  00A7               	movwf	??___ftmul+1
  5414  005D  0822               	movf	___ftmul@f1+2,w
  5415  005E  00A8               	movwf	??___ftmul+2
  5416  005F  3010               	movlw	16
  5417  0060                     u1825:	
  5418  0060  36A8               	lsrf	??___ftmul+2,f
  5419  0061  0CA7               	rrf	??___ftmul+1,f
  5420  0062  0CA6               	rrf	??___ftmul,f
  5421  0063  0B89               	decfsz	9,f
  5422  0064  2860               	goto	u1825
  5423  0065  0826               	movf	??___ftmul,w
  5424  0066  00A9               	movwf	??___ftmul+3
  5425  0067  0829               	movf	??___ftmul+3,w
  5426  0068  00AF               	movwf	___ftmul@sign
  5427  0069  0823               	movf	___ftmul@f2,w
  5428  006A  00A6               	movwf	??___ftmul
  5429  006B  0824               	movf	___ftmul@f2+1,w
  5430  006C  00A7               	movwf	??___ftmul+1
  5431  006D  0825               	movf	___ftmul@f2+2,w
  5432  006E  00A8               	movwf	??___ftmul+2
  5433  006F  3010               	movlw	16
  5434  0070                     u1835:	
  5435  0070  36A8               	lsrf	??___ftmul+2,f
  5436  0071  0CA7               	rrf	??___ftmul+1,f
  5437  0072  0CA6               	rrf	??___ftmul,f
  5438  0073  0B89               	decfsz	9,f
  5439  0074  2870               	goto	u1835
  5440  0075  0826               	movf	??___ftmul,w
  5441  0076  00A9               	movwf	??___ftmul+3
  5442  0077  0829               	movf	??___ftmul+3,w
  5443  0078  06AF               	xorwf	___ftmul@sign,f
  5444  0079  3080               	movlw	128
  5445  007A  00A6               	movwf	??___ftmul
  5446  007B  0826               	movf	??___ftmul,w
  5447  007C  05AF               	andwf	___ftmul@sign,f
  5448  007D  17A1               	bsf	___ftmul@f1+1,7
  5449  007E  17A4               	bsf	___ftmul@f2+1,7
  5450  007F  30FF               	movlw	255
  5451  0080  05A3               	andwf	___ftmul@f2,f
  5452  0081  30FF               	movlw	255
  5453  0082  05A4               	andwf	___ftmul@f2+1,f
  5454  0083  3000               	movlw	0
  5455  0084  05A5               	andwf	___ftmul@f2+2,f
  5456  0085  3000               	movlw	0
  5457  0086  00AB               	movwf	___ftmul@f3_as_product
  5458  0087  3000               	movlw	0
  5459  0088  00AC               	movwf	___ftmul@f3_as_product+1
  5460  0089  3000               	movlw	0
  5461  008A  00AD               	movwf	___ftmul@f3_as_product+2
  5462  008B  3007               	movlw	7
  5463  008C  00A6               	movwf	??___ftmul
  5464  008D  0826               	movf	??___ftmul,w
  5465  008E  00AE               	movwf	___ftmul@cntr
  5466  008F                     l1790:	
  5467  008F  1C20               	btfss	___ftmul@f1,0
  5468  0090  2897               	goto	l1794
  5469  0091  0823               	movf	___ftmul@f2,w
  5470  0092  07AB               	addwf	___ftmul@f3_as_product,f
  5471  0093  0824               	movf	___ftmul@f2+1,w
  5472  0094  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5473  0095  0825               	movf	___ftmul@f2+2,w
  5474  0096  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5475  0097                     l1794:	
  5476  0097  3001               	movlw	1
  5477  0098                     u1855:	
  5478  0098  36A2               	lsrf	___ftmul@f1+2,f
  5479  0099  0CA1               	rrf	___ftmul@f1+1,f
  5480  009A  0CA0               	rrf	___ftmul@f1,f
  5481  009B  0B89               	decfsz	9,f
  5482  009C  2898               	goto	u1855
  5483  009D  3001               	movlw	1
  5484  009E                     u1865:	
  5485  009E  35A3               	lslf	___ftmul@f2,f
  5486  009F  0DA4               	rlf	___ftmul@f2+1,f
  5487  00A0  0DA5               	rlf	___ftmul@f2+2,f
  5488  00A1  0B89               	decfsz	9,f
  5489  00A2  289E               	goto	u1865
  5490  00A3  3001               	movlw	1
  5491  00A4  02AE               	subwf	___ftmul@cntr,f
  5492  00A5  1D03               	btfss	3,2
  5493  00A6  288F               	goto	l1790
  5494  00A7  3009               	movlw	9
  5495  00A8  00A6               	movwf	??___ftmul
  5496  00A9  0826               	movf	??___ftmul,w
  5497  00AA  00AE               	movwf	___ftmul@cntr
  5498  00AB                     l1802:	
  5499  00AB  1C20               	btfss	___ftmul@f1,0
  5500  00AC  28B3               	goto	l1806
  5501  00AD  0823               	movf	___ftmul@f2,w
  5502  00AE  07AB               	addwf	___ftmul@f3_as_product,f
  5503  00AF  0824               	movf	___ftmul@f2+1,w
  5504  00B0  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5505  00B1  0825               	movf	___ftmul@f2+2,w
  5506  00B2  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5507  00B3                     l1806:	
  5508  00B3  3001               	movlw	1
  5509  00B4                     u1895:	
  5510  00B4  36A2               	lsrf	___ftmul@f1+2,f
  5511  00B5  0CA1               	rrf	___ftmul@f1+1,f
  5512  00B6  0CA0               	rrf	___ftmul@f1,f
  5513  00B7  0B89               	decfsz	9,f
  5514  00B8  28B4               	goto	u1895
  5515  00B9  3001               	movlw	1
  5516  00BA                     u1905:	
  5517  00BA  36AD               	lsrf	___ftmul@f3_as_product+2,f
  5518  00BB  0CAC               	rrf	___ftmul@f3_as_product+1,f
  5519  00BC  0CAB               	rrf	___ftmul@f3_as_product,f
  5520  00BD  0B89               	decfsz	9,f
  5521  00BE  28BA               	goto	u1905
  5522  00BF  3001               	movlw	1
  5523  00C0  02AE               	subwf	___ftmul@cntr,f
  5524  00C1  1D03               	btfss	3,2
  5525  00C2  28AB               	goto	l1802
  5526  00C3  082B               	movf	___ftmul@f3_as_product,w
  5527  00C4  00F0               	movwf	___ftpack@arg
  5528  00C5  082C               	movf	___ftmul@f3_as_product+1,w
  5529  00C6  00F1               	movwf	___ftpack@arg+1
  5530  00C7  082D               	movf	___ftmul@f3_as_product+2,w
  5531  00C8  00F2               	movwf	___ftpack@arg+2
  5532  00C9  082A               	movf	___ftmul@exp,w
  5533  00CA  00A6               	movwf	??___ftmul
  5534  00CB  0826               	movf	??___ftmul,w
  5535  00CC  00F3               	movwf	___ftpack@exp
  5536  00CD  082F               	movf	___ftmul@sign,w
  5537  00CE  00A7               	movwf	??___ftmul+1
  5538  00CF  0827               	movf	??___ftmul+1,w
  5539  00D0  00F4               	movwf	___ftpack@sign
  5540  00D1  318C  24C3         	fcall	___ftpack
  5541  00D3  0870               	movf	?___ftpack,w
  5542  00D4  0020               	movlb	0	; select bank0
  5543  00D5  00A0               	movwf	?___ftmul
  5544  00D6  0871               	movf	?___ftpack+1,w
  5545  00D7  00A1               	movwf	?___ftmul+1
  5546  00D8  0872               	movf	?___ftpack+2,w
  5547  00D9  00A2               	movwf	?___ftmul+2
  5548  00DA  0008               	return
  5549  00DB                     __end_of___ftmul:	
  5550                           
  5551                           	psect	text6
  5552  0B18                     __ptext6:	
  5553 ;; *************** function ___ftge *****************
  5554 ;; Defined at:
  5555 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  ff1             3    0[COMMON] float 
  5558 ;;  ff2             3    3[COMMON] float 
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;		None               void
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        9 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_log
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function ___ftge
  5585  0B18                     ___ftge:	
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5589  0B18  1FF2               	btfss	___ftge@ff1+2,7
  5590  0B19  2B2E               	goto	l2028
  5591  0B1A  0970               	comf	___ftge@ff1,w
  5592  0B1B  00F6               	movwf	??___ftge
  5593  0B1C  0971               	comf	___ftge@ff1+1,w
  5594  0B1D  00F7               	movwf	??___ftge+1
  5595  0B1E  0972               	comf	___ftge@ff1+2,w
  5596  0B1F  00F8               	movwf	??___ftge+2
  5597  0B20  0AF6               	incf	??___ftge,f
  5598  0B21  1903               	skipnz
  5599  0B22  0AF7               	incf	??___ftge+1,f
  5600  0B23  1903               	skipnz
  5601  0B24  0AF8               	incf	??___ftge+2,f
  5602  0B25  3000               	movlw	0
  5603  0B26  0776               	addwf	??___ftge,w
  5604  0B27  00F0               	movwf	___ftge@ff1
  5605  0B28  3000               	movlw	0
  5606  0B29  3D77               	addwfc	??___ftge+1,w
  5607  0B2A  00F1               	movwf	___ftge@ff1+1
  5608  0B2B  3080               	movlw	128
  5609  0B2C  3D78               	addwfc	??___ftge+2,w
  5610  0B2D  00F2               	movwf	___ftge@ff1+2
  5611  0B2E                     l2028:	
  5612  0B2E  1FF5               	btfss	___ftge@ff2+2,7
  5613  0B2F  2B44               	goto	l2032
  5614  0B30  0973               	comf	___ftge@ff2,w
  5615  0B31  00F6               	movwf	??___ftge
  5616  0B32  0974               	comf	___ftge@ff2+1,w
  5617  0B33  00F7               	movwf	??___ftge+1
  5618  0B34  0975               	comf	___ftge@ff2+2,w
  5619  0B35  00F8               	movwf	??___ftge+2
  5620  0B36  0AF6               	incf	??___ftge,f
  5621  0B37  1903               	skipnz
  5622  0B38  0AF7               	incf	??___ftge+1,f
  5623  0B39  1903               	skipnz
  5624  0B3A  0AF8               	incf	??___ftge+2,f
  5625  0B3B  3000               	movlw	0
  5626  0B3C  0776               	addwf	??___ftge,w
  5627  0B3D  00F3               	movwf	___ftge@ff2
  5628  0B3E  3000               	movlw	0
  5629  0B3F  3D77               	addwfc	??___ftge+1,w
  5630  0B40  00F4               	movwf	___ftge@ff2+1
  5631  0B41  3080               	movlw	128
  5632  0B42  3D78               	addwfc	??___ftge+2,w
  5633  0B43  00F5               	movwf	___ftge@ff2+2
  5634  0B44                     l2032:	
  5635  0B44  3080               	movlw	128
  5636  0B45  06F2               	xorwf	___ftge@ff1+2,f
  5637  0B46  3080               	movlw	128
  5638  0B47  06F5               	xorwf	___ftge@ff2+2,f
  5639  0B48  0875               	movf	___ftge@ff2+2,w
  5640  0B49  0272               	subwf	___ftge@ff1+2,w
  5641  0B4A  1D03               	skipz
  5642  0B4B  0008               	return
  5643  0B4C  0874               	movf	___ftge@ff2+1,w
  5644  0B4D  0271               	subwf	___ftge@ff1+1,w
  5645  0B4E  1D03               	skipz
  5646  0B4F  0008               	return
  5647  0B50  0873               	movf	___ftge@ff2,w
  5648  0B51  0270               	subwf	___ftge@ff1,w
  5649  0B52  0008               	return
  5650  0B53                     __end_of___ftge:	
  5651                           
  5652                           	psect	text7
  5653  0007                     __ptext7:	
  5654 ;; *************** function ___awtoft *****************
  5655 ;; Defined at:
  5656 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  c               2    8[COMMON] int 
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  sign            1   13[COMMON] unsigned char 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  3    8[COMMON] float 
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0, pclath, cstack
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5670 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;Total ram usage:        6 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    1
  5677 ;; This function calls:
  5678 ;;		___ftpack
  5679 ;; This function is called by:
  5680 ;;		_log
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           
  5685                           ;psect for function ___awtoft
  5686  0007                     ___awtoft:	
  5687                           
  5688                           ;incstack = 0
  5689                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5690  0007  01FD               	clrf	___awtoft@sign
  5691  0008  1FF9               	btfss	___awtoft@c+1,7
  5692  0009  2811               	goto	l2020
  5693  000A  09F8               	comf	___awtoft@c,f
  5694  000B  09F9               	comf	___awtoft@c+1,f
  5695  000C  0AF8               	incf	___awtoft@c,f
  5696  000D  1903               	skipnz
  5697  000E  0AF9               	incf	___awtoft@c+1,f
  5698  000F  01FD               	clrf	___awtoft@sign
  5699  0010  0AFD               	incf	___awtoft@sign,f
  5700  0011                     l2020:	
  5701  0011  0878               	movf	___awtoft@c,w
  5702  0012  00F0               	movwf	___ftpack@arg
  5703  0013  0879               	movf	___awtoft@c+1,w
  5704  0014  00F1               	movwf	___ftpack@arg+1
  5705  0015  01F2               	clrf	___ftpack@arg+2
  5706  0016  308E               	movlw	142
  5707  0017  00FB               	movwf	??___awtoft
  5708  0018  087B               	movf	??___awtoft,w
  5709  0019  00F3               	movwf	___ftpack@exp
  5710  001A  087D               	movf	___awtoft@sign,w
  5711  001B  00FC               	movwf	??___awtoft+1
  5712  001C  087C               	movf	??___awtoft+1,w
  5713  001D  00F4               	movwf	___ftpack@sign
  5714  001E  318C  24C3         	fcall	___ftpack
  5715  0020  0870               	movf	?___ftpack,w
  5716  0021  00F8               	movwf	?___awtoft
  5717  0022  0871               	movf	?___ftpack+1,w
  5718  0023  00F9               	movwf	?___awtoft+1
  5719  0024  0872               	movf	?___ftpack+2,w
  5720  0025  00FA               	movwf	?___awtoft+2
  5721  0026  0008               	return
  5722  0027                     __end_of___awtoft:	
  5723                           
  5724                           	psect	text8
  5725  09BA                     __ptext8:	
  5726 ;; *************** function ___lwtoft *****************
  5727 ;; Defined at:
  5728 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  c               2    8[COMMON] unsigned int 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  3    8[COMMON] float 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:        4 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    1
  5749 ;; This function calls:
  5750 ;;		___ftpack
  5751 ;; This function is called by:
  5752 ;;		_main
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           
  5757                           ;psect for function ___lwtoft
  5758  09BA                     ___lwtoft:	
  5759                           
  5760                           ;incstack = 0
  5761                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5762  09BA  0878               	movf	___lwtoft@c,w
  5763  09BB  00F0               	movwf	___ftpack@arg
  5764  09BC  0879               	movf	___lwtoft@c+1,w
  5765  09BD  00F1               	movwf	___ftpack@arg+1
  5766  09BE  01F2               	clrf	___ftpack@arg+2
  5767  09BF  308E               	movlw	142
  5768  09C0  00FB               	movwf	??___lwtoft
  5769  09C1  087B               	movf	??___lwtoft,w
  5770  09C2  00F3               	movwf	___ftpack@exp
  5771  09C3  01F4               	clrf	___ftpack@sign
  5772  09C4  318C  24C3         	fcall	___ftpack
  5773  09C6  0870               	movf	?___ftpack,w
  5774  09C7  00F8               	movwf	?___lwtoft
  5775  09C8  0871               	movf	?___ftpack+1,w
  5776  09C9  00F9               	movwf	?___lwtoft+1
  5777  09CA  0872               	movf	?___ftpack+2,w
  5778  09CB  00FA               	movwf	?___lwtoft+2
  5779  09CC  0008               	return
  5780  09CD                     __end_of___lwtoft:	
  5781                           
  5782                           	psect	text9
  5783  0E24                     __ptext9:	
  5784 ;; *************** function ___fttol *****************
  5785 ;; Defined at:
  5786 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  f1              3    0[COMMON] float 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  lval            4    9[COMMON] unsigned long 
  5791 ;;  exp1            1   13[COMMON] unsigned char 
  5792 ;;  sign1           1    8[COMMON] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  4    0[COMMON] long 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;Total ram usage:       14 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function ___fttol
  5817  0E24                     ___fttol:	
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5821  0E24  0870               	movf	___fttol@f1,w
  5822  0E25  00F4               	movwf	??___fttol
  5823  0E26  0871               	movf	___fttol@f1+1,w
  5824  0E27  00F5               	movwf	??___fttol+1
  5825  0E28  0872               	movf	___fttol@f1+2,w
  5826  0E29  00F6               	movwf	??___fttol+2
  5827  0E2A  1003               	clrc
  5828  0E2B  0D75               	rlf	??___fttol+1,w
  5829  0E2C  0D76               	rlf	??___fttol+2,w
  5830  0E2D  00F7               	movwf	??___fttol+3
  5831  0E2E  0877               	movf	??___fttol+3,w
  5832  0E2F  00FD               	movwf	___fttol@exp1
  5833  0E30  087D               	movf	___fttol@exp1,w
  5834  0E31  1D03               	btfss	3,2
  5835  0E32  2E3C               	goto	l2300
  5836  0E33  3000               	movlw	0
  5837  0E34  00F3               	movwf	?___fttol+3
  5838  0E35  3000               	movlw	0
  5839  0E36  00F2               	movwf	?___fttol+2
  5840  0E37  3000               	movlw	0
  5841  0E38  00F1               	movwf	?___fttol+1
  5842  0E39  3000               	movlw	0
  5843  0E3A  00F0               	movwf	?___fttol
  5844  0E3B  0008               	return
  5845  0E3C                     l2300:	
  5846  0E3C  0870               	movf	___fttol@f1,w
  5847  0E3D  00F4               	movwf	??___fttol
  5848  0E3E  0871               	movf	___fttol@f1+1,w
  5849  0E3F  00F5               	movwf	??___fttol+1
  5850  0E40  0872               	movf	___fttol@f1+2,w
  5851  0E41  00F6               	movwf	??___fttol+2
  5852  0E42  3017               	movlw	23
  5853  0E43                     u2585:	
  5854  0E43  36F6               	lsrf	??___fttol+2,f
  5855  0E44  0CF5               	rrf	??___fttol+1,f
  5856  0E45  0CF4               	rrf	??___fttol,f
  5857  0E46  0B89               	decfsz	9,f
  5858  0E47  2E43               	goto	u2585
  5859  0E48  0874               	movf	??___fttol,w
  5860  0E49  00F7               	movwf	??___fttol+3
  5861  0E4A  0877               	movf	??___fttol+3,w
  5862  0E4B  00F8               	movwf	___fttol@sign1
  5863  0E4C  17F1               	bsf	___fttol@f1+1,7
  5864  0E4D  30FF               	movlw	255
  5865  0E4E  05F0               	andwf	___fttol@f1,f
  5866  0E4F  30FF               	movlw	255
  5867  0E50  05F1               	andwf	___fttol@f1+1,f
  5868  0E51  3000               	movlw	0
  5869  0E52  05F2               	andwf	___fttol@f1+2,f
  5870  0E53  0870               	movf	___fttol@f1,w
  5871  0E54  00F9               	movwf	___fttol@lval
  5872  0E55  0871               	movf	___fttol@f1+1,w
  5873  0E56  00FA               	movwf	___fttol@lval+1
  5874  0E57  0872               	movf	___fttol@f1+2,w
  5875  0E58  00FB               	movwf	___fttol@lval+2
  5876  0E59  01FC               	clrf	___fttol@lval+3
  5877  0E5A  308E               	movlw	142
  5878  0E5B  02FD               	subwf	___fttol@exp1,f
  5879  0E5C  1FFD               	btfss	___fttol@exp1,7
  5880  0E5D  2E7A               	goto	l2320
  5881  0E5E  087D               	movf	___fttol@exp1,w
  5882  0E5F  3A80               	xorlw	128
  5883  0E60  3E8F               	addlw	143
  5884  0E61  1803               	skipnc
  5885  0E62  2E6C               	goto	l2318
  5886  0E63  3000               	movlw	0
  5887  0E64  00F3               	movwf	?___fttol+3
  5888  0E65  3000               	movlw	0
  5889  0E66  00F2               	movwf	?___fttol+2
  5890  0E67  3000               	movlw	0
  5891  0E68  00F1               	movwf	?___fttol+1
  5892  0E69  3000               	movlw	0
  5893  0E6A  00F0               	movwf	?___fttol
  5894  0E6B  0008               	return
  5895  0E6C                     l2318:	
  5896  0E6C  3001               	movlw	1
  5897  0E6D                     u2615:	
  5898  0E6D  36FC               	lsrf	___fttol@lval+3,f
  5899  0E6E  0CFB               	rrf	___fttol@lval+2,f
  5900  0E6F  0CFA               	rrf	___fttol@lval+1,f
  5901  0E70  0CF9               	rrf	___fttol@lval,f
  5902  0E71  0B89               	decfsz	9,f
  5903  0E72  2E6D               	goto	u2615
  5904  0E73  3001               	movlw	1
  5905  0E74  00F4               	movwf	??___fttol
  5906  0E75  0874               	movf	??___fttol,w
  5907  0E76  07FD               	addwf	___fttol@exp1,f
  5908  0E77  1903               	btfsc	3,2
  5909  0E78  2E93               	goto	l2328
  5910  0E79  2E6C               	goto	l2318
  5911  0E7A                     l2320:	
  5912  0E7A  3018               	movlw	24
  5913  0E7B  027D               	subwf	___fttol@exp1,w
  5914  0E7C  1C03               	skipc
  5915  0E7D  2E90               	goto	l572
  5916  0E7E  3000               	movlw	0
  5917  0E7F  00F3               	movwf	?___fttol+3
  5918  0E80  3000               	movlw	0
  5919  0E81  00F2               	movwf	?___fttol+2
  5920  0E82  3000               	movlw	0
  5921  0E83  00F1               	movwf	?___fttol+1
  5922  0E84  3000               	movlw	0
  5923  0E85  00F0               	movwf	?___fttol
  5924  0E86  0008               	return
  5925  0E87                     l2326:	
  5926  0E87  3001               	movlw	1
  5927  0E88                     u2645:	
  5928  0E88  35F9               	lslf	___fttol@lval,f
  5929  0E89  0DFA               	rlf	___fttol@lval+1,f
  5930  0E8A  0DFB               	rlf	___fttol@lval+2,f
  5931  0E8B  0DFC               	rlf	___fttol@lval+3,f
  5932  0E8C  0B89               	decfsz	9,f
  5933  0E8D  2E88               	goto	u2645
  5934  0E8E  3001               	movlw	1
  5935  0E8F  02FD               	subwf	___fttol@exp1,f
  5936  0E90                     l572:	
  5937  0E90  087D               	movf	___fttol@exp1,w
  5938  0E91  1D03               	btfss	3,2
  5939  0E92  2E87               	goto	l2326
  5940  0E93                     l2328:	
  5941  0E93  0878               	movf	___fttol@sign1,w
  5942  0E94  1903               	btfsc	3,2
  5943  0E95  2EA1               	goto	l2332
  5944  0E96  09F9               	comf	___fttol@lval,f
  5945  0E97  09FA               	comf	___fttol@lval+1,f
  5946  0E98  09FB               	comf	___fttol@lval+2,f
  5947  0E99  09FC               	comf	___fttol@lval+3,f
  5948  0E9A  0AF9               	incf	___fttol@lval,f
  5949  0E9B  1903               	skipnz
  5950  0E9C  0AFA               	incf	___fttol@lval+1,f
  5951  0E9D  1903               	skipnz
  5952  0E9E  0AFB               	incf	___fttol@lval+2,f
  5953  0E9F  1903               	skipnz
  5954  0EA0  0AFC               	incf	___fttol@lval+3,f
  5955  0EA1                     l2332:	
  5956  0EA1  087C               	movf	___fttol@lval+3,w
  5957  0EA2  00F3               	movwf	?___fttol+3
  5958  0EA3  087B               	movf	___fttol@lval+2,w
  5959  0EA4  00F2               	movwf	?___fttol+2
  5960  0EA5  087A               	movf	___fttol@lval+1,w
  5961  0EA6  00F1               	movwf	?___fttol+1
  5962  0EA7  0879               	movf	___fttol@lval,w
  5963  0EA8  00F0               	movwf	?___fttol
  5964  0EA9  0008               	return
  5965  0EAA                     __end_of___fttol:	
  5966                           
  5967                           	psect	text10
  5968  0A4B                     __ptext10:	
  5969 ;; *************** function ___ftsub *****************
  5970 ;; Defined at:
  5971 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  f2              3   45[BANK0 ] float 
  5974 ;;  f1              3   48[BANK0 ] float 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  3   45[BANK0 ] float 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, pclath, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5986 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;Total ram usage:        6 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    2
  5993 ;; This function calls:
  5994 ;;		___ftadd
  5995 ;; This function is called by:
  5996 ;;		_main
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function ___ftsub
  6002  0A4B                     ___ftsub:	
  6003                           
  6004                           ;incstack = 0
  6005                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6006  0A4B  0020               	movlb	0	; select bank0
  6007  0A4C  084F               	movf	___ftsub@f2+2,w
  6008  0A4D  044E               	iorwf	___ftsub@f2+1,w
  6009  0A4E  044D               	iorwf	___ftsub@f2,w
  6010  0A4F  1903               	skipnz
  6011  0A50  2A53               	goto	l2290
  6012  0A51  3080               	movlw	128
  6013  0A52  06CF               	xorwf	___ftsub@f2+2,f
  6014  0A53                     l2290:	
  6015  0A53  0850               	movf	___ftsub@f1,w
  6016  0A54  00C0               	movwf	___ftadd@f1
  6017  0A55  0851               	movf	___ftsub@f1+1,w
  6018  0A56  00C1               	movwf	___ftadd@f1+1
  6019  0A57  0852               	movf	___ftsub@f1+2,w
  6020  0A58  00C2               	movwf	___ftadd@f1+2
  6021  0A59  084D               	movf	___ftsub@f2,w
  6022  0A5A  00C3               	movwf	___ftadd@f2
  6023  0A5B  084E               	movf	___ftsub@f2+1,w
  6024  0A5C  00C4               	movwf	___ftadd@f2+1
  6025  0A5D  084F               	movf	___ftsub@f2+2,w
  6026  0A5E  00C5               	movwf	___ftadd@f2+2
  6027  0A5F  3181  21A6         	fcall	___ftadd
  6028  0A61  0020               	movlb	0	; select bank0
  6029  0A62  0840               	movf	?___ftadd,w
  6030  0A63  00CD               	movwf	?___ftsub
  6031  0A64  0841               	movf	?___ftadd+1,w
  6032  0A65  00CE               	movwf	?___ftsub+1
  6033  0A66  0842               	movf	?___ftadd+2,w
  6034  0A67  00CF               	movwf	?___ftsub+2
  6035  0A68  0008               	return
  6036  0A69                     __end_of___ftsub:	
  6037                           
  6038                           	psect	text11
  6039  01A6                     __ptext11:	
  6040 ;; *************** function ___ftadd *****************
  6041 ;; Defined at:
  6042 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  f1              3   32[BANK0 ] float 
  6045 ;;  f2              3   35[BANK0 ] float 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  exp1            1   44[BANK0 ] unsigned char 
  6048 ;;  exp2            1   43[BANK0 ] unsigned char 
  6049 ;;  sign            1   42[BANK0 ] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  3   32[BANK0 ] float 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0, pclath, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6059 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6062 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6063 ;;Total ram usage:       13 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    1
  6066 ;; This function calls:
  6067 ;;		___ftpack
  6068 ;; This function is called by:
  6069 ;;		_main
  6070 ;;		___ftsub
  6071 ;;		_log
  6072 ;;		_eval_poly
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           
  6077                           ;psect for function ___ftadd
  6078  01A6                     ___ftadd:	
  6079                           
  6080                           ;incstack = 0
  6081                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6082  01A6  0020               	movlb	0	; select bank0
  6083  01A7  0840               	movf	___ftadd@f1,w
  6084  01A8  00C6               	movwf	??___ftadd
  6085  01A9  0841               	movf	___ftadd@f1+1,w
  6086  01AA  00C7               	movwf	??___ftadd+1
  6087  01AB  0842               	movf	___ftadd@f1+2,w
  6088  01AC  00C8               	movwf	??___ftadd+2
  6089  01AD  1003               	clrc
  6090  01AE  0D47               	rlf	??___ftadd+1,w
  6091  01AF  0D48               	rlf	??___ftadd+2,w
  6092  01B0  00C9               	movwf	??___ftadd+3
  6093  01B1  0849               	movf	??___ftadd+3,w
  6094  01B2  00CC               	movwf	___ftadd@exp1
  6095  01B3  0843               	movf	___ftadd@f2,w
  6096  01B4  00C6               	movwf	??___ftadd
  6097  01B5  0844               	movf	___ftadd@f2+1,w
  6098  01B6  00C7               	movwf	??___ftadd+1
  6099  01B7  0845               	movf	___ftadd@f2+2,w
  6100  01B8  00C8               	movwf	??___ftadd+2
  6101  01B9  1003               	clrc
  6102  01BA  0D47               	rlf	??___ftadd+1,w
  6103  01BB  0D48               	rlf	??___ftadd+2,w
  6104  01BC  00C9               	movwf	??___ftadd+3
  6105  01BD  0849               	movf	??___ftadd+3,w
  6106  01BE  00CB               	movwf	___ftadd@exp2
  6107  01BF  084C               	movf	___ftadd@exp1,w
  6108  01C0  1903               	btfsc	3,2
  6109  01C1  29CE               	goto	l1702
  6110  01C2  084B               	movf	___ftadd@exp2,w
  6111  01C3  024C               	subwf	___ftadd@exp1,w
  6112  01C4  1803               	skipnc
  6113  01C5  29D5               	goto	l1706
  6114  01C6  034C               	decf	___ftadd@exp1,w
  6115  01C7  3AFF               	xorlw	255
  6116  01C8  074B               	addwf	___ftadd@exp2,w
  6117  01C9  00C6               	movwf	??___ftadd
  6118  01CA  3019               	movlw	25
  6119  01CB  0246               	subwf	??___ftadd,w
  6120  01CC  1C03               	skipc
  6121  01CD  29D5               	goto	l1706
  6122  01CE                     l1702:	
  6123  01CE  0843               	movf	___ftadd@f2,w
  6124  01CF  00C0               	movwf	?___ftadd
  6125  01D0  0844               	movf	___ftadd@f2+1,w
  6126  01D1  00C1               	movwf	?___ftadd+1
  6127  01D2  0845               	movf	___ftadd@f2+2,w
  6128  01D3  00C2               	movwf	?___ftadd+2
  6129  01D4  0008               	return
  6130  01D5                     l1706:	
  6131  01D5  084B               	movf	___ftadd@exp2,w
  6132  01D6  1903               	btfsc	3,2
  6133  01D7  0008               	return
  6134  01D8  084C               	movf	___ftadd@exp1,w
  6135  01D9  024B               	subwf	___ftadd@exp2,w
  6136  01DA  1803               	skipnc
  6137  01DB  29E4               	goto	l1712
  6138  01DC  034B               	decf	___ftadd@exp2,w
  6139  01DD  3AFF               	xorlw	255
  6140  01DE  074C               	addwf	___ftadd@exp1,w
  6141  01DF  00C6               	movwf	??___ftadd
  6142  01E0  3019               	movlw	25
  6143  01E1  0246               	subwf	??___ftadd,w
  6144  01E2  1803               	btfsc	3,0
  6145  01E3  0008               	return
  6146  01E4                     l1712:	
  6147  01E4  3006               	movlw	6
  6148  01E5  00C6               	movwf	??___ftadd
  6149  01E6  0846               	movf	??___ftadd,w
  6150  01E7  00CA               	movwf	___ftadd@sign
  6151  01E8  1BC2               	btfsc	___ftadd@f1+2,7
  6152  01E9  17CA               	bsf	___ftadd@sign,7
  6153  01EA  1BC5               	btfsc	___ftadd@f2+2,7
  6154  01EB  174A               	bsf	___ftadd@sign,6
  6155  01EC  17C1               	bsf	___ftadd@f1+1,7
  6156  01ED  30FF               	movlw	255
  6157  01EE  05C0               	andwf	___ftadd@f1,f
  6158  01EF  30FF               	movlw	255
  6159  01F0  05C1               	andwf	___ftadd@f1+1,f
  6160  01F1  3000               	movlw	0
  6161  01F2  05C2               	andwf	___ftadd@f1+2,f
  6162  01F3  17C4               	bsf	___ftadd@f2+1,7
  6163  01F4  30FF               	movlw	255
  6164  01F5  05C3               	andwf	___ftadd@f2,f
  6165  01F6  30FF               	movlw	255
  6166  01F7  05C4               	andwf	___ftadd@f2+1,f
  6167  01F8  3000               	movlw	0
  6168  01F9  05C5               	andwf	___ftadd@f2+2,f
  6169  01FA  084B               	movf	___ftadd@exp2,w
  6170  01FB  024C               	subwf	___ftadd@exp1,w
  6171  01FC  1803               	skipnc
  6172  01FD  2A20               	goto	l1734
  6173  01FE                     l1724:	
  6174  01FE  3001               	movlw	1
  6175  01FF                     u1665:	
  6176  01FF  35C3               	lslf	___ftadd@f2,f
  6177  0200  0DC4               	rlf	___ftadd@f2+1,f
  6178  0201  0DC5               	rlf	___ftadd@f2+2,f
  6179  0202  0B89               	decfsz	9,f
  6180  0203  29FF               	goto	u1665
  6181  0204  3001               	movlw	1
  6182  0205  02CB               	subwf	___ftadd@exp2,f
  6183  0206  084B               	movf	___ftadd@exp2,w
  6184  0207  064C               	xorwf	___ftadd@exp1,w
  6185  0208  1903               	skipnz
  6186  0209  2A1B               	goto	l1732
  6187  020A  3001               	movlw	1
  6188  020B  02CA               	subwf	___ftadd@sign,f
  6189  020C  084A               	movf	___ftadd@sign,w
  6190  020D  3907               	andlw	7
  6191  020E  1903               	btfsc	3,2
  6192  020F  2A1B               	goto	l1732
  6193  0210  29FE               	goto	l1724
  6194  0211                     l1730:	
  6195  0211  3001               	movlw	1
  6196  0212                     u1695:	
  6197  0212  36C2               	lsrf	___ftadd@f1+2,f
  6198  0213  0CC1               	rrf	___ftadd@f1+1,f
  6199  0214  0CC0               	rrf	___ftadd@f1,f
  6200  0215  0B89               	decfsz	9,f
  6201  0216  2A12               	goto	u1695
  6202  0217  3001               	movlw	1
  6203  0218  00C6               	movwf	??___ftadd
  6204  0219  0846               	movf	??___ftadd,w
  6205  021A  07CC               	addwf	___ftadd@exp1,f
  6206  021B                     l1732:	
  6207  021B  084C               	movf	___ftadd@exp1,w
  6208  021C  064B               	xorwf	___ftadd@exp2,w
  6209  021D  1903               	btfsc	3,2
  6210  021E  2A45               	goto	l512
  6211  021F  2A11               	goto	l1730
  6212  0220                     l1734:	
  6213  0220  084C               	movf	___ftadd@exp1,w
  6214  0221  024B               	subwf	___ftadd@exp2,w
  6215  0222  1803               	skipnc
  6216  0223  2A45               	goto	l512
  6217  0224                     l1736:	
  6218  0224  3001               	movlw	1
  6219  0225                     u1725:	
  6220  0225  35C0               	lslf	___ftadd@f1,f
  6221  0226  0DC1               	rlf	___ftadd@f1+1,f
  6222  0227  0DC2               	rlf	___ftadd@f1+2,f
  6223  0228  0B89               	decfsz	9,f
  6224  0229  2A25               	goto	u1725
  6225  022A  3001               	movlw	1
  6226  022B  02CC               	subwf	___ftadd@exp1,f
  6227  022C  084B               	movf	___ftadd@exp2,w
  6228  022D  064C               	xorwf	___ftadd@exp1,w
  6229  022E  1903               	skipnz
  6230  022F  2A41               	goto	l1744
  6231  0230  3001               	movlw	1
  6232  0231  02CA               	subwf	___ftadd@sign,f
  6233  0232  084A               	movf	___ftadd@sign,w
  6234  0233  3907               	andlw	7
  6235  0234  1903               	btfsc	3,2
  6236  0235  2A41               	goto	l1744
  6237  0236  2A24               	goto	l1736
  6238  0237                     l1742:	
  6239  0237  3001               	movlw	1
  6240  0238                     u1755:	
  6241  0238  36C5               	lsrf	___ftadd@f2+2,f
  6242  0239  0CC4               	rrf	___ftadd@f2+1,f
  6243  023A  0CC3               	rrf	___ftadd@f2,f
  6244  023B  0B89               	decfsz	9,f
  6245  023C  2A38               	goto	u1755
  6246  023D  3001               	movlw	1
  6247  023E  00C6               	movwf	??___ftadd
  6248  023F  0846               	movf	??___ftadd,w
  6249  0240  07CB               	addwf	___ftadd@exp2,f
  6250  0241                     l1744:	
  6251  0241  084C               	movf	___ftadd@exp1,w
  6252  0242  064B               	xorwf	___ftadd@exp2,w
  6253  0243  1D03               	skipz
  6254  0244  2A37               	goto	l1742
  6255  0245                     l512:	
  6256  0245  1FCA               	btfss	___ftadd@sign,7
  6257  0246  2A57               	goto	l1748
  6258  0247  30FF               	movlw	255
  6259  0248  06C0               	xorwf	___ftadd@f1,f
  6260  0249  30FF               	movlw	255
  6261  024A  06C1               	xorwf	___ftadd@f1+1,f
  6262  024B  30FF               	movlw	255
  6263  024C  06C2               	xorwf	___ftadd@f1+2,f
  6264  024D  3001               	movlw	1
  6265  024E  07C0               	addwf	___ftadd@f1,f
  6266  024F  3000               	movlw	0
  6267  0250  1803               	skipnc
  6268  0251  3001               	movlw	1
  6269  0252  07C1               	addwf	___ftadd@f1+1,f
  6270  0253  3000               	movlw	0
  6271  0254  1803               	skipnc
  6272  0255  3001               	movlw	1
  6273  0256  07C2               	addwf	___ftadd@f1+2,f
  6274  0257                     l1748:	
  6275  0257  1F4A               	btfss	___ftadd@sign,6
  6276  0258  2A69               	goto	l1752
  6277  0259  30FF               	movlw	255
  6278  025A  06C3               	xorwf	___ftadd@f2,f
  6279  025B  30FF               	movlw	255
  6280  025C  06C4               	xorwf	___ftadd@f2+1,f
  6281  025D  30FF               	movlw	255
  6282  025E  06C5               	xorwf	___ftadd@f2+2,f
  6283  025F  3001               	movlw	1
  6284  0260  07C3               	addwf	___ftadd@f2,f
  6285  0261  3000               	movlw	0
  6286  0262  1803               	skipnc
  6287  0263  3001               	movlw	1
  6288  0264  07C4               	addwf	___ftadd@f2+1,f
  6289  0265  3000               	movlw	0
  6290  0266  1803               	skipnc
  6291  0267  3001               	movlw	1
  6292  0268  07C5               	addwf	___ftadd@f2+2,f
  6293  0269                     l1752:	
  6294  0269  01CA               	clrf	___ftadd@sign
  6295  026A  0840               	movf	___ftadd@f1,w
  6296  026B  07C3               	addwf	___ftadd@f2,f
  6297  026C  0841               	movf	___ftadd@f1+1,w
  6298  026D  3DC4               	addwfc	___ftadd@f2+1,f
  6299  026E  0842               	movf	___ftadd@f1+2,w
  6300  026F  3DC5               	addwfc	___ftadd@f2+2,f
  6301  0270  1FC5               	btfss	___ftadd@f2+2,7
  6302  0271  2A84               	goto	l1762
  6303  0272  30FF               	movlw	255
  6304  0273  06C3               	xorwf	___ftadd@f2,f
  6305  0274  30FF               	movlw	255
  6306  0275  06C4               	xorwf	___ftadd@f2+1,f
  6307  0276  30FF               	movlw	255
  6308  0277  06C5               	xorwf	___ftadd@f2+2,f
  6309  0278  3001               	movlw	1
  6310  0279  07C3               	addwf	___ftadd@f2,f
  6311  027A  3000               	movlw	0
  6312  027B  1803               	skipnc
  6313  027C  3001               	movlw	1
  6314  027D  07C4               	addwf	___ftadd@f2+1,f
  6315  027E  3000               	movlw	0
  6316  027F  1803               	skipnc
  6317  0280  3001               	movlw	1
  6318  0281  07C5               	addwf	___ftadd@f2+2,f
  6319  0282  01CA               	clrf	___ftadd@sign
  6320  0283  0ACA               	incf	___ftadd@sign,f
  6321  0284                     l1762:	
  6322  0284  0843               	movf	___ftadd@f2,w
  6323  0285  00F0               	movwf	___ftpack@arg
  6324  0286  0844               	movf	___ftadd@f2+1,w
  6325  0287  00F1               	movwf	___ftpack@arg+1
  6326  0288  0845               	movf	___ftadd@f2+2,w
  6327  0289  00F2               	movwf	___ftpack@arg+2
  6328  028A  084C               	movf	___ftadd@exp1,w
  6329  028B  00C6               	movwf	??___ftadd
  6330  028C  0846               	movf	??___ftadd,w
  6331  028D  00F3               	movwf	___ftpack@exp
  6332  028E  084A               	movf	___ftadd@sign,w
  6333  028F  00C7               	movwf	??___ftadd+1
  6334  0290  0847               	movf	??___ftadd+1,w
  6335  0291  00F4               	movwf	___ftpack@sign
  6336  0292  318C  24C3         	fcall	___ftpack
  6337  0294  0870               	movf	?___ftpack,w
  6338  0295  0020               	movlb	0	; select bank0
  6339  0296  00C0               	movwf	?___ftadd
  6340  0297  0871               	movf	?___ftpack+1,w
  6341  0298  00C1               	movwf	?___ftadd+1
  6342  0299  0872               	movf	?___ftpack+2,w
  6343  029A  00C2               	movwf	?___ftadd+2
  6344  029B  0008               	return
  6345  029C                     __end_of___ftadd:	
  6346                           
  6347                           	psect	text12
  6348  0EAA                     __ptext12:	
  6349 ;; *************** function ___ftdiv *****************
  6350 ;; Defined at:
  6351 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  f2              3   16[BANK0 ] float 
  6354 ;;  f1              3   19[BANK0 ] float 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  f3              3   27[BANK0 ] float 
  6357 ;;  sign            1   31[BANK0 ] unsigned char 
  6358 ;;  exp             1   30[BANK0 ] unsigned char 
  6359 ;;  cntr            1   26[BANK0 ] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  3   16[BANK0 ] float 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0, pclath, cstack
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6369 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6370 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;Total ram usage:       16 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; Hardware stack levels required when called:    1
  6376 ;; This function calls:
  6377 ;;		___ftpack
  6378 ;; This function is called by:
  6379 ;;		_main
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function ___ftdiv
  6385  0EAA                     ___ftdiv:	
  6386                           
  6387                           ;incstack = 0
  6388                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6389  0EAA  0020               	movlb	0	; select bank0
  6390  0EAB  0833               	movf	___ftdiv@f1,w
  6391  0EAC  00B6               	movwf	??___ftdiv
  6392  0EAD  0834               	movf	___ftdiv@f1+1,w
  6393  0EAE  00B7               	movwf	??___ftdiv+1
  6394  0EAF  0835               	movf	___ftdiv@f1+2,w
  6395  0EB0  00B8               	movwf	??___ftdiv+2
  6396  0EB1  1003               	clrc
  6397  0EB2  0D37               	rlf	??___ftdiv+1,w
  6398  0EB3  0D38               	rlf	??___ftdiv+2,w
  6399  0EB4  00B9               	movwf	??___ftdiv+3
  6400  0EB5  0839               	movf	??___ftdiv+3,w
  6401  0EB6  00BE               	movwf	___ftdiv@exp
  6402  0EB7  083E               	movf	___ftdiv@exp,w
  6403  0EB8  1D03               	btfss	3,2
  6404  0EB9  2EC1               	goto	l2250
  6405  0EBA  3000               	movlw	0
  6406  0EBB  00B0               	movwf	?___ftdiv
  6407  0EBC  3000               	movlw	0
  6408  0EBD  00B1               	movwf	?___ftdiv+1
  6409  0EBE  3000               	movlw	0
  6410  0EBF  00B2               	movwf	?___ftdiv+2
  6411  0EC0  0008               	return
  6412  0EC1                     l2250:	
  6413  0EC1  0830               	movf	___ftdiv@f2,w
  6414  0EC2  00B6               	movwf	??___ftdiv
  6415  0EC3  0831               	movf	___ftdiv@f2+1,w
  6416  0EC4  00B7               	movwf	??___ftdiv+1
  6417  0EC5  0832               	movf	___ftdiv@f2+2,w
  6418  0EC6  00B8               	movwf	??___ftdiv+2
  6419  0EC7  1003               	clrc
  6420  0EC8  0D37               	rlf	??___ftdiv+1,w
  6421  0EC9  0D38               	rlf	??___ftdiv+2,w
  6422  0ECA  00B9               	movwf	??___ftdiv+3
  6423  0ECB  0839               	movf	??___ftdiv+3,w
  6424  0ECC  00BF               	movwf	___ftdiv@sign
  6425  0ECD  083F               	movf	___ftdiv@sign,w
  6426  0ECE  1D03               	btfss	3,2
  6427  0ECF  2ED7               	goto	l2256
  6428  0ED0  3000               	movlw	0
  6429  0ED1  00B0               	movwf	?___ftdiv
  6430  0ED2  3000               	movlw	0
  6431  0ED3  00B1               	movwf	?___ftdiv+1
  6432  0ED4  3000               	movlw	0
  6433  0ED5  00B2               	movwf	?___ftdiv+2
  6434  0ED6  0008               	return
  6435  0ED7                     l2256:	
  6436  0ED7  3000               	movlw	0
  6437  0ED8  00BB               	movwf	___ftdiv@f3
  6438  0ED9  3000               	movlw	0
  6439  0EDA  00BC               	movwf	___ftdiv@f3+1
  6440  0EDB  3000               	movlw	0
  6441  0EDC  00BD               	movwf	___ftdiv@f3+2
  6442  0EDD  3089               	movlw	137
  6443  0EDE  073F               	addwf	___ftdiv@sign,w
  6444  0EDF  00B6               	movwf	??___ftdiv
  6445  0EE0  0836               	movf	??___ftdiv,w
  6446  0EE1  02BE               	subwf	___ftdiv@exp,f
  6447  0EE2  0833               	movf	___ftdiv@f1,w
  6448  0EE3  00B6               	movwf	??___ftdiv
  6449  0EE4  0834               	movf	___ftdiv@f1+1,w
  6450  0EE5  00B7               	movwf	??___ftdiv+1
  6451  0EE6  0835               	movf	___ftdiv@f1+2,w
  6452  0EE7  00B8               	movwf	??___ftdiv+2
  6453  0EE8  3010               	movlw	16
  6454  0EE9                     u2505:	
  6455  0EE9  36B8               	lsrf	??___ftdiv+2,f
  6456  0EEA  0CB7               	rrf	??___ftdiv+1,f
  6457  0EEB  0CB6               	rrf	??___ftdiv,f
  6458  0EEC  0B89               	decfsz	9,f
  6459  0EED  2EE9               	goto	u2505
  6460  0EEE  0836               	movf	??___ftdiv,w
  6461  0EEF  00B9               	movwf	??___ftdiv+3
  6462  0EF0  0839               	movf	??___ftdiv+3,w
  6463  0EF1  00BF               	movwf	___ftdiv@sign
  6464  0EF2  0830               	movf	___ftdiv@f2,w
  6465  0EF3  00B6               	movwf	??___ftdiv
  6466  0EF4  0831               	movf	___ftdiv@f2+1,w
  6467  0EF5  00B7               	movwf	??___ftdiv+1
  6468  0EF6  0832               	movf	___ftdiv@f2+2,w
  6469  0EF7  00B8               	movwf	??___ftdiv+2
  6470  0EF8  3010               	movlw	16
  6471  0EF9                     u2515:	
  6472  0EF9  36B8               	lsrf	??___ftdiv+2,f
  6473  0EFA  0CB7               	rrf	??___ftdiv+1,f
  6474  0EFB  0CB6               	rrf	??___ftdiv,f
  6475  0EFC  0B89               	decfsz	9,f
  6476  0EFD  2EF9               	goto	u2515
  6477  0EFE  0836               	movf	??___ftdiv,w
  6478  0EFF  00B9               	movwf	??___ftdiv+3
  6479  0F00  0839               	movf	??___ftdiv+3,w
  6480  0F01  06BF               	xorwf	___ftdiv@sign,f
  6481  0F02  3080               	movlw	128
  6482  0F03  00B6               	movwf	??___ftdiv
  6483  0F04  0836               	movf	??___ftdiv,w
  6484  0F05  05BF               	andwf	___ftdiv@sign,f
  6485  0F06  17B4               	bsf	___ftdiv@f1+1,7
  6486  0F07  30FF               	movlw	255
  6487  0F08  05B3               	andwf	___ftdiv@f1,f
  6488  0F09  30FF               	movlw	255
  6489  0F0A  05B4               	andwf	___ftdiv@f1+1,f
  6490  0F0B  3000               	movlw	0
  6491  0F0C  05B5               	andwf	___ftdiv@f1+2,f
  6492  0F0D  17B1               	bsf	___ftdiv@f2+1,7
  6493  0F0E  30FF               	movlw	255
  6494  0F0F  05B0               	andwf	___ftdiv@f2,f
  6495  0F10  30FF               	movlw	255
  6496  0F11  05B1               	andwf	___ftdiv@f2+1,f
  6497  0F12  3000               	movlw	0
  6498  0F13  05B2               	andwf	___ftdiv@f2+2,f
  6499  0F14  3018               	movlw	24
  6500  0F15  00B6               	movwf	??___ftdiv
  6501  0F16  0836               	movf	??___ftdiv,w
  6502  0F17  00BA               	movwf	___ftdiv@cntr
  6503  0F18                     l2270:	
  6504  0F18  3001               	movlw	1
  6505  0F19                     u2525:	
  6506  0F19  35BB               	lslf	___ftdiv@f3,f
  6507  0F1A  0DBC               	rlf	___ftdiv@f3+1,f
  6508  0F1B  0DBD               	rlf	___ftdiv@f3+2,f
  6509  0F1C  0B89               	decfsz	9,f
  6510  0F1D  2F19               	goto	u2525
  6511  0F1E  0832               	movf	___ftdiv@f2+2,w
  6512  0F1F  0235               	subwf	___ftdiv@f1+2,w
  6513  0F20  1D03               	skipz
  6514  0F21  2F28               	goto	u2535
  6515  0F22  0831               	movf	___ftdiv@f2+1,w
  6516  0F23  0234               	subwf	___ftdiv@f1+1,w
  6517  0F24  1D03               	skipz
  6518  0F25  2F28               	goto	u2535
  6519  0F26  0830               	movf	___ftdiv@f2,w
  6520  0F27  0233               	subwf	___ftdiv@f1,w
  6521  0F28                     u2535:	
  6522  0F28  1C03               	skipc
  6523  0F29  2F31               	goto	l2278
  6524  0F2A  0830               	movf	___ftdiv@f2,w
  6525  0F2B  02B3               	subwf	___ftdiv@f1,f
  6526  0F2C  0831               	movf	___ftdiv@f2+1,w
  6527  0F2D  3BB4               	subwfb	___ftdiv@f1+1,f
  6528  0F2E  0832               	movf	___ftdiv@f2+2,w
  6529  0F2F  3BB5               	subwfb	___ftdiv@f1+2,f
  6530  0F30  143B               	bsf	___ftdiv@f3,0
  6531  0F31                     l2278:	
  6532  0F31  3001               	movlw	1
  6533  0F32                     u2545:	
  6534  0F32  35B3               	lslf	___ftdiv@f1,f
  6535  0F33  0DB4               	rlf	___ftdiv@f1+1,f
  6536  0F34  0DB5               	rlf	___ftdiv@f1+2,f
  6537  0F35  0B89               	decfsz	9,f
  6538  0F36  2F32               	goto	u2545
  6539  0F37  3001               	movlw	1
  6540  0F38  02BA               	subwf	___ftdiv@cntr,f
  6541  0F39  1D03               	btfss	3,2
  6542  0F3A  2F18               	goto	l2270
  6543  0F3B  083B               	movf	___ftdiv@f3,w
  6544  0F3C  00F0               	movwf	___ftpack@arg
  6545  0F3D  083C               	movf	___ftdiv@f3+1,w
  6546  0F3E  00F1               	movwf	___ftpack@arg+1
  6547  0F3F  083D               	movf	___ftdiv@f3+2,w
  6548  0F40  00F2               	movwf	___ftpack@arg+2
  6549  0F41  083E               	movf	___ftdiv@exp,w
  6550  0F42  00B6               	movwf	??___ftdiv
  6551  0F43  0836               	movf	??___ftdiv,w
  6552  0F44  00F3               	movwf	___ftpack@exp
  6553  0F45  083F               	movf	___ftdiv@sign,w
  6554  0F46  00B7               	movwf	??___ftdiv+1
  6555  0F47  0837               	movf	??___ftdiv+1,w
  6556  0F48  00F4               	movwf	___ftpack@sign
  6557  0F49  318C  24C3         	fcall	___ftpack
  6558  0F4B  0870               	movf	?___ftpack,w
  6559  0F4C  0020               	movlb	0	; select bank0
  6560  0F4D  00B0               	movwf	?___ftdiv
  6561  0F4E  0871               	movf	?___ftpack+1,w
  6562  0F4F  00B1               	movwf	?___ftdiv+1
  6563  0F50  0872               	movf	?___ftpack+2,w
  6564  0F51  00B2               	movwf	?___ftdiv+2
  6565  0F52  0008               	return
  6566  0F53                     __end_of___ftdiv:	
  6567                           
  6568                           	psect	text13
  6569  0CC3                     __ptext13:	
  6570 ;; *************** function ___ftpack *****************
  6571 ;; Defined at:
  6572 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  arg             3    0[COMMON] unsigned um
  6575 ;;  exp             1    3[COMMON] unsigned char 
  6576 ;;  sign            1    4[COMMON] unsigned char 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  3    0[COMMON] float 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6588 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;Total ram usage:        8 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		___awtoft
  6598 ;;		___ftadd
  6599 ;;		___ftdiv
  6600 ;;		___ftmul
  6601 ;;		___lwtoft
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           
  6606                           ;psect for function ___ftpack
  6607  0CC3                     ___ftpack:	
  6608                           
  6609                           ;incstack = 0
  6610                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6611  0CC3  0873               	movf	___ftpack@exp,w
  6612  0CC4  1903               	btfsc	3,2
  6613  0CC5  2CCB               	goto	l1624
  6614  0CC6  0872               	movf	___ftpack@arg+2,w
  6615  0CC7  0471               	iorwf	___ftpack@arg+1,w
  6616  0CC8  0470               	iorwf	___ftpack@arg,w
  6617  0CC9  1D03               	skipz
  6618  0CCA  2CDC               	goto	l1630
  6619  0CCB                     l1624:	
  6620  0CCB  3000               	movlw	0
  6621  0CCC  00F0               	movwf	?___ftpack
  6622  0CCD  3000               	movlw	0
  6623  0CCE  00F1               	movwf	?___ftpack+1
  6624  0CCF  3000               	movlw	0
  6625  0CD0  00F2               	movwf	?___ftpack+2
  6626  0CD1  0008               	return
  6627  0CD2                     l1628:	
  6628  0CD2  3001               	movlw	1
  6629  0CD3  00F5               	movwf	??___ftpack
  6630  0CD4  0875               	movf	??___ftpack,w
  6631  0CD5  07F3               	addwf	___ftpack@exp,f
  6632  0CD6  3001               	movlw	1
  6633  0CD7                     u1425:	
  6634  0CD7  36F2               	lsrf	___ftpack@arg+2,f
  6635  0CD8  0CF1               	rrf	___ftpack@arg+1,f
  6636  0CD9  0CF0               	rrf	___ftpack@arg,f
  6637  0CDA  0B89               	decfsz	9,f
  6638  0CDB  2CD7               	goto	u1425
  6639  0CDC                     l1630:	
  6640  0CDC  30FE               	movlw	254
  6641  0CDD  0572               	andwf	___ftpack@arg+2,w
  6642  0CDE  1903               	btfsc	3,2
  6643  0CDF  2CF5               	goto	l481
  6644  0CE0  2CD2               	goto	l1628
  6645  0CE1                     l1632:	
  6646  0CE1  3001               	movlw	1
  6647  0CE2  00F5               	movwf	??___ftpack
  6648  0CE3  0875               	movf	??___ftpack,w
  6649  0CE4  07F3               	addwf	___ftpack@exp,f
  6650  0CE5  3001               	movlw	1
  6651  0CE6  07F0               	addwf	___ftpack@arg,f
  6652  0CE7  3000               	movlw	0
  6653  0CE8  1803               	skipnc
  6654  0CE9  3001               	movlw	1
  6655  0CEA  07F1               	addwf	___ftpack@arg+1,f
  6656  0CEB  3000               	movlw	0
  6657  0CEC  1803               	skipnc
  6658  0CED  3001               	movlw	1
  6659  0CEE  07F2               	addwf	___ftpack@arg+2,f
  6660  0CEF  3001               	movlw	1
  6661  0CF0                     u1445:	
  6662  0CF0  36F2               	lsrf	___ftpack@arg+2,f
  6663  0CF1  0CF1               	rrf	___ftpack@arg+1,f
  6664  0CF2  0CF0               	rrf	___ftpack@arg,f
  6665  0CF3  0B89               	decfsz	9,f
  6666  0CF4  2CF0               	goto	u1445
  6667  0CF5                     l481:	
  6668  0CF5  30FF               	movlw	255
  6669  0CF6  0572               	andwf	___ftpack@arg+2,w
  6670  0CF7  1903               	btfsc	3,2
  6671  0CF8  2D02               	goto	l1640
  6672  0CF9  2CE1               	goto	l1632
  6673  0CFA                     l1638:	
  6674  0CFA  3001               	movlw	1
  6675  0CFB  02F3               	subwf	___ftpack@exp,f
  6676  0CFC  3001               	movlw	1
  6677  0CFD                     u1465:	
  6678  0CFD  35F0               	lslf	___ftpack@arg,f
  6679  0CFE  0DF1               	rlf	___ftpack@arg+1,f
  6680  0CFF  0DF2               	rlf	___ftpack@arg+2,f
  6681  0D00  0B89               	decfsz	9,f
  6682  0D01  2CFD               	goto	u1465
  6683  0D02                     l1640:	
  6684  0D02  1BF1               	btfsc	___ftpack@arg+1,7
  6685  0D03  2D08               	goto	l488
  6686  0D04  3002               	movlw	2
  6687  0D05  0273               	subwf	___ftpack@exp,w
  6688  0D06  1803               	skipnc
  6689  0D07  2CFA               	goto	l1638
  6690  0D08                     l488:	
  6691  0D08  1873               	btfsc	___ftpack@exp,0
  6692  0D09  2D10               	goto	l489
  6693  0D0A  30FF               	movlw	255
  6694  0D0B  05F0               	andwf	___ftpack@arg,f
  6695  0D0C  307F               	movlw	127
  6696  0D0D  05F1               	andwf	___ftpack@arg+1,f
  6697  0D0E  30FF               	movlw	255
  6698  0D0F  05F2               	andwf	___ftpack@arg+2,f
  6699  0D10                     l489:	
  6700  0D10  1003               	clrc
  6701  0D11  0CF3               	rrf	___ftpack@exp,f
  6702  0D12  0873               	movf	___ftpack@exp,w
  6703  0D13  00F5               	movwf	??___ftpack
  6704  0D14  01F6               	clrf	??___ftpack+1
  6705  0D15  01F7               	clrf	??___ftpack+2
  6706  0D16  3010               	movlw	16
  6707  0D17                     u1505:	
  6708  0D17  35F5               	lslf	??___ftpack,f
  6709  0D18  0DF6               	rlf	??___ftpack+1,f
  6710  0D19  0DF7               	rlf	??___ftpack+2,f
  6711  0D1A  0B89               	decfsz	9,f
  6712  0D1B  2D17               	goto	u1505
  6713  0D1C  0875               	movf	??___ftpack,w
  6714  0D1D  04F0               	iorwf	___ftpack@arg,f
  6715  0D1E  0876               	movf	??___ftpack+1,w
  6716  0D1F  04F1               	iorwf	___ftpack@arg+1,f
  6717  0D20  0877               	movf	??___ftpack+2,w
  6718  0D21  04F2               	iorwf	___ftpack@arg+2,f
  6719  0D22  0874               	movf	___ftpack@sign,w
  6720  0D23  1903               	btfsc	3,2
  6721  0D24  0008               	return
  6722  0D25  17F2               	bsf	___ftpack@arg+2,7
  6723  0D26  0008               	return
  6724  0D27                     __end_of___ftpack:	
  6725                           
  6726                           	psect	text14
  6727  0DA2                     __ptext14:	
  6728 ;; *************** function ___aldiv *****************
  6729 ;; Defined at:
  6730 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  divisor         4    0[COMMON] long 
  6733 ;;  dividend        4    4[COMMON] long 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  quotient        4    2[BANK0 ] long 
  6736 ;;  sign            1    1[BANK0 ] unsigned char 
  6737 ;;  counter         1    0[BANK0 ] unsigned char 
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  4    0[COMMON] long 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6747 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6750 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;Total ram usage:       15 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_main
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function ___aldiv
  6762  0DA2                     ___aldiv:	
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6766  0DA2  0020               	movlb	0	; select bank0
  6767  0DA3  01A1               	clrf	___aldiv@sign
  6768  0DA4  1FF3               	btfss	___aldiv@divisor+3,7
  6769  0DA5  2DB3               	goto	l375
  6770  0DA6  09F0               	comf	___aldiv@divisor,f
  6771  0DA7  09F1               	comf	___aldiv@divisor+1,f
  6772  0DA8  09F2               	comf	___aldiv@divisor+2,f
  6773  0DA9  09F3               	comf	___aldiv@divisor+3,f
  6774  0DAA  0AF0               	incf	___aldiv@divisor,f
  6775  0DAB  1903               	skipnz
  6776  0DAC  0AF1               	incf	___aldiv@divisor+1,f
  6777  0DAD  1903               	skipnz
  6778  0DAE  0AF2               	incf	___aldiv@divisor+2,f
  6779  0DAF  1903               	skipnz
  6780  0DB0  0AF3               	incf	___aldiv@divisor+3,f
  6781  0DB1  01A1               	clrf	___aldiv@sign
  6782  0DB2  0AA1               	incf	___aldiv@sign,f
  6783  0DB3                     l375:	
  6784  0DB3  1FF7               	btfss	___aldiv@dividend+3,7
  6785  0DB4  2DC4               	goto	l2214
  6786  0DB5  09F4               	comf	___aldiv@dividend,f
  6787  0DB6  09F5               	comf	___aldiv@dividend+1,f
  6788  0DB7  09F6               	comf	___aldiv@dividend+2,f
  6789  0DB8  09F7               	comf	___aldiv@dividend+3,f
  6790  0DB9  0AF4               	incf	___aldiv@dividend,f
  6791  0DBA  1903               	skipnz
  6792  0DBB  0AF5               	incf	___aldiv@dividend+1,f
  6793  0DBC  1903               	skipnz
  6794  0DBD  0AF6               	incf	___aldiv@dividend+2,f
  6795  0DBE  1903               	skipnz
  6796  0DBF  0AF7               	incf	___aldiv@dividend+3,f
  6797  0DC0  3001               	movlw	1
  6798  0DC1  00F8               	movwf	??___aldiv
  6799  0DC2  0878               	movf	??___aldiv,w
  6800  0DC3  06A1               	xorwf	___aldiv@sign,f
  6801  0DC4                     l2214:	
  6802  0DC4  3000               	movlw	0
  6803  0DC5  00A5               	movwf	___aldiv@quotient+3
  6804  0DC6  3000               	movlw	0
  6805  0DC7  00A4               	movwf	___aldiv@quotient+2
  6806  0DC8  3000               	movlw	0
  6807  0DC9  00A3               	movwf	___aldiv@quotient+1
  6808  0DCA  3000               	movlw	0
  6809  0DCB  00A2               	movwf	___aldiv@quotient
  6810  0DCC  0873               	movf	___aldiv@divisor+3,w
  6811  0DCD  0472               	iorwf	___aldiv@divisor+2,w
  6812  0DCE  0471               	iorwf	___aldiv@divisor+1,w
  6813  0DCF  0470               	iorwf	___aldiv@divisor,w
  6814  0DD0  1903               	skipnz
  6815  0DD1  2E0D               	goto	l2236
  6816  0DD2  01A0               	clrf	___aldiv@counter
  6817  0DD3  0AA0               	incf	___aldiv@counter,f
  6818  0DD4                     l2222:	
  6819  0DD4  1BF3               	btfsc	___aldiv@divisor+3,7
  6820  0DD5  2DE2               	goto	l2224
  6821  0DD6  3001               	movlw	1
  6822  0DD7                     u2415:	
  6823  0DD7  35F0               	lslf	___aldiv@divisor,f
  6824  0DD8  0DF1               	rlf	___aldiv@divisor+1,f
  6825  0DD9  0DF2               	rlf	___aldiv@divisor+2,f
  6826  0DDA  0DF3               	rlf	___aldiv@divisor+3,f
  6827  0DDB  0B89               	decfsz	9,f
  6828  0DDC  2DD7               	goto	u2415
  6829  0DDD  3001               	movlw	1
  6830  0DDE  00F8               	movwf	??___aldiv
  6831  0DDF  0878               	movf	??___aldiv,w
  6832  0DE0  07A0               	addwf	___aldiv@counter,f
  6833  0DE1  2DD4               	goto	l2222
  6834  0DE2                     l2224:	
  6835  0DE2  3001               	movlw	1
  6836  0DE3                     u2435:	
  6837  0DE3  35A2               	lslf	___aldiv@quotient,f
  6838  0DE4  0DA3               	rlf	___aldiv@quotient+1,f
  6839  0DE5  0DA4               	rlf	___aldiv@quotient+2,f
  6840  0DE6  0DA5               	rlf	___aldiv@quotient+3,f
  6841  0DE7  0B89               	decfsz	9,f
  6842  0DE8  2DE3               	goto	u2435
  6843  0DE9  0873               	movf	___aldiv@divisor+3,w
  6844  0DEA  0277               	subwf	___aldiv@dividend+3,w
  6845  0DEB  1D03               	skipz
  6846  0DEC  2DF7               	goto	u2445
  6847  0DED  0872               	movf	___aldiv@divisor+2,w
  6848  0DEE  0276               	subwf	___aldiv@dividend+2,w
  6849  0DEF  1D03               	skipz
  6850  0DF0  2DF7               	goto	u2445
  6851  0DF1  0871               	movf	___aldiv@divisor+1,w
  6852  0DF2  0275               	subwf	___aldiv@dividend+1,w
  6853  0DF3  1D03               	skipz
  6854  0DF4  2DF7               	goto	u2445
  6855  0DF5  0870               	movf	___aldiv@divisor,w
  6856  0DF6  0274               	subwf	___aldiv@dividend,w
  6857  0DF7                     u2445:	
  6858  0DF7  1C03               	skipc
  6859  0DF8  2E02               	goto	l2232
  6860  0DF9  0870               	movf	___aldiv@divisor,w
  6861  0DFA  02F4               	subwf	___aldiv@dividend,f
  6862  0DFB  0871               	movf	___aldiv@divisor+1,w
  6863  0DFC  3BF5               	subwfb	___aldiv@dividend+1,f
  6864  0DFD  0872               	movf	___aldiv@divisor+2,w
  6865  0DFE  3BF6               	subwfb	___aldiv@dividend+2,f
  6866  0DFF  0873               	movf	___aldiv@divisor+3,w
  6867  0E00  3BF7               	subwfb	___aldiv@dividend+3,f
  6868  0E01  1422               	bsf	___aldiv@quotient,0
  6869  0E02                     l2232:	
  6870  0E02  3001               	movlw	1
  6871  0E03                     u2455:	
  6872  0E03  36F3               	lsrf	___aldiv@divisor+3,f
  6873  0E04  0CF2               	rrf	___aldiv@divisor+2,f
  6874  0E05  0CF1               	rrf	___aldiv@divisor+1,f
  6875  0E06  0CF0               	rrf	___aldiv@divisor,f
  6876  0E07  0B89               	decfsz	9,f
  6877  0E08  2E03               	goto	u2455
  6878  0E09  3001               	movlw	1
  6879  0E0A  02A0               	subwf	___aldiv@counter,f
  6880  0E0B  1D03               	btfss	3,2
  6881  0E0C  2DE2               	goto	l2224
  6882  0E0D                     l2236:	
  6883  0E0D  0821               	movf	___aldiv@sign,w
  6884  0E0E  1903               	btfsc	3,2
  6885  0E0F  2E1B               	goto	l2240
  6886  0E10  09A2               	comf	___aldiv@quotient,f
  6887  0E11  09A3               	comf	___aldiv@quotient+1,f
  6888  0E12  09A4               	comf	___aldiv@quotient+2,f
  6889  0E13  09A5               	comf	___aldiv@quotient+3,f
  6890  0E14  0AA2               	incf	___aldiv@quotient,f
  6891  0E15  1903               	skipnz
  6892  0E16  0AA3               	incf	___aldiv@quotient+1,f
  6893  0E17  1903               	skipnz
  6894  0E18  0AA4               	incf	___aldiv@quotient+2,f
  6895  0E19  1903               	skipnz
  6896  0E1A  0AA5               	incf	___aldiv@quotient+3,f
  6897  0E1B                     l2240:	
  6898  0E1B  0825               	movf	___aldiv@quotient+3,w
  6899  0E1C  00F3               	movwf	?___aldiv+3
  6900  0E1D  0824               	movf	___aldiv@quotient+2,w
  6901  0E1E  00F2               	movwf	?___aldiv+2
  6902  0E1F  0823               	movf	___aldiv@quotient+1,w
  6903  0E20  00F1               	movwf	?___aldiv+1
  6904  0E21  0822               	movf	___aldiv@quotient,w
  6905  0E22  00F0               	movwf	?___aldiv
  6906  0E23  0008               	return
  6907  0E24                     __end_of___aldiv:	
  6908                           
  6909                           	psect	text15
  6910  0AE7                     __ptext15:	
  6911 ;; *************** function _SYSTEM_Initialize *****************
  6912 ;; Defined at:
  6913 ;;		line 37 in file "system.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;		None
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;Total ram usage:        2 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    3
  6934 ;; This function calls:
  6935 ;;		_ADCC_Initialize
  6936 ;;		_InitCustomChars
  6937 ;;		_LCD_Clear
  6938 ;;		_LCD_Init
  6939 ;;		_OSCILLATOR_Initialize
  6940 ;;		_PIN_MANAGER_Initialize
  6941 ;; This function is called by:
  6942 ;;		_main
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           
  6947                           ;psect for function _SYSTEM_Initialize
  6948  0AE7                     _SYSTEM_Initialize:	
  6949                           
  6950                           ;system.c: 39: PIN_MANAGER_Initialize();
  6951                           
  6952                           ;incstack = 0
  6953                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6954  0AE7  318A  22B8  318A   	fcall	_PIN_MANAGER_Initialize
  6955                           
  6956                           ;system.c: 40: OSCILLATOR_Initialize();
  6957  0AEA  3189  217A  318A   	fcall	_OSCILLATOR_Initialize
  6958                           
  6959                           ;system.c: 41: FVRCON = 0x00;
  6960  0AED  0032               	movlb	18	; select bank18
  6961  0AEE  018C               	clrf	12	;volatile
  6962                           
  6963                           ;system.c: 42: ADCC_Initialize();
  6964  0AEF  3189  21FD  318A   	fcall	_ADCC_Initialize
  6965                           
  6966                           ;system.c: 46: LCD_Init(0X00);
  6967  0AF2  3000               	movlw	0
  6968  0AF3  318D  2527  318A   	fcall	_LCD_Init
  6969                           
  6970                           ;system.c: 47: _delay((unsigned long)((200)*(1000000/4000.0)));
  6971  0AF6  3041               	movlw	65
  6972  0AF7  00F8               	movwf	??_SYSTEM_Initialize+1
  6973  0AF8  30EE               	movlw	238
  6974  0AF9  00F7               	movwf	??_SYSTEM_Initialize
  6975  0AFA                     u2727:	
  6976  0AFA  0BF7               	decfsz	??_SYSTEM_Initialize,f
  6977  0AFB  2AFA               	goto	u2727
  6978  0AFC  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  6979  0AFD  2AFA               	goto	u2727
  6980  0AFE  0000               	nop
  6981                           
  6982                           ;system.c: 48: LCD_Clear();
  6983  0AFF  3189  2172  318A   	fcall	_LCD_Clear
  6984                           
  6985                           ;system.c: 49: _delay((unsigned long)((100)*(1000000/4000.0)));
  6986  0B02  3021               	movlw	33
  6987  0B03  00F8               	movwf	??_SYSTEM_Initialize+1
  6988  0B04  3076               	movlw	118
  6989  0B05  00F7               	movwf	??_SYSTEM_Initialize
  6990  0B06                     u2737:	
  6991  0B06  0BF7               	decfsz	??_SYSTEM_Initialize,f
  6992  0B07  2B06               	goto	u2737
  6993  0B08  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  6994  0B09  2B06               	goto	u2737
  6995  0B0A  0000               	nop
  6996                           
  6997                           ;system.c: 50: InitCustomChars();
  6998  0B0B  318A  2269  318A   	fcall	_InitCustomChars
  6999                           
  7000                           ;system.c: 51: _delay((unsigned long)((200)*(1000000/4000.0)));
  7001  0B0E  3041               	movlw	65
  7002  0B0F  00F8               	movwf	??_SYSTEM_Initialize+1
  7003  0B10  30EE               	movlw	238
  7004  0B11  00F7               	movwf	??_SYSTEM_Initialize
  7005  0B12                     u2747:	
  7006  0B12  0BF7               	decfsz	??_SYSTEM_Initialize,f
  7007  0B13  2B12               	goto	u2747
  7008  0B14  0BF8               	decfsz	??_SYSTEM_Initialize+1,f
  7009  0B15  2B12               	goto	u2747
  7010  0B16  0000               	nop
  7011  0B17  0008               	return
  7012  0B18                     __end_of_SYSTEM_Initialize:	
  7013                           
  7014                           	psect	text16
  7015  0AB8                     __ptext16:	
  7016 ;; *************** function _PIN_MANAGER_Initialize *****************
  7017 ;; Defined at:
  7018 ;;		line 5 in file "pin_manager.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;		None
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  state           1    0[COMMON] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      void 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;Total ram usage:        1 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_SYSTEM_Initialize
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           
  7046                           ;psect for function _PIN_MANAGER_Initialize
  7047  0AB8                     _PIN_MANAGER_Initialize:	
  7048                           
  7049                           ;pin_manager.c: 7: LATA = 0x00;
  7050                           
  7051                           ;incstack = 0
  7052                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7053  0AB8  0020               	movlb	0	; select bank0
  7054  0AB9  0196               	clrf	22	;volatile
  7055                           
  7056                           ;pin_manager.c: 8: LATB = 0x0;
  7057  0ABA  0197               	clrf	23	;volatile
  7058                           
  7059                           ;pin_manager.c: 9: LATC = 0x0;
  7060  0ABB  0198               	clrf	24	;volatile
  7061                           
  7062                           ;pin_manager.c: 11: WPUA = 0x00;
  7063  0ABC  003E               	movlb	30	; select bank30
  7064  0ABD  01B9               	clrf	57	;volatile
  7065                           
  7066                           ;pin_manager.c: 12: WPUB = 0x00;
  7067  0ABE  01C4               	clrf	68	;volatile
  7068                           
  7069                           ;pin_manager.c: 13: WPUC = 0x00;
  7070  0ABF  01CF               	clrf	79	;volatile
  7071                           
  7072                           ;pin_manager.c: 14: WPUE = 0x8;
  7073  0AC0  3008               	movlw	8
  7074  0AC1  00E5               	movwf	101	;volatile
  7075                           
  7076                           ;pin_manager.c: 16: TRISA = 0x00;
  7077  0AC2  0020               	movlb	0	; select bank0
  7078  0AC3  0191               	clrf	17	;volatile
  7079                           
  7080                           ;pin_manager.c: 17: TRISB = 0x00;
  7081  0AC4  0192               	clrf	18	;volatile
  7082                           
  7083                           ;pin_manager.c: 18: TRISC = 0x10;
  7084  0AC5  3010               	movlw	16
  7085  0AC6  0093               	movwf	19	;volatile
  7086                           
  7087                           ;pin_manager.c: 20: ANSELA = 0x00;
  7088  0AC7  003E               	movlb	30	; select bank30
  7089  0AC8  01B8               	clrf	56	;volatile
  7090                           
  7091                           ;pin_manager.c: 21: ANSELB = 0x00;
  7092  0AC9  01C3               	clrf	67	;volatile
  7093                           
  7094                           ;pin_manager.c: 22: ANSELC = 0x00;
  7095  0ACA  01CE               	clrf	78	;volatile
  7096                           
  7097                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  7098  0ACB  002E               	movlb	14	; select bank14
  7099  0ACC  1216               	bcf	22,4	;volatile
  7100                           
  7101                           ;pin_manager.c: 25: bool state = GIE;
  7102  0ACD  3000               	movlw	0
  7103  0ACE  1B8B               	btfsc	11,7	;volatile
  7104  0ACF  3001               	movlw	1
  7105  0AD0  00F0               	movwf	PIN_MANAGER_Initialize@state
  7106                           
  7107                           ;pin_manager.c: 26: GIE = 0;
  7108  0AD1  138B               	bcf	11,7	;volatile
  7109                           
  7110                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  7111  0AD2  3055               	movlw	85
  7112  0AD3  003D               	movlb	29	; select bank29
  7113  0AD4  008F               	movwf	15	;volatile
  7114                           
  7115                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  7116  0AD5  30AA               	movlw	170
  7117  0AD6  008F               	movwf	15	;volatile
  7118                           
  7119                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  7120  0AD7  100F               	bcf	15,0	;volatile
  7121                           
  7122                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  7123  0AD8  300E               	movlw	14
  7124  0AD9  003E               	movlb	30	; select bank30
  7125  0ADA  0091               	movwf	17	;volatile
  7126                           
  7127                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  7128  0ADB  3055               	movlw	85
  7129  0ADC  003D               	movlb	29	; select bank29
  7130  0ADD  008F               	movwf	15	;volatile
  7131                           
  7132                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  7133  0ADE  30AA               	movlw	170
  7134  0ADF  008F               	movwf	15	;volatile
  7135                           
  7136                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  7137  0AE0  140F               	bsf	15,0	;volatile
  7138                           
  7139                           ;pin_manager.c: 39: GIE = state;
  7140  0AE1  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  7141  0AE2  2AE5               	goto	u1940
  7142  0AE3  178B               	bsf	11,7	;volatile
  7143  0AE4  0008               	return
  7144  0AE5                     u1940:	
  7145  0AE5  138B               	bcf	11,7	;volatile
  7146  0AE6  0008               	return
  7147  0AE7                     __end_of_PIN_MANAGER_Initialize:	
  7148                           
  7149                           	psect	text17
  7150  097A                     __ptext17:	
  7151 ;; *************** function _OSCILLATOR_Initialize *****************
  7152 ;; Defined at:
  7153 ;;		line 55 in file "system.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; This function calls:
  7174 ;;		Nothing
  7175 ;; This function is called by:
  7176 ;;		_SYSTEM_Initialize
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           
  7181                           ;psect for function _OSCILLATOR_Initialize
  7182  097A                     _OSCILLATOR_Initialize:	
  7183                           
  7184                           ;system.c: 57: OSCCON1 = 0x60;
  7185                           
  7186                           ;incstack = 0
  7187                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7188  097A  3060               	movlw	96
  7189  097B  0031               	movlb	17	; select bank17
  7190  097C  008D               	movwf	13	;volatile
  7191                           
  7192                           ;system.c: 58: OSCCON3 = 0x00;
  7193  097D  018F               	clrf	15	;volatile
  7194                           
  7195                           ;system.c: 59: OSCEN = 0x00;
  7196  097E  0191               	clrf	17	;volatile
  7197                           
  7198                           ;system.c: 60: OSCFRQ = 0x00;
  7199  097F  0193               	clrf	19	;volatile
  7200                           
  7201                           ;system.c: 61: OSCTUNE = 0x00;
  7202  0980  0192               	clrf	18	;volatile
  7203  0981  0008               	return
  7204  0982                     __end_of_OSCILLATOR_Initialize:	
  7205                           
  7206                           	psect	text18
  7207  0D27                     __ptext18:	
  7208 ;; *************** function _LCD_Init *****************
  7209 ;; Defined at:
  7210 ;;		line 154 in file "lcd.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  style           1    wreg     unsigned char 
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;  style           1    5[COMMON] unsigned char 
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, status,2, status,0, pclath, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;Total ram usage:        3 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    2
  7231 ;; This function calls:
  7232 ;;		_LCD_Cmd
  7233 ;;		_LCD_Port
  7234 ;; This function is called by:
  7235 ;;		_SYSTEM_Initialize
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           
  7240                           ;psect for function _LCD_Init
  7241  0D27                     _LCD_Init:	
  7242                           
  7243                           ;incstack = 0
  7244                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7245                           ;LCD_Init@style stored from wreg
  7246  0D27  00F5               	movwf	LCD_Init@style
  7247                           
  7248                           ;lcd.c: 156: LCD_Port(0x00);
  7249  0D28  3000               	movlw	0
  7250  0D29  3189  21CD  318D   	fcall	_LCD_Port
  7251                           
  7252                           ;lcd.c: 158: _delay((unsigned long)((100)*(1000000/4000.0)));
  7253  0D2C  3021               	movlw	33
  7254  0D2D  00F4               	movwf	??_LCD_Init+1
  7255  0D2E  3076               	movlw	118
  7256  0D2F  00F3               	movwf	??_LCD_Init
  7257  0D30                     u2757:	
  7258  0D30  0BF3               	decfsz	??_LCD_Init,f
  7259  0D31  2D30               	goto	u2757
  7260  0D32  0BF4               	decfsz	??_LCD_Init+1,f
  7261  0D33  2D30               	goto	u2757
  7262  0D34  0000               	nop
  7263                           
  7264                           ;lcd.c: 160: LCD_Cmd(0x03);
  7265  0D35  3003               	movlw	3
  7266  0D36  3189  21A8  318D   	fcall	_LCD_Cmd
  7267                           
  7268                           ;lcd.c: 162: _delay((unsigned long)((10)*(1000000/4000.0)));
  7269  0D39  3004               	movlw	4
  7270  0D3A  00F4               	movwf	??_LCD_Init+1
  7271  0D3B  303D               	movlw	61
  7272  0D3C  00F3               	movwf	??_LCD_Init
  7273  0D3D                     u2767:	
  7274  0D3D  0BF3               	decfsz	??_LCD_Init,f
  7275  0D3E  2D3D               	goto	u2767
  7276  0D3F  0BF4               	decfsz	??_LCD_Init+1,f
  7277  0D40  2D3D               	goto	u2767
  7278  0D41  3200               	nop2
  7279                           
  7280                           ;lcd.c: 164: LCD_Cmd(0x03);
  7281  0D42  3003               	movlw	3
  7282  0D43  3189  21A8  318D   	fcall	_LCD_Cmd
  7283                           
  7284                           ;lcd.c: 166: _delay((unsigned long)((120)*(1000000/4000000.0)));
  7285  0D46  3009               	movlw	9
  7286  0D47  00F3               	movwf	??_LCD_Init
  7287  0D48                     u2777:	
  7288  0D48  0BF3               	decfsz	??_LCD_Init,f
  7289  0D49  2D48               	goto	u2777
  7290  0D4A  3200               	nop2	;nop
  7291                           
  7292                           ;lcd.c: 168: LCD_Cmd(0x03);
  7293  0D4B  3003               	movlw	3
  7294  0D4C  3189  21A8  318D   	fcall	_LCD_Cmd
  7295                           
  7296                           ;lcd.c: 170: _delay((unsigned long)((120)*(1000000/4000000.0)));
  7297  0D4F  3009               	movlw	9
  7298  0D50  00F3               	movwf	??_LCD_Init
  7299  0D51                     u2787:	
  7300  0D51  0BF3               	decfsz	??_LCD_Init,f
  7301  0D52  2D51               	goto	u2787
  7302  0D53  3200               	nop2	;nop
  7303                           
  7304                           ;lcd.c: 172: LCD_Cmd(0x02);
  7305  0D54  3002               	movlw	2
  7306  0D55  3189  21A8  318D   	fcall	_LCD_Cmd
  7307                           
  7308                           ;lcd.c: 174: _delay((unsigned long)((120)*(1000000/4000000.0)));
  7309  0D58  3009               	movlw	9
  7310  0D59  00F3               	movwf	??_LCD_Init
  7311  0D5A                     u2797:	
  7312  0D5A  0BF3               	decfsz	??_LCD_Init,f
  7313  0D5B  2D5A               	goto	u2797
  7314  0D5C  3200               	nop2	;nop
  7315                           
  7316                           ;lcd.c: 176: LCD_Cmd(0x2);
  7317  0D5D  3002               	movlw	2
  7318  0D5E  3189  21A8  318D   	fcall	_LCD_Cmd
  7319                           
  7320                           ;lcd.c: 178: LCD_Cmd(0x8);
  7321  0D61  3008               	movlw	8
  7322  0D62  3189  21A8  318D   	fcall	_LCD_Cmd
  7323                           
  7324                           ;lcd.c: 180: _delay((unsigned long)((120)*(1000000/4000000.0)));
  7325  0D65  3009               	movlw	9
  7326  0D66  00F3               	movwf	??_LCD_Init
  7327  0D67                     u2807:	
  7328  0D67  0BF3               	decfsz	??_LCD_Init,f
  7329  0D68  2D67               	goto	u2807
  7330  0D69  3200               	nop2	;nop
  7331                           
  7332                           ;lcd.c: 182: LCD_Cmd(0x0);
  7333  0D6A  3000               	movlw	0
  7334  0D6B  3189  21A8  318D   	fcall	_LCD_Cmd
  7335                           
  7336                           ;lcd.c: 184: LCD_Cmd(0x8);
  7337  0D6E  3008               	movlw	8
  7338  0D6F  3189  21A8  318D   	fcall	_LCD_Cmd
  7339                           
  7340                           ;lcd.c: 186: _delay((unsigned long)((120)*(1000000/4000000.0)));
  7341  0D72  3009               	movlw	9
  7342  0D73  00F3               	movwf	??_LCD_Init
  7343  0D74                     u2817:	
  7344  0D74  0BF3               	decfsz	??_LCD_Init,f
  7345  0D75  2D74               	goto	u2817
  7346  0D76  3200               	nop2	;nop
  7347                           
  7348                           ;lcd.c: 188: LCD_Cmd(0x0);
  7349  0D77  3000               	movlw	0
  7350  0D78  3189  21A8  318D   	fcall	_LCD_Cmd
  7351                           
  7352                           ;lcd.c: 190: LCD_Cmd(0x1);
  7353  0D7B  3001               	movlw	1
  7354  0D7C  3189  21A8  318D   	fcall	_LCD_Cmd
  7355                           
  7356                           ;lcd.c: 192: _delay((unsigned long)((5)*(1000000/4000.0)));
  7357  0D7F  30F9               	movlw	249
  7358  0D80  00F3               	movwf	??_LCD_Init
  7359  0D81                     u2827:	
  7360  0D81  3200               	nop2
  7361  0D82  0BF3               	decfsz	??_LCD_Init,f
  7362  0D83  2D81               	goto	u2827
  7363  0D84  3200               	nop2	;nop
  7364  0D85  3200               	nop2	;nop
  7365                           
  7366                           ;lcd.c: 194: LCD_Cmd(0x0);
  7367  0D86  3000               	movlw	0
  7368  0D87  3189  21A8  318D   	fcall	_LCD_Cmd
  7369                           
  7370                           ;lcd.c: 196: LCD_Cmd(0x6);
  7371  0D8A  3006               	movlw	6
  7372  0D8B  3189  21A8  318D   	fcall	_LCD_Cmd
  7373                           
  7374                           ;lcd.c: 198: _delay((unsigned long)((120)*(1000000/4000000.0)));
  7375  0D8E  3009               	movlw	9
  7376  0D8F  00F3               	movwf	??_LCD_Init
  7377  0D90                     u2837:	
  7378  0D90  0BF3               	decfsz	??_LCD_Init,f
  7379  0D91  2D90               	goto	u2837
  7380  0D92  3200               	nop2	;nop
  7381                           
  7382                           ;lcd.c: 200: LCD_Cmd(0x0);
  7383  0D93  3000               	movlw	0
  7384  0D94  3189  21A8  318D   	fcall	_LCD_Cmd
  7385                           
  7386                           ;lcd.c: 202: LCD_Cmd(0xc|style);
  7387  0D97  0875               	movf	LCD_Init@style,w
  7388  0D98  380C               	iorlw	12
  7389  0D99  3189  21A8  318D   	fcall	_LCD_Cmd
  7390                           
  7391                           ;lcd.c: 204: _delay((unsigned long)((120)*(1000000/4000000.0)));
  7392  0D9C  3009               	movlw	9
  7393  0D9D  00F3               	movwf	??_LCD_Init
  7394  0D9E                     u2847:	
  7395  0D9E  0BF3               	decfsz	??_LCD_Init,f
  7396  0D9F  2D9E               	goto	u2847
  7397  0DA0  3200               	nop2	;nop
  7398  0DA1  0008               	return
  7399  0DA2                     __end_of_LCD_Init:	
  7400                           
  7401                           	psect	text19
  7402  0972                     __ptext19:	
  7403 ;; *************** function _LCD_Clear *****************
  7404 ;; Defined at:
  7405 ;;		line 75 in file "lcd.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;		None
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0, pclath, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;Total ram usage:        0 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    2
  7426 ;; This function calls:
  7427 ;;		_LCD_Cmd
  7428 ;; This function is called by:
  7429 ;;		_SYSTEM_Initialize
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function _LCD_Clear
  7435  0972                     _LCD_Clear:	
  7436                           
  7437                           ;lcd.c: 77: LCD_Cmd(0);
  7438                           
  7439                           ;incstack = 0
  7440                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7441  0972  3000               	movlw	0
  7442  0973  3189  21A8  3189   	fcall	_LCD_Cmd
  7443                           
  7444                           ;lcd.c: 78: LCD_Cmd(1);
  7445  0976  3001               	movlw	1
  7446  0977  3189  21A8         	fcall	_LCD_Cmd
  7447  0979  0008               	return
  7448  097A                     __end_of_LCD_Clear:	
  7449                           
  7450                           	psect	text20
  7451  0A69                     __ptext20:	
  7452 ;; *************** function _InitCustomChars *****************
  7453 ;; Defined at:
  7454 ;;		line 29 in file "lcd.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  i               1    6[COMMON] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;Total ram usage:        2 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    2
  7475 ;; This function calls:
  7476 ;;		_LCD_Cmd
  7477 ;;		_LCD_Write_Char
  7478 ;; This function is called by:
  7479 ;;		_SYSTEM_Initialize
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _InitCustomChars
  7485  0A69                     _InitCustomChars:	
  7486                           
  7487                           ;lcd.c: 31: uint8_t i;
  7488                           ;lcd.c: 32: LCD_Cmd(0x04);
  7489                           
  7490                           ;incstack = 0
  7491                           ; Regs used in _InitCustomChars: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7492  0A69  3004               	movlw	4
  7493  0A6A  3189  21A8  318A   	fcall	_LCD_Cmd
  7494                           
  7495                           ;lcd.c: 33: LCD_Cmd(0x00);
  7496  0A6D  3000               	movlw	0
  7497  0A6E  3189  21A8  318A   	fcall	_LCD_Cmd
  7498                           
  7499                           ;lcd.c: 34: for (i = 0; i < sizeof(__cgram) ; i++)
  7500  0A71  01F6               	clrf	InitCustomChars@i
  7501  0A72  3018               	movlw	24
  7502  0A73  0276               	subwf	InitCustomChars@i,w
  7503  0A74  1803               	btfsc	3,0
  7504  0A75  2A86               	goto	l1860
  7505  0A76                     l1854:	
  7506                           
  7507                           ;lcd.c: 35: LCD_Write_Char(__cgram[i]);
  7508  0A76  0876               	movf	InitCustomChars@i,w
  7509  0A77  3EBC               	addlw	(low (___cgram| 0))& (0+255)
  7510  0A78  0086               	movwf	6
  7511  0A79  0187               	clrf	7
  7512  0A7A  0801               	movf	1,w
  7513  0A7B  318A  228E  318A   	fcall	_LCD_Write_Char
  7514  0A7E  3001               	movlw	1
  7515  0A7F  00F5               	movwf	??_InitCustomChars
  7516  0A80  0875               	movf	??_InitCustomChars,w
  7517  0A81  07F6               	addwf	InitCustomChars@i,f
  7518  0A82  3018               	movlw	24
  7519  0A83  0276               	subwf	InitCustomChars@i,w
  7520  0A84  1C03               	skipc
  7521  0A85  2A76               	goto	l1854
  7522  0A86                     l1860:	
  7523                           
  7524                           ;lcd.c: 36: LCD_Cmd(0);
  7525  0A86  3000               	movlw	0
  7526  0A87  3189  21A8  318A   	fcall	_LCD_Cmd
  7527                           
  7528                           ;lcd.c: 37: LCD_Cmd(2);
  7529  0A8A  3002               	movlw	2
  7530  0A8B  3189  21A8         	fcall	_LCD_Cmd
  7531  0A8D  0008               	return
  7532  0A8E                     __end_of_InitCustomChars:	
  7533                           
  7534                           	psect	text21
  7535  09FD                     __ptext21:	
  7536 ;; *************** function _ADCC_Initialize *****************
  7537 ;; Defined at:
  7538 ;;		line 5 in file "adcc.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;		None
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;		None
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  1    wreg      void 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;Total ram usage:        0 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_SYSTEM_Initialize
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           
  7566                           ;psect for function _ADCC_Initialize
  7567  09FD                     _ADCC_Initialize:	
  7568                           
  7569                           ;adcc.c: 8: ADCON1 = 0x00;
  7570                           
  7571                           ;incstack = 0
  7572                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7573  09FD  0021               	movlb	1	; select bank1
  7574  09FE  0194               	clrf	20	;volatile
  7575                           
  7576                           ;adcc.c: 10: ADCON2 = 0x00;
  7577  09FF  0195               	clrf	21	;volatile
  7578                           
  7579                           ;adcc.c: 12: ADCON3 = 0x00;
  7580  0A00  0196               	clrf	22	;volatile
  7581                           
  7582                           ;adcc.c: 14: ADACT = 0x00;
  7583  0A01  0199               	clrf	25	;volatile
  7584                           
  7585                           ;adcc.c: 16: ADSTAT = 0x00;
  7586  0A02  0197               	clrf	23	;volatile
  7587                           
  7588                           ;adcc.c: 18: ADCLK = 0x0F;
  7589  0A03  300F               	movlw	15
  7590  0A04  0098               	movwf	24	;volatile
  7591                           
  7592                           ;adcc.c: 21: ADREF = 0x00;
  7593  0A05  019A               	clrf	26	;volatile
  7594                           
  7595                           ;adcc.c: 23: ADCAP = 0x00;
  7596  0A06  019B               	clrf	27	;volatile
  7597                           
  7598                           ;adcc.c: 25: ADPRE = 0x00;
  7599  0A07  019C               	clrf	28	;volatile
  7600                           
  7601                           ;adcc.c: 27: ADACQ = 0x00;
  7602  0A08  019D               	clrf	29	;volatile
  7603                           
  7604                           ;adcc.c: 29: ADPCH = 0x00;
  7605  0A09  019E               	clrf	30	;volatile
  7606                           
  7607                           ;adcc.c: 31: ADRPT = 0x00;
  7608  0A0A  0022               	movlb	2	; select bank2
  7609  0A0B  018D               	clrf	13	;volatile
  7610                           
  7611                           ;adcc.c: 33: ADLTHL = 0x00;
  7612  0A0C  018E               	clrf	14	;volatile
  7613                           
  7614                           ;adcc.c: 35: ADLTHH = 0x00;
  7615  0A0D  018F               	clrf	15	;volatile
  7616                           
  7617                           ;adcc.c: 37: ADUTHL = 0x00;
  7618  0A0E  0190               	clrf	16	;volatile
  7619                           
  7620                           ;adcc.c: 39: ADUTHH = 0x00;
  7621  0A0F  0191               	clrf	17	;volatile
  7622                           
  7623                           ;adcc.c: 41: ADSTPTL = 0x00;
  7624  0A10  0192               	clrf	18	;volatile
  7625                           
  7626                           ;adcc.c: 43: ADSTPTH = 0x00;
  7627  0A11  0193               	clrf	19	;volatile
  7628                           
  7629                           ;adcc.c: 46: ADCON0 = 0x84;
  7630  0A12  3084               	movlw	132
  7631  0A13  0021               	movlb	1	; select bank1
  7632  0A14  0093               	movwf	19	;volatile
  7633  0A15  0008               	return
  7634  0A16                     __end_of_ADCC_Initialize:	
  7635                           
  7636                           	psect	text22
  7637  0A16                     __ptext22:	
  7638 ;; *************** function _LCD_Write_String *****************
  7639 ;; Defined at:
  7640 ;;		line 239 in file "lcd.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  a               2    5[COMMON] PTR const unsigned char 
  7643 ;;		 -> STR_2(12), STR_1(9), 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  i               2    8[COMMON] int 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;Total ram usage:        5 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    2
  7662 ;; This function calls:
  7663 ;;		_LCD_Write_Char
  7664 ;; This function is called by:
  7665 ;;		_main
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           
  7670                           ;psect for function _LCD_Write_String
  7671  0A16                     _LCD_Write_String:	
  7672                           
  7673                           ;lcd.c: 241: int i;
  7674                           ;lcd.c: 242: for(i=0;a[i]!='\0';i++)
  7675                           
  7676                           ;incstack = 0
  7677                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7678  0A16  01F8               	clrf	LCD_Write_String@i
  7679  0A17  01F9               	clrf	LCD_Write_String@i+1
  7680  0A18                     l2112:	
  7681  0A18  0875               	movf	LCD_Write_String@a,w
  7682  0A19  0778               	addwf	LCD_Write_String@i,w
  7683  0A1A  0084               	movwf	4
  7684  0A1B  0876               	movf	LCD_Write_String@a+1,w
  7685  0A1C  3D79               	addwfc	LCD_Write_String@i+1,w
  7686  0A1D  0085               	movwf	5
  7687  0A1E  0012               	moviw fsr0++
  7688  0A1F  1903               	btfsc	3,2
  7689  0A20  0008               	return
  7690                           
  7691                           ;lcd.c: 243: LCD_Write_Char(a[i]);
  7692  0A21  0875               	movf	LCD_Write_String@a,w
  7693  0A22  0778               	addwf	LCD_Write_String@i,w
  7694  0A23  0084               	movwf	4
  7695  0A24  0876               	movf	LCD_Write_String@a+1,w
  7696  0A25  3D79               	addwfc	LCD_Write_String@i+1,w
  7697  0A26  0085               	movwf	5
  7698  0A27  0800               	movf	0,w	;code access
  7699  0A28  318A  228E  318A   	fcall	_LCD_Write_Char
  7700  0A2B  3001               	movlw	1
  7701  0A2C  07F8               	addwf	LCD_Write_String@i,f
  7702  0A2D  3000               	movlw	0
  7703  0A2E  3DF9               	addwfc	LCD_Write_String@i+1,f
  7704  0A2F  2A18               	goto	l2112
  7705  0A30                     __end_of_LCD_Write_String:	
  7706                           
  7707                           	psect	text23
  7708  00DB                     __ptext23:	
  7709 ;; *************** function _LCD_Write_Int *****************
  7710 ;; Defined at:
  7711 ;;		line 246 in file "lcd.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;  value           2    0[BANK0 ] int 
  7714 ;;  fieldLength     1    2[BANK0 ] char 
  7715 ;;  numPlaces       1    3[BANK0 ] char 
  7716 ;;  sign            1    4[BANK0 ] char 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  str             5   10[BANK0 ] unsigned char [5]
  7719 ;;  i               2   17[BANK0 ] int 
  7720 ;;  j               2   15[BANK0 ] int 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  1    wreg      void 
  7723 ;; Registers used:
  7724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7730 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;Total ram usage:       19 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    2
  7737 ;; This function calls:
  7738 ;;		_LCD_Write_Char
  7739 ;;		___awdiv
  7740 ;;		___awmod
  7741 ;; This function is called by:
  7742 ;;		_main
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           
  7747                           ;psect for function _LCD_Write_Int
  7748  00DB                     _LCD_Write_Int:	
  7749                           
  7750                           ;lcd.c: 248: char str[5]={0,0,0,0,0};
  7751                           
  7752                           ;incstack = 0
  7753                           ; Regs used in _LCD_Write_Int: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7754  00DB  3067               	movlw	low LCD_Write_Int@F13677
  7755  00DC  0086               	movwf	6
  7756  00DD  3000               	movlw	high LCD_Write_Int@F13677
  7757  00DE  0087               	movwf	7
  7758  00DF  302A               	movlw	low LCD_Write_Int@str
  7759  00E0  0084               	movwf	4
  7760  00E1  3000               	movlw	high LCD_Write_Int@str
  7761  00E2  0085               	movwf	5
  7762  00E3  3005               	movlw	5
  7763  00E4  0020               	movlb	0	; select bank0
  7764  00E5  00A5               	movwf	??_LCD_Write_Int
  7765  00E6                     u2270:	
  7766  00E6  0016               	moviw fsr1++
  7767  00E7  001A               	movwi fsr0++
  7768  00E8  0BA5               	decfsz	??_LCD_Write_Int,f
  7769  00E9  28E6               	goto	u2270
  7770                           
  7771                           ;lcd.c: 249: int i=4,j=0;
  7772  00EA  3004               	movlw	4
  7773  00EB  00B1               	movwf	LCD_Write_Int@i
  7774  00EC  3000               	movlw	0
  7775  00ED  00B2               	movwf	LCD_Write_Int@i+1
  7776  00EE  01AF               	clrf	LCD_Write_Int@j
  7777  00EF  01B0               	clrf	LCD_Write_Int@j+1
  7778                           
  7779                           ;lcd.c: 251: if(value<0)
  7780  00F0  1FA1               	btfss	LCD_Write_Int@value+1,7
  7781  00F1  28FD               	goto	l2126
  7782                           
  7783                           ;lcd.c: 252: {
  7784                           ;lcd.c: 253: LCD_Write_Char('-');
  7785  00F2  302D               	movlw	45
  7786  00F3  318A  228E  3180   	fcall	_LCD_Write_Char
  7787                           
  7788                           ;lcd.c: 254: value=value*-1;
  7789  00F6  0020               	movlb	0	; select bank0
  7790  00F7  09A0               	comf	LCD_Write_Int@value,f
  7791  00F8  09A1               	comf	LCD_Write_Int@value+1,f
  7792  00F9  0AA0               	incf	LCD_Write_Int@value,f
  7793  00FA  1903               	skipnz
  7794  00FB  0AA1               	incf	LCD_Write_Int@value+1,f
  7795                           
  7796                           ;lcd.c: 255: }
  7797  00FC  2904               	goto	l2136
  7798  00FD                     l2126:	
  7799                           
  7800                           ;lcd.c: 257: else
  7801                           ;lcd.c: 258: {
  7802                           ;lcd.c: 259: if(sign == 1)
  7803  00FD  0324               	decf	LCD_Write_Int@sign,w
  7804  00FE  1D03               	btfss	3,2
  7805  00FF  2904               	goto	l2136
  7806                           
  7807                           ;lcd.c: 260: {
  7808                           ;lcd.c: 261: LCD_Write_Char('+');
  7809  0100  302B               	movlw	43
  7810  0101  318A  228E  3180   	fcall	_LCD_Write_Char
  7811  0104                     l2136:	
  7812                           ;lcd.c: 262: }
  7813                           ;lcd.c: 263: }
  7814                           ;lcd.c: 265: while(value)
  7815                           
  7816  0104  0020               	movlb	0	; select bank0
  7817  0105  0820               	movf	LCD_Write_Int@value,w
  7818  0106  0421               	iorwf	LCD_Write_Int@value+1,w
  7819  0107  1903               	btfsc	3,2
  7820  0108  2933               	goto	l2138
  7821                           
  7822                           ;lcd.c: 266: {
  7823                           ;lcd.c: 267: str[i]=value%10;
  7824  0109  300A               	movlw	10
  7825  010A  00F0               	movwf	___awmod@divisor
  7826  010B  3000               	movlw	0
  7827  010C  00F1               	movwf	___awmod@divisor+1
  7828  010D  0020               	movlb	0	; select bank0
  7829  010E  0821               	movf	LCD_Write_Int@value+1,w
  7830  010F  00F3               	movwf	___awmod@dividend+1
  7831  0110  0820               	movf	LCD_Write_Int@value,w
  7832  0111  00F2               	movwf	___awmod@dividend
  7833  0112  318B  23CD  3180   	fcall	___awmod
  7834  0115  0870               	movf	?___awmod,w
  7835  0116  0020               	movlb	0	; select bank0
  7836  0117  00A5               	movwf	??_LCD_Write_Int
  7837  0118  0831               	movf	LCD_Write_Int@i,w
  7838  0119  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7839  011A  0086               	movwf	6
  7840  011B  0187               	clrf	7
  7841  011C  0825               	movf	??_LCD_Write_Int,w
  7842  011D  0081               	movwf	1
  7843                           
  7844                           ;lcd.c: 268: value=value/10;
  7845  011E  300A               	movlw	10
  7846  011F  00F0               	movwf	___awdiv@divisor
  7847  0120  3000               	movlw	0
  7848  0121  00F1               	movwf	___awdiv@divisor+1
  7849  0122  0821               	movf	LCD_Write_Int@value+1,w
  7850  0123  00F3               	movwf	___awdiv@dividend+1
  7851  0124  0820               	movf	LCD_Write_Int@value,w
  7852  0125  00F2               	movwf	___awdiv@dividend
  7853  0126  318C  2412  3180   	fcall	___awdiv
  7854  0129  0871               	movf	?___awdiv+1,w
  7855  012A  0020               	movlb	0	; select bank0
  7856  012B  00A1               	movwf	LCD_Write_Int@value+1
  7857  012C  0870               	movf	?___awdiv,w
  7858  012D  00A0               	movwf	LCD_Write_Int@value
  7859                           
  7860                           ;lcd.c: 269: i--;
  7861  012E  30FF               	movlw	255
  7862  012F  07B1               	addwf	LCD_Write_Int@i,f
  7863  0130  30FF               	movlw	255
  7864  0131  3DB2               	addwfc	LCD_Write_Int@i+1,f
  7865  0132  2904               	goto	l2136
  7866  0133                     l2138:	
  7867                           
  7868                           ;lcd.c: 270: }
  7869                           ;lcd.c: 271: if(fieldLength==-1)
  7870  0133  0A22               	incf	LCD_Write_Int@fieldLength,w
  7871  0134  1903               	btfsc	3,2
  7872  0135  293B               	goto	l2144
  7873  0136  2943               	goto	l2146
  7874  0137                     l2142:	
  7875                           ;lcd.c: 272: {
  7876                           ;lcd.c: 273: while(str[j]==0)
  7877                           
  7878                           
  7879                           ;lcd.c: 274: {
  7880                           ;lcd.c: 275: j++;
  7881  0137  3001               	movlw	1
  7882  0138  07AF               	addwf	LCD_Write_Int@j,f
  7883  0139  3000               	movlw	0
  7884  013A  3DB0               	addwfc	LCD_Write_Int@j+1,f
  7885  013B                     l2144:	
  7886  013B  082F               	movf	LCD_Write_Int@j,w
  7887  013C  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7888  013D  0086               	movwf	6
  7889  013E  0187               	clrf	7
  7890  013F  0801               	movf	1,w
  7891  0140  1D03               	btfss	3,2
  7892  0141  2953               	goto	l2148
  7893  0142  2937               	goto	l2142
  7894  0143                     l2146:	
  7895                           ;lcd.c: 276: }
  7896                           ;lcd.c: 277: }
  7897                           
  7898                           
  7899                           ;lcd.c: 278: else
  7900                           ;lcd.c: 279: {
  7901                           ;lcd.c: 280: j=5-fieldLength;
  7902  0143  0822               	movf	LCD_Write_Int@fieldLength,w
  7903  0144  00A5               	movwf	??_LCD_Write_Int
  7904  0145  01A6               	clrf	??_LCD_Write_Int+1
  7905  0146  1BA5               	btfsc	??_LCD_Write_Int,7
  7906  0147  03A6               	decf	??_LCD_Write_Int+1,f
  7907  0148  09A5               	comf	??_LCD_Write_Int,f
  7908  0149  09A6               	comf	??_LCD_Write_Int+1,f
  7909  014A  0AA5               	incf	??_LCD_Write_Int,f
  7910  014B  1903               	skipnz
  7911  014C  0AA6               	incf	??_LCD_Write_Int+1,f
  7912  014D  0825               	movf	??_LCD_Write_Int,w
  7913  014E  3E05               	addlw	5
  7914  014F  00AF               	movwf	LCD_Write_Int@j
  7915  0150  3000               	movlw	0
  7916  0151  3D26               	addwfc	??_LCD_Write_Int+1,w
  7917  0152  00B0               	movwf	LCD_Write_Int@j+1
  7918  0153                     l2148:	
  7919                           
  7920                           ;lcd.c: 281: }
  7921                           ;lcd.c: 283: for(i=j;i<(5-numPlaces);i++)
  7922  0153  0830               	movf	LCD_Write_Int@j+1,w
  7923  0154  00B2               	movwf	LCD_Write_Int@i+1
  7924  0155  082F               	movf	LCD_Write_Int@j,w
  7925  0156  00B1               	movwf	LCD_Write_Int@i
  7926  0157                     l2154:	
  7927  0157  0823               	movf	LCD_Write_Int@numPlaces,w
  7928  0158  00A5               	movwf	??_LCD_Write_Int
  7929  0159  01A6               	clrf	??_LCD_Write_Int+1
  7930  015A  1BA5               	btfsc	??_LCD_Write_Int,7
  7931  015B  03A6               	decf	??_LCD_Write_Int+1,f
  7932  015C  09A5               	comf	??_LCD_Write_Int,f
  7933  015D  09A6               	comf	??_LCD_Write_Int+1,f
  7934  015E  0AA5               	incf	??_LCD_Write_Int,f
  7935  015F  1903               	skipnz
  7936  0160  0AA6               	incf	??_LCD_Write_Int+1,f
  7937  0161  0825               	movf	??_LCD_Write_Int,w
  7938  0162  3E05               	addlw	5
  7939  0163  00A7               	movwf	??_LCD_Write_Int+2
  7940  0164  3000               	movlw	0
  7941  0165  3D26               	addwfc	??_LCD_Write_Int+1,w
  7942  0166  00A8               	movwf	??_LCD_Write_Int+3
  7943  0167  0832               	movf	LCD_Write_Int@i+1,w
  7944  0168  3A80               	xorlw	128
  7945  0169  00A9               	movwf	??_LCD_Write_Int+4
  7946  016A  0828               	movf	??_LCD_Write_Int+3,w
  7947  016B  3A80               	xorlw	128
  7948  016C  0229               	subwf	??_LCD_Write_Int+4,w
  7949  016D  1D03               	skipz
  7950  016E  2971               	goto	u2335
  7951  016F  0827               	movf	??_LCD_Write_Int+2,w
  7952  0170  0231               	subwf	LCD_Write_Int@i,w
  7953  0171                     u2335:	
  7954  0171  1803               	btfsc	3,0
  7955  0172  2983               	goto	l2156
  7956                           
  7957                           ;lcd.c: 284: {
  7958                           ;lcd.c: 285: LCD_Write_Char(48+str[i]);
  7959  0173  0020               	movlb	0	; select bank0
  7960  0174  0831               	movf	LCD_Write_Int@i,w
  7961  0175  3E2A               	addlw	(low (LCD_Write_Int@str| 0))& (0+255)
  7962  0176  0086               	movwf	6
  7963  0177  0187               	clrf	7
  7964  0178  0801               	movf	1,w
  7965  0179  3E30               	addlw	48
  7966  017A  318A  228E  3180   	fcall	_LCD_Write_Char
  7967  017D  3001               	movlw	1
  7968  017E  0020               	movlb	0	; select bank0
  7969  017F  07B1               	addwf	LCD_Write_Int@i,f
  7970  0180  3000               	movlw	0
  7971  0181  3DB2               	addwfc	LCD_Write_Int@i+1,f
  7972  0182  2957               	goto	l2154
  7973  0183                     l2156:	
  7974                           
  7975                           ;lcd.c: 286: }
  7976                           ;lcd.c: 288: if(numPlaces == 1)
  7977  0183  0020               	movlb	0	; select bank0
  7978  0184  0323               	decf	LCD_Write_Int@numPlaces,w
  7979  0185  1D03               	btfss	3,2
  7980  0186  2991               	goto	l2160
  7981                           
  7982                           ;lcd.c: 289: {
  7983                           ;lcd.c: 290: LCD_Write_Char(46);
  7984  0187  302E               	movlw	46
  7985  0188  318A  228E  3180   	fcall	_LCD_Write_Char
  7986                           
  7987                           ;lcd.c: 291: LCD_Write_Char(48+str[4]);
  7988  018B  0020               	movlb	0	; select bank0
  7989  018C  082E               	movf	LCD_Write_Int@str+4,w
  7990  018D  3E30               	addlw	48
  7991  018E  318A  228E  3180   	fcall	_LCD_Write_Char
  7992  0191                     l2160:	
  7993                           
  7994                           ;lcd.c: 292: }
  7995                           ;lcd.c: 294: if(numPlaces == 2)
  7996  0191  3002               	movlw	2
  7997  0192  0020               	movlb	0	; select bank0
  7998  0193  0623               	xorwf	LCD_Write_Int@numPlaces,w
  7999  0194  1D03               	btfss	3,2
  8000  0195  0008               	return
  8001                           
  8002                           ;lcd.c: 295: {
  8003                           ;lcd.c: 296: LCD_Write_Char(46);
  8004  0196  302E               	movlw	46
  8005  0197  318A  228E  3180   	fcall	_LCD_Write_Char
  8006                           
  8007                           ;lcd.c: 297: LCD_Write_Char(48+str[3]);
  8008  019A  0020               	movlb	0	; select bank0
  8009  019B  082D               	movf	LCD_Write_Int@str+3,w
  8010  019C  3E30               	addlw	48
  8011  019D  318A  228E  3180   	fcall	_LCD_Write_Char
  8012                           
  8013                           ;lcd.c: 298: LCD_Write_Char(48+str[4]);
  8014  01A0  0020               	movlb	0	; select bank0
  8015  01A1  082E               	movf	LCD_Write_Int@str+4,w
  8016  01A2  3E30               	addlw	48
  8017  01A3  318A  228E         	fcall	_LCD_Write_Char
  8018  01A5  0008               	return
  8019  01A6                     __end_of_LCD_Write_Int:	
  8020                           
  8021                           	psect	text24
  8022  0BCD                     __ptext24:	
  8023 ;; *************** function ___awmod *****************
  8024 ;; Defined at:
  8025 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  divisor         2    0[COMMON] int 
  8028 ;;  dividend        2    2[COMMON] int 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  sign            1    6[COMMON] unsigned char 
  8031 ;;  counter         1    5[COMMON] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  2    0[COMMON] int 
  8034 ;; Registers used:
  8035 ;;		wreg, status,2, status,0
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;Total ram usage:        7 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; This function calls:
  8048 ;;		Nothing
  8049 ;; This function is called by:
  8050 ;;		_LCD_Write_Int
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           
  8054                           
  8055                           ;psect for function ___awmod
  8056  0BCD                     ___awmod:	
  8057                           
  8058                           ;incstack = 0
  8059                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8060  0BCD  01F6               	clrf	___awmod@sign
  8061  0BCE  1FF3               	btfss	___awmod@dividend+1,7
  8062  0BCF  2BD7               	goto	l1982
  8063  0BD0  09F2               	comf	___awmod@dividend,f
  8064  0BD1  09F3               	comf	___awmod@dividend+1,f
  8065  0BD2  0AF2               	incf	___awmod@dividend,f
  8066  0BD3  1903               	skipnz
  8067  0BD4  0AF3               	incf	___awmod@dividend+1,f
  8068  0BD5  01F6               	clrf	___awmod@sign
  8069  0BD6  0AF6               	incf	___awmod@sign,f
  8070  0BD7                     l1982:	
  8071  0BD7  1FF1               	btfss	___awmod@divisor+1,7
  8072  0BD8  2BDE               	goto	l1986
  8073  0BD9  09F0               	comf	___awmod@divisor,f
  8074  0BDA  09F1               	comf	___awmod@divisor+1,f
  8075  0BDB  0AF0               	incf	___awmod@divisor,f
  8076  0BDC  1903               	skipnz
  8077  0BDD  0AF1               	incf	___awmod@divisor+1,f
  8078  0BDE                     l1986:	
  8079  0BDE  0870               	movf	___awmod@divisor,w
  8080  0BDF  0471               	iorwf	___awmod@divisor+1,w
  8081  0BE0  1903               	btfsc	3,2
  8082  0BE1  2C05               	goto	l2004
  8083  0BE2  01F5               	clrf	___awmod@counter
  8084  0BE3  0AF5               	incf	___awmod@counter,f
  8085  0BE4                     l1994:	
  8086  0BE4  1BF1               	btfsc	___awmod@divisor+1,7
  8087  0BE5  2BF0               	goto	l1996
  8088  0BE6  3001               	movlw	1
  8089  0BE7                     u2095:	
  8090  0BE7  35F0               	lslf	___awmod@divisor,f
  8091  0BE8  0DF1               	rlf	___awmod@divisor+1,f
  8092  0BE9  0B89               	decfsz	9,f
  8093  0BEA  2BE7               	goto	u2095
  8094  0BEB  3001               	movlw	1
  8095  0BEC  00F4               	movwf	??___awmod
  8096  0BED  0874               	movf	??___awmod,w
  8097  0BEE  07F5               	addwf	___awmod@counter,f
  8098  0BEF  2BE4               	goto	l1994
  8099  0BF0                     l1996:	
  8100  0BF0  0871               	movf	___awmod@divisor+1,w
  8101  0BF1  0273               	subwf	___awmod@dividend+1,w
  8102  0BF2  1D03               	skipz
  8103  0BF3  2BF6               	goto	u2115
  8104  0BF4  0870               	movf	___awmod@divisor,w
  8105  0BF5  0272               	subwf	___awmod@dividend,w
  8106  0BF6                     u2115:	
  8107  0BF6  1C03               	skipc
  8108  0BF7  2BFC               	goto	l2000
  8109  0BF8  0870               	movf	___awmod@divisor,w
  8110  0BF9  02F2               	subwf	___awmod@dividend,f
  8111  0BFA  0871               	movf	___awmod@divisor+1,w
  8112  0BFB  3BF3               	subwfb	___awmod@dividend+1,f
  8113  0BFC                     l2000:	
  8114  0BFC  3001               	movlw	1
  8115  0BFD                     u2125:	
  8116  0BFD  36F1               	lsrf	___awmod@divisor+1,f
  8117  0BFE  0CF0               	rrf	___awmod@divisor,f
  8118  0BFF  0B89               	decfsz	9,f
  8119  0C00  2BFD               	goto	u2125
  8120  0C01  3001               	movlw	1
  8121  0C02  02F5               	subwf	___awmod@counter,f
  8122  0C03  1D03               	btfss	3,2
  8123  0C04  2BF0               	goto	l1996
  8124  0C05                     l2004:	
  8125  0C05  0876               	movf	___awmod@sign,w
  8126  0C06  1903               	btfsc	3,2
  8127  0C07  2C0D               	goto	l2008
  8128  0C08  09F2               	comf	___awmod@dividend,f
  8129  0C09  09F3               	comf	___awmod@dividend+1,f
  8130  0C0A  0AF2               	incf	___awmod@dividend,f
  8131  0C0B  1903               	skipnz
  8132  0C0C  0AF3               	incf	___awmod@dividend+1,f
  8133  0C0D                     l2008:	
  8134  0C0D  0873               	movf	___awmod@dividend+1,w
  8135  0C0E  00F1               	movwf	?___awmod+1
  8136  0C0F  0872               	movf	___awmod@dividend,w
  8137  0C10  00F0               	movwf	?___awmod
  8138  0C11  0008               	return
  8139  0C12                     __end_of___awmod:	
  8140                           
  8141                           	psect	text25
  8142  0C12                     __ptext25:	
  8143 ;; *************** function ___awdiv *****************
  8144 ;; Defined at:
  8145 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  divisor         2    0[COMMON] int 
  8148 ;;  dividend        2    2[COMMON] int 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  quotient        2    7[COMMON] int 
  8151 ;;  sign            1    6[COMMON] unsigned char 
  8152 ;;  counter         1    5[COMMON] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  2    0[COMMON] int 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;Total ram usage:        9 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_LCD_Write_Int
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           
  8176                           ;psect for function ___awdiv
  8177  0C12                     ___awdiv:	
  8178                           
  8179                           ;incstack = 0
  8180                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8181  0C12  01F6               	clrf	___awdiv@sign
  8182  0C13  1FF1               	btfss	___awdiv@divisor+1,7
  8183  0C14  2C1C               	goto	l1938
  8184  0C15  09F0               	comf	___awdiv@divisor,f
  8185  0C16  09F1               	comf	___awdiv@divisor+1,f
  8186  0C17  0AF0               	incf	___awdiv@divisor,f
  8187  0C18  1903               	skipnz
  8188  0C19  0AF1               	incf	___awdiv@divisor+1,f
  8189  0C1A  01F6               	clrf	___awdiv@sign
  8190  0C1B  0AF6               	incf	___awdiv@sign,f
  8191  0C1C                     l1938:	
  8192  0C1C  1FF3               	btfss	___awdiv@dividend+1,7
  8193  0C1D  2C27               	goto	l1944
  8194  0C1E  09F2               	comf	___awdiv@dividend,f
  8195  0C1F  09F3               	comf	___awdiv@dividend+1,f
  8196  0C20  0AF2               	incf	___awdiv@dividend,f
  8197  0C21  1903               	skipnz
  8198  0C22  0AF3               	incf	___awdiv@dividend+1,f
  8199  0C23  3001               	movlw	1
  8200  0C24  00F4               	movwf	??___awdiv
  8201  0C25  0874               	movf	??___awdiv,w
  8202  0C26  06F6               	xorwf	___awdiv@sign,f
  8203  0C27                     l1944:	
  8204  0C27  01F7               	clrf	___awdiv@quotient
  8205  0C28  01F8               	clrf	___awdiv@quotient+1
  8206  0C29  0870               	movf	___awdiv@divisor,w
  8207  0C2A  0471               	iorwf	___awdiv@divisor+1,w
  8208  0C2B  1903               	btfsc	3,2
  8209  0C2C  2C56               	goto	l1966
  8210  0C2D  01F5               	clrf	___awdiv@counter
  8211  0C2E  0AF5               	incf	___awdiv@counter,f
  8212  0C2F                     l1954:	
  8213  0C2F  1BF1               	btfsc	___awdiv@divisor+1,7
  8214  0C30  2C3B               	goto	l1956
  8215  0C31  3001               	movlw	1
  8216  0C32                     u1995:	
  8217  0C32  35F0               	lslf	___awdiv@divisor,f
  8218  0C33  0DF1               	rlf	___awdiv@divisor+1,f
  8219  0C34  0B89               	decfsz	9,f
  8220  0C35  2C32               	goto	u1995
  8221  0C36  3001               	movlw	1
  8222  0C37  00F4               	movwf	??___awdiv
  8223  0C38  0874               	movf	??___awdiv,w
  8224  0C39  07F5               	addwf	___awdiv@counter,f
  8225  0C3A  2C2F               	goto	l1954
  8226  0C3B                     l1956:	
  8227  0C3B  3001               	movlw	1
  8228  0C3C                     u2015:	
  8229  0C3C  35F7               	lslf	___awdiv@quotient,f
  8230  0C3D  0DF8               	rlf	___awdiv@quotient+1,f
  8231  0C3E  0B89               	decfsz	9,f
  8232  0C3F  2C3C               	goto	u2015
  8233  0C40  0871               	movf	___awdiv@divisor+1,w
  8234  0C41  0273               	subwf	___awdiv@dividend+1,w
  8235  0C42  1D03               	skipz
  8236  0C43  2C46               	goto	u2025
  8237  0C44  0870               	movf	___awdiv@divisor,w
  8238  0C45  0272               	subwf	___awdiv@dividend,w
  8239  0C46                     u2025:	
  8240  0C46  1C03               	skipc
  8241  0C47  2C4D               	goto	l1962
  8242  0C48  0870               	movf	___awdiv@divisor,w
  8243  0C49  02F2               	subwf	___awdiv@dividend,f
  8244  0C4A  0871               	movf	___awdiv@divisor+1,w
  8245  0C4B  3BF3               	subwfb	___awdiv@dividend+1,f
  8246  0C4C  1477               	bsf	___awdiv@quotient,0
  8247  0C4D                     l1962:	
  8248  0C4D  3001               	movlw	1
  8249  0C4E                     u2035:	
  8250  0C4E  36F1               	lsrf	___awdiv@divisor+1,f
  8251  0C4F  0CF0               	rrf	___awdiv@divisor,f
  8252  0C50  0B89               	decfsz	9,f
  8253  0C51  2C4E               	goto	u2035
  8254  0C52  3001               	movlw	1
  8255  0C53  02F5               	subwf	___awdiv@counter,f
  8256  0C54  1D03               	btfss	3,2
  8257  0C55  2C3B               	goto	l1956
  8258  0C56                     l1966:	
  8259  0C56  0876               	movf	___awdiv@sign,w
  8260  0C57  1903               	btfsc	3,2
  8261  0C58  2C5E               	goto	l1970
  8262  0C59  09F7               	comf	___awdiv@quotient,f
  8263  0C5A  09F8               	comf	___awdiv@quotient+1,f
  8264  0C5B  0AF7               	incf	___awdiv@quotient,f
  8265  0C5C  1903               	skipnz
  8266  0C5D  0AF8               	incf	___awdiv@quotient+1,f
  8267  0C5E                     l1970:	
  8268  0C5E  0878               	movf	___awdiv@quotient+1,w
  8269  0C5F  00F1               	movwf	?___awdiv+1
  8270  0C60  0877               	movf	___awdiv@quotient,w
  8271  0C61  00F0               	movwf	?___awdiv
  8272  0C62  0008               	return
  8273  0C63                     __end_of___awdiv:	
  8274                           
  8275                           	psect	text26
  8276  0A8E                     __ptext26:	
  8277 ;; *************** function _LCD_Write_Char *****************
  8278 ;; Defined at:
  8279 ;;		line 223 in file "lcd.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  a               1    wreg     const unsigned char 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  a               1    4[COMMON] const unsigned char 
  8284 ;;  y               1    3[COMMON] unsigned char 
  8285 ;;  temp            1    2[COMMON] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0, pclath, cstack
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;Total ram usage:        4 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    1
  8302 ;; This function calls:
  8303 ;;		_LCD_Port
  8304 ;; This function is called by:
  8305 ;;		_InitCustomChars
  8306 ;;		_LCD_Write_String
  8307 ;;		_LCD_Write_Int
  8308 ;;		_main
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           
  8313                           ;psect for function _LCD_Write_Char
  8314  0A8E                     _LCD_Write_Char:	
  8315                           
  8316                           ;incstack = 0
  8317                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8318                           ;LCD_Write_Char@a stored from wreg
  8319  0A8E  00F4               	movwf	LCD_Write_Char@a
  8320                           
  8321                           ;lcd.c: 225: char temp,y;
  8322                           ;lcd.c: 226: temp = a&0x0F;
  8323  0A8F  0874               	movf	LCD_Write_Char@a,w
  8324  0A90  390F               	andlw	15
  8325  0A91  00F1               	movwf	??_LCD_Write_Char
  8326  0A92  0871               	movf	??_LCD_Write_Char,w
  8327  0A93  00F2               	movwf	LCD_Write_Char@temp
  8328                           
  8329                           ;lcd.c: 227: y = a&0xF0;
  8330  0A94  0874               	movf	LCD_Write_Char@a,w
  8331  0A95  39F0               	andlw	240
  8332  0A96  00F1               	movwf	??_LCD_Write_Char
  8333  0A97  0871               	movf	??_LCD_Write_Char,w
  8334  0A98  00F3               	movwf	LCD_Write_Char@y
  8335                           
  8336                           ;lcd.c: 228: RA0 = 1;
  8337  0A99  0020               	movlb	0	; select bank0
  8338  0A9A  140C               	bsf	12,0	;volatile
  8339                           
  8340                           ;lcd.c: 229: LCD_Port(y>>4);
  8341  0A9B  0873               	movf	LCD_Write_Char@y,w
  8342  0A9C  00F1               	movwf	??_LCD_Write_Char
  8343  0A9D  3004               	movlw	4
  8344  0A9E                     u1525:	
  8345  0A9E  36F1               	lsrf	??_LCD_Write_Char,f
  8346  0A9F  0B89               	decfsz	9,f
  8347  0AA0  2A9E               	goto	u1525
  8348  0AA1  0871               	movf	??_LCD_Write_Char,w
  8349  0AA2  3189  21CD  318A   	fcall	_LCD_Port
  8350                           
  8351                           ;lcd.c: 230: RA2 = 1;
  8352  0AA5  0020               	movlb	0	; select bank0
  8353  0AA6  150C               	bsf	12,2	;volatile
  8354                           
  8355                           ;lcd.c: 231: RA2 = 0;
  8356  0AA7  110C               	bcf	12,2	;volatile
  8357                           
  8358                           ;lcd.c: 232: _delay((unsigned long)((40)*(1000000/4000000.0)));
  8359  0AA8  3003               	movlw	3
  8360  0AA9  00F1               	movwf	??_LCD_Write_Char
  8361  0AAA                     u2857:	
  8362  0AAA  0BF1               	decfsz	??_LCD_Write_Char,f
  8363  0AAB  2AAA               	goto	u2857
  8364                           
  8365                           ;lcd.c: 233: LCD_Port(temp);
  8366  0AAC  0872               	movf	LCD_Write_Char@temp,w
  8367  0AAD  3189  21CD  318A   	fcall	_LCD_Port
  8368                           
  8369                           ;lcd.c: 234: RA2 = 1;
  8370  0AB0  0020               	movlb	0	; select bank0
  8371  0AB1  150C               	bsf	12,2	;volatile
  8372                           
  8373                           ;lcd.c: 235: RA2 = 0;
  8374  0AB2  110C               	bcf	12,2	;volatile
  8375                           
  8376                           ;lcd.c: 236: _delay((unsigned long)((40)*(1000000/4000000.0)));
  8377  0AB3  3003               	movlw	3
  8378  0AB4  00F1               	movwf	??_LCD_Write_Char
  8379  0AB5                     u2867:	
  8380  0AB5  0BF1               	decfsz	??_LCD_Write_Char,f
  8381  0AB6  2AB5               	goto	u2867
  8382  0AB7  0008               	return
  8383  0AB8                     __end_of_LCD_Write_Char:	
  8384                           
  8385                           	psect	text27
  8386  0B8E                     __ptext27:	
  8387 ;; *************** function _LCD_Set_Cursor *****************
  8388 ;; Defined at:
  8389 ;;		line 82 in file "lcd.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  x               1    wreg     unsigned char 
  8392 ;;  y               1    3[COMMON] unsigned char 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  x               1    6[COMMON] unsigned char 
  8395 ;;  temp            1    9[COMMON] unsigned char 
  8396 ;;  w               1    8[COMMON] unsigned char 
  8397 ;;  z               1    7[COMMON] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0, pclath, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8407 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;Total ram usage:        7 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:    2
  8414 ;; This function calls:
  8415 ;;		_LCD_Cmd
  8416 ;; This function is called by:
  8417 ;;		_main
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           
  8422                           ;psect for function _LCD_Set_Cursor
  8423  0B8E                     _LCD_Set_Cursor:	
  8424                           
  8425                           ;incstack = 0
  8426                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8427                           ;LCD_Set_Cursor@x stored from wreg
  8428  0B8E  00F6               	movwf	LCD_Set_Cursor@x
  8429                           
  8430                           ;lcd.c: 86: char temp,z,w;
  8431                           ;lcd.c: 88: if(x == 0)
  8432  0B8F  0876               	movf	LCD_Set_Cursor@x,w
  8433  0B90  1D03               	btfss	3,2
  8434  0B91  2BAE               	goto	l2096
  8435                           
  8436                           ;lcd.c: 89: {
  8437                           ;lcd.c: 90: temp = 0x80 + y;
  8438  0B92  0873               	movf	LCD_Set_Cursor@y,w
  8439  0B93  3E80               	addlw	128
  8440  0B94  00F4               	movwf	??_LCD_Set_Cursor
  8441  0B95  0874               	movf	??_LCD_Set_Cursor,w
  8442  0B96  00F9               	movwf	LCD_Set_Cursor@temp
  8443                           
  8444                           ;lcd.c: 91: z = temp>>4;
  8445  0B97  0879               	movf	LCD_Set_Cursor@temp,w
  8446  0B98  00F4               	movwf	??_LCD_Set_Cursor
  8447  0B99  3004               	movlw	4
  8448  0B9A                     u2235:	
  8449  0B9A  36F4               	lsrf	??_LCD_Set_Cursor,f
  8450  0B9B  0B89               	decfsz	9,f
  8451  0B9C  2B9A               	goto	u2235
  8452  0B9D  0874               	movf	??_LCD_Set_Cursor,w
  8453  0B9E  00F5               	movwf	??_LCD_Set_Cursor+1
  8454  0B9F  0875               	movf	??_LCD_Set_Cursor+1,w
  8455  0BA0  00F7               	movwf	LCD_Set_Cursor@z
  8456                           
  8457                           ;lcd.c: 92: w = temp & 0x0F;
  8458  0BA1  0879               	movf	LCD_Set_Cursor@temp,w
  8459  0BA2  390F               	andlw	15
  8460  0BA3  00F4               	movwf	??_LCD_Set_Cursor
  8461  0BA4  0874               	movf	??_LCD_Set_Cursor,w
  8462  0BA5  00F8               	movwf	LCD_Set_Cursor@w
  8463                           
  8464                           ;lcd.c: 93: LCD_Cmd(z);
  8465  0BA6  0877               	movf	LCD_Set_Cursor@z,w
  8466  0BA7  3189  21A8  318B   	fcall	_LCD_Cmd
  8467                           
  8468                           ;lcd.c: 94: LCD_Cmd(w);
  8469  0BAA  0878               	movf	LCD_Set_Cursor@w,w
  8470  0BAB  3189  21A8         	fcall	_LCD_Cmd
  8471                           
  8472                           ;lcd.c: 95: }
  8473  0BAD  0008               	return
  8474  0BAE                     l2096:	
  8475                           
  8476                           ;lcd.c: 97: else if(x == 1)
  8477  0BAE  0376               	decf	LCD_Set_Cursor@x,w
  8478  0BAF  1D03               	btfss	3,2
  8479  0BB0  0008               	return
  8480                           
  8481                           ;lcd.c: 98: {
  8482                           ;lcd.c: 99: temp = 0xC0 + y;
  8483  0BB1  0873               	movf	LCD_Set_Cursor@y,w
  8484  0BB2  3EC0               	addlw	192
  8485  0BB3  00F4               	movwf	??_LCD_Set_Cursor
  8486  0BB4  0874               	movf	??_LCD_Set_Cursor,w
  8487  0BB5  00F9               	movwf	LCD_Set_Cursor@temp
  8488                           
  8489                           ;lcd.c: 100: z = temp>>4;
  8490  0BB6  0879               	movf	LCD_Set_Cursor@temp,w
  8491  0BB7  00F4               	movwf	??_LCD_Set_Cursor
  8492  0BB8  3004               	movlw	4
  8493  0BB9                     u2255:	
  8494  0BB9  36F4               	lsrf	??_LCD_Set_Cursor,f
  8495  0BBA  0B89               	decfsz	9,f
  8496  0BBB  2BB9               	goto	u2255
  8497  0BBC  0874               	movf	??_LCD_Set_Cursor,w
  8498  0BBD  00F5               	movwf	??_LCD_Set_Cursor+1
  8499  0BBE  0875               	movf	??_LCD_Set_Cursor+1,w
  8500  0BBF  00F7               	movwf	LCD_Set_Cursor@z
  8501                           
  8502                           ;lcd.c: 101: w = temp & 0x0F;
  8503  0BC0  0879               	movf	LCD_Set_Cursor@temp,w
  8504  0BC1  390F               	andlw	15
  8505  0BC2  00F4               	movwf	??_LCD_Set_Cursor
  8506  0BC3  0874               	movf	??_LCD_Set_Cursor,w
  8507  0BC4  00F8               	movwf	LCD_Set_Cursor@w
  8508                           
  8509                           ;lcd.c: 102: LCD_Cmd(z);
  8510  0BC5  0877               	movf	LCD_Set_Cursor@z,w
  8511  0BC6  3189  21A8  318B   	fcall	_LCD_Cmd
  8512                           
  8513                           ;lcd.c: 103: LCD_Cmd(w);
  8514  0BC9  0878               	movf	LCD_Set_Cursor@w,w
  8515  0BCA  3189  21A8         	fcall	_LCD_Cmd
  8516  0BCC  0008               	return
  8517  0BCD                     __end_of_LCD_Set_Cursor:	
  8518                           
  8519                           	psect	text28
  8520  09A8                     __ptext28:	
  8521 ;; *************** function _LCD_Cmd *****************
  8522 ;; Defined at:
  8523 ;;		line 65 in file "lcd.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  a               1    wreg     unsigned char 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  a               1    2[COMMON] unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, pclath, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;Total ram usage:        2 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    1
  8544 ;; This function calls:
  8545 ;;		_LCD_Port
  8546 ;; This function is called by:
  8547 ;;		_InitCustomChars
  8548 ;;		_LCD_Clear
  8549 ;;		_LCD_Set_Cursor
  8550 ;;		_LCD_Init
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           
  8555                           ;psect for function _LCD_Cmd
  8556  09A8                     _LCD_Cmd:	
  8557                           
  8558                           ;incstack = 0
  8559                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8560                           ;LCD_Cmd@a stored from wreg
  8561  09A8  00F2               	movwf	LCD_Cmd@a
  8562                           
  8563                           ;lcd.c: 67: RA0 = 0;
  8564  09A9  0020               	movlb	0	; select bank0
  8565  09AA  100C               	bcf	12,0	;volatile
  8566                           
  8567                           ;lcd.c: 68: LCD_Port(a);
  8568  09AB  0872               	movf	LCD_Cmd@a,w
  8569  09AC  3189  21CD  3189   	fcall	_LCD_Port
  8570                           
  8571                           ;lcd.c: 69: RA2 = 1;
  8572  09AF  0020               	movlb	0	; select bank0
  8573  09B0  150C               	bsf	12,2	;volatile
  8574                           
  8575                           ;lcd.c: 70: RA2 = 0;
  8576  09B1  110C               	bcf	12,2	;volatile
  8577                           
  8578                           ;lcd.c: 71: _delay((unsigned long)((4)*(1000000/4000.0)));
  8579  09B2  30F9               	movlw	249
  8580  09B3  00F1               	movwf	??_LCD_Cmd
  8581  09B4                     u2877:	
  8582  09B4  0000               	nop
  8583  09B5  0BF1               	decfsz	??_LCD_Cmd,f
  8584  09B6  29B4               	goto	u2877
  8585  09B7  3200               	nop2	;nop
  8586  09B8  0000               	nop
  8587  09B9  0008               	return
  8588  09BA                     __end_of_LCD_Cmd:	
  8589                           
  8590                           	psect	text29
  8591  09CD                     __ptext29:	
  8592 ;; *************** function _LCD_Port *****************
  8593 ;; Defined at:
  8594 ;;		line 41 in file "lcd.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  a               1    wreg     unsigned char 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  a               1    0[COMMON] unsigned char 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;                  1    wreg      void 
  8601 ;; Registers used:
  8602 ;;		wreg
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;Total ram usage:        1 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_LCD_Cmd
  8618 ;;		_LCD_Init
  8619 ;;		_LCD_Write_Char
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           
  8624                           ;psect for function _LCD_Port
  8625  09CD                     _LCD_Port:	
  8626                           
  8627                           ;incstack = 0
  8628                           ; Regs used in _LCD_Port: [wreg]
  8629                           ;LCD_Port@a stored from wreg
  8630  09CD  00F0               	movwf	LCD_Port@a
  8631                           
  8632                           ;lcd.c: 43: if(a & 1)
  8633  09CE  1C70               	btfss	LCD_Port@a,0
  8634  09CF  29D3               	goto	l81
  8635                           
  8636                           ;lcd.c: 44: RA7 = 1;
  8637  09D0  0020               	movlb	0	; select bank0
  8638  09D1  178C               	bsf	12,7	;volatile
  8639  09D2  29D5               	goto	l1608
  8640  09D3                     l81:	
  8641                           
  8642                           ;lcd.c: 45: else
  8643                           ;lcd.c: 46: RA7 = 0;
  8644  09D3  0020               	movlb	0	; select bank0
  8645  09D4  138C               	bcf	12,7	;volatile
  8646  09D5                     l1608:	
  8647                           
  8648                           ;lcd.c: 48: if(a & 2)
  8649  09D5  1CF0               	btfss	LCD_Port@a,1
  8650  09D6  29D9               	goto	l83
  8651                           
  8652                           ;lcd.c: 49: RA6 = 1;
  8653  09D7  170C               	bsf	12,6	;volatile
  8654  09D8  29DA               	goto	l1612
  8655  09D9                     l83:	
  8656                           
  8657                           ;lcd.c: 50: else
  8658                           ;lcd.c: 51: RA6 = 0;
  8659  09D9  130C               	bcf	12,6	;volatile
  8660  09DA                     l1612:	
  8661                           
  8662                           ;lcd.c: 53: if(a & 4)
  8663  09DA  1D70               	btfss	LCD_Port@a,2
  8664  09DB  29DE               	goto	l85
  8665                           
  8666                           ;lcd.c: 54: RC0 = 1;
  8667  09DC  140E               	bsf	14,0	;volatile
  8668  09DD  29DF               	goto	l1616
  8669  09DE                     l85:	
  8670                           
  8671                           ;lcd.c: 55: else
  8672                           ;lcd.c: 56: RC0 = 0;
  8673  09DE  100E               	bcf	14,0	;volatile
  8674  09DF                     l1616:	
  8675                           
  8676                           ;lcd.c: 58: if(a & 8)
  8677  09DF  1DF0               	btfss	LCD_Port@a,3
  8678  09E0  29E3               	goto	l87
  8679                           
  8680                           ;lcd.c: 59: RC1 = 1;
  8681  09E1  148E               	bsf	14,1	;volatile
  8682  09E2  0008               	return
  8683  09E3                     l87:	
  8684                           
  8685                           ;lcd.c: 60: else
  8686                           ;lcd.c: 61: RC1 = 0;
  8687  09E3  108E               	bcf	14,1	;volatile
  8688  09E4  0008               	return
  8689  09E5                     __end_of_LCD_Port:	
  8690                           
  8691                           	psect	text30
  8692  099A                     __ptext30:	
  8693 ;; *************** function _ADCRead *****************
  8694 ;; Defined at:
  8695 ;;		line 52 in file "adcc.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  channel         1    wreg     enum E13559
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  channel         1    3[COMMON] enum E13559
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  2    0[COMMON] unsigned int 
  8702 ;; Registers used:
  8703 ;;		wreg
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8709 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8713 ;;Total ram usage:        4 bytes
  8714 ;; Hardware stack levels used:    1
  8715 ;; This function calls:
  8716 ;;		Nothing
  8717 ;; This function is called by:
  8718 ;;		_main
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           
  8723                           ;psect for function _ADCRead
  8724  099A                     _ADCRead:	
  8725                           
  8726                           ;incstack = 0
  8727                           ; Regs used in _ADCRead: [wreg]
  8728                           ;ADCRead@channel stored from wreg
  8729  099A  00F3               	movwf	ADCRead@channel
  8730                           
  8731                           ;adcc.c: 55: ADPCH = channel;
  8732  099B  0873               	movf	ADCRead@channel,w
  8733  099C  0021               	movlb	1	; select bank1
  8734  099D  009E               	movwf	30	;volatile
  8735                           
  8736                           ;adcc.c: 58: ADCON0bits.ADON = 1;
  8737  099E  1793               	bsf	19,7	;volatile
  8738                           
  8739                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
  8740  099F  1313               	bcf	19,6	;volatile
  8741                           
  8742                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
  8743  09A0  1413               	bsf	19,0	;volatile
  8744  09A1                     l50:	
  8745                           ;adcc.c: 68: {
  8746                           
  8747                           ;adcc.c: 67: while (ADCON0bits.ADGO)
  8748                           
  8749  09A1  1813               	btfsc	19,0	;volatile
  8750  09A2  29A1               	goto	l50
  8751                           
  8752                           ;adcc.c: 69: }
  8753                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
  8754  09A3  080D               	movf	13,w	;volatile
  8755  09A4  00F1               	movwf	?_ADCRead+1
  8756  09A5  080C               	movf	12,w	;volatile
  8757  09A6  00F0               	movwf	?_ADCRead
  8758  09A7  0008               	return
  8759  09A8                     __end_of_ADCRead:	
  8760  007E                     btemp	set	126	;btemp
  8761  007E                     wtemp	set	126
  8762  007E                     wtemp0	set	126
  8763  0080                     wtemp1	set	128
  8764  0082                     wtemp2	set	130
  8765  0084                     wtemp3	set	132
  8766  0086                     wtemp4	set	134
  8767  0088                     wtemp5	set	136
  8768  007F                     wtemp6	set	127
  8769  007E                     ttemp	set	126
  8770  007E                     ttemp0	set	126
  8771  0081                     ttemp1	set	129
  8772  0084                     ttemp2	set	132
  8773  0087                     ttemp3	set	135
  8774  007F                     ttemp4	set	127
  8775  007E                     ltemp	set	126
  8776  007E                     ltemp0	set	126
  8777  0082                     ltemp1	set	130
  8778  0086                     ltemp2	set	134
  8779  0080                     ltemp3	set	128


Data Sizes:
    Strings     21
    Constant    27
    Data        24
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      78
    BANK1            80     28      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10            8      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCD_Write_String@a	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftadd->___awtoft
    _SYSTEM_Initialize->_InitCustomChars
    _LCD_Init->_LCD_Cmd
    _LCD_Clear->_LCD_Cmd
    _InitCustomChars->_LCD_Write_Char
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Int->___fttol
    _LCD_Write_Char->_LCD_Port
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_LCD_Port

Critical Paths under _main in BANK0

    _main->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   37676
                                             61 BANK0     10    10      0
                                              0 BANK1     28    28      0
                            _ADCRead
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                      _LCD_Write_Int
                   _LCD_Write_String
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                                _log
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   16574
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7181
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2894
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1874
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3925
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3646
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    3298
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0     709
                                              7 COMMON     2     2      0
                    _ADCC_Initialize
                    _InitCustomChars
                          _LCD_Clear
                           _LCD_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     220
                                              3 COMMON     3     3      0
                            _LCD_Cmd
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _InitCustomChars                                      2     2      0     356
                                              5 COMMON     2     2      0
                            _LCD_Cmd
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     374
                                              5 COMMON     5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Int                                       19    14      5    1911
                                              0 BANK0     19    14      5
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       7     6      1     592
                                              3 COMMON     7     6      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _LCD_Port
 ---------------------------------------------------------------------------------
 (3) _LCD_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCD_Set_Cursor
     _LCD_Cmd
       _LCD_Port
   _LCD_Write_Char
     _LCD_Port
   _LCD_Write_Int
     _LCD_Write_Char
       _LCD_Port
     ___awdiv
     ___awmod
     ___fttol (ARG)
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Port
   _SYSTEM_Initialize
     _ADCC_Initialize
     _InitCustomChars
       _LCD_Cmd
         _LCD_Port
       _LCD_Write_Char
         _LCD_Port
     _LCD_Clear
       _LCD_Cmd
         _LCD_Port
     _LCD_Init
       _LCD_Cmd
         _LCD_Port
       _LCD_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
   ___lwtoft
     ___ftpack
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10               8      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Jan 16 01:47:07 2018

                    __CFG_CP$OFF 0000                               l50 09A1                               l81 09D3  
                             l83 09D9                               l85 09DE                               l87 09E3  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072                     ___ftadd@exp1 004C  
                   ___ftadd@exp2 004B                      __CFG_LVP$ON 0000                     ___ftadd@sign 004A  
                            l320 0A38                              l512 0245                              l375 0DB3  
                            l481 0CF5                              l572 0E90                              l488 0D08  
                            l489 0D10                              _GIE 005F                              _RA0 0060  
                            _RA2 0062                              _RC0 0070                              _RC1 0071  
                            _RA6 0066                              _RA7 0067                     __CFG_CPD$OFF 0000  
                            _log 0F53                  __end_of_ADCRead 09A8                     ___awmod@sign 0076  
                   __CFG_BORV$LO 0000                              wreg 0009                  __end_of_LCD_Cmd 09BA  
                   __CFG_ZCD$OFF 0000                     ___ftdiv@cntr 003A                   _LCD_Set_Cursor 0B8E  
                   ___ftdiv@sign 003F                             l2000 0BFC                             l2004 0C05  
                           l2020 0011                             l2008 0C0D                             l2112 0A18  
                           l2032 0B44                             l2300 0E3C                             l2028 0B2E  
                           l2052 0B65                             l2142 0137                             l2126 00FD  
                           l2222 0DD4                             l2214 0DC4                             l2070 0CBC  
                           l2160 0191                             l2144 013B                             l2136 0104  
                           l2240 0E1B                             l2232 0E02                             l2224 0DE2  
                           l2320 0E7A                             l2154 0157                             l2146 0143  
                           l2138 0133                             l2250 0EC1                             l1612 09DA  
                           l2156 0183                             l2148 0153                             l2236 0E0D  
                           l2332 0EA1                             l2404 04BA                             l1630 0CDC  
                           l2270 0F18                             l1702 01CE                             l2326 0E87  
                           l2318 0E6C                             l1616 09DF                             l1608 09D5  
                           l2096 0BAE                             l1640 0D02                             l1632 0CE1  
                           l1624 0CCB                             l2256 0ED7                             l1712 01E4  
                           l2328 0E93                             l1730 0211                             l1706 01D5  
                           l2290 0A53                             l1802 00AB                             l2194 0F82  
                           l1628 0CD2                             l1732 021B                             l1724 01FE  
                           l2188 0F71                             l2348 02C1                             l1638 0CFA  
                           l2278 0F31                             l1742 0237                             l1734 0220  
                           l1806 00B3                             l2374 0340                             l1752 0269  
                           l1744 0241                             l1736 0224                             l1762 0284  
                           l1860 0A86                             l1748 0257                             l1772 003E  
                           l1684 0A32                             l2388 03F1                             l1854 0A76  
                           l1790 008F                             l1944 0C27                             l1970 0C5E  
                           l1962 0C4D                             l1954 0C2F                             l1938 0C1C  
                           l1794 0097                             l1778 0054                             l1956 0C3B  
                           l1966 0C56                             l1982 0BD7                             l1994 0BE4  
                           l1986 0BDE                             l1996 0BF0                             ?_log 0057  
                           STR_1 1027                             STR_2 101B                             u2015 0C3C  
                           u2025 0C46                             u2035 0C4E                             u2115 0BF6  
                           u2125 0BFD                             _LATA 0016                             _LATB 0017  
                           _LATC 0018                             u1505 0D17                             u1425 0CD7  
                           u2235 0B9A                             u1525 0A9E                             u1445 0CF0  
                           u2270 00E6                             u2255 0BB9                             u2095 0BE7  
                           u2335 0171                             u2415 0DD7                             u1465 0CFD  
                           u2505 0EE9                             u1545 0A39                             u2435 0DE3  
                           u2515 0EF9                             u1555 0A3E                             u2445 0DF7  
                           u2525 0F19                             u1725 0225                             u2455 0E03  
                           u2535 0F28                             u2615 0E6D                             u2545 0F32  
                           u1665 01FF                             u1905 00BA                             u1825 0060  
                           u1755 0238                             u1835 0070                             u1940 0AE5  
                           u2645 0E88                             u2717 02BA                             u2670 02AA  
                           u2807 0D67                             u2727 0AFA                             u1695 0212  
                           u1855 0098                             u2817 0D74                             u2737 0B06  
                           u2585 0E43                             u1865 009E                             u2827 0D81  
                           u2747 0B12                             u2837 0D90                             u2757 0D30  
                           u2847 0D9E                             u2767 0D3D                             u1895 00B4  
                           u2857 0AAA                             u2777 0D48                             u2867 0AB5  
                           u1995 0C32                             u2787 0D51                             u2877 09B4  
                           u2797 0D5A                             _WPUA 0F39                             _WPUB 0F44  
                           _WPUC 0F4F                             _WPUE 0F65                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                ?_LCD_Write_String 0075                             _main 029C  
                   ___ftpack@arg 0070               __size_of_LCD_Clear 0008                     ___ftpack@exp 0073  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           indf0 0000                             indf1 0001                             fsr1l 0006  
                           btemp 007E                             log@x 0057                             ltemp 007E  
                           start 0002               ??_LCD_Write_String 0077                             ttemp 007E  
                           wtemp 007E                    __CFG_CSWEN$ON 0000                    __CFG_MCLRE$ON 0000  
                   ___ftmul@cntr 002E                    _LCD_Write_Int 00DB                     ___ftmul@sign 002F  
                   ___fttol@exp1 007D                            ??_log 005A                     ___fttol@lval 0079  
               __end_of_LCD_Init 0DA2                 __end_of_LCD_Port 09E5   __size_of_OSCILLATOR_Initialize 0008  
  __end_of_OSCILLATOR_Initialize 0982                  __end_of___aldiv 0E24                            _ADACQ 009D  
                          _ADCAP 009B                            _ADACT 0099                            ?_main 0070  
                          _ADCLK 0098                            _ADPCH 009E                            _ADREF 009A  
                __end_of___awdiv 0C63                            _ADPRE 009C                  __end_of___ftadd 029C  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 0C12                            _ADRPT 010D  
                __end_of___ftdiv 0F53                  __end_of___ftmul 00DB                  ___awdiv@divisor 0070  
                __end_of___ftsub 0A69                  __end_of___fttol 0EAA                  ___awdiv@counter 0075  
                          _OSCEN 0891                            _TRISA 0011                            _TRISB 0012  
                          _TRISC 0013           __end_of_LCD_Set_Cursor 0BCD                    ___awtoft@sign 007D  
                          _frexp 0B53                            _errno 006C                    ___ftpack@sign 0074  
                          main@R 00A1                   __CFG_BOREN$OFF 0000                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F                 InitCustomChars@i 0076                   ?_LCD_Write_Int 0020  
                 _LCD_Write_Char 0A8E                  __initialization 07D3                      log@exponent 005B  
                   __end_of_main 07D3                        ??_ADCRead 0073                           ??_main 005D  
                  ___fttol@sign1 0078                __end_of_LCD_Clear 097A                        ??_LCD_Cmd 0071  
                ?_LCD_Set_Cursor 0073                           _ADCON0 0093                           _ADCON1 0094  
                         _ADCON2 0095                           _ADCON3 0096                           ?_frexp 0070  
                         _ADLTHH 010F                           _ADLTHL 010E                           _ADRESH 008D  
                         _ADRESL 008C                           _ADSTAT 0097                           _ADUTHH 0111  
               ___awdiv@dividend 0072                           _ADUTHL 0110                 __end_of___awtoft 0027  
                         _ANSELA 0F38                           _ANSELB 0F43                           _ANSELC 0F4E  
               __end_of___ftpack 0D27               __CFG_RSTOSC$HFINT1 0000                           _RA1PPS 0F11  
                 __CFG_WDTCCS$SC 0000                           _FVRCON 090C                 __end_of___lwtoft 09CD  
                         _OSCFRQ 0893           __end_of_LCD_Write_Char 0AB8                   __CFG_PWRTE$OFF 0000  
                         ___ftge 0B18           LCD_Write_Int@numPlaces 0023                        ??___aldiv 0078  
                         ___wmul 0A30                        ??___awdiv 0074                        ??___ftadd 0046  
                 __CFG_STVREN$ON 0000                        ??___awmod 0074                        ??___ftdiv 0036  
                      ??___ftmul 0026                        ??___ftsub 007E                        ??___fttol 0074  
               ___awdiv@quotient 0077                  ___awmod@divisor 0070                  ___awmod@counter 0075  
          ___ftmul@f3_as_product 002B                  _ADCC_Initialize 09FD                 LCD_Write_Int@str 002A  
                  main@steinhart 00B9                  _InitCustomChars 0A69                  LCD_Set_Cursor@w 0078  
                LCD_Set_Cursor@x 0076                  LCD_Set_Cursor@y 0073                  LCD_Set_Cursor@z 0077  
              _SYSTEM_Initialize 0AE7                 __end_oflog@coeff 101B          __end_of__initialization 07FD  
                      ?_LCD_Init 0070                        ?_LCD_Port 0070                       ___ftadd@f1 0040  
                     ___ftadd@f2 0043                       ___ftge@ff1 0070                       ___ftge@ff2 0073  
                ??_LCD_Write_Int 0025               ?_SYSTEM_Initialize 0070                     eval_poly@res 0054  
                     ___ftdiv@f1 0033                       ___ftdiv@f2 0030                       ___ftdiv@f3 003B  
                ?_LCD_Write_Char 0070                    LCD_Init@style 0075                       ___awtoft@c 0078  
                     ___ftmul@f1 0020                       ___ftmul@f2 0023                       ___ftsub@f1 0050  
                     ___ftsub@f2 004D                       ___fttol@f1 0070                   __pcstackCOMMON 0070  
                      LCD_Port@a 0070                     __pidataBANK1 09E5              ??_SYSTEM_Initialize 0077  
                  __end_of_frexp 0B8E                       ___lwtoft@c 0078                          ??_frexp 0074  
      __end_of_SYSTEM_Initialize 0B18                       __pbssBANK0 0067                       __pbssBANK1 00D4  
             __size_of_eval_poly 0060                       ??_LCD_Init 0073                       ??_LCD_Port 0070  
                     __pmaintext 029C                          ?___ftge 0070                          ?___wmul 0070  
                __CFG_PPS1WAY$ON 0000          __end_of_ADCC_Initialize 0A16                          _ADCRead 099A  
      __size_of_LCD_Write_String 001A                        ?___awtoft 0078                        ?___ftpack 0070  
                        _ADSTPTH 0113                          _ADSTPTL 0112                 main@displayTemp2 00A7  
                      ?___lwtoft 0078          __end_of_InitCustomChars 0A8E                          _LCD_Cmd 09A8  
                        _OSCCON1 088D                          _OSCCON3 088F                          _OSCTUNE 0892  
                        _PPSLOCK 0E8F             __CFG_SCANE$available 0000                          ___aldiv 0DA2  
                        ___cgram 00BC                  __size_of___ftge 003B                          ___awdiv 0C12  
                        ___ftadd 01A6                          ___awmod 0BCD                          ___ftdiv 0EAA  
                __size_of___wmul 001B                          ___ftmul 0027                          ___ftsub 0A4B  
                        ___fttol 0E24                       ??___awtoft 007B                       ??___ftpack 0075  
              __end_of_eval_poly 0CC3                 ??_LCD_Set_Cursor 0074                          __ptext1 0F53  
                        __ptext2 0B53                          __ptext3 0C63                          __ptext4 0A30  
                        __ptext5 0027                          __ptext6 0B18                          __ptext7 0007  
                        __ptext8 09BA                          __ptext9 0E24                       ??___lwtoft 007B  
          _OSCILLATOR_Initialize 097A                     __size_of_log 00AD                 ___awmod@dividend 0072  
                 ADCRead@channel 0073                 ___aldiv@dividend 0074         ??_PIN_MANAGER_Initialize 0070  
                        _samples 2328                        _LCD_Clear 0972       __size_of_SYSTEM_Initialize 0031  
                        clrloop0 0983             end_of_initialization 07FD                          init_ram 098E  
                        initloop 098F                 ___aldiv@quotient 0022                LCD_Write_Int@sign 0024  
                     main@F13717 00D4                     __pstringtext 1000                 ?_ADCC_Initialize 0070  
          __CFG_WDTCPS$WDTCPS_31 0000                 ?_InitCustomChars 0070                       ?_LCD_Clear 0070  
               __CFG_FEXTOSC$OFF 0000                LCD_Write_String@a 0075                LCD_Write_String@i 0078  
               ??_LCD_Write_Char 0071                      ___ftdiv@exp 003E                __size_of_LCD_Init 007B  
              __size_of_LCD_Port 0018                       main@totals 00B1                      ___ftmul@exp 002A  
                 __end_of___ftge 0B53                   __end_of___wmul 0A4B                 _LCD_Write_String 0A16  
         ?_OSCILLATOR_Initialize 0070              start_initialization 07D3                       eval_poly@d 0050  
                     eval_poly@n 0052                       eval_poly@x 004D  __size_of_PIN_MANAGER_Initialize 002F  
                    __end_of_log 1000                       frexp@value 0070         LCD_Write_Int@fieldLength 0022  
          __end_of_LCD_Write_Int 01A6                 __CFG_LPBOREN$OFF 0000                         ??___ftge 0076  
                       ??___wmul 0074                      __pdataBANK1 00BC                  LCD_Write_Char@a 0074  
                LCD_Write_Char@y 0073                         ?_ADCRead 0070                         ?_LCD_Cmd 0070  
              __size_of___awtoft 0020                __size_of___ftpack 0064                      __pbssBIGRAM 2328  
                       LCD_Cmd@a 0072                        ___latbits 0002                __size_of___lwtoft 0013  
                  __pcstackBANK0 0020                    __pcstackBANK1 00A0                      ??_LCD_Clear 0073  
               main@sampleIndex0 00DC                 main@sampleIndex1 00DE           _PIN_MANAGER_Initialize 0AB8  
                       ?___aldiv 0070                         ?___awdiv 0070                         ?___ftadd 0040  
                       ?___awmod 0070                         ?___ftdiv 0030                         ?___ftmul 0020  
                       ?___ftsub 004D                         ?___fttol 0070                  main@displayTemp 00A4  
                      _eval_poly 0C63                   __size_of_frexp 003B                  ___aldiv@divisor 0070  
                ___aldiv@counter 0020                         _LCD_Init 0D27                   ___wmul@product 0074  
                       _LCD_Port 09CD                        clear_ram0 0982                         _PIE0bits 0716  
               __size_of_ADCRead 000E                       _ADCON0bits 0093                ___wmul@multiplier 0070  
                      main@count 00A0                       ?_eval_poly 004D                 __size_of_LCD_Cmd 0012  
       __end_of_LCD_Write_String 0A30                        frexp@eptr 0073          ??_OSCILLATOR_Initialize 0070  
                 LCD_Write_Int@i 0031                   LCD_Write_Int@j 002F                 __size_of___aldiv 0082  
               __size_of___awdiv 0051                 __size_of___ftadd 00F6                 __size_of___awmod 0045  
               __size_of___ftdiv 00A9                 __size_of___ftmul 00B4                 __size_of___ftsub 001E  
               __size_of___fttol 0086                         ___awtoft 0007                         ___ftpack 0CC3  
                       ___lwtoft 09BA         __size_of_ADCC_Initialize 0019                         _main$789 00AA  
               main@solarOutTemp 00AF                         __ptext10 0A4B                         __ptext11 01A6  
                       __ptext20 0A69                         __ptext12 0EAA                         __ptext21 09FD  
                       __ptext13 0CC3                         __ptext30 099A                         __ptext22 0A16  
                       __ptext14 0DA2                         __ptext23 00DB                         __ptext15 0AE7  
                       __ptext24 0BCD                         __ptext16 0AB8                         __ptext25 0C12  
                       __ptext17 097A                         __ptext26 0A8E                         __ptext18 0D27  
                       __ptext27 0B8E                         __ptext19 0972                         __ptext28 09A8  
                       __ptext29 09CD          __size_of_LCD_Set_Cursor 003F         __size_of_InitCustomChars 0025  
            LCD_Write_Int@F13677 0067                    __size_of_main 0537             __CFG_WDTCWS$WDTCWS_7 0000  
    PIN_MANAGER_Initialize@state 0070                         log@coeff 1000                      ??_eval_poly 007E  
             LCD_Write_Char@temp 0072                  main@solarInTemp 00AD          ?_PIN_MANAGER_Initialize 0070  
              __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E8F          __size_of_LCD_Write_Char 002A  
             LCD_Set_Cursor@temp 0079               LCD_Write_Int@value 0020                     ___aldiv@sign 0021  
         __size_of_LCD_Write_Int 00CB   __end_of_PIN_MANAGER_Initialize 0AE7                ??_ADCC_Initialize 0070  
              ??_InitCustomChars 0075  
