

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Dec 11 16:10:10 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x620,48
    42                           	dabs	1,0x5A0,80
    43                           	dabs	1,0x528,72
    44                           	dabs	1,0x2328,0,_samples
    45                           	dabs	1,0x7E,2
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  001C                     	;# 
    69  001C                     	;# 
    70  001D                     	;# 
    71  001D                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  008C                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  008E                     	;# 
    79  008F                     	;# 
    80  0090                     	;# 
    81  0090                     	;# 
    82  0091                     	;# 
    83  0093                     	;# 
    84  0094                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  0110                     	;# 
   101  0110                     	;# 
   102  0111                     	;# 
   103  0112                     	;# 
   104  0112                     	;# 
   105  0113                     	;# 
   106  0114                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0119                     	;# 
   113  0119                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011A                     	;# 
   117  011A                     	;# 
   118  011B                     	;# 
   119  011B                     	;# 
   120  011B                     	;# 
   121  011B                     	;# 
   122  011B                     	;# 
   123  011C                     	;# 
   124  011C                     	;# 
   125  011C                     	;# 
   126  011D                     	;# 
   127  011D                     	;# 
   128  011D                     	;# 
   129  011E                     	;# 
   130  011E                     	;# 
   131  011E                     	;# 
   132  011F                     	;# 
   133  011F                     	;# 
   134  011F                     	;# 
   135  011F                     	;# 
   136  011F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  018E                     	;# 
   140  018F                     	;# 
   141  0190                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0196                     	;# 
   145  0197                     	;# 
   146  0198                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  020C                     	;# 
   152  020D                     	;# 
   153  020E                     	;# 
   154  020F                     	;# 
   155  020F                     	;# 
   156  0210                     	;# 
   157  0210                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0218                     	;# 
   170  0219                     	;# 
   171  021A                     	;# 
   172  021B                     	;# 
   173  021B                     	;# 
   174  021C                     	;# 
   175  021C                     	;# 
   176  021D                     	;# 
   177  021D                     	;# 
   178  021E                     	;# 
   179  021F                     	;# 
   180  028C                     	;# 
   181  028C                     	;# 
   182  028D                     	;# 
   183  028D                     	;# 
   184  028E                     	;# 
   185  028F                     	;# 
   186  0290                     	;# 
   187  0290                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0292                     	;# 
   191  0293                     	;# 
   192  0293                     	;# 
   193  0294                     	;# 
   194  0295                     	;# 
   195  0296                     	;# 
   196  0296                     	;# 
   197  0297                     	;# 
   198  0298                     	;# 
   199  0298                     	;# 
   200  0299                     	;# 
   201  0299                     	;# 
   202  029A                     	;# 
   203  029B                     	;# 
   204  029C                     	;# 
   205  029C                     	;# 
   206  029D                     	;# 
   207  030C                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  030E                     	;# 
   211  030F                     	;# 
   212  0310                     	;# 
   213  0310                     	;# 
   214  0311                     	;# 
   215  0312                     	;# 
   216  0313                     	;# 
   217  0314                     	;# 
   218  0314                     	;# 
   219  0315                     	;# 
   220  0316                     	;# 
   221  0317                     	;# 
   222  0318                     	;# 
   223  0318                     	;# 
   224  0319                     	;# 
   225  031A                     	;# 
   226  031B                     	;# 
   227  031C                     	;# 
   228  031C                     	;# 
   229  031D                     	;# 
   230  031E                     	;# 
   231  031F                     	;# 
   232  038C                     	;# 
   233  038D                     	;# 
   234  038E                     	;# 
   235  0390                     	;# 
   236  0391                     	;# 
   237  0392                     	;# 
   238  040C                     	;# 
   239  040D                     	;# 
   240  040E                     	;# 
   241  040F                     	;# 
   242  0410                     	;# 
   243  0411                     	;# 
   244  0416                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  0418                     	;# 
   248  0418                     	;# 
   249  0419                     	;# 
   250  041A                     	;# 
   251  041A                     	;# 
   252  041B                     	;# 
   253  041C                     	;# 
   254  041C                     	;# 
   255  041D                     	;# 
   256  041E                     	;# 
   257  041F                     	;# 
   258  048C                     	;# 
   259  048C                     	;# 
   260  048D                     	;# 
   261  048E                     	;# 
   262  048F                     	;# 
   263  048F                     	;# 
   264  0490                     	;# 
   265  0491                     	;# 
   266  0492                     	;# 
   267  0492                     	;# 
   268  0493                     	;# 
   269  0494                     	;# 
   270  0495                     	;# 
   271  0495                     	;# 
   272  0496                     	;# 
   273  0497                     	;# 
   274  0498                     	;# 
   275  0499                     	;# 
   276  049A                     	;# 
   277  049B                     	;# 
   278  049C                     	;# 
   279  049D                     	;# 
   280  050C                     	;# 
   281  050C                     	;# 
   282  050D                     	;# 
   283  050E                     	;# 
   284  050F                     	;# 
   285  050F                     	;# 
   286  0510                     	;# 
   287  0511                     	;# 
   288  0512                     	;# 
   289  0512                     	;# 
   290  0513                     	;# 
   291  0514                     	;# 
   292  0515                     	;# 
   293  0515                     	;# 
   294  0516                     	;# 
   295  0517                     	;# 
   296  0518                     	;# 
   297  0519                     	;# 
   298  051A                     	;# 
   299  051B                     	;# 
   300  051C                     	;# 
   301  051D                     	;# 
   302  058C                     	;# 
   303  058C                     	;# 
   304  058D                     	;# 
   305  058E                     	;# 
   306  058F                     	;# 
   307  058F                     	;# 
   308  0590                     	;# 
   309  0591                     	;# 
   310  0592                     	;# 
   311  0593                     	;# 
   312  060C                     	;# 
   313  060D                     	;# 
   314  060E                     	;# 
   315  060F                     	;# 
   316  0610                     	;# 
   317  0611                     	;# 
   318  0612                     	;# 
   319  0613                     	;# 
   320  0614                     	;# 
   321  0616                     	;# 
   322  0617                     	;# 
   323  0618                     	;# 
   324  0619                     	;# 
   325  061A                     	;# 
   326  061B                     	;# 
   327  061C                     	;# 
   328  061D                     	;# 
   329  061E                     	;# 
   330  068C                     	;# 
   331  068D                     	;# 
   332  068E                     	;# 
   333  068F                     	;# 
   334  0690                     	;# 
   335  0691                     	;# 
   336  0692                     	;# 
   337  0693                     	;# 
   338  0694                     	;# 
   339  070C                     	;# 
   340  070D                     	;# 
   341  070E                     	;# 
   342  070F                     	;# 
   343  0710                     	;# 
   344  0711                     	;# 
   345  0712                     	;# 
   346  0713                     	;# 
   347  0714                     	;# 
   348  0716                     	;# 
   349  0717                     	;# 
   350  0718                     	;# 
   351  0719                     	;# 
   352  071A                     	;# 
   353  071B                     	;# 
   354  071C                     	;# 
   355  071D                     	;# 
   356  071E                     	;# 
   357  0796                     	;# 
   358  0797                     	;# 
   359  0798                     	;# 
   360  0799                     	;# 
   361  079A                     	;# 
   362  079B                     	;# 
   363  080C                     	;# 
   364  080D                     	;# 
   365  080E                     	;# 
   366  080F                     	;# 
   367  0810                     	;# 
   368  0811                     	;# 
   369  0812                     	;# 
   370  0813                     	;# 
   371  0814                     	;# 
   372  081A                     	;# 
   373  081B                     	;# 
   374  081C                     	;# 
   375  081D                     	;# 
   376  081E                     	;# 
   377  081F                     	;# 
   378  088C                     	;# 
   379  088D                     	;# 
   380  088E                     	;# 
   381  088F                     	;# 
   382  0890                     	;# 
   383  0891                     	;# 
   384  0892                     	;# 
   385  0893                     	;# 
   386  0895                     	;# 
   387  0896                     	;# 
   388  0897                     	;# 
   389  0898                     	;# 
   390  0899                     	;# 
   391  089A                     	;# 
   392  089B                     	;# 
   393  090C                     	;# 
   394  090E                     	;# 
   395  090F                     	;# 
   396  091F                     	;# 
   397  091F                     	;# 
   398  098F                     	;# 
   399  098F                     	;# 
   400  0990                     	;# 
   401  0991                     	;# 
   402  0992                     	;# 
   403  0993                     	;# 
   404  0994                     	;# 
   405  0995                     	;# 
   406  0996                     	;# 
   407  0997                     	;# 
   408  0E0F                     	;# 
   409  0E10                     	;# 
   410  0E11                     	;# 
   411  0E12                     	;# 
   412  0E13                     	;# 
   413  0E14                     	;# 
   414  0E15                     	;# 
   415  0E16                     	;# 
   416  0E17                     	;# 
   417  0E18                     	;# 
   418  0E19                     	;# 
   419  0E1A                     	;# 
   420  0E1B                     	;# 
   421  0E1C                     	;# 
   422  0E1D                     	;# 
   423  0E1E                     	;# 
   424  0E1F                     	;# 
   425  0E20                     	;# 
   426  0E21                     	;# 
   427  0E22                     	;# 
   428  0E23                     	;# 
   429  0E24                     	;# 
   430  0E25                     	;# 
   431  0E26                     	;# 
   432  0E27                     	;# 
   433  0E28                     	;# 
   434  0E29                     	;# 
   435  0E2A                     	;# 
   436  0E2B                     	;# 
   437  0E2C                     	;# 
   438  0E2D                     	;# 
   439  0E2E                     	;# 
   440  0E2F                     	;# 
   441  0E30                     	;# 
   442  0E31                     	;# 
   443  0E32                     	;# 
   444  0E33                     	;# 
   445  0E34                     	;# 
   446  0E35                     	;# 
   447  0E36                     	;# 
   448  0E37                     	;# 
   449  0E8F                     	;# 
   450  0E90                     	;# 
   451  0E91                     	;# 
   452  0E92                     	;# 
   453  0E93                     	;# 
   454  0E94                     	;# 
   455  0E95                     	;# 
   456  0E96                     	;# 
   457  0E97                     	;# 
   458  0E9C                     	;# 
   459  0E9D                     	;# 
   460  0E9E                     	;# 
   461  0EA1                     	;# 
   462  0EA2                     	;# 
   463  0EA3                     	;# 
   464  0EA4                     	;# 
   465  0EA5                     	;# 
   466  0EA9                     	;# 
   467  0EAA                     	;# 
   468  0EAB                     	;# 
   469  0EAC                     	;# 
   470  0EB1                     	;# 
   471  0EB2                     	;# 
   472  0EB3                     	;# 
   473  0EB8                     	;# 
   474  0EB9                     	;# 
   475  0EBA                     	;# 
   476  0EBB                     	;# 
   477  0EBC                     	;# 
   478  0EBD                     	;# 
   479  0EBE                     	;# 
   480  0EC3                     	;# 
   481  0EC5                     	;# 
   482  0EC6                     	;# 
   483  0EC7                     	;# 
   484  0EC8                     	;# 
   485  0EC9                     	;# 
   486  0ECA                     	;# 
   487  0ECB                     	;# 
   488  0ECC                     	;# 
   489  0F10                     	;# 
   490  0F11                     	;# 
   491  0F12                     	;# 
   492  0F13                     	;# 
   493  0F14                     	;# 
   494  0F15                     	;# 
   495  0F16                     	;# 
   496  0F17                     	;# 
   497  0F18                     	;# 
   498  0F19                     	;# 
   499  0F1A                     	;# 
   500  0F1B                     	;# 
   501  0F1C                     	;# 
   502  0F1D                     	;# 
   503  0F1E                     	;# 
   504  0F1F                     	;# 
   505  0F20                     	;# 
   506  0F21                     	;# 
   507  0F22                     	;# 
   508  0F23                     	;# 
   509  0F24                     	;# 
   510  0F25                     	;# 
   511  0F26                     	;# 
   512  0F27                     	;# 
   513  0F38                     	;# 
   514  0F39                     	;# 
   515  0F3A                     	;# 
   516  0F3B                     	;# 
   517  0F3C                     	;# 
   518  0F3D                     	;# 
   519  0F3E                     	;# 
   520  0F3F                     	;# 
   521  0F40                     	;# 
   522  0F41                     	;# 
   523  0F43                     	;# 
   524  0F44                     	;# 
   525  0F45                     	;# 
   526  0F46                     	;# 
   527  0F47                     	;# 
   528  0F48                     	;# 
   529  0F49                     	;# 
   530  0F4A                     	;# 
   531  0F4B                     	;# 
   532  0F4C                     	;# 
   533  0F4E                     	;# 
   534  0F4F                     	;# 
   535  0F50                     	;# 
   536  0F51                     	;# 
   537  0F52                     	;# 
   538  0F53                     	;# 
   539  0F54                     	;# 
   540  0F55                     	;# 
   541  0F56                     	;# 
   542  0F57                     	;# 
   543  0F65                     	;# 
   544  0F68                     	;# 
   545  0F69                     	;# 
   546  0F6A                     	;# 
   547  0F6B                     	;# 
   548  0FE4                     	;# 
   549  0FE5                     	;# 
   550  0FE6                     	;# 
   551  0FE7                     	;# 
   552  0FE8                     	;# 
   553  0FE9                     	;# 
   554  0FEA                     	;# 
   555  0FEB                     	;# 
   556  0FED                     	;# 
   557  0FEE                     	;# 
   558  0FEF                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0008                     	;# 
   568  0009                     	;# 
   569  000A                     	;# 
   570  000B                     	;# 
   571  000C                     	;# 
   572  000D                     	;# 
   573  000E                     	;# 
   574  0010                     	;# 
   575  0011                     	;# 
   576  0012                     	;# 
   577  0013                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  001C                     	;# 
   582  001C                     	;# 
   583  001D                     	;# 
   584  001D                     	;# 
   585  001E                     	;# 
   586  001F                     	;# 
   587  008C                     	;# 
   588  008C                     	;# 
   589  008D                     	;# 
   590  008E                     	;# 
   591  008E                     	;# 
   592  008F                     	;# 
   593  0090                     	;# 
   594  0090                     	;# 
   595  0091                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009C                     	;# 
   606  009D                     	;# 
   607  009E                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  010E                     	;# 
   612  010F                     	;# 
   613  0110                     	;# 
   614  0110                     	;# 
   615  0111                     	;# 
   616  0112                     	;# 
   617  0112                     	;# 
   618  0113                     	;# 
   619  0114                     	;# 
   620  0114                     	;# 
   621  0115                     	;# 
   622  0116                     	;# 
   623  0116                     	;# 
   624  0117                     	;# 
   625  0119                     	;# 
   626  0119                     	;# 
   627  0119                     	;# 
   628  011A                     	;# 
   629  011A                     	;# 
   630  011A                     	;# 
   631  011B                     	;# 
   632  011B                     	;# 
   633  011B                     	;# 
   634  011B                     	;# 
   635  011B                     	;# 
   636  011C                     	;# 
   637  011C                     	;# 
   638  011C                     	;# 
   639  011D                     	;# 
   640  011D                     	;# 
   641  011D                     	;# 
   642  011E                     	;# 
   643  011E                     	;# 
   644  011E                     	;# 
   645  011F                     	;# 
   646  011F                     	;# 
   647  011F                     	;# 
   648  011F                     	;# 
   649  011F                     	;# 
   650  018C                     	;# 
   651  018D                     	;# 
   652  018E                     	;# 
   653  018F                     	;# 
   654  0190                     	;# 
   655  0191                     	;# 
   656  0192                     	;# 
   657  0196                     	;# 
   658  0197                     	;# 
   659  0198                     	;# 
   660  0199                     	;# 
   661  019A                     	;# 
   662  019B                     	;# 
   663  019C                     	;# 
   664  020C                     	;# 
   665  020D                     	;# 
   666  020E                     	;# 
   667  020F                     	;# 
   668  020F                     	;# 
   669  0210                     	;# 
   670  0210                     	;# 
   671  0211                     	;# 
   672  0211                     	;# 
   673  0212                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0216                     	;# 
   679  0216                     	;# 
   680  0217                     	;# 
   681  0217                     	;# 
   682  0218                     	;# 
   683  0219                     	;# 
   684  021A                     	;# 
   685  021B                     	;# 
   686  021B                     	;# 
   687  021C                     	;# 
   688  021C                     	;# 
   689  021D                     	;# 
   690  021D                     	;# 
   691  021E                     	;# 
   692  021F                     	;# 
   693  028C                     	;# 
   694  028C                     	;# 
   695  028D                     	;# 
   696  028D                     	;# 
   697  028E                     	;# 
   698  028F                     	;# 
   699  0290                     	;# 
   700  0290                     	;# 
   701  0291                     	;# 
   702  0292                     	;# 
   703  0292                     	;# 
   704  0293                     	;# 
   705  0293                     	;# 
   706  0294                     	;# 
   707  0295                     	;# 
   708  0296                     	;# 
   709  0296                     	;# 
   710  0297                     	;# 
   711  0298                     	;# 
   712  0298                     	;# 
   713  0299                     	;# 
   714  0299                     	;# 
   715  029A                     	;# 
   716  029B                     	;# 
   717  029C                     	;# 
   718  029C                     	;# 
   719  029D                     	;# 
   720  030C                     	;# 
   721  030C                     	;# 
   722  030D                     	;# 
   723  030E                     	;# 
   724  030F                     	;# 
   725  0310                     	;# 
   726  0310                     	;# 
   727  0311                     	;# 
   728  0312                     	;# 
   729  0313                     	;# 
   730  0314                     	;# 
   731  0314                     	;# 
   732  0315                     	;# 
   733  0316                     	;# 
   734  0317                     	;# 
   735  0318                     	;# 
   736  0318                     	;# 
   737  0319                     	;# 
   738  031A                     	;# 
   739  031B                     	;# 
   740  031C                     	;# 
   741  031C                     	;# 
   742  031D                     	;# 
   743  031E                     	;# 
   744  031F                     	;# 
   745  038C                     	;# 
   746  038D                     	;# 
   747  038E                     	;# 
   748  0390                     	;# 
   749  0391                     	;# 
   750  0392                     	;# 
   751  040C                     	;# 
   752  040D                     	;# 
   753  040E                     	;# 
   754  040F                     	;# 
   755  0410                     	;# 
   756  0411                     	;# 
   757  0416                     	;# 
   758  0416                     	;# 
   759  0417                     	;# 
   760  0418                     	;# 
   761  0418                     	;# 
   762  0419                     	;# 
   763  041A                     	;# 
   764  041A                     	;# 
   765  041B                     	;# 
   766  041C                     	;# 
   767  041C                     	;# 
   768  041D                     	;# 
   769  041E                     	;# 
   770  041F                     	;# 
   771  048C                     	;# 
   772  048C                     	;# 
   773  048D                     	;# 
   774  048E                     	;# 
   775  048F                     	;# 
   776  048F                     	;# 
   777  0490                     	;# 
   778  0491                     	;# 
   779  0492                     	;# 
   780  0492                     	;# 
   781  0493                     	;# 
   782  0494                     	;# 
   783  0495                     	;# 
   784  0495                     	;# 
   785  0496                     	;# 
   786  0497                     	;# 
   787  0498                     	;# 
   788  0499                     	;# 
   789  049A                     	;# 
   790  049B                     	;# 
   791  049C                     	;# 
   792  049D                     	;# 
   793  050C                     	;# 
   794  050C                     	;# 
   795  050D                     	;# 
   796  050E                     	;# 
   797  050F                     	;# 
   798  050F                     	;# 
   799  0510                     	;# 
   800  0511                     	;# 
   801  0512                     	;# 
   802  0512                     	;# 
   803  0513                     	;# 
   804  0514                     	;# 
   805  0515                     	;# 
   806  0515                     	;# 
   807  0516                     	;# 
   808  0517                     	;# 
   809  0518                     	;# 
   810  0519                     	;# 
   811  051A                     	;# 
   812  051B                     	;# 
   813  051C                     	;# 
   814  051D                     	;# 
   815  058C                     	;# 
   816  058C                     	;# 
   817  058D                     	;# 
   818  058E                     	;# 
   819  058F                     	;# 
   820  058F                     	;# 
   821  0590                     	;# 
   822  0591                     	;# 
   823  0592                     	;# 
   824  0593                     	;# 
   825  060C                     	;# 
   826  060D                     	;# 
   827  060E                     	;# 
   828  060F                     	;# 
   829  0610                     	;# 
   830  0611                     	;# 
   831  0612                     	;# 
   832  0613                     	;# 
   833  0614                     	;# 
   834  0616                     	;# 
   835  0617                     	;# 
   836  0618                     	;# 
   837  0619                     	;# 
   838  061A                     	;# 
   839  061B                     	;# 
   840  061C                     	;# 
   841  061D                     	;# 
   842  061E                     	;# 
   843  068C                     	;# 
   844  068D                     	;# 
   845  068E                     	;# 
   846  068F                     	;# 
   847  0690                     	;# 
   848  0691                     	;# 
   849  0692                     	;# 
   850  0693                     	;# 
   851  0694                     	;# 
   852  070C                     	;# 
   853  070D                     	;# 
   854  070E                     	;# 
   855  070F                     	;# 
   856  0710                     	;# 
   857  0711                     	;# 
   858  0712                     	;# 
   859  0713                     	;# 
   860  0714                     	;# 
   861  0716                     	;# 
   862  0717                     	;# 
   863  0718                     	;# 
   864  0719                     	;# 
   865  071A                     	;# 
   866  071B                     	;# 
   867  071C                     	;# 
   868  071D                     	;# 
   869  071E                     	;# 
   870  0796                     	;# 
   871  0797                     	;# 
   872  0798                     	;# 
   873  0799                     	;# 
   874  079A                     	;# 
   875  079B                     	;# 
   876  080C                     	;# 
   877  080D                     	;# 
   878  080E                     	;# 
   879  080F                     	;# 
   880  0810                     	;# 
   881  0811                     	;# 
   882  0812                     	;# 
   883  0813                     	;# 
   884  0814                     	;# 
   885  081A                     	;# 
   886  081B                     	;# 
   887  081C                     	;# 
   888  081D                     	;# 
   889  081E                     	;# 
   890  081F                     	;# 
   891  088C                     	;# 
   892  088D                     	;# 
   893  088E                     	;# 
   894  088F                     	;# 
   895  0890                     	;# 
   896  0891                     	;# 
   897  0892                     	;# 
   898  0893                     	;# 
   899  0895                     	;# 
   900  0896                     	;# 
   901  0897                     	;# 
   902  0898                     	;# 
   903  0899                     	;# 
   904  089A                     	;# 
   905  089B                     	;# 
   906  090C                     	;# 
   907  090E                     	;# 
   908  090F                     	;# 
   909  091F                     	;# 
   910  091F                     	;# 
   911  098F                     	;# 
   912  098F                     	;# 
   913  0990                     	;# 
   914  0991                     	;# 
   915  0992                     	;# 
   916  0993                     	;# 
   917  0994                     	;# 
   918  0995                     	;# 
   919  0996                     	;# 
   920  0997                     	;# 
   921  0E0F                     	;# 
   922  0E10                     	;# 
   923  0E11                     	;# 
   924  0E12                     	;# 
   925  0E13                     	;# 
   926  0E14                     	;# 
   927  0E15                     	;# 
   928  0E16                     	;# 
   929  0E17                     	;# 
   930  0E18                     	;# 
   931  0E19                     	;# 
   932  0E1A                     	;# 
   933  0E1B                     	;# 
   934  0E1C                     	;# 
   935  0E1D                     	;# 
   936  0E1E                     	;# 
   937  0E1F                     	;# 
   938  0E20                     	;# 
   939  0E21                     	;# 
   940  0E22                     	;# 
   941  0E23                     	;# 
   942  0E24                     	;# 
   943  0E25                     	;# 
   944  0E26                     	;# 
   945  0E27                     	;# 
   946  0E28                     	;# 
   947  0E29                     	;# 
   948  0E2A                     	;# 
   949  0E2B                     	;# 
   950  0E2C                     	;# 
   951  0E2D                     	;# 
   952  0E2E                     	;# 
   953  0E2F                     	;# 
   954  0E30                     	;# 
   955  0E31                     	;# 
   956  0E32                     	;# 
   957  0E33                     	;# 
   958  0E34                     	;# 
   959  0E35                     	;# 
   960  0E36                     	;# 
   961  0E37                     	;# 
   962  0E8F                     	;# 
   963  0E90                     	;# 
   964  0E91                     	;# 
   965  0E92                     	;# 
   966  0E93                     	;# 
   967  0E94                     	;# 
   968  0E95                     	;# 
   969  0E96                     	;# 
   970  0E97                     	;# 
   971  0E9C                     	;# 
   972  0E9D                     	;# 
   973  0E9E                     	;# 
   974  0EA1                     	;# 
   975  0EA2                     	;# 
   976  0EA3                     	;# 
   977  0EA4                     	;# 
   978  0EA5                     	;# 
   979  0EA9                     	;# 
   980  0EAA                     	;# 
   981  0EAB                     	;# 
   982  0EAC                     	;# 
   983  0EB1                     	;# 
   984  0EB2                     	;# 
   985  0EB3                     	;# 
   986  0EB8                     	;# 
   987  0EB9                     	;# 
   988  0EBA                     	;# 
   989  0EBB                     	;# 
   990  0EBC                     	;# 
   991  0EBD                     	;# 
   992  0EBE                     	;# 
   993  0EC3                     	;# 
   994  0EC5                     	;# 
   995  0EC6                     	;# 
   996  0EC7                     	;# 
   997  0EC8                     	;# 
   998  0EC9                     	;# 
   999  0ECA                     	;# 
  1000  0ECB                     	;# 
  1001  0ECC                     	;# 
  1002  0F10                     	;# 
  1003  0F11                     	;# 
  1004  0F12                     	;# 
  1005  0F13                     	;# 
  1006  0F14                     	;# 
  1007  0F15                     	;# 
  1008  0F16                     	;# 
  1009  0F17                     	;# 
  1010  0F18                     	;# 
  1011  0F19                     	;# 
  1012  0F1A                     	;# 
  1013  0F1B                     	;# 
  1014  0F1C                     	;# 
  1015  0F1D                     	;# 
  1016  0F1E                     	;# 
  1017  0F1F                     	;# 
  1018  0F20                     	;# 
  1019  0F21                     	;# 
  1020  0F22                     	;# 
  1021  0F23                     	;# 
  1022  0F24                     	;# 
  1023  0F25                     	;# 
  1024  0F26                     	;# 
  1025  0F27                     	;# 
  1026  0F38                     	;# 
  1027  0F39                     	;# 
  1028  0F3A                     	;# 
  1029  0F3B                     	;# 
  1030  0F3C                     	;# 
  1031  0F3D                     	;# 
  1032  0F3E                     	;# 
  1033  0F3F                     	;# 
  1034  0F40                     	;# 
  1035  0F41                     	;# 
  1036  0F43                     	;# 
  1037  0F44                     	;# 
  1038  0F45                     	;# 
  1039  0F46                     	;# 
  1040  0F47                     	;# 
  1041  0F48                     	;# 
  1042  0F49                     	;# 
  1043  0F4A                     	;# 
  1044  0F4B                     	;# 
  1045  0F4C                     	;# 
  1046  0F4E                     	;# 
  1047  0F4F                     	;# 
  1048  0F50                     	;# 
  1049  0F51                     	;# 
  1050  0F52                     	;# 
  1051  0F53                     	;# 
  1052  0F54                     	;# 
  1053  0F55                     	;# 
  1054  0F56                     	;# 
  1055  0F57                     	;# 
  1056  0F65                     	;# 
  1057  0F68                     	;# 
  1058  0F69                     	;# 
  1059  0F6A                     	;# 
  1060  0F6B                     	;# 
  1061  0FE4                     	;# 
  1062  0FE5                     	;# 
  1063  0FE6                     	;# 
  1064  0FE7                     	;# 
  1065  0FE8                     	;# 
  1066  0FE9                     	;# 
  1067  0FEA                     	;# 
  1068  0FEB                     	;# 
  1069  0FED                     	;# 
  1070  0FEE                     	;# 
  1071  0FEF                     	;# 
  1072  0000                     	;# 
  1073  0001                     	;# 
  1074  0002                     	;# 
  1075  0003                     	;# 
  1076  0004                     	;# 
  1077  0005                     	;# 
  1078  0006                     	;# 
  1079  0007                     	;# 
  1080  0008                     	;# 
  1081  0009                     	;# 
  1082  000A                     	;# 
  1083  000B                     	;# 
  1084  000C                     	;# 
  1085  000D                     	;# 
  1086  000E                     	;# 
  1087  0010                     	;# 
  1088  0011                     	;# 
  1089  0012                     	;# 
  1090  0013                     	;# 
  1091  0016                     	;# 
  1092  0017                     	;# 
  1093  0018                     	;# 
  1094  001C                     	;# 
  1095  001C                     	;# 
  1096  001D                     	;# 
  1097  001D                     	;# 
  1098  001E                     	;# 
  1099  001F                     	;# 
  1100  008C                     	;# 
  1101  008C                     	;# 
  1102  008D                     	;# 
  1103  008E                     	;# 
  1104  008E                     	;# 
  1105  008F                     	;# 
  1106  0090                     	;# 
  1107  0090                     	;# 
  1108  0091                     	;# 
  1109  0093                     	;# 
  1110  0094                     	;# 
  1111  0095                     	;# 
  1112  0096                     	;# 
  1113  0097                     	;# 
  1114  0098                     	;# 
  1115  0099                     	;# 
  1116  009A                     	;# 
  1117  009B                     	;# 
  1118  009C                     	;# 
  1119  009D                     	;# 
  1120  009E                     	;# 
  1121  010C                     	;# 
  1122  010D                     	;# 
  1123  010E                     	;# 
  1124  010E                     	;# 
  1125  010F                     	;# 
  1126  0110                     	;# 
  1127  0110                     	;# 
  1128  0111                     	;# 
  1129  0112                     	;# 
  1130  0112                     	;# 
  1131  0113                     	;# 
  1132  0114                     	;# 
  1133  0114                     	;# 
  1134  0115                     	;# 
  1135  0116                     	;# 
  1136  0116                     	;# 
  1137  0117                     	;# 
  1138  0119                     	;# 
  1139  0119                     	;# 
  1140  0119                     	;# 
  1141  011A                     	;# 
  1142  011A                     	;# 
  1143  011A                     	;# 
  1144  011B                     	;# 
  1145  011B                     	;# 
  1146  011B                     	;# 
  1147  011B                     	;# 
  1148  011B                     	;# 
  1149  011C                     	;# 
  1150  011C                     	;# 
  1151  011C                     	;# 
  1152  011D                     	;# 
  1153  011D                     	;# 
  1154  011D                     	;# 
  1155  011E                     	;# 
  1156  011E                     	;# 
  1157  011E                     	;# 
  1158  011F                     	;# 
  1159  011F                     	;# 
  1160  011F                     	;# 
  1161  011F                     	;# 
  1162  011F                     	;# 
  1163  018C                     	;# 
  1164  018D                     	;# 
  1165  018E                     	;# 
  1166  018F                     	;# 
  1167  0190                     	;# 
  1168  0191                     	;# 
  1169  0192                     	;# 
  1170  0196                     	;# 
  1171  0197                     	;# 
  1172  0198                     	;# 
  1173  0199                     	;# 
  1174  019A                     	;# 
  1175  019B                     	;# 
  1176  019C                     	;# 
  1177  020C                     	;# 
  1178  020D                     	;# 
  1179  020E                     	;# 
  1180  020F                     	;# 
  1181  020F                     	;# 
  1182  0210                     	;# 
  1183  0210                     	;# 
  1184  0211                     	;# 
  1185  0211                     	;# 
  1186  0212                     	;# 
  1187  0213                     	;# 
  1188  0214                     	;# 
  1189  0215                     	;# 
  1190  0215                     	;# 
  1191  0216                     	;# 
  1192  0216                     	;# 
  1193  0217                     	;# 
  1194  0217                     	;# 
  1195  0218                     	;# 
  1196  0219                     	;# 
  1197  021A                     	;# 
  1198  021B                     	;# 
  1199  021B                     	;# 
  1200  021C                     	;# 
  1201  021C                     	;# 
  1202  021D                     	;# 
  1203  021D                     	;# 
  1204  021E                     	;# 
  1205  021F                     	;# 
  1206  028C                     	;# 
  1207  028C                     	;# 
  1208  028D                     	;# 
  1209  028D                     	;# 
  1210  028E                     	;# 
  1211  028F                     	;# 
  1212  0290                     	;# 
  1213  0290                     	;# 
  1214  0291                     	;# 
  1215  0292                     	;# 
  1216  0292                     	;# 
  1217  0293                     	;# 
  1218  0293                     	;# 
  1219  0294                     	;# 
  1220  0295                     	;# 
  1221  0296                     	;# 
  1222  0296                     	;# 
  1223  0297                     	;# 
  1224  0298                     	;# 
  1225  0298                     	;# 
  1226  0299                     	;# 
  1227  0299                     	;# 
  1228  029A                     	;# 
  1229  029B                     	;# 
  1230  029C                     	;# 
  1231  029C                     	;# 
  1232  029D                     	;# 
  1233  030C                     	;# 
  1234  030C                     	;# 
  1235  030D                     	;# 
  1236  030E                     	;# 
  1237  030F                     	;# 
  1238  0310                     	;# 
  1239  0310                     	;# 
  1240  0311                     	;# 
  1241  0312                     	;# 
  1242  0313                     	;# 
  1243  0314                     	;# 
  1244  0314                     	;# 
  1245  0315                     	;# 
  1246  0316                     	;# 
  1247  0317                     	;# 
  1248  0318                     	;# 
  1249  0318                     	;# 
  1250  0319                     	;# 
  1251  031A                     	;# 
  1252  031B                     	;# 
  1253  031C                     	;# 
  1254  031C                     	;# 
  1255  031D                     	;# 
  1256  031E                     	;# 
  1257  031F                     	;# 
  1258  038C                     	;# 
  1259  038D                     	;# 
  1260  038E                     	;# 
  1261  0390                     	;# 
  1262  0391                     	;# 
  1263  0392                     	;# 
  1264  040C                     	;# 
  1265  040D                     	;# 
  1266  040E                     	;# 
  1267  040F                     	;# 
  1268  0410                     	;# 
  1269  0411                     	;# 
  1270  0416                     	;# 
  1271  0416                     	;# 
  1272  0417                     	;# 
  1273  0418                     	;# 
  1274  0418                     	;# 
  1275  0419                     	;# 
  1276  041A                     	;# 
  1277  041A                     	;# 
  1278  041B                     	;# 
  1279  041C                     	;# 
  1280  041C                     	;# 
  1281  041D                     	;# 
  1282  041E                     	;# 
  1283  041F                     	;# 
  1284  048C                     	;# 
  1285  048C                     	;# 
  1286  048D                     	;# 
  1287  048E                     	;# 
  1288  048F                     	;# 
  1289  048F                     	;# 
  1290  0490                     	;# 
  1291  0491                     	;# 
  1292  0492                     	;# 
  1293  0492                     	;# 
  1294  0493                     	;# 
  1295  0494                     	;# 
  1296  0495                     	;# 
  1297  0495                     	;# 
  1298  0496                     	;# 
  1299  0497                     	;# 
  1300  0498                     	;# 
  1301  0499                     	;# 
  1302  049A                     	;# 
  1303  049B                     	;# 
  1304  049C                     	;# 
  1305  049D                     	;# 
  1306  050C                     	;# 
  1307  050C                     	;# 
  1308  050D                     	;# 
  1309  050E                     	;# 
  1310  050F                     	;# 
  1311  050F                     	;# 
  1312  0510                     	;# 
  1313  0511                     	;# 
  1314  0512                     	;# 
  1315  0512                     	;# 
  1316  0513                     	;# 
  1317  0514                     	;# 
  1318  0515                     	;# 
  1319  0515                     	;# 
  1320  0516                     	;# 
  1321  0517                     	;# 
  1322  0518                     	;# 
  1323  0519                     	;# 
  1324  051A                     	;# 
  1325  051B                     	;# 
  1326  051C                     	;# 
  1327  051D                     	;# 
  1328  058C                     	;# 
  1329  058C                     	;# 
  1330  058D                     	;# 
  1331  058E                     	;# 
  1332  058F                     	;# 
  1333  058F                     	;# 
  1334  0590                     	;# 
  1335  0591                     	;# 
  1336  0592                     	;# 
  1337  0593                     	;# 
  1338  060C                     	;# 
  1339  060D                     	;# 
  1340  060E                     	;# 
  1341  060F                     	;# 
  1342  0610                     	;# 
  1343  0611                     	;# 
  1344  0612                     	;# 
  1345  0613                     	;# 
  1346  0614                     	;# 
  1347  0616                     	;# 
  1348  0617                     	;# 
  1349  0618                     	;# 
  1350  0619                     	;# 
  1351  061A                     	;# 
  1352  061B                     	;# 
  1353  061C                     	;# 
  1354  061D                     	;# 
  1355  061E                     	;# 
  1356  068C                     	;# 
  1357  068D                     	;# 
  1358  068E                     	;# 
  1359  068F                     	;# 
  1360  0690                     	;# 
  1361  0691                     	;# 
  1362  0692                     	;# 
  1363  0693                     	;# 
  1364  0694                     	;# 
  1365  070C                     	;# 
  1366  070D                     	;# 
  1367  070E                     	;# 
  1368  070F                     	;# 
  1369  0710                     	;# 
  1370  0711                     	;# 
  1371  0712                     	;# 
  1372  0713                     	;# 
  1373  0714                     	;# 
  1374  0716                     	;# 
  1375  0717                     	;# 
  1376  0718                     	;# 
  1377  0719                     	;# 
  1378  071A                     	;# 
  1379  071B                     	;# 
  1380  071C                     	;# 
  1381  071D                     	;# 
  1382  071E                     	;# 
  1383  0796                     	;# 
  1384  0797                     	;# 
  1385  0798                     	;# 
  1386  0799                     	;# 
  1387  079A                     	;# 
  1388  079B                     	;# 
  1389  080C                     	;# 
  1390  080D                     	;# 
  1391  080E                     	;# 
  1392  080F                     	;# 
  1393  0810                     	;# 
  1394  0811                     	;# 
  1395  0812                     	;# 
  1396  0813                     	;# 
  1397  0814                     	;# 
  1398  081A                     	;# 
  1399  081B                     	;# 
  1400  081C                     	;# 
  1401  081D                     	;# 
  1402  081E                     	;# 
  1403  081F                     	;# 
  1404  088C                     	;# 
  1405  088D                     	;# 
  1406  088E                     	;# 
  1407  088F                     	;# 
  1408  0890                     	;# 
  1409  0891                     	;# 
  1410  0892                     	;# 
  1411  0893                     	;# 
  1412  0895                     	;# 
  1413  0896                     	;# 
  1414  0897                     	;# 
  1415  0898                     	;# 
  1416  0899                     	;# 
  1417  089A                     	;# 
  1418  089B                     	;# 
  1419  090C                     	;# 
  1420  090E                     	;# 
  1421  090F                     	;# 
  1422  091F                     	;# 
  1423  091F                     	;# 
  1424  098F                     	;# 
  1425  098F                     	;# 
  1426  0990                     	;# 
  1427  0991                     	;# 
  1428  0992                     	;# 
  1429  0993                     	;# 
  1430  0994                     	;# 
  1431  0995                     	;# 
  1432  0996                     	;# 
  1433  0997                     	;# 
  1434  0E0F                     	;# 
  1435  0E10                     	;# 
  1436  0E11                     	;# 
  1437  0E12                     	;# 
  1438  0E13                     	;# 
  1439  0E14                     	;# 
  1440  0E15                     	;# 
  1441  0E16                     	;# 
  1442  0E17                     	;# 
  1443  0E18                     	;# 
  1444  0E19                     	;# 
  1445  0E1A                     	;# 
  1446  0E1B                     	;# 
  1447  0E1C                     	;# 
  1448  0E1D                     	;# 
  1449  0E1E                     	;# 
  1450  0E1F                     	;# 
  1451  0E20                     	;# 
  1452  0E21                     	;# 
  1453  0E22                     	;# 
  1454  0E23                     	;# 
  1455  0E24                     	;# 
  1456  0E25                     	;# 
  1457  0E26                     	;# 
  1458  0E27                     	;# 
  1459  0E28                     	;# 
  1460  0E29                     	;# 
  1461  0E2A                     	;# 
  1462  0E2B                     	;# 
  1463  0E2C                     	;# 
  1464  0E2D                     	;# 
  1465  0E2E                     	;# 
  1466  0E2F                     	;# 
  1467  0E30                     	;# 
  1468  0E31                     	;# 
  1469  0E32                     	;# 
  1470  0E33                     	;# 
  1471  0E34                     	;# 
  1472  0E35                     	;# 
  1473  0E36                     	;# 
  1474  0E37                     	;# 
  1475  0E8F                     	;# 
  1476  0E90                     	;# 
  1477  0E91                     	;# 
  1478  0E92                     	;# 
  1479  0E93                     	;# 
  1480  0E94                     	;# 
  1481  0E95                     	;# 
  1482  0E96                     	;# 
  1483  0E97                     	;# 
  1484  0E9C                     	;# 
  1485  0E9D                     	;# 
  1486  0E9E                     	;# 
  1487  0EA1                     	;# 
  1488  0EA2                     	;# 
  1489  0EA3                     	;# 
  1490  0EA4                     	;# 
  1491  0EA5                     	;# 
  1492  0EA9                     	;# 
  1493  0EAA                     	;# 
  1494  0EAB                     	;# 
  1495  0EAC                     	;# 
  1496  0EB1                     	;# 
  1497  0EB2                     	;# 
  1498  0EB3                     	;# 
  1499  0EB8                     	;# 
  1500  0EB9                     	;# 
  1501  0EBA                     	;# 
  1502  0EBB                     	;# 
  1503  0EBC                     	;# 
  1504  0EBD                     	;# 
  1505  0EBE                     	;# 
  1506  0EC3                     	;# 
  1507  0EC5                     	;# 
  1508  0EC6                     	;# 
  1509  0EC7                     	;# 
  1510  0EC8                     	;# 
  1511  0EC9                     	;# 
  1512  0ECA                     	;# 
  1513  0ECB                     	;# 
  1514  0ECC                     	;# 
  1515  0F10                     	;# 
  1516  0F11                     	;# 
  1517  0F12                     	;# 
  1518  0F13                     	;# 
  1519  0F14                     	;# 
  1520  0F15                     	;# 
  1521  0F16                     	;# 
  1522  0F17                     	;# 
  1523  0F18                     	;# 
  1524  0F19                     	;# 
  1525  0F1A                     	;# 
  1526  0F1B                     	;# 
  1527  0F1C                     	;# 
  1528  0F1D                     	;# 
  1529  0F1E                     	;# 
  1530  0F1F                     	;# 
  1531  0F20                     	;# 
  1532  0F21                     	;# 
  1533  0F22                     	;# 
  1534  0F23                     	;# 
  1535  0F24                     	;# 
  1536  0F25                     	;# 
  1537  0F26                     	;# 
  1538  0F27                     	;# 
  1539  0F38                     	;# 
  1540  0F39                     	;# 
  1541  0F3A                     	;# 
  1542  0F3B                     	;# 
  1543  0F3C                     	;# 
  1544  0F3D                     	;# 
  1545  0F3E                     	;# 
  1546  0F3F                     	;# 
  1547  0F40                     	;# 
  1548  0F41                     	;# 
  1549  0F43                     	;# 
  1550  0F44                     	;# 
  1551  0F45                     	;# 
  1552  0F46                     	;# 
  1553  0F47                     	;# 
  1554  0F48                     	;# 
  1555  0F49                     	;# 
  1556  0F4A                     	;# 
  1557  0F4B                     	;# 
  1558  0F4C                     	;# 
  1559  0F4E                     	;# 
  1560  0F4F                     	;# 
  1561  0F50                     	;# 
  1562  0F51                     	;# 
  1563  0F52                     	;# 
  1564  0F53                     	;# 
  1565  0F54                     	;# 
  1566  0F55                     	;# 
  1567  0F56                     	;# 
  1568  0F57                     	;# 
  1569  0F65                     	;# 
  1570  0F68                     	;# 
  1571  0F69                     	;# 
  1572  0F6A                     	;# 
  1573  0F6B                     	;# 
  1574  0FE4                     	;# 
  1575  0FE5                     	;# 
  1576  0FE6                     	;# 
  1577  0FE7                     	;# 
  1578  0FE8                     	;# 
  1579  0FE9                     	;# 
  1580  0FEA                     	;# 
  1581  0FEB                     	;# 
  1582  0FED                     	;# 
  1583  0FEE                     	;# 
  1584  0FEF                     	;# 
  1585  0000                     	;# 
  1586  0001                     	;# 
  1587  0002                     	;# 
  1588  0003                     	;# 
  1589  0004                     	;# 
  1590  0005                     	;# 
  1591  0006                     	;# 
  1592  0007                     	;# 
  1593  0008                     	;# 
  1594  0009                     	;# 
  1595  000A                     	;# 
  1596  000B                     	;# 
  1597  000C                     	;# 
  1598  000D                     	;# 
  1599  000E                     	;# 
  1600  0010                     	;# 
  1601  0011                     	;# 
  1602  0012                     	;# 
  1603  0013                     	;# 
  1604  0016                     	;# 
  1605  0017                     	;# 
  1606  0018                     	;# 
  1607  001C                     	;# 
  1608  001C                     	;# 
  1609  001D                     	;# 
  1610  001D                     	;# 
  1611  001E                     	;# 
  1612  001F                     	;# 
  1613  008C                     	;# 
  1614  008C                     	;# 
  1615  008D                     	;# 
  1616  008E                     	;# 
  1617  008E                     	;# 
  1618  008F                     	;# 
  1619  0090                     	;# 
  1620  0090                     	;# 
  1621  0091                     	;# 
  1622  0093                     	;# 
  1623  0094                     	;# 
  1624  0095                     	;# 
  1625  0096                     	;# 
  1626  0097                     	;# 
  1627  0098                     	;# 
  1628  0099                     	;# 
  1629  009A                     	;# 
  1630  009B                     	;# 
  1631  009C                     	;# 
  1632  009D                     	;# 
  1633  009E                     	;# 
  1634  010C                     	;# 
  1635  010D                     	;# 
  1636  010E                     	;# 
  1637  010E                     	;# 
  1638  010F                     	;# 
  1639  0110                     	;# 
  1640  0110                     	;# 
  1641  0111                     	;# 
  1642  0112                     	;# 
  1643  0112                     	;# 
  1644  0113                     	;# 
  1645  0114                     	;# 
  1646  0114                     	;# 
  1647  0115                     	;# 
  1648  0116                     	;# 
  1649  0116                     	;# 
  1650  0117                     	;# 
  1651  0119                     	;# 
  1652  0119                     	;# 
  1653  0119                     	;# 
  1654  011A                     	;# 
  1655  011A                     	;# 
  1656  011A                     	;# 
  1657  011B                     	;# 
  1658  011B                     	;# 
  1659  011B                     	;# 
  1660  011B                     	;# 
  1661  011B                     	;# 
  1662  011C                     	;# 
  1663  011C                     	;# 
  1664  011C                     	;# 
  1665  011D                     	;# 
  1666  011D                     	;# 
  1667  011D                     	;# 
  1668  011E                     	;# 
  1669  011E                     	;# 
  1670  011E                     	;# 
  1671  011F                     	;# 
  1672  011F                     	;# 
  1673  011F                     	;# 
  1674  011F                     	;# 
  1675  011F                     	;# 
  1676  018C                     	;# 
  1677  018D                     	;# 
  1678  018E                     	;# 
  1679  018F                     	;# 
  1680  0190                     	;# 
  1681  0191                     	;# 
  1682  0192                     	;# 
  1683  0196                     	;# 
  1684  0197                     	;# 
  1685  0198                     	;# 
  1686  0199                     	;# 
  1687  019A                     	;# 
  1688  019B                     	;# 
  1689  019C                     	;# 
  1690  020C                     	;# 
  1691  020D                     	;# 
  1692  020E                     	;# 
  1693  020F                     	;# 
  1694  020F                     	;# 
  1695  0210                     	;# 
  1696  0210                     	;# 
  1697  0211                     	;# 
  1698  0211                     	;# 
  1699  0212                     	;# 
  1700  0213                     	;# 
  1701  0214                     	;# 
  1702  0215                     	;# 
  1703  0215                     	;# 
  1704  0216                     	;# 
  1705  0216                     	;# 
  1706  0217                     	;# 
  1707  0217                     	;# 
  1708  0218                     	;# 
  1709  0219                     	;# 
  1710  021A                     	;# 
  1711  021B                     	;# 
  1712  021B                     	;# 
  1713  021C                     	;# 
  1714  021C                     	;# 
  1715  021D                     	;# 
  1716  021D                     	;# 
  1717  021E                     	;# 
  1718  021F                     	;# 
  1719  028C                     	;# 
  1720  028C                     	;# 
  1721  028D                     	;# 
  1722  028D                     	;# 
  1723  028E                     	;# 
  1724  028F                     	;# 
  1725  0290                     	;# 
  1726  0290                     	;# 
  1727  0291                     	;# 
  1728  0292                     	;# 
  1729  0292                     	;# 
  1730  0293                     	;# 
  1731  0293                     	;# 
  1732  0294                     	;# 
  1733  0295                     	;# 
  1734  0296                     	;# 
  1735  0296                     	;# 
  1736  0297                     	;# 
  1737  0298                     	;# 
  1738  0298                     	;# 
  1739  0299                     	;# 
  1740  0299                     	;# 
  1741  029A                     	;# 
  1742  029B                     	;# 
  1743  029C                     	;# 
  1744  029C                     	;# 
  1745  029D                     	;# 
  1746  030C                     	;# 
  1747  030C                     	;# 
  1748  030D                     	;# 
  1749  030E                     	;# 
  1750  030F                     	;# 
  1751  0310                     	;# 
  1752  0310                     	;# 
  1753  0311                     	;# 
  1754  0312                     	;# 
  1755  0313                     	;# 
  1756  0314                     	;# 
  1757  0314                     	;# 
  1758  0315                     	;# 
  1759  0316                     	;# 
  1760  0317                     	;# 
  1761  0318                     	;# 
  1762  0318                     	;# 
  1763  0319                     	;# 
  1764  031A                     	;# 
  1765  031B                     	;# 
  1766  031C                     	;# 
  1767  031C                     	;# 
  1768  031D                     	;# 
  1769  031E                     	;# 
  1770  031F                     	;# 
  1771  038C                     	;# 
  1772  038D                     	;# 
  1773  038E                     	;# 
  1774  0390                     	;# 
  1775  0391                     	;# 
  1776  0392                     	;# 
  1777  040C                     	;# 
  1778  040D                     	;# 
  1779  040E                     	;# 
  1780  040F                     	;# 
  1781  0410                     	;# 
  1782  0411                     	;# 
  1783  0416                     	;# 
  1784  0416                     	;# 
  1785  0417                     	;# 
  1786  0418                     	;# 
  1787  0418                     	;# 
  1788  0419                     	;# 
  1789  041A                     	;# 
  1790  041A                     	;# 
  1791  041B                     	;# 
  1792  041C                     	;# 
  1793  041C                     	;# 
  1794  041D                     	;# 
  1795  041E                     	;# 
  1796  041F                     	;# 
  1797  048C                     	;# 
  1798  048C                     	;# 
  1799  048D                     	;# 
  1800  048E                     	;# 
  1801  048F                     	;# 
  1802  048F                     	;# 
  1803  0490                     	;# 
  1804  0491                     	;# 
  1805  0492                     	;# 
  1806  0492                     	;# 
  1807  0493                     	;# 
  1808  0494                     	;# 
  1809  0495                     	;# 
  1810  0495                     	;# 
  1811  0496                     	;# 
  1812  0497                     	;# 
  1813  0498                     	;# 
  1814  0499                     	;# 
  1815  049A                     	;# 
  1816  049B                     	;# 
  1817  049C                     	;# 
  1818  049D                     	;# 
  1819  050C                     	;# 
  1820  050C                     	;# 
  1821  050D                     	;# 
  1822  050E                     	;# 
  1823  050F                     	;# 
  1824  050F                     	;# 
  1825  0510                     	;# 
  1826  0511                     	;# 
  1827  0512                     	;# 
  1828  0512                     	;# 
  1829  0513                     	;# 
  1830  0514                     	;# 
  1831  0515                     	;# 
  1832  0515                     	;# 
  1833  0516                     	;# 
  1834  0517                     	;# 
  1835  0518                     	;# 
  1836  0519                     	;# 
  1837  051A                     	;# 
  1838  051B                     	;# 
  1839  051C                     	;# 
  1840  051D                     	;# 
  1841  058C                     	;# 
  1842  058C                     	;# 
  1843  058D                     	;# 
  1844  058E                     	;# 
  1845  058F                     	;# 
  1846  058F                     	;# 
  1847  0590                     	;# 
  1848  0591                     	;# 
  1849  0592                     	;# 
  1850  0593                     	;# 
  1851  060C                     	;# 
  1852  060D                     	;# 
  1853  060E                     	;# 
  1854  060F                     	;# 
  1855  0610                     	;# 
  1856  0611                     	;# 
  1857  0612                     	;# 
  1858  0613                     	;# 
  1859  0614                     	;# 
  1860  0616                     	;# 
  1861  0617                     	;# 
  1862  0618                     	;# 
  1863  0619                     	;# 
  1864  061A                     	;# 
  1865  061B                     	;# 
  1866  061C                     	;# 
  1867  061D                     	;# 
  1868  061E                     	;# 
  1869  068C                     	;# 
  1870  068D                     	;# 
  1871  068E                     	;# 
  1872  068F                     	;# 
  1873  0690                     	;# 
  1874  0691                     	;# 
  1875  0692                     	;# 
  1876  0693                     	;# 
  1877  0694                     	;# 
  1878  070C                     	;# 
  1879  070D                     	;# 
  1880  070E                     	;# 
  1881  070F                     	;# 
  1882  0710                     	;# 
  1883  0711                     	;# 
  1884  0712                     	;# 
  1885  0713                     	;# 
  1886  0714                     	;# 
  1887  0716                     	;# 
  1888  0717                     	;# 
  1889  0718                     	;# 
  1890  0719                     	;# 
  1891  071A                     	;# 
  1892  071B                     	;# 
  1893  071C                     	;# 
  1894  071D                     	;# 
  1895  071E                     	;# 
  1896  0796                     	;# 
  1897  0797                     	;# 
  1898  0798                     	;# 
  1899  0799                     	;# 
  1900  079A                     	;# 
  1901  079B                     	;# 
  1902  080C                     	;# 
  1903  080D                     	;# 
  1904  080E                     	;# 
  1905  080F                     	;# 
  1906  0810                     	;# 
  1907  0811                     	;# 
  1908  0812                     	;# 
  1909  0813                     	;# 
  1910  0814                     	;# 
  1911  081A                     	;# 
  1912  081B                     	;# 
  1913  081C                     	;# 
  1914  081D                     	;# 
  1915  081E                     	;# 
  1916  081F                     	;# 
  1917  088C                     	;# 
  1918  088D                     	;# 
  1919  088E                     	;# 
  1920  088F                     	;# 
  1921  0890                     	;# 
  1922  0891                     	;# 
  1923  0892                     	;# 
  1924  0893                     	;# 
  1925  0895                     	;# 
  1926  0896                     	;# 
  1927  0897                     	;# 
  1928  0898                     	;# 
  1929  0899                     	;# 
  1930  089A                     	;# 
  1931  089B                     	;# 
  1932  090C                     	;# 
  1933  090E                     	;# 
  1934  090F                     	;# 
  1935  091F                     	;# 
  1936  091F                     	;# 
  1937  098F                     	;# 
  1938  098F                     	;# 
  1939  0990                     	;# 
  1940  0991                     	;# 
  1941  0992                     	;# 
  1942  0993                     	;# 
  1943  0994                     	;# 
  1944  0995                     	;# 
  1945  0996                     	;# 
  1946  0997                     	;# 
  1947  0E0F                     	;# 
  1948  0E10                     	;# 
  1949  0E11                     	;# 
  1950  0E12                     	;# 
  1951  0E13                     	;# 
  1952  0E14                     	;# 
  1953  0E15                     	;# 
  1954  0E16                     	;# 
  1955  0E17                     	;# 
  1956  0E18                     	;# 
  1957  0E19                     	;# 
  1958  0E1A                     	;# 
  1959  0E1B                     	;# 
  1960  0E1C                     	;# 
  1961  0E1D                     	;# 
  1962  0E1E                     	;# 
  1963  0E1F                     	;# 
  1964  0E20                     	;# 
  1965  0E21                     	;# 
  1966  0E22                     	;# 
  1967  0E23                     	;# 
  1968  0E24                     	;# 
  1969  0E25                     	;# 
  1970  0E26                     	;# 
  1971  0E27                     	;# 
  1972  0E28                     	;# 
  1973  0E29                     	;# 
  1974  0E2A                     	;# 
  1975  0E2B                     	;# 
  1976  0E2C                     	;# 
  1977  0E2D                     	;# 
  1978  0E2E                     	;# 
  1979  0E2F                     	;# 
  1980  0E30                     	;# 
  1981  0E31                     	;# 
  1982  0E32                     	;# 
  1983  0E33                     	;# 
  1984  0E34                     	;# 
  1985  0E35                     	;# 
  1986  0E36                     	;# 
  1987  0E37                     	;# 
  1988  0E8F                     	;# 
  1989  0E90                     	;# 
  1990  0E91                     	;# 
  1991  0E92                     	;# 
  1992  0E93                     	;# 
  1993  0E94                     	;# 
  1994  0E95                     	;# 
  1995  0E96                     	;# 
  1996  0E97                     	;# 
  1997  0E9C                     	;# 
  1998  0E9D                     	;# 
  1999  0E9E                     	;# 
  2000  0EA1                     	;# 
  2001  0EA2                     	;# 
  2002  0EA3                     	;# 
  2003  0EA4                     	;# 
  2004  0EA5                     	;# 
  2005  0EA9                     	;# 
  2006  0EAA                     	;# 
  2007  0EAB                     	;# 
  2008  0EAC                     	;# 
  2009  0EB1                     	;# 
  2010  0EB2                     	;# 
  2011  0EB3                     	;# 
  2012  0EB8                     	;# 
  2013  0EB9                     	;# 
  2014  0EBA                     	;# 
  2015  0EBB                     	;# 
  2016  0EBC                     	;# 
  2017  0EBD                     	;# 
  2018  0EBE                     	;# 
  2019  0EC3                     	;# 
  2020  0EC5                     	;# 
  2021  0EC6                     	;# 
  2022  0EC7                     	;# 
  2023  0EC8                     	;# 
  2024  0EC9                     	;# 
  2025  0ECA                     	;# 
  2026  0ECB                     	;# 
  2027  0ECC                     	;# 
  2028  0F10                     	;# 
  2029  0F11                     	;# 
  2030  0F12                     	;# 
  2031  0F13                     	;# 
  2032  0F14                     	;# 
  2033  0F15                     	;# 
  2034  0F16                     	;# 
  2035  0F17                     	;# 
  2036  0F18                     	;# 
  2037  0F19                     	;# 
  2038  0F1A                     	;# 
  2039  0F1B                     	;# 
  2040  0F1C                     	;# 
  2041  0F1D                     	;# 
  2042  0F1E                     	;# 
  2043  0F1F                     	;# 
  2044  0F20                     	;# 
  2045  0F21                     	;# 
  2046  0F22                     	;# 
  2047  0F23                     	;# 
  2048  0F24                     	;# 
  2049  0F25                     	;# 
  2050  0F26                     	;# 
  2051  0F27                     	;# 
  2052  0F38                     	;# 
  2053  0F39                     	;# 
  2054  0F3A                     	;# 
  2055  0F3B                     	;# 
  2056  0F3C                     	;# 
  2057  0F3D                     	;# 
  2058  0F3E                     	;# 
  2059  0F3F                     	;# 
  2060  0F40                     	;# 
  2061  0F41                     	;# 
  2062  0F43                     	;# 
  2063  0F44                     	;# 
  2064  0F45                     	;# 
  2065  0F46                     	;# 
  2066  0F47                     	;# 
  2067  0F48                     	;# 
  2068  0F49                     	;# 
  2069  0F4A                     	;# 
  2070  0F4B                     	;# 
  2071  0F4C                     	;# 
  2072  0F4E                     	;# 
  2073  0F4F                     	;# 
  2074  0F50                     	;# 
  2075  0F51                     	;# 
  2076  0F52                     	;# 
  2077  0F53                     	;# 
  2078  0F54                     	;# 
  2079  0F55                     	;# 
  2080  0F56                     	;# 
  2081  0F57                     	;# 
  2082  0F65                     	;# 
  2083  0F68                     	;# 
  2084  0F69                     	;# 
  2085  0F6A                     	;# 
  2086  0F6B                     	;# 
  2087  0FE4                     	;# 
  2088  0FE5                     	;# 
  2089  0FE6                     	;# 
  2090  0FE7                     	;# 
  2091  0FE8                     	;# 
  2092  0FE9                     	;# 
  2093  0FEA                     	;# 
  2094  0FEB                     	;# 
  2095  0FED                     	;# 
  2096  0FEE                     	;# 
  2097  0FEF                     	;_samples
  2098                           
  2099                           	psect	stringtext
  2100  0800                     __pstringtext:	
  2101  0800                     _fonts:	
  2102  0800  3400               	retlw	0
  2103  0801  3400               	retlw	0
  2104  0802  3400               	retlw	0
  2105  0803  3400               	retlw	0
  2106  0804  344E               	retlw	78
  2107  0805  3400               	retlw	0
  2108  0806  3406               	retlw	6
  2109  0807  3400               	retlw	0
  2110  0808  3406               	retlw	6
  2111  0809  34FF               	retlw	255
  2112  080A  34FF               	retlw	255
  2113  080B  34FF               	retlw	255
  2114  080C  3448               	retlw	72
  2115  080D  34D6               	retlw	214
  2116  080E  3424               	retlw	36
  2117  080F  3412               	retlw	18
  2118  0810  3408               	retlw	8
  2119  0811  3424               	retlw	36
  2120  0812  34FF               	retlw	255
  2121  0813  34FF               	retlw	255
  2122  0814  34FF               	retlw	255
  2123  0815  3400               	retlw	0
  2124  0816  3406               	retlw	6
  2125  0817  3400               	retlw	0
  2126  0818  3438               	retlw	56
  2127  0819  3444               	retlw	68
  2128  081A  3482               	retlw	130
  2129  081B  3482               	retlw	130
  2130  081C  3444               	retlw	68
  2131  081D  3438               	retlw	56
  2132  081E  3414               	retlw	20
  2133  081F  3408               	retlw	8
  2134  0820  343E               	retlw	62
  2135  0821  3410               	retlw	16
  2136  0822  3438               	retlw	56
  2137  0823  3410               	retlw	16
  2138  0824  34A0               	retlw	160
  2139  0825  3460               	retlw	96
  2140  0826  3400               	retlw	0
  2141  0827  3410               	retlw	16
  2142  0828  3410               	retlw	16
  2143  0829  3410               	retlw	16
  2144  082A  3460               	retlw	96
  2145  082B  3460               	retlw	96
  2146  082C  3400               	retlw	0
  2147  082D  3460               	retlw	96
  2148  082E  3418               	retlw	24
  2149  082F  3406               	retlw	6
  2150  0830  347C               	retlw	124
  2151  0831  3442               	retlw	66
  2152  0832  347C               	retlw	124
  2153  0833  3444               	retlw	68
  2154  0834  347E               	retlw	126
  2155  0835  3440               	retlw	64
  2156  0836  3464               	retlw	100
  2157  0837  3452               	retlw	82
  2158  0838  344C               	retlw	76
  2159  0839  344A               	retlw	74
  2160  083A  344A               	retlw	74
  2161  083B  3434               	retlw	52
  2162  083C  3438               	retlw	56
  2163  083D  3424               	retlw	36
  2164  083E  347E               	retlw	126
  2165  083F  344E               	retlw	78
  2166  0840  344A               	retlw	74
  2167  0841  3432               	retlw	50
  2168  0842  343C               	retlw	60
  2169  0843  344A               	retlw	74
  2170  0844  3432               	retlw	50
  2171  0845  3462               	retlw	98
  2172  0846  341A               	retlw	26
  2173  0847  3406               	retlw	6
  2174  0848  3476               	retlw	118
  2175  0849  344A               	retlw	74
  2176  084A  3476               	retlw	118
  2177  084B  344C               	retlw	76
  2178  084C  3452               	retlw	82
  2179  084D  343C               	retlw	60
  2180  084E  346C               	retlw	108
  2181  084F  346C               	retlw	108
  2182  0850  3400               	retlw	0
  2183  0851  34AC               	retlw	172
  2184  0852  346C               	retlw	108
  2185  0853  3400               	retlw	0
  2186  0854  3410               	retlw	16
  2187  0855  3428               	retlw	40
  2188  0856  3444               	retlw	68
  2189  0857  3428               	retlw	40
  2190  0858  3428               	retlw	40
  2191  0859  3428               	retlw	40
  2192  085A  3444               	retlw	68
  2193  085B  3428               	retlw	40
  2194  085C  3410               	retlw	16
  2195  085D  3402               	retlw	2
  2196  085E  3459               	retlw	89
  2197  085F  3406               	retlw	6
  2198  0860  34FF               	retlw	255
  2199  0861  34FF               	retlw	255
  2200  0862  34FF               	retlw	255
  2201  0863  347C               	retlw	124
  2202  0864  3412               	retlw	18
  2203  0865  347C               	retlw	124
  2204  0866  347E               	retlw	126
  2205  0867  345A               	retlw	90
  2206  0868  3434               	retlw	52
  2207  0869  343C               	retlw	60
  2208  086A  3442               	retlw	66
  2209  086B  3442               	retlw	66
  2210  086C  347E               	retlw	126
  2211  086D  3442               	retlw	66
  2212  086E  343C               	retlw	60
  2213  086F  347E               	retlw	126
  2214  0870  344A               	retlw	74
  2215  0871  3442               	retlw	66
  2216  0872  347E               	retlw	126
  2217  0873  340A               	retlw	10
  2218  0874  340A               	retlw	10
  2219  0875  343C               	retlw	60
  2220  0876  3452               	retlw	82
  2221  0877  3434               	retlw	52
  2222  0878  347E               	retlw	126
  2223  0879  3408               	retlw	8
  2224  087A  347E               	retlw	126
  2225  087B  3442               	retlw	66
  2226  087C  347E               	retlw	126
  2227  087D  3442               	retlw	66
  2228  087E  3430               	retlw	48
  2229  087F  3440               	retlw	64
  2230  0880  343E               	retlw	62
  2231  0881  347E               	retlw	126
  2232  0882  3418               	retlw	24
  2233  0883  3466               	retlw	102
  2234  0884  347E               	retlw	126
  2235  0885  3440               	retlw	64
  2236  0886  3440               	retlw	64
  2237  0887  347E               	retlw	126
  2238  0888  341C               	retlw	28
  2239  0889  347E               	retlw	126
  2240  088A  347E               	retlw	126
  2241  088B  3402               	retlw	2
  2242  088C  347E               	retlw	126
  2243  088D  343C               	retlw	60
  2244  088E  3442               	retlw	66
  2245  088F  343C               	retlw	60
  2246  0890  347E               	retlw	126
  2247  0891  3412               	retlw	18
  2248  0892  340C               	retlw	12
  2249  0893  347E               	retlw	126
  2250  0894  3462               	retlw	98
  2251  0895  34FE               	retlw	254
  2252  0896  347E               	retlw	126
  2253  0897  3432               	retlw	50
  2254  0898  344E               	retlw	78
  2255  0899  3444               	retlw	68
  2256  089A  344A               	retlw	74
  2257  089B  3432               	retlw	50
  2258  089C  3402               	retlw	2
  2259  089D  347E               	retlw	126
  2260  089E  3402               	retlw	2
  2261  089F  347E               	retlw	126
  2262  08A0  3440               	retlw	64
  2263  08A1  347E               	retlw	126
  2264  08A2  343E               	retlw	62
  2265  08A3  3440               	retlw	64
  2266  08A4  343E               	retlw	62
  2267  08A5  347E               	retlw	126
  2268  08A6  3438               	retlw	56
  2269  08A7  347E               	retlw	126
  2270  08A8  3466               	retlw	102
  2271  08A9  3418               	retlw	24
  2272  08AA  3466               	retlw	102
  2273  08AB  340E               	retlw	14
  2274  08AC  3470               	retlw	112
  2275  08AD  340E               	retlw	14
  2276  08AE  3462               	retlw	98
  2277  08AF  345A               	retlw	90
  2278  08B0  3446               	retlw	70
  2279  08B1  3400               	retlw	0
  2280  08B2  347E               	retlw	126
  2281  08B3  3442               	retlw	66
  2282  08B4  3406               	retlw	6
  2283  08B5  3418               	retlw	24
  2284  08B6  3460               	retlw	96
  2285  08B7  3442               	retlw	66
  2286  08B8  347E               	retlw	126
  2287  08B9  3400               	retlw	0
  2288  08BA  3404               	retlw	4
  2289  08BB  3402               	retlw	2
  2290  08BC  3404               	retlw	4
  2291  08BD  3440               	retlw	64
  2292  08BE  3440               	retlw	64
  2293  08BF  3440               	retlw	64
  2294  08C0  3400               	retlw	0
  2295  08C1  3402               	retlw	2
  2296  08C2  3404               	retlw	4
  2297  08C3  3474               	retlw	116
  2298  08C4  3454               	retlw	84
  2299  08C5  3478               	retlw	120
  2300  08C6  347E               	retlw	126
  2301  08C7  3448               	retlw	72
  2302  08C8  3430               	retlw	48
  2303  08C9  3430               	retlw	48
  2304  08CA  3448               	retlw	72
  2305  08CB  3448               	retlw	72
  2306  08CC  3430               	retlw	48
  2307  08CD  3448               	retlw	72
  2308  08CE  347E               	retlw	126
  2309  08CF  3438               	retlw	56
  2310  08D0  3454               	retlw	84
  2311  08D1  3458               	retlw	88
  2312  08D2  347C               	retlw	124
  2313  08D3  340A               	retlw	10
  2314  08D4  3402               	retlw	2
  2315  08D5  3498               	retlw	152
  2316  08D6  34A4               	retlw	164
  2317  08D7  347C               	retlw	124
  2318  08D8  347E               	retlw	126
  2319  08D9  3408               	retlw	8
  2320  08DA  3470               	retlw	112
  2321  08DB  3448               	retlw	72
  2322  08DC  347A               	retlw	122
  2323  08DD  3440               	retlw	64
  2324  08DE  3488               	retlw	136
  2325  08DF  34FA               	retlw	250
  2326  08E0  3400               	retlw	0
  2327  08E1  347E               	retlw	126
  2328  08E2  3418               	retlw	24
  2329  08E3  3464               	retlw	100
  2330  08E4  3442               	retlw	66
  2331  08E5  347E               	retlw	126
  2332  08E6  3440               	retlw	64
  2333  08E7  347C               	retlw	124
  2334  08E8  3438               	retlw	56
  2335  08E9  347C               	retlw	124
  2336  08EA  347C               	retlw	124
  2337  08EB  3404               	retlw	4
  2338  08EC  3478               	retlw	120
  2339  08ED  3438               	retlw	56
  2340  08EE  3444               	retlw	68
  2341  08EF  3438               	retlw	56
  2342  08F0  34FC               	retlw	252
  2343  08F1  3424               	retlw	36
  2344  08F2  3418               	retlw	24
  2345  08F3  3418               	retlw	24
  2346  08F4  3424               	retlw	36
  2347  08F5  34FC               	retlw	252
  2348  08F6  3478               	retlw	120
  2349  08F7  3404               	retlw	4
  2350  08F8  3404               	retlw	4
  2351  08F9  3448               	retlw	72
  2352  08FA  3454               	retlw	84
  2353  08FB  3424               	retlw	36
  2354  08FC  3404               	retlw	4
  2355  08FD  343E               	retlw	62
  2356  08FE  3444               	retlw	68
  2357  08FF  347C               	retlw	124
  2358  0900  3440               	retlw	64
  2359  0901  347C               	retlw	124
  2360  0902  343C               	retlw	60
  2361  0903  3440               	retlw	64
  2362  0904  343C               	retlw	60
  2363  0905  347C               	retlw	124
  2364  0906  3430               	retlw	48
  2365  0907  347C               	retlw	124
  2366  0908  346C               	retlw	108
  2367  0909  3410               	retlw	16
  2368  090A  346C               	retlw	108
  2369  090B  349C               	retlw	156
  2370  090C  34A0               	retlw	160
  2371  090D  347C               	retlw	124
  2372  090E  3464               	retlw	100
  2373  090F  3454               	retlw	84
  2374  0910  344C               	retlw	76
  2375  0911  340C               	retlw	12
  2376  0912  3412               	retlw	18
  2377  0913  340C               	retlw	12
  2378  0914  34FF               	retlw	255
  2379  0915  34FF               	retlw	255
  2380  0916  34FF               	retlw	255
  2381  0917  34FF               	retlw	255
  2382  0918  34FF               	retlw	255
  2383  0919  34FF               	retlw	255
  2384  091A  34FF               	retlw	255
  2385  091B  34FF               	retlw	255
  2386  091C  34FF               	retlw	255
  2387  091D  34FF               	retlw	255
  2388  091E  34FF               	retlw	255
  2389  091F  34FF               	retlw	255
  2390  0920  34FF               	retlw	255
  2391  0921  34FF               	retlw	255
  2392  0922  34FF               	retlw	255
  2393  0923  34FF               	retlw	255
  2394  0924  34FF               	retlw	255
  2395  0925  34FF               	retlw	255
  2396  0926  34FC               	retlw	252
  2397  0927  3440               	retlw	64
  2398  0928  347C               	retlw	124
  2399  0929  34FF               	retlw	255
  2400  092A  34FF               	retlw	255
  2401  092B  34FF               	retlw	255
  2402  092C  34FF               	retlw	255
  2403  092D  34FF               	retlw	255
  2404  092E  34FF               	retlw	255
  2405  092F                     __end_of_fonts:	
  2406  092F                     _aloha:	
  2407  092F  3400               	retlw	0
  2408  0930  3400               	retlw	0
  2409  0931  3400               	retlw	0
  2410  0932  3400               	retlw	0
  2411  0933  3400               	retlw	0
  2412  0934  3400               	retlw	0
  2413  0935  3400               	retlw	0
  2414  0936  3400               	retlw	0
  2415  0937  3400               	retlw	0
  2416  0938  3400               	retlw	0
  2417  0939  3400               	retlw	0
  2418  093A  3400               	retlw	0
  2419  093B  3400               	retlw	0
  2420  093C  3400               	retlw	0
  2421  093D  3400               	retlw	0
  2422  093E  3400               	retlw	0
  2423  093F  3400               	retlw	0
  2424  0940  3400               	retlw	0
  2425  0941  3400               	retlw	0
  2426  0942  3480               	retlw	128
  2427  0943  34C0               	retlw	192
  2428  0944  34E0               	retlw	224
  2429  0945  34F0               	retlw	240
  2430  0946  34F8               	retlw	248
  2431  0947  34FC               	retlw	252
  2432  0948  34FC               	retlw	252
  2433  0949  34FE               	retlw	254
  2434  094A  34FE               	retlw	254
  2435  094B  340E               	retlw	14
  2436  094C  3400               	retlw	0
  2437  094D  3400               	retlw	0
  2438  094E  34E0               	retlw	224
  2439  094F  34F0               	retlw	240
  2440  0950  34F8               	retlw	248
  2441  0951  34F8               	retlw	248
  2442  0952  34F8               	retlw	248
  2443  0953  3418               	retlw	24
  2444  0954  3400               	retlw	0
  2445  0955  3400               	retlw	0
  2446  0956  3400               	retlw	0
  2447  0957  3480               	retlw	128
  2448  0958  3400               	retlw	0
  2449  0959  3480               	retlw	128
  2450  095A  3480               	retlw	128
  2451  095B  3400               	retlw	0
  2452  095C  3400               	retlw	0
  2453  095D  3400               	retlw	0
  2454  095E  3400               	retlw	0
  2455  095F  3400               	retlw	0
  2456  0960  34C0               	retlw	192
  2457  0961  34F8               	retlw	248
  2458  0962  34FE               	retlw	254
  2459  0963  34FF               	retlw	255
  2460  0964  34FF               	retlw	255
  2461  0965  343F               	retlw	63
  2462  0966  3483               	retlw	131
  2463  0967  34C0               	retlw	192
  2464  0968  34E0               	retlw	224
  2465  0969  34F0               	retlw	240
  2466  096A  34F0               	retlw	240
  2467  096B  34F0               	retlw	240
  2468  096C  34F0               	retlw	240
  2469  096D  3400               	retlw	0
  2470  096E  3400               	retlw	0
  2471  096F  3480               	retlw	128
  2472  0970  34C0               	retlw	192
  2473  0971  34F0               	retlw	240
  2474  0972  34F0               	retlw	240
  2475  0973  34F8               	retlw	248
  2476  0974  34FC               	retlw	252
  2477  0975  347C               	retlw	124
  2478  0976  343C               	retlw	60
  2479  0977  341C               	retlw	28
  2480  0978  34D8               	retlw	216
  2481  0979  34E0               	retlw	224
  2482  097A  34F0               	retlw	240
  2483  097B  34F0               	retlw	240
  2484  097C  3420               	retlw	32
  2485  097D  3400               	retlw	0
  2486  097E  3400               	retlw	0
  2487  097F  3400               	retlw	0
  2488  0980  34C0               	retlw	192
  2489  0981  3480               	retlw	128
  2490  0982  3400               	retlw	0
  2491  0983  3400               	retlw	0
  2492  0984  3400               	retlw	0
  2493  0985  3400               	retlw	0
  2494  0986  3400               	retlw	0
  2495  0987  3400               	retlw	0
  2496  0988  3400               	retlw	0
  2497  0989  3400               	retlw	0
  2498  098A  3400               	retlw	0
  2499  098B  3400               	retlw	0
  2500  098C  3400               	retlw	0
  2501  098D  3400               	retlw	0
  2502  098E  3400               	retlw	0
  2503  098F  3400               	retlw	0
  2504  0990  3400               	retlw	0
  2505  0991  3400               	retlw	0
  2506  0992  34C0               	retlw	192
  2507  0993  34F0               	retlw	240
  2508  0994  343C               	retlw	60
  2509  0995  341E               	retlw	30
  2510  0996  3407               	retlw	7
  2511  0997  34C1               	retlw	193
  2512  0998  34FE               	retlw	254
  2513  0999  34FF               	retlw	255
  2514  099A  34FF               	retlw	255
  2515  099B  34FF               	retlw	255
  2516  099C  34FF               	retlw	255
  2517  099D  341F               	retlw	31
  2518  099E  3400               	retlw	0
  2519  099F  3480               	retlw	128
  2520  09A0  34F8               	retlw	248
  2521  09A1  34FF               	retlw	255
  2522  09A2  34FF               	retlw	255
  2523  09A3  34FF               	retlw	255
  2524  09A4  347F               	retlw	127
  2525  09A5  3407               	retlw	7
  2526  09A6  34E0               	retlw	224
  2527  09A7  34F8               	retlw	248
  2528  09A8  34FE               	retlw	254
  2529  09A9  34FF               	retlw	255
  2530  09AA  34FF               	retlw	255
  2531  09AB  347F               	retlw	127
  2532  09AC  34C7               	retlw	199
  2533  09AD  34C1               	retlw	193
  2534  09AE  34C1               	retlw	193
  2535  09AF  34FF               	retlw	255
  2536  09B0  34FE               	retlw	254
  2537  09B1  34FC               	retlw	252
  2538  09B2  34E0               	retlw	224
  2539  09B3  34FE               	retlw	254
  2540  09B4  34FF               	retlw	255
  2541  09B5  34FF               	retlw	255
  2542  09B6  34FF               	retlw	255
  2543  09B7  34FF               	retlw	255
  2544  09B8  347D               	retlw	125
  2545  09B9  340E               	retlw	14
  2546  09BA  3483               	retlw	131
  2547  09BB  34F9               	retlw	249
  2548  09BC  34FF               	retlw	255
  2549  09BD  34FF               	retlw	255
  2550  09BE  34FF               	retlw	255
  2551  09BF  343F               	retlw	63
  2552  09C0  3403               	retlw	3
  2553  09C1  3480               	retlw	128
  2554  09C2  34FC               	retlw	252
  2555  09C3  34FF               	retlw	255
  2556  09C4  34FF               	retlw	255
  2557  09C5  34FF               	retlw	255
  2558  09C6  34FF               	retlw	255
  2559  09C7  3487               	retlw	135
  2560  09C8  34C1               	retlw	193
  2561  09C9  3470               	retlw	112
  2562  09CA  34FC               	retlw	252
  2563  09CB  34FF               	retlw	255
  2564  09CC  34FF               	retlw	255
  2565  09CD  34FF               	retlw	255
  2566  09CE  34FF               	retlw	255
  2567  09CF  3403               	retlw	3
  2568  09D0  3480               	retlw	128
  2569  09D1  34C0               	retlw	192
  2570  09D2  34E0               	retlw	224
  2571  09D3  343C               	retlw	60
  2572  09D4  341F               	retlw	31
  2573  09D5  3403               	retlw	3
  2574  09D6  3400               	retlw	0
  2575  09D7  3480               	retlw	128
  2576  09D8  34C0               	retlw	192
  2577  09D9  34E0               	retlw	224
  2578  09DA  3470               	retlw	112
  2579  09DB  3470               	retlw	112
  2580  09DC  3438               	retlw	56
  2581  09DD  3438               	retlw	56
  2582  09DE  3438               	retlw	56
  2583  09DF  3438               	retlw	56
  2584  09E0  3438               	retlw	56
  2585  09E1  34B8               	retlw	184
  2586  09E2  34F8               	retlw	248
  2587  09E3  3478               	retlw	120
  2588  09E4  347E               	retlw	126
  2589  09E5  347F               	retlw	127
  2590  09E6  3473               	retlw	115
  2591  09E7  3470               	retlw	112
  2592  09E8  34F0               	retlw	240
  2593  09E9  34F0               	retlw	240
  2594  09EA  34E0               	retlw	224
  2595  09EB  34FF               	retlw	255
  2596  09EC  34FF               	retlw	255
  2597  09ED  34FF               	retlw	255
  2598  09EE  34FF               	retlw	255
  2599  09EF  34FF               	retlw	255
  2600  09F0  3467               	retlw	103
  2601  09F1  3470               	retlw	112
  2602  09F2  3430               	retlw	48
  2603  09F3  347F               	retlw	127
  2604  09F4  34FF               	retlw	255
  2605  09F5  34FF               	retlw	255
  2606  09F6  34FF               	retlw	255
  2607  09F7  34F7               	retlw	247
  2608  09F8  3480               	retlw	128
  2609  09F9  34C0               	retlw	192
  2610  09FA  34FF               	retlw	255
  2611  09FB  347F               	retlw	127
  2612  09FC  34FF               	retlw	255
  2613  09FD  34FF               	retlw	255
  2614  09FE  34FF               	retlw	255
  2615  09FF  34C0               	retlw	192
  2616  0A00  34E0               	retlw	224
  2617  0A01  3470               	retlw	112
  2618  0A02  343D               	retlw	61
  2619  0A03  341F               	retlw	31
  2620  0A04  3407               	retlw	7
  2621  0A05  3400               	retlw	0
  2622  0A06  341F               	retlw	31
  2623  0A07  343F               	retlw	63
  2624  0A08  347F               	retlw	127
  2625  0A09  347F               	retlw	127
  2626  0A0A  347F               	retlw	127
  2627  0A0B  3407               	retlw	7
  2628  0A0C  3400               	retlw	0
  2629  0A0D  3400               	retlw	0
  2630  0A0E  3401               	retlw	1
  2631  0A0F  340F               	retlw	15
  2632  0A10  340F               	retlw	15
  2633  0A11  340F               	retlw	15
  2634  0A12  340F               	retlw	15
  2635  0A13  340E               	retlw	14
  2636  0A14  3407               	retlw	7
  2637  0A15  3403               	retlw	3
  2638  0A16  3401               	retlw	1
  2639  0A17  3403               	retlw	3
  2640  0A18  3407               	retlw	7
  2641  0A19  3407               	retlw	7
  2642  0A1A  3407               	retlw	7
  2643  0A1B  3403               	retlw	3
  2644  0A1C  3401               	retlw	1
  2645  0A1D  3400               	retlw	0
  2646  0A1E  3400               	retlw	0
  2647  0A1F  3401               	retlw	1
  2648  0A20  3403               	retlw	3
  2649  0A21  3403               	retlw	3
  2650  0A22  3403               	retlw	3
  2651  0A23  3403               	retlw	3
  2652  0A24  3401               	retlw	1
  2653  0A25  3400               	retlw	0
  2654  0A26  3400               	retlw	0
  2655  0A27  3400               	retlw	0
  2656  0A28  3400               	retlw	0
  2657  0A29  3400               	retlw	0
  2658  0A2A  3400               	retlw	0
  2659  0A2B  341F               	retlw	31
  2660  0A2C  343F               	retlw	63
  2661  0A2D  3461               	retlw	97
  2662  0A2E  3460               	retlw	96
  2663  0A2F  3460               	retlw	96
  2664  0A30  3460               	retlw	96
  2665  0A31  3430               	retlw	48
  2666  0A32  3438               	retlw	56
  2667  0A33  341C               	retlw	28
  2668  0A34  340F               	retlw	15
  2669  0A35  3403               	retlw	3
  2670  0A36  3401               	retlw	1
  2671  0A37  3400               	retlw	0
  2672  0A38  3400               	retlw	0
  2673  0A39  3400               	retlw	0
  2674  0A3A  3400               	retlw	0
  2675  0A3B  3400               	retlw	0
  2676  0A3C  3400               	retlw	0
  2677  0A3D  3400               	retlw	0
  2678  0A3E  3400               	retlw	0
  2679  0A3F  3403               	retlw	3
  2680  0A40  3407               	retlw	7
  2681  0A41  3407               	retlw	7
  2682  0A42  3407               	retlw	7
  2683  0A43  3407               	retlw	7
  2684  0A44  3400               	retlw	0
  2685  0A45  3400               	retlw	0
  2686  0A46  3400               	retlw	0
  2687  0A47  3400               	retlw	0
  2688  0A48  3401               	retlw	1
  2689  0A49  3403               	retlw	3
  2690  0A4A  3403               	retlw	3
  2691  0A4B  3403               	retlw	3
  2692  0A4C  3403               	retlw	3
  2693  0A4D  3401               	retlw	1
  2694  0A4E  3400               	retlw	0
  2695  0A4F  3400               	retlw	0
  2696  0A50  3400               	retlw	0
  2697  0A51  3400               	retlw	0
  2698  0A52  3400               	retlw	0
  2699  0A53  3400               	retlw	0
  2700  0A54  3400               	retlw	0
  2701  0A55  3400               	retlw	0
  2702  0A56  3400               	retlw	0
  2703  0A57  3400               	retlw	0
  2704  0A58  3400               	retlw	0
  2705  0A59  3400               	retlw	0
  2706  0A5A  3400               	retlw	0
  2707  0A5B  3400               	retlw	0
  2708  0A5C  3400               	retlw	0
  2709  0A5D  3400               	retlw	0
  2710  0A5E  3400               	retlw	0
  2711  0A5F  3400               	retlw	0
  2712  0A60  3400               	retlw	0
  2713  0A61  3400               	retlw	0
  2714  0A62  3400               	retlw	0
  2715  0A63  3400               	retlw	0
  2716  0A64  3400               	retlw	0
  2717  0A65  3400               	retlw	0
  2718  0A66  3400               	retlw	0
  2719  0A67  3400               	retlw	0
  2720  0A68  3400               	retlw	0
  2721  0A69  3400               	retlw	0
  2722  0A6A  3400               	retlw	0
  2723  0A6B  3400               	retlw	0
  2724  0A6C  3400               	retlw	0
  2725  0A6D  3400               	retlw	0
  2726  0A6E  3400               	retlw	0
  2727  0A6F  3400               	retlw	0
  2728  0A70  3400               	retlw	0
  2729  0A71  3400               	retlw	0
  2730  0A72  3400               	retlw	0
  2731  0A73  3400               	retlw	0
  2732  0A74  3400               	retlw	0
  2733  0A75  3400               	retlw	0
  2734  0A76  3400               	retlw	0
  2735  0A77  3400               	retlw	0
  2736  0A78  3400               	retlw	0
  2737  0A79  3400               	retlw	0
  2738  0A7A  3400               	retlw	0
  2739  0A7B  3400               	retlw	0
  2740  0A7C  3400               	retlw	0
  2741  0A7D  3400               	retlw	0
  2742  0A7E  3400               	retlw	0
  2743  0A7F                     __end_of_aloha:	
  2744  0A7F                     log@coeff:	
  2745  0A7F  3400               	retlw	0
  2746  0A80  3400               	retlw	0
  2747  0A81  3400               	retlw	0
  2748  0A82  3400               	retlw	0
  2749  0A83  3480               	retlw	128
  2750  0A84  343F               	retlw	63
  2751  0A85  34F0               	retlw	240
  2752  0A86  34FF               	retlw	255
  2753  0A87  34BE               	retlw	190
  2754  0A88  34E2               	retlw	226
  2755  0A89  34A9               	retlw	169
  2756  0A8A  343E               	retlw	62
  2757  0A8B  3483               	retlw	131
  2758  0A8C  3476               	retlw	118
  2759  0A8D  34BE               	retlw	190
  2760  0A8E  34AE               	retlw	174
  2761  0A8F  342B               	retlw	43
  2762  0A90  343E               	retlw	62
  2763  0A91  343C               	retlw	60
  2764  0A92  34C3               	retlw	195
  2765  0A93  34BD               	retlw	189
  2766  0A94  34D2               	retlw	210
  2767  0A95  3413               	retlw	19
  2768  0A96  343D               	retlw	61
  2769  0A97  3478               	retlw	120
  2770  0A98  34D3               	retlw	211
  2771  0A99  34BB               	retlw	187
  2772  0A9A                     __end_oflog@coeff:	
  2773  0016                     _LATA	set	22
  2774  0016                     _LATAbits	set	22
  2775  0017                     _LATB	set	23
  2776  0018                     _LATC	set	24
  2777  0011                     _TRISA	set	17
  2778  0011                     _TRISAbits	set	17
  2779  0012                     _TRISB	set	18
  2780  0013                     _TRISC	set	19
  2781  009D                     _ADACQ	set	157
  2782  0099                     _ADACT	set	153
  2783  009B                     _ADCAP	set	155
  2784  0098                     _ADCLK	set	152
  2785  0093                     _ADCON0	set	147
  2786  0093                     _ADCON0bits	set	147
  2787  0094                     _ADCON1	set	148
  2788  0095                     _ADCON2	set	149
  2789  0096                     _ADCON3	set	150
  2790  009E                     _ADPCH	set	158
  2791  009C                     _ADPRE	set	156
  2792  009A                     _ADREF	set	154
  2793  008D                     _ADRESH	set	141
  2794  008C                     _ADRESL	set	140
  2795  0097                     _ADSTAT	set	151
  2796  010F                     _ADLTHH	set	271
  2797  010E                     _ADLTHL	set	270
  2798  010D                     _ADRPT	set	269
  2799  0113                     _ADSTPTH	set	275
  2800  0112                     _ADSTPTL	set	274
  2801  0111                     _ADUTHH	set	273
  2802  0110                     _ADUTHL	set	272
  2803  088D                     _OSCCON1	set	2189
  2804  088F                     _OSCCON3	set	2191
  2805  0891                     _OSCEN	set	2193
  2806  0893                     _OSCFRQ	set	2195
  2807  0892                     _OSCTUNE	set	2194
  2808  090C                     _FVRCON	set	2316
  2809  0F38                     _ANSELA	set	3896
  2810  0F43                     _ANSELB	set	3907
  2811  0F4E                     _ANSELC	set	3918
  2812  0F39                     _WPUA	set	3897
  2813  0F44                     _WPUB	set	3908
  2814  0F4F                     _WPUC	set	3919
  2815  0F65                     _WPUE	set	3941
  2816  0A9A                     STR_2:	
  2817  0A9A  3452               	retlw	82	;'R'
  2818  0A9B  3465               	retlw	101	;'e'
  2819  0A9C  3474               	retlw	116	;'t'
  2820  0A9D  3475               	retlw	117	;'u'
  2821  0A9E  3472               	retlw	114	;'r'
  2822  0A9F  346E               	retlw	110	;'n'
  2823  0AA0  3420               	retlw	32	;' '
  2824  0AA1  3474               	retlw	116	;'t'
  2825  0AA2  346F               	retlw	111	;'o'
  2826  0AA3  3420               	retlw	32	;' '
  2827  0AA4  3450               	retlw	80	;'P'
  2828  0AA5  346F               	retlw	111	;'o'
  2829  0AA6  346F               	retlw	111	;'o'
  2830  0AA7  346C               	retlw	108	;'l'
  2831  0AA8  3400               	retlw	0
  2832  0AA9                     STR_1:	
  2833  0AA9  3449               	retlw	73	;'I'
  2834  0AAA  346E               	retlw	110	;'n'
  2835  0AAB  3470               	retlw	112	;'p'
  2836  0AAC  3475               	retlw	117	;'u'
  2837  0AAD  3474               	retlw	116	;'t'
  2838  0AAE  3420               	retlw	32	;' '
  2839  0AAF  3474               	retlw	116	;'t'
  2840  0AB0  346F               	retlw	111	;'o'
  2841  0AB1  3420               	retlw	32	;' '
  2842  0AB2  3453               	retlw	83	;'S'
  2843  0AB3  346F               	retlw	111	;'o'
  2844  0AB4  346C               	retlw	108	;'l'
  2845  0AB5  3461               	retlw	97	;'a'
  2846  0AB6  3472               	retlw	114	;'r'
  2847  0AB7  3400               	retlw	0
  2848                           
  2849                           ; #config settings
  2850  0000                     
  2851                           	psect	cinit
  2852  07E0                     start_initialization:	
  2853  07E0                     __initialization:		;BIGRAM
  2854                           
  2855                           ; Clear objects allocated to BIGRAM
  2856  07E0  3028               	movlw	low (0+9000)
  2857  07E1  0084               	movwf	4
  2858  07E2  3023               	movlw	high (0+9000)
  2859  07E3  0085               	movwf	5
  2860  07E4  30C8               	movlw	200
  2861  07E5  00FE               	movwf	btemp
  2862  07E6  3000               	movlw	0
  2863  07E7  00FF               	movwf	btemp+1
  2864  07E8  3197  273A  3187   	fcall	clear_ram0
  2865                           
  2866                           ; Clear objects allocated to BANK0
  2867  07EB  0020               	movlb	0	; select bank0
  2868  07EC  01E7               	clrf	__pbssBANK0& (0+127)
  2869  07ED  01E8               	clrf	(__pbssBANK0+1)& (0+127)
  2870  07EE  01E9               	clrf	(__pbssBANK0+2)& (0+127)
  2871  07EF  01EA               	clrf	(__pbssBANK0+3)& (0+127)
  2872  07F0  01EB               	clrf	(__pbssBANK0+4)& (0+127)
  2873  07F1  01EC               	clrf	(__pbssBANK0+5)& (0+127)
  2874  07F2  01ED               	clrf	(__pbssBANK0+6)& (0+127)
  2875                           
  2876                           ; Clear objects allocated to BANK1
  2877  07F3  30BC               	movlw	low __pbssBANK1
  2878  07F4  0084               	movwf	4
  2879  07F5  3000               	movlw	high __pbssBANK1
  2880  07F6  0085               	movwf	5
  2881  07F7  300C               	movlw	12
  2882  07F8  00FE               	movwf	btemp
  2883  07F9  3000               	movlw	0
  2884  07FA  00FF               	movwf	btemp+1
  2885  07FB  3197  273A         	fcall	clear_ram0
  2886  07FD                     end_of_initialization:	
  2887                           ;End of C runtime variable initialization code
  2888                           
  2889  07FD                     __end_of__initialization:	
  2890  07FD  0020               	movlb	0
  2891  07FE  3182  2AA5         	ljmp	_main	;jump to C main() function
  2892                           
  2893                           	psect	bssBANK0
  2894  0067                     __pbssBANK0:	
  2895  0067                     LCDWriteInt@F13664:	
  2896  0067                     	ds	5
  2897  006C                     _errno:	
  2898  006C                     	ds	2
  2899                           
  2900                           	psect	bssBANK1
  2901  00BC                     __pbssBANK1:	
  2902  00BC                     main@F13721:	
  2903  00BC                     	ds	8
  2904  00C4                     main@sampleIndex0:	
  2905  00C4                     	ds	2
  2906  00C6                     main@sampleIndex1:	
  2907  00C6                     	ds	2
  2908                           
  2909                           	psect	clrtext
  2910  173A                     clear_ram0:	
  2911                           ;	Called with FSR0 containing the base address, and
  2912                           ;	btemp/btemp+1 has the size to clear
  2913                           
  2914  173A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2915  173B                     clrloop0:	
  2916  173B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2917  173C  3101               	addfsr 0,1
  2918  173D  3001               	movlw	1
  2919  173E  02FE               	subwf	126,f
  2920  173F  3000               	movlw	0
  2921  1740  3BFF               	subwfb	127,f
  2922  1741  087F               	movf	127,w
  2923  1742  047E               	iorwf	126,w
  2924  1743  1903               	btfsc	3,2
  2925  1744  3400               	retlw	0	;all done for this memory range, return
  2926  1745  2F3B               	goto	clrloop0	;have we reached the end yet?
  2927                           
  2928                           	psect	cstackBANK1
  2929  00A0                     __pcstackBANK1:	
  2930  00A0                     main@count:	
  2931                           
  2932                           ; 1 bytes @ 0x0
  2933  00A0                     	ds	1
  2934  00A1                     main@R:	
  2935                           
  2936                           ; 3 bytes @ 0x1
  2937  00A1                     	ds	3
  2938  00A4                     main@displayTemp:	
  2939                           
  2940                           ; 3 bytes @ 0x4
  2941  00A4                     	ds	3
  2942  00A7                     main@displayTemp2:	
  2943                           
  2944                           ; 3 bytes @ 0x7
  2945  00A7                     	ds	3
  2946  00AA                     _main$806:	
  2947                           
  2948                           ; 3 bytes @ 0xA
  2949  00AA                     	ds	3
  2950  00AD                     main@solarInTemp:	
  2951                           
  2952                           ; 2 bytes @ 0xD
  2953  00AD                     	ds	2
  2954  00AF                     main@solarOutTemp:	
  2955                           
  2956                           ; 2 bytes @ 0xF
  2957  00AF                     	ds	2
  2958  00B1                     main@totals:	
  2959                           
  2960                           ; 8 bytes @ 0x11
  2961  00B1                     	ds	8
  2962  00B9                     main@steinhart:	
  2963                           
  2964                           ; 3 bytes @ 0x19
  2965  00B9                     	ds	3
  2966                           
  2967                           	psect	cstackCOMMON
  2968  0070                     __pcstackCOMMON:	
  2969  0070                     ?___ftge:	
  2970  0070                     ?_OSCILLATOR_Initialize:	
  2971                           ; 1 bit 
  2972                           
  2973  0070                     ??_OSCILLATOR_Initialize:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_LCDInit:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     ?_LCDClear:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     ?_LCDWrite:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     ?_ADCC_Initialize:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ??_ADCC_Initialize:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     ?_SYSTEM_Initialize:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ?_LCDWriteCharacter:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ?_main:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     ?_ADCRead:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003  0070                     ?___wmul:	
  3004                           ; 2 bytes @ 0x0
  3005                           
  3006  0070                     ?___awdiv:	
  3007                           ; 2 bytes @ 0x0
  3008                           
  3009  0070                     ?___awmod:	
  3010                           ; 2 bytes @ 0x0
  3011                           
  3012  0070                     ?___ftpack:	
  3013                           ; 2 bytes @ 0x0
  3014                           
  3015  0070                     ?_frexp:	
  3016                           ; 3 bytes @ 0x0
  3017                           
  3018  0070                     ?___aldiv:	
  3019                           ; 3 bytes @ 0x0
  3020                           
  3021  0070                     ?___fttol:	
  3022                           ; 4 bytes @ 0x0
  3023                           
  3024  0070                     LCDWrite@data:	
  3025                           ; 4 bytes @ 0x0
  3026                           
  3027  0070                     ___wmul@multiplier:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030  0070                     ___awdiv@divisor:	
  3031                           ; 2 bytes @ 0x0
  3032                           
  3033  0070                     ___awmod@divisor:	
  3034                           ; 2 bytes @ 0x0
  3035                           
  3036  0070                     ___ftpack@arg:	
  3037                           ; 2 bytes @ 0x0
  3038                           
  3039  0070                     ___ftge@ff1:	
  3040                           ; 3 bytes @ 0x0
  3041                           
  3042  0070                     ___fttol@f1:	
  3043                           ; 3 bytes @ 0x0
  3044                           
  3045  0070                     frexp@value:	
  3046                           ; 3 bytes @ 0x0
  3047                           
  3048  0070                     ___aldiv@divisor:	
  3049                           ; 3 bytes @ 0x0
  3050                           
  3051                           
  3052                           ; 4 bytes @ 0x0
  3053  0070                     	ds	1
  3054  0071                     ??_LCDWrite:	
  3055                           
  3056                           ; 1 bytes @ 0x1
  3057  0071                     	ds	1
  3058  0072                     LCDWrite@data_or_command:	
  3059  0072                     ___wmul@multiplicand:	
  3060                           ; 1 bytes @ 0x2
  3061                           
  3062  0072                     ___awdiv@dividend:	
  3063                           ; 2 bytes @ 0x2
  3064                           
  3065  0072                     ___awmod@dividend:	
  3066                           ; 2 bytes @ 0x2
  3067                           
  3068                           
  3069                           ; 2 bytes @ 0x2
  3070  0072                     	ds	1
  3071  0073                     ??_ADCRead:	
  3072  0073                     ADCRead@channel:	
  3073                           ; 1 bytes @ 0x3
  3074                           
  3075  0073                     LCDWrite@d:	
  3076                           ; 1 bytes @ 0x3
  3077                           
  3078  0073                     ___ftpack@exp:	
  3079                           ; 1 bytes @ 0x3
  3080                           
  3081  0073                     frexp@eptr:	
  3082                           ; 1 bytes @ 0x3
  3083                           
  3084  0073                     ___ftge@ff2:	
  3085                           ; 1 bytes @ 0x3
  3086                           
  3087                           
  3088                           ; 3 bytes @ 0x3
  3089  0073                     	ds	1
  3090  0074                     ??_frexp:	
  3091  0074                     ??___wmul:	
  3092                           ; 1 bytes @ 0x4
  3093                           
  3094  0074                     ??___awdiv:	
  3095                           ; 1 bytes @ 0x4
  3096                           
  3097  0074                     ??___awmod:	
  3098                           ; 1 bytes @ 0x4
  3099                           
  3100  0074                     ??___fttol:	
  3101                           ; 1 bytes @ 0x4
  3102                           
  3103  0074                     LCDWrite@i:	
  3104                           ; 1 bytes @ 0x4
  3105                           
  3106  0074                     ___ftpack@sign:	
  3107                           ; 1 bytes @ 0x4
  3108                           
  3109  0074                     ___wmul@product:	
  3110                           ; 1 bytes @ 0x4
  3111                           
  3112  0074                     ___aldiv@dividend:	
  3113                           ; 2 bytes @ 0x4
  3114                           
  3115                           
  3116                           ; 4 bytes @ 0x4
  3117  0074                     	ds	1
  3118  0075                     ??_LCDInit:	
  3119  0075                     ??___ftpack:	
  3120                           ; 1 bytes @ 0x5
  3121                           
  3122  0075                     ?_gotoXY:	
  3123                           ; 1 bytes @ 0x5
  3124                           
  3125  0075                     gotoXY@y:	
  3126                           ; 1 bytes @ 0x5
  3127                           
  3128  0075                     ___awdiv@counter:	
  3129                           ; 1 bytes @ 0x5
  3130                           
  3131  0075                     ___awmod@counter:	
  3132                           ; 1 bytes @ 0x5
  3133                           
  3134                           
  3135                           ; 1 bytes @ 0x5
  3136  0075                     	ds	1
  3137  0076                     ??_gotoXY:	
  3138  0076                     ??_LCDWriteCharacter:	
  3139                           ; 1 bytes @ 0x6
  3140                           
  3141  0076                     ??___ftge:	
  3142                           ; 1 bytes @ 0x6
  3143                           
  3144  0076                     ___awdiv@sign:	
  3145                           ; 1 bytes @ 0x6
  3146                           
  3147  0076                     ___awmod@sign:	
  3148                           ; 1 bytes @ 0x6
  3149                           
  3150                           
  3151                           ; 1 bytes @ 0x6
  3152  0076                     	ds	1
  3153  0077                     gotoXY@x:	
  3154  0077                     ___awdiv@quotient:	
  3155                           ; 1 bytes @ 0x7
  3156                           
  3157                           
  3158                           ; 2 bytes @ 0x7
  3159  0077                     	ds	1
  3160  0078                     ??_LCDClear:	
  3161  0078                     ?_LCDBitmap:	
  3162                           ; 1 bytes @ 0x8
  3163                           
  3164  0078                     ??___aldiv:	
  3165                           ; 1 bytes @ 0x8
  3166                           
  3167  0078                     ?___awtoft:	
  3168                           ; 1 bytes @ 0x8
  3169                           
  3170  0078                     ?___lwtoft:	
  3171                           ; 3 bytes @ 0x8
  3172                           
  3173  0078                     ___fttol@sign1:	
  3174                           ; 3 bytes @ 0x8
  3175                           
  3176  0078                     LCDBitmap@my_array:	
  3177                           ; 1 bytes @ 0x8
  3178                           
  3179  0078                     ___awtoft@c:	
  3180                           ; 2 bytes @ 0x8
  3181                           
  3182  0078                     ___lwtoft@c:	
  3183                           ; 2 bytes @ 0x8
  3184                           
  3185                           
  3186                           ; 2 bytes @ 0x8
  3187  0078                     	ds	1
  3188  0079                     LCDWriteCharacter@character:	
  3189  0079                     LCDClear@index:	
  3190                           ; 1 bytes @ 0x9
  3191                           
  3192  0079                     ___fttol@lval:	
  3193                           ; 2 bytes @ 0x9
  3194                           
  3195                           
  3196                           ; 4 bytes @ 0x9
  3197  0079                     	ds	1
  3198  007A                     LCDBitmap@startPosition:	
  3199  007A                     LCDWriteCharacter@base:	
  3200                           ; 1 bytes @ 0xA
  3201                           
  3202                           
  3203                           ; 2 bytes @ 0xA
  3204  007A                     	ds	1
  3205  007B                     ??_SYSTEM_Initialize:	
  3206  007B                     ??___awtoft:	
  3207                           ; 1 bytes @ 0xB
  3208                           
  3209  007B                     ??___lwtoft:	
  3210                           ; 1 bytes @ 0xB
  3211                           
  3212  007B                     LCDBitmap@len:	
  3213                           ; 1 bytes @ 0xB
  3214                           
  3215                           
  3216                           ; 2 bytes @ 0xB
  3217  007B                     	ds	1
  3218  007C                     ?_LCDWriteString:	
  3219  007C                     LCDWriteString@characters:	
  3220                           ; 1 bytes @ 0xC
  3221                           
  3222                           
  3223                           ; 2 bytes @ 0xC
  3224  007C                     	ds	1
  3225  007D                     ??_LCDBitmap:	
  3226  007D                     ___awtoft@sign:	
  3227                           ; 1 bytes @ 0xD
  3228                           
  3229  007D                     ___fttol@exp1:	
  3230                           ; 1 bytes @ 0xD
  3231                           
  3232                           
  3233                           ; 1 bytes @ 0xD
  3234  007D                     	ds	1
  3235  007E                     ??_eval_poly:	
  3236  007E                     ??___ftsub:	
  3237                           ; 1 bytes @ 0xE
  3238                           
  3239                           
  3240                           	psect	cstackBANK0
  3241  0020                     __pcstackBANK0:	
  3242                           ; 1 bytes @ 0xE
  3243                           
  3244  0020                     ??_LCDWriteString:	
  3245  0020                     ?_LCDWriteInt:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248  0020                     ?___ftmul:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251  0020                     ___aldiv@counter:	
  3252                           ; 3 bytes @ 0x0
  3253                           
  3254  0020                     LCDBitmap@index:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257  0020                     LCDWriteInt@value:	
  3258                           ; 2 bytes @ 0x0
  3259                           
  3260  0020                     ___ftmul@f1:	
  3261                           ; 2 bytes @ 0x0
  3262                           
  3263                           
  3264                           ; 3 bytes @ 0x0
  3265  0020                     	ds	1
  3266  0021                     ___aldiv@sign:	
  3267                           
  3268                           ; 1 bytes @ 0x1
  3269  0021                     	ds	1
  3270  0022                     LCDWriteInt@fieldLength:	
  3271  0022                     ___aldiv@quotient:	
  3272                           ; 1 bytes @ 0x2
  3273                           
  3274                           
  3275                           ; 4 bytes @ 0x2
  3276  0022                     	ds	1
  3277  0023                     LCDWriteInt@numPlaces:	
  3278  0023                     ___ftmul@f2:	
  3279                           ; 1 bytes @ 0x3
  3280                           
  3281                           
  3282                           ; 3 bytes @ 0x3
  3283  0023                     	ds	1
  3284  0024                     LCDWriteInt@sign:	
  3285                           
  3286                           ; 1 bytes @ 0x4
  3287  0024                     	ds	1
  3288  0025                     ??_LCDWriteInt:	
  3289                           
  3290                           ; 1 bytes @ 0x5
  3291  0025                     	ds	1
  3292  0026                     ??___ftmul:	
  3293                           
  3294                           ; 1 bytes @ 0x6
  3295  0026                     	ds	4
  3296  002A                     ___ftmul@exp:	
  3297  002A                     LCDWriteInt@str:	
  3298                           ; 1 bytes @ 0xA
  3299                           
  3300                           
  3301                           ; 5 bytes @ 0xA
  3302  002A                     	ds	1
  3303  002B                     ___ftmul@f3_as_product:	
  3304                           
  3305                           ; 3 bytes @ 0xB
  3306  002B                     	ds	3
  3307  002E                     ___ftmul@cntr:	
  3308                           
  3309                           ; 1 bytes @ 0xE
  3310  002E                     	ds	1
  3311  002F                     ___ftmul@sign:	
  3312  002F                     LCDWriteInt@j:	
  3313                           ; 1 bytes @ 0xF
  3314                           
  3315                           
  3316                           ; 2 bytes @ 0xF
  3317  002F                     	ds	1
  3318  0030                     ?___ftdiv:	
  3319  0030                     ___ftdiv@f2:	
  3320                           ; 3 bytes @ 0x10
  3321                           
  3322                           
  3323                           ; 3 bytes @ 0x10
  3324  0030                     	ds	1
  3325  0031                     LCDWriteInt@i:	
  3326                           
  3327                           ; 2 bytes @ 0x11
  3328  0031                     	ds	2
  3329  0033                     ___ftdiv@f1:	
  3330                           
  3331                           ; 3 bytes @ 0x13
  3332  0033                     	ds	3
  3333  0036                     ??___ftdiv:	
  3334                           
  3335                           ; 1 bytes @ 0x16
  3336  0036                     	ds	4
  3337  003A                     ___ftdiv@cntr:	
  3338                           
  3339                           ; 1 bytes @ 0x1A
  3340  003A                     	ds	1
  3341  003B                     ___ftdiv@f3:	
  3342                           
  3343                           ; 3 bytes @ 0x1B
  3344  003B                     	ds	3
  3345  003E                     ___ftdiv@exp:	
  3346                           
  3347                           ; 1 bytes @ 0x1E
  3348  003E                     	ds	1
  3349  003F                     ___ftdiv@sign:	
  3350                           
  3351                           ; 1 bytes @ 0x1F
  3352  003F                     	ds	1
  3353  0040                     ?___ftadd:	
  3354  0040                     ___ftadd@f1:	
  3355                           ; 3 bytes @ 0x20
  3356                           
  3357                           
  3358                           ; 3 bytes @ 0x20
  3359  0040                     	ds	3
  3360  0043                     ___ftadd@f2:	
  3361                           
  3362                           ; 3 bytes @ 0x23
  3363  0043                     	ds	3
  3364  0046                     ??___ftadd:	
  3365                           
  3366                           ; 1 bytes @ 0x26
  3367  0046                     	ds	4
  3368  004A                     ___ftadd@sign:	
  3369                           
  3370                           ; 1 bytes @ 0x2A
  3371  004A                     	ds	1
  3372  004B                     ___ftadd@exp2:	
  3373                           
  3374                           ; 1 bytes @ 0x2B
  3375  004B                     	ds	1
  3376  004C                     ___ftadd@exp1:	
  3377                           
  3378                           ; 1 bytes @ 0x2C
  3379  004C                     	ds	1
  3380  004D                     ?_eval_poly:	
  3381  004D                     ?___ftsub:	
  3382                           ; 3 bytes @ 0x2D
  3383                           
  3384  004D                     ___ftsub@f2:	
  3385                           ; 3 bytes @ 0x2D
  3386                           
  3387  004D                     eval_poly@x:	
  3388                           ; 3 bytes @ 0x2D
  3389                           
  3390                           
  3391                           ; 3 bytes @ 0x2D
  3392  004D                     	ds	3
  3393  0050                     eval_poly@d:	
  3394  0050                     ___ftsub@f1:	
  3395                           ; 2 bytes @ 0x30
  3396                           
  3397                           
  3398                           ; 3 bytes @ 0x30
  3399  0050                     	ds	2
  3400  0052                     eval_poly@n:	
  3401                           
  3402                           ; 2 bytes @ 0x32
  3403  0052                     	ds	2
  3404  0054                     eval_poly@res:	
  3405                           
  3406                           ; 3 bytes @ 0x34
  3407  0054                     	ds	3
  3408  0057                     ?_log:	
  3409  0057                     log@x:	
  3410                           ; 3 bytes @ 0x37
  3411                           
  3412                           
  3413                           ; 3 bytes @ 0x37
  3414  0057                     	ds	3
  3415  005A                     ??_log:	
  3416                           
  3417                           ; 1 bytes @ 0x3A
  3418  005A                     	ds	1
  3419  005B                     log@exponent:	
  3420                           
  3421                           ; 2 bytes @ 0x3B
  3422  005B                     	ds	2
  3423  005D                     ??_main:	
  3424                           
  3425                           ; 1 bytes @ 0x3D
  3426  005D                     	ds	10
  3427                           
  3428                           	psect	maintext
  3429  02A5                     __pmaintext:	
  3430 ;;
  3431 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
  3432 ;;
  3433 ;; *************** function _main *****************
  3434 ;; Defined at:
  3435 ;;		line 13 in file "main.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  totals          8   17[BANK1 ] long [2]
  3440 ;;  steinhart       3   25[BANK1 ] float 
  3441 ;;  displayTemp2    3    7[BANK1 ] float 
  3442 ;;  displayTemp     3    4[BANK1 ] float 
  3443 ;;  R               3    1[BANK1 ] float 
  3444 ;;  solarOutTemp    2   15[BANK1 ] unsigned int 
  3445 ;;  solarInTemp     2   13[BANK1 ] unsigned int 
  3446 ;;  count           1    0[BANK1 ] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : B1F/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Totals:         0      10      28       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;Total ram usage:       38 bytes
  3461 ;; Hardware stack levels required when called:    4
  3462 ;; This function calls:
  3463 ;;		_ADCRead
  3464 ;;		_LCDBitmap
  3465 ;;		_LCDWriteCharacter
  3466 ;;		_LCDWriteInt
  3467 ;;		_LCDWriteString
  3468 ;;		_SYSTEM_Initialize
  3469 ;;		___aldiv
  3470 ;;		___ftadd
  3471 ;;		___ftdiv
  3472 ;;		___ftmul
  3473 ;;		___ftsub
  3474 ;;		___fttol
  3475 ;;		___lwtoft
  3476 ;;		_gotoXY
  3477 ;;		_log
  3478 ;; This function is called by:
  3479 ;;		Startup code after reset
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           
  3484                           ;psect for function _main
  3485  02A5                     _main:	
  3486                           
  3487                           ;main.c: 15: SYSTEM_Initialize();
  3488                           
  3489                           ;incstack = 0
  3490                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3491  02A5  318B  2309  3182   	fcall	_SYSTEM_Initialize
  3492                           
  3493                           ;main.c: 17: uint16_t solarInTemp, solarOutTemp;
  3494                           ;main.c: 19: float R, steinhart, displayTemp, displayTemp2;
  3495                           ;main.c: 21: static uint16_t sampleIndex0 = 0, sampleIndex1 = 0;
  3496                           ;main.c: 23: int32_t totals[2] = {0};
  3497  02A8  30BC               	movlw	low main@F13721
  3498  02A9  0086               	movwf	6
  3499  02AA  3000               	movlw	high main@F13721
  3500  02AB  0087               	movwf	7
  3501  02AC  30B1               	movlw	low main@totals
  3502  02AD  0084               	movwf	4
  3503  02AE  3000               	movlw	high main@totals
  3504  02AF  0085               	movwf	5
  3505  02B0  3008               	movlw	8
  3506  02B1  0020               	movlb	0	; select bank0
  3507  02B2  00DD               	movwf	??_main
  3508  02B3                     u2710:	
  3509  02B3  0016               	moviw fsr1++
  3510  02B4  001A               	movwi fsr0++
  3511  02B5  0BDD               	decfsz	??_main,f
  3512  02B6  2AB3               	goto	u2710
  3513                           
  3514                           ;main.c: 25: char count = 11;
  3515  02B7  300B               	movlw	11
  3516  02B8  00DD               	movwf	??_main
  3517  02B9  085D               	movf	??_main,w
  3518  02BA  0021               	movlb	1	; select bank1
  3519  02BB  00A0               	movwf	main@count^(0+128)
  3520                           
  3521                           ;main.c: 27: LCDBitmap(&aloha[0], 0, 336);
  3522  02BC  302F               	movlw	low (_aloha| (0+32768))
  3523  02BD  00F8               	movwf	LCDBitmap@my_array
  3524  02BE  3089               	movlw	high (_aloha| (0+32768))
  3525  02BF  00F9               	movwf	LCDBitmap@my_array+1
  3526  02C0  01FA               	clrf	LCDBitmap@startPosition
  3527  02C1  3050               	movlw	80
  3528  02C2  00FB               	movwf	LCDBitmap@len
  3529  02C3  3001               	movlw	1
  3530  02C4  00FC               	movwf	LCDBitmap@len+1
  3531  02C5  3180  2009  3182   	fcall	_LCDBitmap
  3532                           
  3533                           ;main.c: 34: _delay((unsigned long)((3000)*(1000000/4000.0)));
  3534  02C8  3004               	movlw	4
  3535  02C9  0020               	movlb	0	; select bank0
  3536  02CA  00DF               	movwf	??_main+2
  3537  02CB  30CF               	movlw	207
  3538  02CC  00DE               	movwf	??_main+1
  3539  02CD  3003               	movlw	3
  3540  02CE  00DD               	movwf	??_main
  3541  02CF                     u2757:	
  3542  02CF  0BDD               	decfsz	??_main,f
  3543  02D0  2ACF               	goto	u2757
  3544  02D1  0BDE               	decfsz	??_main+1,f
  3545  02D2  2ACF               	goto	u2757
  3546  02D3  0BDF               	decfsz	??_main+2,f
  3547  02D4  2ACF               	goto	u2757
  3548  02D5  3200               	nop2
  3549  02D6                     l2292:	
  3550                           ;main.c: 37: while (1)
  3551                           
  3552                           
  3553                           ;main.c: 38: {
  3554                           ;main.c: 39: if(count>10)
  3555  02D6  300B               	movlw	11
  3556  02D7  0021               	movlb	1	; select bank1
  3557  02D8  0220               	subwf	main@count^(0+128),w
  3558  02D9  1C03               	skipc
  3559  02DA  2B4D               	goto	l2318
  3560                           
  3561                           ;main.c: 40: {
  3562                           ;main.c: 41: { gotoXY(0,4); LCDWriteString("Input to Solar");};
  3563  02DB  3004               	movlw	4
  3564  02DC  0020               	movlb	0	; select bank0
  3565  02DD  00DD               	movwf	??_main
  3566  02DE  085D               	movf	??_main,w
  3567  02DF  00F5               	movwf	gotoXY@y
  3568  02E0  3000               	movlw	0
  3569  02E1  3197  2754  3182   	fcall	_gotoXY
  3570  02E4  30A9               	movlw	low (STR_1| (0+32768))
  3571  02E5  00FC               	movwf	LCDWriteString@characters
  3572  02E6  308A               	movlw	high (STR_1| (0+32768))
  3573  02E7  00FD               	movwf	LCDWriteString@characters+1
  3574  02E8  3197  277A  3182   	fcall	_LCDWriteString
  3575                           
  3576                           ;main.c: 42: { gotoXY(60,4); LCDWriteInt((int)displayTemp,-1, 1, 0);};
  3577  02EB  3004               	movlw	4
  3578  02EC  0020               	movlb	0	; select bank0
  3579  02ED  00DD               	movwf	??_main
  3580  02EE  085D               	movf	??_main,w
  3581  02EF  00F5               	movwf	gotoXY@y
  3582  02F0  303C               	movlw	60
  3583  02F1  3197  2754  3182   	fcall	_gotoXY
  3584  02F4  0021               	movlb	1	; select bank1
  3585  02F5  0824               	movf	main@displayTemp^(0+128),w
  3586  02F6  00F0               	movwf	___fttol@f1
  3587  02F7  0825               	movf	(main@displayTemp+1)^(0+128),w
  3588  02F8  00F1               	movwf	___fttol@f1+1
  3589  02F9  0826               	movf	(main@displayTemp+2)^(0+128),w
  3590  02FA  00F2               	movwf	___fttol@f1+2
  3591  02FB  318E  2624  3182   	fcall	___fttol
  3592  02FE  0871               	movf	?___fttol+1,w
  3593  02FF  0020               	movlb	0	; select bank0
  3594  0300  00A1               	movwf	LCDWriteInt@value+1
  3595  0301  0870               	movf	?___fttol,w
  3596  0302  00A0               	movwf	LCDWriteInt@value
  3597  0303  01A2               	clrf	LCDWriteInt@fieldLength
  3598  0304  03A2               	decf	LCDWriteInt@fieldLength,f
  3599  0305  01A3               	clrf	LCDWriteInt@numPlaces
  3600  0306  0AA3               	incf	LCDWriteInt@numPlaces,f
  3601  0307  01A4               	clrf	LCDWriteInt@sign
  3602  0308  3180  20E4  3182   	fcall	_LCDWriteInt
  3603                           
  3604                           ;main.c: 44: LCDWriteCharacter('F');
  3605  030B  3046               	movlw	70
  3606  030C  318C  248A  3182   	fcall	_LCDWriteCharacter
  3607                           
  3608                           ;main.c: 45: LCDWriteCharacter(' ');
  3609  030F  3020               	movlw	32
  3610  0310  318C  248A  3182   	fcall	_LCDWriteCharacter
  3611                           
  3612                           ;main.c: 47: { gotoXY(0,5); LCDWriteString("Return to Pool");};
  3613  0313  3005               	movlw	5
  3614  0314  0020               	movlb	0	; select bank0
  3615  0315  00DD               	movwf	??_main
  3616  0316  085D               	movf	??_main,w
  3617  0317  00F5               	movwf	gotoXY@y
  3618  0318  3000               	movlw	0
  3619  0319  3197  2754  3182   	fcall	_gotoXY
  3620  031C  309A               	movlw	low (STR_2| (0+32768))
  3621  031D  00FC               	movwf	LCDWriteString@characters
  3622  031E  308A               	movlw	high (STR_2| (0+32768))
  3623  031F  00FD               	movwf	LCDWriteString@characters+1
  3624  0320  3197  277A  3182   	fcall	_LCDWriteString
  3625                           
  3626                           ;main.c: 48: { gotoXY(60,5); LCDWriteInt((int)displayTemp2,-1, 1, 0);};
  3627  0323  3005               	movlw	5
  3628  0324  0020               	movlb	0	; select bank0
  3629  0325  00DD               	movwf	??_main
  3630  0326  085D               	movf	??_main,w
  3631  0327  00F5               	movwf	gotoXY@y
  3632  0328  303C               	movlw	60
  3633  0329  3197  2754  3182   	fcall	_gotoXY
  3634  032C  0021               	movlb	1	; select bank1
  3635  032D  0827               	movf	main@displayTemp2^(0+128),w
  3636  032E  00F0               	movwf	___fttol@f1
  3637  032F  0828               	movf	(main@displayTemp2+1)^(0+128),w
  3638  0330  00F1               	movwf	___fttol@f1+1
  3639  0331  0829               	movf	(main@displayTemp2+2)^(0+128),w
  3640  0332  00F2               	movwf	___fttol@f1+2
  3641  0333  318E  2624  3182   	fcall	___fttol
  3642  0336  0871               	movf	?___fttol+1,w
  3643  0337  0020               	movlb	0	; select bank0
  3644  0338  00A1               	movwf	LCDWriteInt@value+1
  3645  0339  0870               	movf	?___fttol,w
  3646  033A  00A0               	movwf	LCDWriteInt@value
  3647  033B  01A2               	clrf	LCDWriteInt@fieldLength
  3648  033C  03A2               	decf	LCDWriteInt@fieldLength,f
  3649  033D  01A3               	clrf	LCDWriteInt@numPlaces
  3650  033E  0AA3               	incf	LCDWriteInt@numPlaces,f
  3651  033F  01A4               	clrf	LCDWriteInt@sign
  3652  0340  3180  20E4  3182   	fcall	_LCDWriteInt
  3653                           
  3654                           ;main.c: 50: LCDWriteCharacter('F');
  3655  0343  3046               	movlw	70
  3656  0344  318C  248A  3182   	fcall	_LCDWriteCharacter
  3657                           
  3658                           ;main.c: 51: LCDWriteCharacter(' ');
  3659  0347  3020               	movlw	32
  3660  0348  318C  248A  3182   	fcall	_LCDWriteCharacter
  3661                           
  3662                           ;main.c: 52: count=0;
  3663  034B  0021               	movlb	1	; select bank1
  3664  034C  01A0               	clrf	main@count^(0+128)
  3665  034D                     l2318:	
  3666                           
  3667                           ;main.c: 53: }
  3668                           ;main.c: 55: solarInTemp = ADCRead(9);
  3669  034D  3009               	movlw	9
  3670  034E  3197  2746  3182   	fcall	_ADCRead
  3671  0351  0871               	movf	?_ADCRead+1,w
  3672  0352  0021               	movlb	1	; select bank1
  3673  0353  00AE               	movwf	(main@solarInTemp+1)^(0+128)
  3674  0354  0870               	movf	?_ADCRead,w
  3675  0355  00AD               	movwf	main@solarInTemp^(0+128)
  3676                           
  3677                           ;main.c: 57: totals[0] = totals[0] - samples[0][sampleIndex0];
  3678  0356  0831               	movf	main@totals^(0+128),w
  3679  0357  0020               	movlb	0	; select bank0
  3680  0358  00DD               	movwf	??_main
  3681  0359  0021               	movlb	1	; select bank1
  3682  035A  0832               	movf	(main@totals+1)^(0+128),w
  3683  035B  0020               	movlb	0	; select bank0
  3684  035C  00DE               	movwf	??_main+1
  3685  035D  0021               	movlb	1	; select bank1
  3686  035E  0833               	movf	(main@totals+2)^(0+128),w
  3687  035F  0020               	movlb	0	; select bank0
  3688  0360  00DF               	movwf	??_main+2
  3689  0361  0021               	movlb	1	; select bank1
  3690  0362  0834               	movf	(main@totals+3)^(0+128),w
  3691  0363  0020               	movlb	0	; select bank0
  3692  0364  00E0               	movwf	??_main+3
  3693  0365  0021               	movlb	1	; select bank1
  3694  0366  0845               	movf	(main@sampleIndex0+1)^(0+128),w
  3695  0367  0020               	movlb	0	; select bank0
  3696  0368  00E2               	movwf	??_main+5
  3697  0369  0021               	movlb	1	; select bank1
  3698  036A  0844               	movf	main@sampleIndex0^(0+128),w
  3699  036B  0020               	movlb	0	; select bank0
  3700  036C  00E1               	movwf	??_main+4
  3701  036D  35E1               	lslf	??_main+4,f
  3702  036E  0DE2               	rlf	??_main+5,f
  3703  036F  3028               	movlw	40
  3704  0370  0761               	addwf	??_main+4,w
  3705  0371  0084               	movwf	4
  3706  0372  3023               	movlw	35
  3707  0373  3D62               	addwfc	??_main+5,w
  3708  0374  0085               	movwf	5
  3709  0375  3F00               	moviw [0]fsr0
  3710  0376  00E3               	movwf	??_main+6
  3711  0377  3F01               	moviw [1]fsr0
  3712  0378  00E4               	movwf	??_main+7
  3713  0379  01E5               	clrf	??_main+8
  3714  037A  01E6               	clrf	??_main+9
  3715  037B  09E3               	comf	??_main+6,f
  3716  037C  09E4               	comf	??_main+7,f
  3717  037D  09E5               	comf	??_main+8,f
  3718  037E  09E6               	comf	??_main+9,f
  3719  037F  0AE3               	incf	??_main+6,f
  3720  0380  1903               	skipnz
  3721  0381  0AE4               	incf	??_main+7,f
  3722  0382  1903               	skipnz
  3723  0383  0AE5               	incf	??_main+8,f
  3724  0384  1903               	skipnz
  3725  0385  0AE6               	incf	??_main+9,f
  3726  0386  0863               	movf	??_main+6,w
  3727  0387  07DD               	addwf	??_main,f
  3728  0388  0864               	movf	??_main+7,w
  3729  0389  3DDE               	addwfc	??_main+1,f
  3730  038A  0865               	movf	??_main+8,w
  3731  038B  3DDF               	addwfc	??_main+2,f
  3732  038C  0866               	movf	??_main+9,w
  3733  038D  3DE0               	addwfc	??_main+3,f
  3734  038E  0860               	movf	??_main+3,w
  3735  038F  0021               	movlb	1	; select bank1
  3736  0390  00B4               	movwf	(main@totals+3)^(0+128)
  3737  0391  0020               	movlb	0	; select bank0
  3738  0392  085F               	movf	??_main+2,w
  3739  0393  0021               	movlb	1	; select bank1
  3740  0394  00B3               	movwf	(main@totals+2)^(0+128)
  3741  0395  0020               	movlb	0	; select bank0
  3742  0396  085E               	movf	??_main+1,w
  3743  0397  0021               	movlb	1	; select bank1
  3744  0398  00B2               	movwf	(main@totals+1)^(0+128)
  3745  0399  0020               	movlb	0	; select bank0
  3746  039A  085D               	movf	??_main,w
  3747  039B  0021               	movlb	1	; select bank1
  3748  039C  00B1               	movwf	main@totals^(0+128)
  3749                           
  3750                           ;main.c: 59: samples[0][sampleIndex0] = solarInTemp;
  3751  039D  0845               	movf	(main@sampleIndex0+1)^(0+128),w
  3752  039E  0020               	movlb	0	; select bank0
  3753  039F  00DE               	movwf	??_main+1
  3754  03A0  0021               	movlb	1	; select bank1
  3755  03A1  0844               	movf	main@sampleIndex0^(0+128),w
  3756  03A2  0020               	movlb	0	; select bank0
  3757  03A3  00DD               	movwf	??_main
  3758  03A4  35DD               	lslf	??_main,f
  3759  03A5  0DDE               	rlf	??_main+1,f
  3760  03A6  3028               	movlw	40
  3761  03A7  00DF               	movwf	??_main+2
  3762  03A8  3023               	movlw	35
  3763  03A9  00E0               	movwf	??_main+3
  3764  03AA  085D               	movf	??_main,w
  3765  03AB  075F               	addwf	??_main+2,w
  3766  03AC  0086               	movwf	6
  3767  03AD  085E               	movf	??_main+1,w
  3768  03AE  3D60               	addwfc	??_main+3,w
  3769  03AF  0087               	movwf	7
  3770  03B0  0021               	movlb	1	; select bank1
  3771  03B1  082D               	movf	main@solarInTemp^(0+128),w
  3772  03B2  3FC0               	movwi [0]fsr1
  3773  03B3  082E               	movf	(main@solarInTemp+1)^(0+128),w
  3774  03B4  3FC1               	movwi [1]fsr1
  3775                           
  3776                           ;main.c: 61: totals[0] = totals[0] + samples[0][sampleIndex0];
  3777  03B5  0831               	movf	main@totals^(0+128),w
  3778  03B6  0020               	movlb	0	; select bank0
  3779  03B7  00DD               	movwf	??_main
  3780  03B8  0021               	movlb	1	; select bank1
  3781  03B9  0832               	movf	(main@totals+1)^(0+128),w
  3782  03BA  0020               	movlb	0	; select bank0
  3783  03BB  00DE               	movwf	??_main+1
  3784  03BC  0021               	movlb	1	; select bank1
  3785  03BD  0833               	movf	(main@totals+2)^(0+128),w
  3786  03BE  0020               	movlb	0	; select bank0
  3787  03BF  00DF               	movwf	??_main+2
  3788  03C0  0021               	movlb	1	; select bank1
  3789  03C1  0834               	movf	(main@totals+3)^(0+128),w
  3790  03C2  0020               	movlb	0	; select bank0
  3791  03C3  00E0               	movwf	??_main+3
  3792  03C4  0021               	movlb	1	; select bank1
  3793  03C5  0845               	movf	(main@sampleIndex0+1)^(0+128),w
  3794  03C6  0020               	movlb	0	; select bank0
  3795  03C7  00E2               	movwf	??_main+5
  3796  03C8  0021               	movlb	1	; select bank1
  3797  03C9  0844               	movf	main@sampleIndex0^(0+128),w
  3798  03CA  0020               	movlb	0	; select bank0
  3799  03CB  00E1               	movwf	??_main+4
  3800  03CC  35E1               	lslf	??_main+4,f
  3801  03CD  0DE2               	rlf	??_main+5,f
  3802  03CE  3028               	movlw	40
  3803  03CF  0761               	addwf	??_main+4,w
  3804  03D0  0084               	movwf	4
  3805  03D1  3023               	movlw	35
  3806  03D2  3D62               	addwfc	??_main+5,w
  3807  03D3  0085               	movwf	5
  3808  03D4  3F00               	moviw [0]fsr0
  3809  03D5  00E3               	movwf	??_main+6
  3810  03D6  3F01               	moviw [1]fsr0
  3811  03D7  00E4               	movwf	??_main+7
  3812  03D8  01E5               	clrf	??_main+8
  3813  03D9  01E6               	clrf	??_main+9
  3814  03DA  0863               	movf	??_main+6,w
  3815  03DB  07DD               	addwf	??_main,f
  3816  03DC  0864               	movf	??_main+7,w
  3817  03DD  3DDE               	addwfc	??_main+1,f
  3818  03DE  0865               	movf	??_main+8,w
  3819  03DF  3DDF               	addwfc	??_main+2,f
  3820  03E0  0866               	movf	??_main+9,w
  3821  03E1  3DE0               	addwfc	??_main+3,f
  3822  03E2  0860               	movf	??_main+3,w
  3823  03E3  0021               	movlb	1	; select bank1
  3824  03E4  00B4               	movwf	(main@totals+3)^(0+128)
  3825  03E5  0020               	movlb	0	; select bank0
  3826  03E6  085F               	movf	??_main+2,w
  3827  03E7  0021               	movlb	1	; select bank1
  3828  03E8  00B3               	movwf	(main@totals+2)^(0+128)
  3829  03E9  0020               	movlb	0	; select bank0
  3830  03EA  085E               	movf	??_main+1,w
  3831  03EB  0021               	movlb	1	; select bank1
  3832  03EC  00B2               	movwf	(main@totals+1)^(0+128)
  3833  03ED  0020               	movlb	0	; select bank0
  3834  03EE  085D               	movf	??_main,w
  3835  03EF  0021               	movlb	1	; select bank1
  3836  03F0  00B1               	movwf	main@totals^(0+128)
  3837                           
  3838                           ;main.c: 63: sampleIndex0 += 1;
  3839  03F1  3001               	movlw	1
  3840  03F2  07C4               	addwf	main@sampleIndex0^(0+128),f
  3841  03F3  3000               	movlw	0
  3842  03F4  3DC5               	addwfc	(main@sampleIndex0+1)^(0+128),f
  3843                           
  3844                           ;main.c: 65: if(sampleIndex0 >= 50)
  3845  03F5  3000               	movlw	0
  3846  03F6  0245               	subwf	(main@sampleIndex0+1)^(0+128),w
  3847  03F7  3032               	movlw	50
  3848  03F8  1903               	skipnz
  3849  03F9  0244               	subwf	main@sampleIndex0^(0+128),w
  3850  03FA  1C03               	skipc
  3851  03FB  2BFE               	goto	l2332
  3852                           
  3853                           ;main.c: 66: {
  3854                           ;main.c: 67: sampleIndex0 = 0;
  3855  03FC  01C4               	clrf	main@sampleIndex0^(0+128)
  3856  03FD  01C5               	clrf	(main@sampleIndex0+1)^(0+128)
  3857  03FE                     l2332:	
  3858                           
  3859                           ;main.c: 68: }
  3860                           ;main.c: 70: solarInTemp = totals[0] / 50;
  3861  03FE  3000               	movlw	0
  3862  03FF  00F3               	movwf	___aldiv@divisor+3
  3863  0400  3000               	movlw	0
  3864  0401  00F2               	movwf	___aldiv@divisor+2
  3865  0402  3000               	movlw	0
  3866  0403  00F1               	movwf	___aldiv@divisor+1
  3867  0404  3032               	movlw	50
  3868  0405  00F0               	movwf	___aldiv@divisor
  3869  0406  0834               	movf	(main@totals+3)^(0+128),w
  3870  0407  00F7               	movwf	___aldiv@dividend+3
  3871  0408  0833               	movf	(main@totals+2)^(0+128),w
  3872  0409  00F6               	movwf	___aldiv@dividend+2
  3873  040A  0832               	movf	(main@totals+1)^(0+128),w
  3874  040B  00F5               	movwf	___aldiv@dividend+1
  3875  040C  0831               	movf	main@totals^(0+128),w
  3876  040D  00F4               	movwf	___aldiv@dividend
  3877  040E  318D  25A2  3182   	fcall	___aldiv
  3878  0411  0871               	movf	?___aldiv+1,w
  3879  0412  0021               	movlb	1	; select bank1
  3880  0413  00AE               	movwf	(main@solarInTemp+1)^(0+128)
  3881  0414  0870               	movf	?___aldiv,w
  3882  0415  00AD               	movwf	main@solarInTemp^(0+128)
  3883                           
  3884                           ;main.c: 74: solarOutTemp = ADCRead(22);
  3885  0416  3016               	movlw	22
  3886  0417  3197  2746  3182   	fcall	_ADCRead
  3887  041A  0871               	movf	?_ADCRead+1,w
  3888  041B  0021               	movlb	1	; select bank1
  3889  041C  00B0               	movwf	(main@solarOutTemp+1)^(0+128)
  3890  041D  0870               	movf	?_ADCRead,w
  3891  041E  00AF               	movwf	main@solarOutTemp^(0+128)
  3892                           
  3893                           ;main.c: 76: totals[1] = totals[1] - samples[1][sampleIndex1];
  3894  041F  0835               	movf	(main@totals^(0+128)+4),w
  3895  0420  0020               	movlb	0	; select bank0
  3896  0421  00DD               	movwf	??_main
  3897  0422  0021               	movlb	1	; select bank1
  3898  0423  0836               	movf	((main@totals+1)^(0+128)+4),w
  3899  0424  0020               	movlb	0	; select bank0
  3900  0425  00DE               	movwf	??_main+1
  3901  0426  0021               	movlb	1	; select bank1
  3902  0427  0837               	movf	((main@totals+2)^(0+128)+4),w
  3903  0428  0020               	movlb	0	; select bank0
  3904  0429  00DF               	movwf	??_main+2
  3905  042A  0021               	movlb	1	; select bank1
  3906  042B  0838               	movf	((main@totals+3)^(0+128)+4),w
  3907  042C  0020               	movlb	0	; select bank0
  3908  042D  00E0               	movwf	??_main+3
  3909  042E  0021               	movlb	1	; select bank1
  3910  042F  0847               	movf	(main@sampleIndex1+1)^(0+128),w
  3911  0430  0020               	movlb	0	; select bank0
  3912  0431  00E2               	movwf	??_main+5
  3913  0432  0021               	movlb	1	; select bank1
  3914  0433  0846               	movf	main@sampleIndex1^(0+128),w
  3915  0434  0020               	movlb	0	; select bank0
  3916  0435  00E1               	movwf	??_main+4
  3917  0436  35E1               	lslf	??_main+4,f
  3918  0437  0DE2               	rlf	??_main+5,f
  3919  0438  308C               	movlw	140
  3920  0439  0761               	addwf	??_main+4,w
  3921  043A  0084               	movwf	4
  3922  043B  3023               	movlw	35
  3923  043C  3D62               	addwfc	??_main+5,w
  3924  043D  0085               	movwf	5
  3925  043E  3F00               	moviw [0]fsr0
  3926  043F  00E3               	movwf	??_main+6
  3927  0440  3F01               	moviw [1]fsr0
  3928  0441  00E4               	movwf	??_main+7
  3929  0442  01E5               	clrf	??_main+8
  3930  0443  01E6               	clrf	??_main+9
  3931  0444  09E3               	comf	??_main+6,f
  3932  0445  09E4               	comf	??_main+7,f
  3933  0446  09E5               	comf	??_main+8,f
  3934  0447  09E6               	comf	??_main+9,f
  3935  0448  0AE3               	incf	??_main+6,f
  3936  0449  1903               	skipnz
  3937  044A  0AE4               	incf	??_main+7,f
  3938  044B  1903               	skipnz
  3939  044C  0AE5               	incf	??_main+8,f
  3940  044D  1903               	skipnz
  3941  044E  0AE6               	incf	??_main+9,f
  3942  044F  0863               	movf	??_main+6,w
  3943  0450  07DD               	addwf	??_main,f
  3944  0451  0864               	movf	??_main+7,w
  3945  0452  3DDE               	addwfc	??_main+1,f
  3946  0453  0865               	movf	??_main+8,w
  3947  0454  3DDF               	addwfc	??_main+2,f
  3948  0455  0866               	movf	??_main+9,w
  3949  0456  3DE0               	addwfc	??_main+3,f
  3950  0457  0860               	movf	??_main+3,w
  3951  0458  0021               	movlb	1	; select bank1
  3952  0459  00B8               	movwf	((main@totals+3)^(0+128)+4)
  3953  045A  0020               	movlb	0	; select bank0
  3954  045B  085F               	movf	??_main+2,w
  3955  045C  0021               	movlb	1	; select bank1
  3956  045D  00B7               	movwf	((main@totals+2)^(0+128)+4)
  3957  045E  0020               	movlb	0	; select bank0
  3958  045F  085E               	movf	??_main+1,w
  3959  0460  0021               	movlb	1	; select bank1
  3960  0461  00B6               	movwf	((main@totals+1)^(0+128)+4)
  3961  0462  0020               	movlb	0	; select bank0
  3962  0463  085D               	movf	??_main,w
  3963  0464  0021               	movlb	1	; select bank1
  3964  0465  00B5               	movwf	(main@totals^(0+128)+4)
  3965                           
  3966                           ;main.c: 78: samples[1][sampleIndex1] = solarOutTemp;
  3967  0466  0847               	movf	(main@sampleIndex1+1)^(0+128),w
  3968  0467  0020               	movlb	0	; select bank0
  3969  0468  00DE               	movwf	??_main+1
  3970  0469  0021               	movlb	1	; select bank1
  3971  046A  0846               	movf	main@sampleIndex1^(0+128),w
  3972  046B  0020               	movlb	0	; select bank0
  3973  046C  00DD               	movwf	??_main
  3974  046D  35DD               	lslf	??_main,f
  3975  046E  0DDE               	rlf	??_main+1,f
  3976  046F  308C               	movlw	140
  3977  0470  00DF               	movwf	??_main+2
  3978  0471  3023               	movlw	35
  3979  0472  00E0               	movwf	??_main+3
  3980  0473  085D               	movf	??_main,w
  3981  0474  075F               	addwf	??_main+2,w
  3982  0475  0086               	movwf	6
  3983  0476  085E               	movf	??_main+1,w
  3984  0477  3D60               	addwfc	??_main+3,w
  3985  0478  0087               	movwf	7
  3986  0479  0021               	movlb	1	; select bank1
  3987  047A  082F               	movf	main@solarOutTemp^(0+128),w
  3988  047B  3FC0               	movwi [0]fsr1
  3989  047C  0830               	movf	(main@solarOutTemp+1)^(0+128),w
  3990  047D  3FC1               	movwi [1]fsr1
  3991                           
  3992                           ;main.c: 80: totals[1] = totals[1] + samples[1][sampleIndex1];
  3993  047E  0835               	movf	(main@totals^(0+128)+4),w
  3994  047F  0020               	movlb	0	; select bank0
  3995  0480  00DD               	movwf	??_main
  3996  0481  0021               	movlb	1	; select bank1
  3997  0482  0836               	movf	((main@totals+1)^(0+128)+4),w
  3998  0483  0020               	movlb	0	; select bank0
  3999  0484  00DE               	movwf	??_main+1
  4000  0485  0021               	movlb	1	; select bank1
  4001  0486  0837               	movf	((main@totals+2)^(0+128)+4),w
  4002  0487  0020               	movlb	0	; select bank0
  4003  0488  00DF               	movwf	??_main+2
  4004  0489  0021               	movlb	1	; select bank1
  4005  048A  0838               	movf	((main@totals+3)^(0+128)+4),w
  4006  048B  0020               	movlb	0	; select bank0
  4007  048C  00E0               	movwf	??_main+3
  4008  048D  0021               	movlb	1	; select bank1
  4009  048E  0847               	movf	(main@sampleIndex1+1)^(0+128),w
  4010  048F  0020               	movlb	0	; select bank0
  4011  0490  00E2               	movwf	??_main+5
  4012  0491  0021               	movlb	1	; select bank1
  4013  0492  0846               	movf	main@sampleIndex1^(0+128),w
  4014  0493  0020               	movlb	0	; select bank0
  4015  0494  00E1               	movwf	??_main+4
  4016  0495  35E1               	lslf	??_main+4,f
  4017  0496  0DE2               	rlf	??_main+5,f
  4018  0497  308C               	movlw	140
  4019  0498  0761               	addwf	??_main+4,w
  4020  0499  0084               	movwf	4
  4021  049A  3023               	movlw	35
  4022  049B  3D62               	addwfc	??_main+5,w
  4023  049C  0085               	movwf	5
  4024  049D  3F00               	moviw [0]fsr0
  4025  049E  00E3               	movwf	??_main+6
  4026  049F  3F01               	moviw [1]fsr0
  4027  04A0  00E4               	movwf	??_main+7
  4028  04A1  01E5               	clrf	??_main+8
  4029  04A2  01E6               	clrf	??_main+9
  4030  04A3  0863               	movf	??_main+6,w
  4031  04A4  07DD               	addwf	??_main,f
  4032  04A5  0864               	movf	??_main+7,w
  4033  04A6  3DDE               	addwfc	??_main+1,f
  4034  04A7  0865               	movf	??_main+8,w
  4035  04A8  3DDF               	addwfc	??_main+2,f
  4036  04A9  0866               	movf	??_main+9,w
  4037  04AA  3DE0               	addwfc	??_main+3,f
  4038  04AB  0860               	movf	??_main+3,w
  4039  04AC  0021               	movlb	1	; select bank1
  4040  04AD  00B8               	movwf	((main@totals+3)^(0+128)+4)
  4041  04AE  0020               	movlb	0	; select bank0
  4042  04AF  085F               	movf	??_main+2,w
  4043  04B0  0021               	movlb	1	; select bank1
  4044  04B1  00B7               	movwf	((main@totals+2)^(0+128)+4)
  4045  04B2  0020               	movlb	0	; select bank0
  4046  04B3  085E               	movf	??_main+1,w
  4047  04B4  0021               	movlb	1	; select bank1
  4048  04B5  00B6               	movwf	((main@totals+1)^(0+128)+4)
  4049  04B6  0020               	movlb	0	; select bank0
  4050  04B7  085D               	movf	??_main,w
  4051  04B8  0021               	movlb	1	; select bank1
  4052  04B9  00B5               	movwf	(main@totals^(0+128)+4)
  4053                           
  4054                           ;main.c: 82: sampleIndex1 += 1;
  4055  04BA  3001               	movlw	1
  4056  04BB  07C6               	addwf	main@sampleIndex1^(0+128),f
  4057  04BC  3000               	movlw	0
  4058  04BD  3DC7               	addwfc	(main@sampleIndex1+1)^(0+128),f
  4059                           
  4060                           ;main.c: 84: if(sampleIndex1 >= 50)
  4061  04BE  3000               	movlw	0
  4062  04BF  0247               	subwf	(main@sampleIndex1+1)^(0+128),w
  4063  04C0  3032               	movlw	50
  4064  04C1  1903               	skipnz
  4065  04C2  0246               	subwf	main@sampleIndex1^(0+128),w
  4066  04C3  1C03               	skipc
  4067  04C4  2CC7               	goto	l2348
  4068                           
  4069                           ;main.c: 85: {
  4070                           ;main.c: 86: sampleIndex1 = 0;
  4071  04C5  01C6               	clrf	main@sampleIndex1^(0+128)
  4072  04C6  01C7               	clrf	(main@sampleIndex1+1)^(0+128)
  4073  04C7                     l2348:	
  4074                           
  4075                           ;main.c: 87: }
  4076                           ;main.c: 89: solarOutTemp = totals[1] / 50;
  4077  04C7  3000               	movlw	0
  4078  04C8  00F3               	movwf	___aldiv@divisor+3
  4079  04C9  3000               	movlw	0
  4080  04CA  00F2               	movwf	___aldiv@divisor+2
  4081  04CB  3000               	movlw	0
  4082  04CC  00F1               	movwf	___aldiv@divisor+1
  4083  04CD  3032               	movlw	50
  4084  04CE  00F0               	movwf	___aldiv@divisor
  4085  04CF  3004               	movlw	4
  4086  04D0  3EB1               	addlw	(low (main@totals| 0))& (0+255)
  4087  04D1  0086               	movwf	6
  4088  04D2  0187               	clrf	7
  4089  04D3  3F40               	moviw [0]fsr1
  4090  04D4  00F4               	movwf	___aldiv@dividend
  4091  04D5  3F41               	moviw [1]fsr1
  4092  04D6  00F5               	movwf	___aldiv@dividend+1
  4093  04D7  3F42               	moviw [2]fsr1
  4094  04D8  00F6               	movwf	___aldiv@dividend+2
  4095  04D9  3F43               	moviw [3]fsr1
  4096  04DA  00F7               	movwf	___aldiv@dividend+3
  4097  04DB  318D  25A2  3182   	fcall	___aldiv
  4098  04DE  0871               	movf	?___aldiv+1,w
  4099  04DF  0021               	movlb	1	; select bank1
  4100  04E0  00B0               	movwf	(main@solarOutTemp+1)^(0+128)
  4101  04E1  0870               	movf	?___aldiv,w
  4102  04E2  00AF               	movwf	main@solarOutTemp^(0+128)
  4103                           
  4104                           ;main.c: 92: R = 10010/(1023/(float)solarInTemp - 1);
  4105  04E3  3000               	movlw	0
  4106  04E4  0020               	movlb	0	; select bank0
  4107  04E5  00C0               	movwf	___ftadd@f1
  4108  04E6  3080               	movlw	128
  4109  04E7  00C1               	movwf	___ftadd@f1+1
  4110  04E8  30BF               	movlw	191
  4111  04E9  00C2               	movwf	___ftadd@f1+2
  4112  04EA  0021               	movlb	1	; select bank1
  4113  04EB  082E               	movf	(main@solarInTemp+1)^(0+128),w
  4114  04EC  00F9               	movwf	___lwtoft@c+1
  4115  04ED  082D               	movf	main@solarInTemp^(0+128),w
  4116  04EE  00F8               	movwf	___lwtoft@c
  4117  04EF  3197  2767  3182   	fcall	___lwtoft
  4118  04F2  0878               	movf	?___lwtoft,w
  4119  04F3  0020               	movlb	0	; select bank0
  4120  04F4  00B0               	movwf	___ftdiv@f2
  4121  04F5  0879               	movf	?___lwtoft+1,w
  4122  04F6  00B1               	movwf	___ftdiv@f2+1
  4123  04F7  087A               	movf	?___lwtoft+2,w
  4124  04F8  00B2               	movwf	___ftdiv@f2+2
  4125  04F9  30C0               	movlw	192
  4126  04FA  00B3               	movwf	___ftdiv@f1
  4127  04FB  307F               	movlw	127
  4128  04FC  00B4               	movwf	___ftdiv@f1+1
  4129  04FD  3044               	movlw	68
  4130  04FE  00B5               	movwf	___ftdiv@f1+2
  4131  04FF  318E  26AA  3182   	fcall	___ftdiv
  4132  0502  0020               	movlb	0	; select bank0
  4133  0503  0830               	movf	?___ftdiv,w
  4134  0504  00C3               	movwf	___ftadd@f2
  4135  0505  0831               	movf	?___ftdiv+1,w
  4136  0506  00C4               	movwf	___ftadd@f2+1
  4137  0507  0832               	movf	?___ftdiv+2,w
  4138  0508  00C5               	movwf	___ftadd@f2+2
  4139  0509  3181  21AF  3182   	fcall	___ftadd
  4140  050C  0020               	movlb	0	; select bank0
  4141  050D  0840               	movf	?___ftadd,w
  4142  050E  0021               	movlb	1	; select bank1
  4143  050F  00AA               	movwf	_main$806^(0+128)
  4144  0510  0020               	movlb	0	; select bank0
  4145  0511  0841               	movf	?___ftadd+1,w
  4146  0512  0021               	movlb	1	; select bank1
  4147  0513  00AB               	movwf	(_main$806+1)^(0+128)
  4148  0514  0020               	movlb	0	; select bank0
  4149  0515  0842               	movf	?___ftadd+2,w
  4150  0516  0021               	movlb	1	; select bank1
  4151  0517  00AC               	movwf	(_main$806+2)^(0+128)
  4152                           
  4153                           ;main.c: 92: R = 10010/(1023/(float)solarInTemp - 1);
  4154  0518  082A               	movf	_main$806^(0+128),w
  4155  0519  0020               	movlb	0	; select bank0
  4156  051A  00B0               	movwf	___ftdiv@f2
  4157  051B  0021               	movlb	1	; select bank1
  4158  051C  082B               	movf	(_main$806+1)^(0+128),w
  4159  051D  0020               	movlb	0	; select bank0
  4160  051E  00B1               	movwf	___ftdiv@f2+1
  4161  051F  0021               	movlb	1	; select bank1
  4162  0520  082C               	movf	(_main$806+2)^(0+128),w
  4163  0521  0020               	movlb	0	; select bank0
  4164  0522  00B2               	movwf	___ftdiv@f2+2
  4165  0523  3068               	movlw	104
  4166  0524  00B3               	movwf	___ftdiv@f1
  4167  0525  301C               	movlw	28
  4168  0526  00B4               	movwf	___ftdiv@f1+1
  4169  0527  3046               	movlw	70
  4170  0528  00B5               	movwf	___ftdiv@f1+2
  4171  0529  318E  26AA  3182   	fcall	___ftdiv
  4172  052C  0020               	movlb	0	; select bank0
  4173  052D  0830               	movf	?___ftdiv,w
  4174  052E  0021               	movlb	1	; select bank1
  4175  052F  00A1               	movwf	main@R^(0+128)
  4176  0530  0020               	movlb	0	; select bank0
  4177  0531  0831               	movf	?___ftdiv+1,w
  4178  0532  0021               	movlb	1	; select bank1
  4179  0533  00A2               	movwf	(main@R+1)^(0+128)
  4180  0534  0020               	movlb	0	; select bank0
  4181  0535  0832               	movf	?___ftdiv+2,w
  4182  0536  0021               	movlb	1	; select bank1
  4183  0537  00A3               	movwf	(main@R+2)^(0+128)
  4184                           
  4185                           ;main.c: 94: steinhart = R /10061;
  4186  0538  3034               	movlw	52
  4187  0539  0020               	movlb	0	; select bank0
  4188  053A  00B0               	movwf	___ftdiv@f2
  4189  053B  301D               	movlw	29
  4190  053C  00B1               	movwf	___ftdiv@f2+1
  4191  053D  3046               	movlw	70
  4192  053E  00B2               	movwf	___ftdiv@f2+2
  4193  053F  0021               	movlb	1	; select bank1
  4194  0540  0821               	movf	main@R^(0+128),w
  4195  0541  0020               	movlb	0	; select bank0
  4196  0542  00B3               	movwf	___ftdiv@f1
  4197  0543  0021               	movlb	1	; select bank1
  4198  0544  0822               	movf	(main@R+1)^(0+128),w
  4199  0545  0020               	movlb	0	; select bank0
  4200  0546  00B4               	movwf	___ftdiv@f1+1
  4201  0547  0021               	movlb	1	; select bank1
  4202  0548  0823               	movf	(main@R+2)^(0+128),w
  4203  0549  0020               	movlb	0	; select bank0
  4204  054A  00B5               	movwf	___ftdiv@f1+2
  4205  054B  318E  26AA  3182   	fcall	___ftdiv
  4206  054E  0020               	movlb	0	; select bank0
  4207  054F  0830               	movf	?___ftdiv,w
  4208  0550  0021               	movlb	1	; select bank1
  4209  0551  00B9               	movwf	main@steinhart^(0+128)
  4210  0552  0020               	movlb	0	; select bank0
  4211  0553  0831               	movf	?___ftdiv+1,w
  4212  0554  0021               	movlb	1	; select bank1
  4213  0555  00BA               	movwf	(main@steinhart+1)^(0+128)
  4214  0556  0020               	movlb	0	; select bank0
  4215  0557  0832               	movf	?___ftdiv+2,w
  4216  0558  0021               	movlb	1	; select bank1
  4217  0559  00BB               	movwf	(main@steinhart+2)^(0+128)
  4218                           
  4219                           ;main.c: 95: steinhart = log(steinhart);
  4220  055A  0839               	movf	main@steinhart^(0+128),w
  4221  055B  0020               	movlb	0	; select bank0
  4222  055C  00D7               	movwf	log@x
  4223  055D  0021               	movlb	1	; select bank1
  4224  055E  083A               	movf	(main@steinhart+1)^(0+128),w
  4225  055F  0020               	movlb	0	; select bank0
  4226  0560  00D8               	movwf	log@x+1
  4227  0561  0021               	movlb	1	; select bank1
  4228  0562  083B               	movf	(main@steinhart+2)^(0+128),w
  4229  0563  0020               	movlb	0	; select bank0
  4230  0564  00D9               	movwf	log@x+2
  4231  0565  318F  2753  3182   	fcall	_log
  4232  0568  0020               	movlb	0	; select bank0
  4233  0569  0857               	movf	?_log,w
  4234  056A  0021               	movlb	1	; select bank1
  4235  056B  00B9               	movwf	main@steinhart^(0+128)
  4236  056C  0020               	movlb	0	; select bank0
  4237  056D  0858               	movf	?_log+1,w
  4238  056E  0021               	movlb	1	; select bank1
  4239  056F  00BA               	movwf	(main@steinhart+1)^(0+128)
  4240  0570  0020               	movlb	0	; select bank0
  4241  0571  0859               	movf	?_log+2,w
  4242  0572  0021               	movlb	1	; select bank1
  4243  0573  00BB               	movwf	(main@steinhart+2)^(0+128)
  4244                           
  4245                           ;main.c: 96: steinhart /= 3995;
  4246  0574  30B0               	movlw	176
  4247  0575  0020               	movlb	0	; select bank0
  4248  0576  00B0               	movwf	___ftdiv@f2
  4249  0577  3079               	movlw	121
  4250  0578  00B1               	movwf	___ftdiv@f2+1
  4251  0579  3045               	movlw	69
  4252  057A  00B2               	movwf	___ftdiv@f2+2
  4253  057B  0021               	movlb	1	; select bank1
  4254  057C  0839               	movf	main@steinhart^(0+128),w
  4255  057D  0020               	movlb	0	; select bank0
  4256  057E  00B3               	movwf	___ftdiv@f1
  4257  057F  0021               	movlb	1	; select bank1
  4258  0580  083A               	movf	(main@steinhart+1)^(0+128),w
  4259  0581  0020               	movlb	0	; select bank0
  4260  0582  00B4               	movwf	___ftdiv@f1+1
  4261  0583  0021               	movlb	1	; select bank1
  4262  0584  083B               	movf	(main@steinhart+2)^(0+128),w
  4263  0585  0020               	movlb	0	; select bank0
  4264  0586  00B5               	movwf	___ftdiv@f1+2
  4265  0587  318E  26AA  3182   	fcall	___ftdiv
  4266  058A  0020               	movlb	0	; select bank0
  4267  058B  0830               	movf	?___ftdiv,w
  4268  058C  0021               	movlb	1	; select bank1
  4269  058D  00B9               	movwf	main@steinhart^(0+128)
  4270  058E  0020               	movlb	0	; select bank0
  4271  058F  0831               	movf	?___ftdiv+1,w
  4272  0590  0021               	movlb	1	; select bank1
  4273  0591  00BA               	movwf	(main@steinhart+1)^(0+128)
  4274  0592  0020               	movlb	0	; select bank0
  4275  0593  0832               	movf	?___ftdiv+2,w
  4276  0594  0021               	movlb	1	; select bank1
  4277  0595  00BB               	movwf	(main@steinhart+2)^(0+128)
  4278                           
  4279                           ;main.c: 97: steinhart += 1.0 / (25 + 273.15);
  4280  0596  30CF               	movlw	207
  4281  0597  0020               	movlb	0	; select bank0
  4282  0598  00C0               	movwf	___ftadd@f1
  4283  0599  305B               	movlw	91
  4284  059A  00C1               	movwf	___ftadd@f1+1
  4285  059B  303B               	movlw	59
  4286  059C  00C2               	movwf	___ftadd@f1+2
  4287  059D  0021               	movlb	1	; select bank1
  4288  059E  0839               	movf	main@steinhart^(0+128),w
  4289  059F  0020               	movlb	0	; select bank0
  4290  05A0  00C3               	movwf	___ftadd@f2
  4291  05A1  0021               	movlb	1	; select bank1
  4292  05A2  083A               	movf	(main@steinhart+1)^(0+128),w
  4293  05A3  0020               	movlb	0	; select bank0
  4294  05A4  00C4               	movwf	___ftadd@f2+1
  4295  05A5  0021               	movlb	1	; select bank1
  4296  05A6  083B               	movf	(main@steinhart+2)^(0+128),w
  4297  05A7  0020               	movlb	0	; select bank0
  4298  05A8  00C5               	movwf	___ftadd@f2+2
  4299  05A9  3181  21AF  3182   	fcall	___ftadd
  4300  05AC  0020               	movlb	0	; select bank0
  4301  05AD  0840               	movf	?___ftadd,w
  4302  05AE  0021               	movlb	1	; select bank1
  4303  05AF  00B9               	movwf	main@steinhart^(0+128)
  4304  05B0  0020               	movlb	0	; select bank0
  4305  05B1  0841               	movf	?___ftadd+1,w
  4306  05B2  0021               	movlb	1	; select bank1
  4307  05B3  00BA               	movwf	(main@steinhart+1)^(0+128)
  4308  05B4  0020               	movlb	0	; select bank0
  4309  05B5  0842               	movf	?___ftadd+2,w
  4310  05B6  0021               	movlb	1	; select bank1
  4311  05B7  00BB               	movwf	(main@steinhart+2)^(0+128)
  4312                           
  4313                           ;main.c: 98: steinhart = 1.0 / steinhart;
  4314  05B8  0839               	movf	main@steinhart^(0+128),w
  4315  05B9  0020               	movlb	0	; select bank0
  4316  05BA  00B0               	movwf	___ftdiv@f2
  4317  05BB  0021               	movlb	1	; select bank1
  4318  05BC  083A               	movf	(main@steinhart+1)^(0+128),w
  4319  05BD  0020               	movlb	0	; select bank0
  4320  05BE  00B1               	movwf	___ftdiv@f2+1
  4321  05BF  0021               	movlb	1	; select bank1
  4322  05C0  083B               	movf	(main@steinhart+2)^(0+128),w
  4323  05C1  0020               	movlb	0	; select bank0
  4324  05C2  00B2               	movwf	___ftdiv@f2+2
  4325  05C3  3000               	movlw	0
  4326  05C4  00B3               	movwf	___ftdiv@f1
  4327  05C5  3080               	movlw	128
  4328  05C6  00B4               	movwf	___ftdiv@f1+1
  4329  05C7  303F               	movlw	63
  4330  05C8  00B5               	movwf	___ftdiv@f1+2
  4331  05C9  318E  26AA  3182   	fcall	___ftdiv
  4332  05CC  0020               	movlb	0	; select bank0
  4333  05CD  0830               	movf	?___ftdiv,w
  4334  05CE  0021               	movlb	1	; select bank1
  4335  05CF  00B9               	movwf	main@steinhart^(0+128)
  4336  05D0  0020               	movlb	0	; select bank0
  4337  05D1  0831               	movf	?___ftdiv+1,w
  4338  05D2  0021               	movlb	1	; select bank1
  4339  05D3  00BA               	movwf	(main@steinhart+1)^(0+128)
  4340  05D4  0020               	movlb	0	; select bank0
  4341  05D5  0832               	movf	?___ftdiv+2,w
  4342  05D6  0021               	movlb	1	; select bank1
  4343  05D7  00BB               	movwf	(main@steinhart+2)^(0+128)
  4344                           
  4345                           ;main.c: 99: steinhart -= 273.15;
  4346  05D8  3093               	movlw	147
  4347  05D9  0020               	movlb	0	; select bank0
  4348  05DA  00CD               	movwf	___ftsub@f2
  4349  05DB  3088               	movlw	136
  4350  05DC  00CE               	movwf	___ftsub@f2+1
  4351  05DD  3043               	movlw	67
  4352  05DE  00CF               	movwf	___ftsub@f2+2
  4353  05DF  0021               	movlb	1	; select bank1
  4354  05E0  0839               	movf	main@steinhart^(0+128),w
  4355  05E1  0020               	movlb	0	; select bank0
  4356  05E2  00D0               	movwf	___ftsub@f1
  4357  05E3  0021               	movlb	1	; select bank1
  4358  05E4  083A               	movf	(main@steinhart+1)^(0+128),w
  4359  05E5  0020               	movlb	0	; select bank0
  4360  05E6  00D1               	movwf	___ftsub@f1+1
  4361  05E7  0021               	movlb	1	; select bank1
  4362  05E8  083B               	movf	(main@steinhart+2)^(0+128),w
  4363  05E9  0020               	movlb	0	; select bank0
  4364  05EA  00D2               	movwf	___ftsub@f1+2
  4365  05EB  3197  27C2  3182   	fcall	___ftsub
  4366  05EE  0020               	movlb	0	; select bank0
  4367  05EF  084D               	movf	?___ftsub,w
  4368  05F0  0021               	movlb	1	; select bank1
  4369  05F1  00B9               	movwf	main@steinhart^(0+128)
  4370  05F2  0020               	movlb	0	; select bank0
  4371  05F3  084E               	movf	?___ftsub+1,w
  4372  05F4  0021               	movlb	1	; select bank1
  4373  05F5  00BA               	movwf	(main@steinhart+1)^(0+128)
  4374  05F6  0020               	movlb	0	; select bank0
  4375  05F7  084F               	movf	?___ftsub+2,w
  4376  05F8  0021               	movlb	1	; select bank1
  4377  05F9  00BB               	movwf	(main@steinhart+2)^(0+128)
  4378                           
  4379                           ;main.c: 101: displayTemp = steinhart*10;
  4380  05FA  3000               	movlw	0
  4381  05FB  0020               	movlb	0	; select bank0
  4382  05FC  00A0               	movwf	___ftmul@f1
  4383  05FD  3020               	movlw	32
  4384  05FE  00A1               	movwf	___ftmul@f1+1
  4385  05FF  3041               	movlw	65
  4386  0600  00A2               	movwf	___ftmul@f1+2
  4387  0601  0021               	movlb	1	; select bank1
  4388  0602  0839               	movf	main@steinhart^(0+128),w
  4389  0603  0020               	movlb	0	; select bank0
  4390  0604  00A3               	movwf	___ftmul@f2
  4391  0605  0021               	movlb	1	; select bank1
  4392  0606  083A               	movf	(main@steinhart+1)^(0+128),w
  4393  0607  0020               	movlb	0	; select bank0
  4394  0608  00A4               	movwf	___ftmul@f2+1
  4395  0609  0021               	movlb	1	; select bank1
  4396  060A  083B               	movf	(main@steinhart+2)^(0+128),w
  4397  060B  0020               	movlb	0	; select bank0
  4398  060C  00A5               	movwf	___ftmul@f2+2
  4399  060D  3180  2030  3182   	fcall	___ftmul
  4400  0610  0020               	movlb	0	; select bank0
  4401  0611  0820               	movf	?___ftmul,w
  4402  0612  0021               	movlb	1	; select bank1
  4403  0613  00A4               	movwf	main@displayTemp^(0+128)
  4404  0614  0020               	movlb	0	; select bank0
  4405  0615  0821               	movf	?___ftmul+1,w
  4406  0616  0021               	movlb	1	; select bank1
  4407  0617  00A5               	movwf	(main@displayTemp+1)^(0+128)
  4408  0618  0020               	movlb	0	; select bank0
  4409  0619  0822               	movf	?___ftmul+2,w
  4410  061A  0021               	movlb	1	; select bank1
  4411  061B  00A6               	movwf	(main@displayTemp+2)^(0+128)
  4412                           
  4413                           ;main.c: 103: displayTemp = displayTemp*9/5+320;
  4414  061C  3000               	movlw	0
  4415  061D  0020               	movlb	0	; select bank0
  4416  061E  00C0               	movwf	___ftadd@f1
  4417  061F  30A0               	movlw	160
  4418  0620  00C1               	movwf	___ftadd@f1+1
  4419  0621  3043               	movlw	67
  4420  0622  00C2               	movwf	___ftadd@f1+2
  4421  0623  3000               	movlw	0
  4422  0624  00B0               	movwf	___ftdiv@f2
  4423  0625  30A0               	movlw	160
  4424  0626  00B1               	movwf	___ftdiv@f2+1
  4425  0627  3040               	movlw	64
  4426  0628  00B2               	movwf	___ftdiv@f2+2
  4427  0629  3000               	movlw	0
  4428  062A  00A0               	movwf	___ftmul@f1
  4429  062B  3010               	movlw	16
  4430  062C  00A1               	movwf	___ftmul@f1+1
  4431  062D  3041               	movlw	65
  4432  062E  00A2               	movwf	___ftmul@f1+2
  4433  062F  0021               	movlb	1	; select bank1
  4434  0630  0824               	movf	main@displayTemp^(0+128),w
  4435  0631  0020               	movlb	0	; select bank0
  4436  0632  00A3               	movwf	___ftmul@f2
  4437  0633  0021               	movlb	1	; select bank1
  4438  0634  0825               	movf	(main@displayTemp+1)^(0+128),w
  4439  0635  0020               	movlb	0	; select bank0
  4440  0636  00A4               	movwf	___ftmul@f2+1
  4441  0637  0021               	movlb	1	; select bank1
  4442  0638  0826               	movf	(main@displayTemp+2)^(0+128),w
  4443  0639  0020               	movlb	0	; select bank0
  4444  063A  00A5               	movwf	___ftmul@f2+2
  4445  063B  3180  2030  3182   	fcall	___ftmul
  4446  063E  0020               	movlb	0	; select bank0
  4447  063F  0820               	movf	?___ftmul,w
  4448  0640  00B3               	movwf	___ftdiv@f1
  4449  0641  0821               	movf	?___ftmul+1,w
  4450  0642  00B4               	movwf	___ftdiv@f1+1
  4451  0643  0822               	movf	?___ftmul+2,w
  4452  0644  00B5               	movwf	___ftdiv@f1+2
  4453  0645  318E  26AA  3182   	fcall	___ftdiv
  4454  0648  0020               	movlb	0	; select bank0
  4455  0649  0830               	movf	?___ftdiv,w
  4456  064A  00C3               	movwf	___ftadd@f2
  4457  064B  0831               	movf	?___ftdiv+1,w
  4458  064C  00C4               	movwf	___ftadd@f2+1
  4459  064D  0832               	movf	?___ftdiv+2,w
  4460  064E  00C5               	movwf	___ftadd@f2+2
  4461  064F  3181  21AF  3182   	fcall	___ftadd
  4462  0652  0020               	movlb	0	; select bank0
  4463  0653  0840               	movf	?___ftadd,w
  4464  0654  0021               	movlb	1	; select bank1
  4465  0655  00A4               	movwf	main@displayTemp^(0+128)
  4466  0656  0020               	movlb	0	; select bank0
  4467  0657  0841               	movf	?___ftadd+1,w
  4468  0658  0021               	movlb	1	; select bank1
  4469  0659  00A5               	movwf	(main@displayTemp+1)^(0+128)
  4470  065A  0020               	movlb	0	; select bank0
  4471  065B  0842               	movf	?___ftadd+2,w
  4472  065C  0021               	movlb	1	; select bank1
  4473  065D  00A6               	movwf	(main@displayTemp+2)^(0+128)
  4474                           
  4475                           ;main.c: 107: R = 9975/(1023/(float)solarOutTemp - 1);
  4476  065E  3000               	movlw	0
  4477  065F  0020               	movlb	0	; select bank0
  4478  0660  00C0               	movwf	___ftadd@f1
  4479  0661  3080               	movlw	128
  4480  0662  00C1               	movwf	___ftadd@f1+1
  4481  0663  30BF               	movlw	191
  4482  0664  00C2               	movwf	___ftadd@f1+2
  4483  0665  0021               	movlb	1	; select bank1
  4484  0666  0830               	movf	(main@solarOutTemp+1)^(0+128),w
  4485  0667  00F9               	movwf	___lwtoft@c+1
  4486  0668  082F               	movf	main@solarOutTemp^(0+128),w
  4487  0669  00F8               	movwf	___lwtoft@c
  4488  066A  3197  2767  3182   	fcall	___lwtoft
  4489  066D  0878               	movf	?___lwtoft,w
  4490  066E  0020               	movlb	0	; select bank0
  4491  066F  00B0               	movwf	___ftdiv@f2
  4492  0670  0879               	movf	?___lwtoft+1,w
  4493  0671  00B1               	movwf	___ftdiv@f2+1
  4494  0672  087A               	movf	?___lwtoft+2,w
  4495  0673  00B2               	movwf	___ftdiv@f2+2
  4496  0674  30C0               	movlw	192
  4497  0675  00B3               	movwf	___ftdiv@f1
  4498  0676  307F               	movlw	127
  4499  0677  00B4               	movwf	___ftdiv@f1+1
  4500  0678  3044               	movlw	68
  4501  0679  00B5               	movwf	___ftdiv@f1+2
  4502  067A  318E  26AA  3182   	fcall	___ftdiv
  4503  067D  0020               	movlb	0	; select bank0
  4504  067E  0830               	movf	?___ftdiv,w
  4505  067F  00C3               	movwf	___ftadd@f2
  4506  0680  0831               	movf	?___ftdiv+1,w
  4507  0681  00C4               	movwf	___ftadd@f2+1
  4508  0682  0832               	movf	?___ftdiv+2,w
  4509  0683  00C5               	movwf	___ftadd@f2+2
  4510  0684  3181  21AF  3182   	fcall	___ftadd
  4511  0687  0020               	movlb	0	; select bank0
  4512  0688  0840               	movf	?___ftadd,w
  4513  0689  0021               	movlb	1	; select bank1
  4514  068A  00AA               	movwf	_main$806^(0+128)
  4515  068B  0020               	movlb	0	; select bank0
  4516  068C  0841               	movf	?___ftadd+1,w
  4517  068D  0021               	movlb	1	; select bank1
  4518  068E  00AB               	movwf	(_main$806+1)^(0+128)
  4519  068F  0020               	movlb	0	; select bank0
  4520  0690  0842               	movf	?___ftadd+2,w
  4521  0691  0021               	movlb	1	; select bank1
  4522  0692  00AC               	movwf	(_main$806+2)^(0+128)
  4523                           
  4524                           ;main.c: 107: R = 9975/(1023/(float)solarOutTemp - 1);
  4525  0693  082A               	movf	_main$806^(0+128),w
  4526  0694  0020               	movlb	0	; select bank0
  4527  0695  00B0               	movwf	___ftdiv@f2
  4528  0696  0021               	movlb	1	; select bank1
  4529  0697  082B               	movf	(_main$806+1)^(0+128),w
  4530  0698  0020               	movlb	0	; select bank0
  4531  0699  00B1               	movwf	___ftdiv@f2+1
  4532  069A  0021               	movlb	1	; select bank1
  4533  069B  082C               	movf	(_main$806+2)^(0+128),w
  4534  069C  0020               	movlb	0	; select bank0
  4535  069D  00B2               	movwf	___ftdiv@f2+2
  4536  069E  30DC               	movlw	220
  4537  069F  00B3               	movwf	___ftdiv@f1
  4538  06A0  301B               	movlw	27
  4539  06A1  00B4               	movwf	___ftdiv@f1+1
  4540  06A2  3046               	movlw	70
  4541  06A3  00B5               	movwf	___ftdiv@f1+2
  4542  06A4  318E  26AA  3182   	fcall	___ftdiv
  4543  06A7  0020               	movlb	0	; select bank0
  4544  06A8  0830               	movf	?___ftdiv,w
  4545  06A9  0021               	movlb	1	; select bank1
  4546  06AA  00A1               	movwf	main@R^(0+128)
  4547  06AB  0020               	movlb	0	; select bank0
  4548  06AC  0831               	movf	?___ftdiv+1,w
  4549  06AD  0021               	movlb	1	; select bank1
  4550  06AE  00A2               	movwf	(main@R+1)^(0+128)
  4551  06AF  0020               	movlb	0	; select bank0
  4552  06B0  0832               	movf	?___ftdiv+2,w
  4553  06B1  0021               	movlb	1	; select bank1
  4554  06B2  00A3               	movwf	(main@R+2)^(0+128)
  4555                           
  4556                           ;main.c: 109: steinhart = R /10061;
  4557  06B3  3034               	movlw	52
  4558  06B4  0020               	movlb	0	; select bank0
  4559  06B5  00B0               	movwf	___ftdiv@f2
  4560  06B6  301D               	movlw	29
  4561  06B7  00B1               	movwf	___ftdiv@f2+1
  4562  06B8  3046               	movlw	70
  4563  06B9  00B2               	movwf	___ftdiv@f2+2
  4564  06BA  0021               	movlb	1	; select bank1
  4565  06BB  0821               	movf	main@R^(0+128),w
  4566  06BC  0020               	movlb	0	; select bank0
  4567  06BD  00B3               	movwf	___ftdiv@f1
  4568  06BE  0021               	movlb	1	; select bank1
  4569  06BF  0822               	movf	(main@R+1)^(0+128),w
  4570  06C0  0020               	movlb	0	; select bank0
  4571  06C1  00B4               	movwf	___ftdiv@f1+1
  4572  06C2  0021               	movlb	1	; select bank1
  4573  06C3  0823               	movf	(main@R+2)^(0+128),w
  4574  06C4  0020               	movlb	0	; select bank0
  4575  06C5  00B5               	movwf	___ftdiv@f1+2
  4576  06C6  318E  26AA  3182   	fcall	___ftdiv
  4577  06C9  0020               	movlb	0	; select bank0
  4578  06CA  0830               	movf	?___ftdiv,w
  4579  06CB  0021               	movlb	1	; select bank1
  4580  06CC  00B9               	movwf	main@steinhart^(0+128)
  4581  06CD  0020               	movlb	0	; select bank0
  4582  06CE  0831               	movf	?___ftdiv+1,w
  4583  06CF  0021               	movlb	1	; select bank1
  4584  06D0  00BA               	movwf	(main@steinhart+1)^(0+128)
  4585  06D1  0020               	movlb	0	; select bank0
  4586  06D2  0832               	movf	?___ftdiv+2,w
  4587  06D3  0021               	movlb	1	; select bank1
  4588  06D4  00BB               	movwf	(main@steinhart+2)^(0+128)
  4589                           
  4590                           ;main.c: 110: steinhart = log(steinhart);
  4591  06D5  0839               	movf	main@steinhart^(0+128),w
  4592  06D6  0020               	movlb	0	; select bank0
  4593  06D7  00D7               	movwf	log@x
  4594  06D8  0021               	movlb	1	; select bank1
  4595  06D9  083A               	movf	(main@steinhart+1)^(0+128),w
  4596  06DA  0020               	movlb	0	; select bank0
  4597  06DB  00D8               	movwf	log@x+1
  4598  06DC  0021               	movlb	1	; select bank1
  4599  06DD  083B               	movf	(main@steinhart+2)^(0+128),w
  4600  06DE  0020               	movlb	0	; select bank0
  4601  06DF  00D9               	movwf	log@x+2
  4602  06E0  318F  2753  3182   	fcall	_log
  4603  06E3  0020               	movlb	0	; select bank0
  4604  06E4  0857               	movf	?_log,w
  4605  06E5  0021               	movlb	1	; select bank1
  4606  06E6  00B9               	movwf	main@steinhart^(0+128)
  4607  06E7  0020               	movlb	0	; select bank0
  4608  06E8  0858               	movf	?_log+1,w
  4609  06E9  0021               	movlb	1	; select bank1
  4610  06EA  00BA               	movwf	(main@steinhart+1)^(0+128)
  4611  06EB  0020               	movlb	0	; select bank0
  4612  06EC  0859               	movf	?_log+2,w
  4613  06ED  0021               	movlb	1	; select bank1
  4614  06EE  00BB               	movwf	(main@steinhart+2)^(0+128)
  4615                           
  4616                           ;main.c: 111: steinhart /= 3995;
  4617  06EF  30B0               	movlw	176
  4618  06F0  0020               	movlb	0	; select bank0
  4619  06F1  00B0               	movwf	___ftdiv@f2
  4620  06F2  3079               	movlw	121
  4621  06F3  00B1               	movwf	___ftdiv@f2+1
  4622  06F4  3045               	movlw	69
  4623  06F5  00B2               	movwf	___ftdiv@f2+2
  4624  06F6  0021               	movlb	1	; select bank1
  4625  06F7  0839               	movf	main@steinhart^(0+128),w
  4626  06F8  0020               	movlb	0	; select bank0
  4627  06F9  00B3               	movwf	___ftdiv@f1
  4628  06FA  0021               	movlb	1	; select bank1
  4629  06FB  083A               	movf	(main@steinhart+1)^(0+128),w
  4630  06FC  0020               	movlb	0	; select bank0
  4631  06FD  00B4               	movwf	___ftdiv@f1+1
  4632  06FE  0021               	movlb	1	; select bank1
  4633  06FF  083B               	movf	(main@steinhart+2)^(0+128),w
  4634  0700  0020               	movlb	0	; select bank0
  4635  0701  00B5               	movwf	___ftdiv@f1+2
  4636  0702  318E  26AA  3182   	fcall	___ftdiv
  4637  0705  0020               	movlb	0	; select bank0
  4638  0706  0830               	movf	?___ftdiv,w
  4639  0707  0021               	movlb	1	; select bank1
  4640  0708  00B9               	movwf	main@steinhart^(0+128)
  4641  0709  0020               	movlb	0	; select bank0
  4642  070A  0831               	movf	?___ftdiv+1,w
  4643  070B  0021               	movlb	1	; select bank1
  4644  070C  00BA               	movwf	(main@steinhart+1)^(0+128)
  4645  070D  0020               	movlb	0	; select bank0
  4646  070E  0832               	movf	?___ftdiv+2,w
  4647  070F  0021               	movlb	1	; select bank1
  4648  0710  00BB               	movwf	(main@steinhart+2)^(0+128)
  4649                           
  4650                           ;main.c: 112: steinhart += 1.0 / (25 + 273.15);
  4651  0711  30CF               	movlw	207
  4652  0712  0020               	movlb	0	; select bank0
  4653  0713  00C0               	movwf	___ftadd@f1
  4654  0714  305B               	movlw	91
  4655  0715  00C1               	movwf	___ftadd@f1+1
  4656  0716  303B               	movlw	59
  4657  0717  00C2               	movwf	___ftadd@f1+2
  4658  0718  0021               	movlb	1	; select bank1
  4659  0719  0839               	movf	main@steinhart^(0+128),w
  4660  071A  0020               	movlb	0	; select bank0
  4661  071B  00C3               	movwf	___ftadd@f2
  4662  071C  0021               	movlb	1	; select bank1
  4663  071D  083A               	movf	(main@steinhart+1)^(0+128),w
  4664  071E  0020               	movlb	0	; select bank0
  4665  071F  00C4               	movwf	___ftadd@f2+1
  4666  0720  0021               	movlb	1	; select bank1
  4667  0721  083B               	movf	(main@steinhart+2)^(0+128),w
  4668  0722  0020               	movlb	0	; select bank0
  4669  0723  00C5               	movwf	___ftadd@f2+2
  4670  0724  3181  21AF  3182   	fcall	___ftadd
  4671  0727  0020               	movlb	0	; select bank0
  4672  0728  0840               	movf	?___ftadd,w
  4673  0729  0021               	movlb	1	; select bank1
  4674  072A  00B9               	movwf	main@steinhart^(0+128)
  4675  072B  0020               	movlb	0	; select bank0
  4676  072C  0841               	movf	?___ftadd+1,w
  4677  072D  0021               	movlb	1	; select bank1
  4678  072E  00BA               	movwf	(main@steinhart+1)^(0+128)
  4679  072F  0020               	movlb	0	; select bank0
  4680  0730  0842               	movf	?___ftadd+2,w
  4681  0731  0021               	movlb	1	; select bank1
  4682  0732  00BB               	movwf	(main@steinhart+2)^(0+128)
  4683                           
  4684                           ;main.c: 113: steinhart = 1.0 / steinhart;
  4685  0733  0839               	movf	main@steinhart^(0+128),w
  4686  0734  0020               	movlb	0	; select bank0
  4687  0735  00B0               	movwf	___ftdiv@f2
  4688  0736  0021               	movlb	1	; select bank1
  4689  0737  083A               	movf	(main@steinhart+1)^(0+128),w
  4690  0738  0020               	movlb	0	; select bank0
  4691  0739  00B1               	movwf	___ftdiv@f2+1
  4692  073A  0021               	movlb	1	; select bank1
  4693  073B  083B               	movf	(main@steinhart+2)^(0+128),w
  4694  073C  0020               	movlb	0	; select bank0
  4695  073D  00B2               	movwf	___ftdiv@f2+2
  4696  073E  3000               	movlw	0
  4697  073F  00B3               	movwf	___ftdiv@f1
  4698  0740  3080               	movlw	128
  4699  0741  00B4               	movwf	___ftdiv@f1+1
  4700  0742  303F               	movlw	63
  4701  0743  00B5               	movwf	___ftdiv@f1+2
  4702  0744  318E  26AA  3182   	fcall	___ftdiv
  4703  0747  0020               	movlb	0	; select bank0
  4704  0748  0830               	movf	?___ftdiv,w
  4705  0749  0021               	movlb	1	; select bank1
  4706  074A  00B9               	movwf	main@steinhart^(0+128)
  4707  074B  0020               	movlb	0	; select bank0
  4708  074C  0831               	movf	?___ftdiv+1,w
  4709  074D  0021               	movlb	1	; select bank1
  4710  074E  00BA               	movwf	(main@steinhart+1)^(0+128)
  4711  074F  0020               	movlb	0	; select bank0
  4712  0750  0832               	movf	?___ftdiv+2,w
  4713  0751  0021               	movlb	1	; select bank1
  4714  0752  00BB               	movwf	(main@steinhart+2)^(0+128)
  4715                           
  4716                           ;main.c: 114: steinhart -= 273.15;
  4717  0753  3093               	movlw	147
  4718  0754  0020               	movlb	0	; select bank0
  4719  0755  00CD               	movwf	___ftsub@f2
  4720  0756  3088               	movlw	136
  4721  0757  00CE               	movwf	___ftsub@f2+1
  4722  0758  3043               	movlw	67
  4723  0759  00CF               	movwf	___ftsub@f2+2
  4724  075A  0021               	movlb	1	; select bank1
  4725  075B  0839               	movf	main@steinhart^(0+128),w
  4726  075C  0020               	movlb	0	; select bank0
  4727  075D  00D0               	movwf	___ftsub@f1
  4728  075E  0021               	movlb	1	; select bank1
  4729  075F  083A               	movf	(main@steinhart+1)^(0+128),w
  4730  0760  0020               	movlb	0	; select bank0
  4731  0761  00D1               	movwf	___ftsub@f1+1
  4732  0762  0021               	movlb	1	; select bank1
  4733  0763  083B               	movf	(main@steinhart+2)^(0+128),w
  4734  0764  0020               	movlb	0	; select bank0
  4735  0765  00D2               	movwf	___ftsub@f1+2
  4736  0766  3197  27C2  3182   	fcall	___ftsub
  4737  0769  0020               	movlb	0	; select bank0
  4738  076A  084D               	movf	?___ftsub,w
  4739  076B  0021               	movlb	1	; select bank1
  4740  076C  00B9               	movwf	main@steinhart^(0+128)
  4741  076D  0020               	movlb	0	; select bank0
  4742  076E  084E               	movf	?___ftsub+1,w
  4743  076F  0021               	movlb	1	; select bank1
  4744  0770  00BA               	movwf	(main@steinhart+1)^(0+128)
  4745  0771  0020               	movlb	0	; select bank0
  4746  0772  084F               	movf	?___ftsub+2,w
  4747  0773  0021               	movlb	1	; select bank1
  4748  0774  00BB               	movwf	(main@steinhart+2)^(0+128)
  4749                           
  4750                           ;main.c: 117: displayTemp2 = steinhart*10;
  4751  0775  3000               	movlw	0
  4752  0776  0020               	movlb	0	; select bank0
  4753  0777  00A0               	movwf	___ftmul@f1
  4754  0778  3020               	movlw	32
  4755  0779  00A1               	movwf	___ftmul@f1+1
  4756  077A  3041               	movlw	65
  4757  077B  00A2               	movwf	___ftmul@f1+2
  4758  077C  0021               	movlb	1	; select bank1
  4759  077D  0839               	movf	main@steinhart^(0+128),w
  4760  077E  0020               	movlb	0	; select bank0
  4761  077F  00A3               	movwf	___ftmul@f2
  4762  0780  0021               	movlb	1	; select bank1
  4763  0781  083A               	movf	(main@steinhart+1)^(0+128),w
  4764  0782  0020               	movlb	0	; select bank0
  4765  0783  00A4               	movwf	___ftmul@f2+1
  4766  0784  0021               	movlb	1	; select bank1
  4767  0785  083B               	movf	(main@steinhart+2)^(0+128),w
  4768  0786  0020               	movlb	0	; select bank0
  4769  0787  00A5               	movwf	___ftmul@f2+2
  4770  0788  3180  2030  3182   	fcall	___ftmul
  4771  078B  0020               	movlb	0	; select bank0
  4772  078C  0820               	movf	?___ftmul,w
  4773  078D  0021               	movlb	1	; select bank1
  4774  078E  00A7               	movwf	main@displayTemp2^(0+128)
  4775  078F  0020               	movlb	0	; select bank0
  4776  0790  0821               	movf	?___ftmul+1,w
  4777  0791  0021               	movlb	1	; select bank1
  4778  0792  00A8               	movwf	(main@displayTemp2+1)^(0+128)
  4779  0793  0020               	movlb	0	; select bank0
  4780  0794  0822               	movf	?___ftmul+2,w
  4781  0795  0021               	movlb	1	; select bank1
  4782  0796  00A9               	movwf	(main@displayTemp2+2)^(0+128)
  4783                           
  4784                           ;main.c: 119: displayTemp2 = displayTemp2*9/5+320;
  4785  0797  3000               	movlw	0
  4786  0798  0020               	movlb	0	; select bank0
  4787  0799  00C0               	movwf	___ftadd@f1
  4788  079A  30A0               	movlw	160
  4789  079B  00C1               	movwf	___ftadd@f1+1
  4790  079C  3043               	movlw	67
  4791  079D  00C2               	movwf	___ftadd@f1+2
  4792  079E  3000               	movlw	0
  4793  079F  00B0               	movwf	___ftdiv@f2
  4794  07A0  30A0               	movlw	160
  4795  07A1  00B1               	movwf	___ftdiv@f2+1
  4796  07A2  3040               	movlw	64
  4797  07A3  00B2               	movwf	___ftdiv@f2+2
  4798  07A4  3000               	movlw	0
  4799  07A5  00A0               	movwf	___ftmul@f1
  4800  07A6  3010               	movlw	16
  4801  07A7  00A1               	movwf	___ftmul@f1+1
  4802  07A8  3041               	movlw	65
  4803  07A9  00A2               	movwf	___ftmul@f1+2
  4804  07AA  0021               	movlb	1	; select bank1
  4805  07AB  0827               	movf	main@displayTemp2^(0+128),w
  4806  07AC  0020               	movlb	0	; select bank0
  4807  07AD  00A3               	movwf	___ftmul@f2
  4808  07AE  0021               	movlb	1	; select bank1
  4809  07AF  0828               	movf	(main@displayTemp2+1)^(0+128),w
  4810  07B0  0020               	movlb	0	; select bank0
  4811  07B1  00A4               	movwf	___ftmul@f2+1
  4812  07B2  0021               	movlb	1	; select bank1
  4813  07B3  0829               	movf	(main@displayTemp2+2)^(0+128),w
  4814  07B4  0020               	movlb	0	; select bank0
  4815  07B5  00A5               	movwf	___ftmul@f2+2
  4816  07B6  3180  2030  3182   	fcall	___ftmul
  4817  07B9  0020               	movlb	0	; select bank0
  4818  07BA  0820               	movf	?___ftmul,w
  4819  07BB  00B3               	movwf	___ftdiv@f1
  4820  07BC  0821               	movf	?___ftmul+1,w
  4821  07BD  00B4               	movwf	___ftdiv@f1+1
  4822  07BE  0822               	movf	?___ftmul+2,w
  4823  07BF  00B5               	movwf	___ftdiv@f1+2
  4824  07C0  318E  26AA  3182   	fcall	___ftdiv
  4825  07C3  0020               	movlb	0	; select bank0
  4826  07C4  0830               	movf	?___ftdiv,w
  4827  07C5  00C3               	movwf	___ftadd@f2
  4828  07C6  0831               	movf	?___ftdiv+1,w
  4829  07C7  00C4               	movwf	___ftadd@f2+1
  4830  07C8  0832               	movf	?___ftdiv+2,w
  4831  07C9  00C5               	movwf	___ftadd@f2+2
  4832  07CA  3181  21AF  3182   	fcall	___ftadd
  4833  07CD  0020               	movlb	0	; select bank0
  4834  07CE  0840               	movf	?___ftadd,w
  4835  07CF  0021               	movlb	1	; select bank1
  4836  07D0  00A7               	movwf	main@displayTemp2^(0+128)
  4837  07D1  0020               	movlb	0	; select bank0
  4838  07D2  0841               	movf	?___ftadd+1,w
  4839  07D3  0021               	movlb	1	; select bank1
  4840  07D4  00A8               	movwf	(main@displayTemp2+1)^(0+128)
  4841  07D5  0020               	movlb	0	; select bank0
  4842  07D6  0842               	movf	?___ftadd+2,w
  4843  07D7  0021               	movlb	1	; select bank1
  4844  07D8  00A9               	movwf	(main@displayTemp2+2)^(0+128)
  4845                           
  4846                           ;main.c: 122: count+=1;
  4847  07D9  3001               	movlw	1
  4848  07DA  0020               	movlb	0	; select bank0
  4849  07DB  00DD               	movwf	??_main
  4850  07DC  085D               	movf	??_main,w
  4851  07DD  0021               	movlb	1	; select bank1
  4852  07DE  07A0               	addwf	main@count^(0+128),f
  4853  07DF  2AD6               	goto	l2292
  4854  07E0                     __end_of_main:	
  4855                           
  4856                           	psect	text1
  4857  0F53                     __ptext1:	
  4858 ;; *************** function _log *****************
  4859 ;; Defined at:
  4860 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  x               3   55[BANK0 ] void 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  exponent        2   59[BANK0 ] int 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  3   55[BANK0 ] int 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4874 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;Total ram usage:        6 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    3
  4881 ;; This function calls:
  4882 ;;		___awtoft
  4883 ;;		___ftadd
  4884 ;;		___ftge
  4885 ;;		___ftmul
  4886 ;;		_eval_poly
  4887 ;;		_frexp
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _log
  4895  0F53                     _log:	
  4896                           
  4897                           ;incstack = 0
  4898                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4899  0F53  0020               	movlb	0	; select bank0
  4900  0F54  0857               	movf	log@x,w
  4901  0F55  00F0               	movwf	___ftge@ff1
  4902  0F56  0858               	movf	log@x+1,w
  4903  0F57  00F1               	movwf	___ftge@ff1+1
  4904  0F58  0859               	movf	log@x+2,w
  4905  0F59  00F2               	movwf	___ftge@ff1+2
  4906  0F5A  3000               	movlw	0
  4907  0F5B  00F3               	movwf	___ftge@ff2
  4908  0F5C  3000               	movlw	0
  4909  0F5D  00F4               	movwf	___ftge@ff2+1
  4910  0F5E  3000               	movlw	0
  4911  0F5F  00F5               	movwf	___ftge@ff2+2
  4912  0F60  318B  237E  318F   	fcall	___ftge
  4913  0F63  1803               	btfsc	3,0
  4914  0F64  2F71               	goto	l2082
  4915  0F65  3021               	movlw	33
  4916  0F66  0020               	movlb	0	; select bank0
  4917  0F67  00EC               	movwf	_errno
  4918  0F68  3000               	movlw	0
  4919  0F69  00ED               	movwf	_errno+1
  4920  0F6A  3000               	movlw	0
  4921  0F6B  00D7               	movwf	?_log
  4922  0F6C  3000               	movlw	0
  4923  0F6D  00D8               	movwf	?_log+1
  4924  0F6E  3000               	movlw	0
  4925  0F6F  00D9               	movwf	?_log+2
  4926  0F70  0008               	return
  4927  0F71                     l2082:	
  4928  0F71  0020               	movlb	0	; select bank0
  4929  0F72  0859               	movf	log@x+2,w
  4930  0F73  0458               	iorwf	log@x+1,w
  4931  0F74  0457               	iorwf	log@x,w
  4932  0F75  1D03               	skipz
  4933  0F76  2F82               	goto	l2088
  4934  0F77  3022               	movlw	34
  4935  0F78  00EC               	movwf	_errno
  4936  0F79  3000               	movlw	0
  4937  0F7A  00ED               	movwf	_errno+1
  4938  0F7B  3000               	movlw	0
  4939  0F7C  00D7               	movwf	?_log
  4940  0F7D  3000               	movlw	0
  4941  0F7E  00D8               	movwf	?_log+1
  4942  0F7F  3000               	movlw	0
  4943  0F80  00D9               	movwf	?_log+2
  4944  0F81  0008               	return
  4945  0F82                     l2088:	
  4946  0F82  3000               	movlw	0
  4947  0F83  00C0               	movwf	___ftadd@f1
  4948  0F84  3080               	movlw	128
  4949  0F85  00C1               	movwf	___ftadd@f1+1
  4950  0F86  30BF               	movlw	191
  4951  0F87  00C2               	movwf	___ftadd@f1+2
  4952  0F88  3000               	movlw	0
  4953  0F89  00A0               	movwf	___ftmul@f1
  4954  0F8A  3000               	movlw	0
  4955  0F8B  00A1               	movwf	___ftmul@f1+1
  4956  0F8C  3040               	movlw	64
  4957  0F8D  00A2               	movwf	___ftmul@f1+2
  4958  0F8E  305B               	movlw	(low (log@exponent| 0))& (0+255)
  4959  0F8F  00DA               	movwf	??_log
  4960  0F90  085A               	movf	??_log,w
  4961  0F91  00F3               	movwf	frexp@eptr
  4962  0F92  0857               	movf	log@x,w
  4963  0F93  00F0               	movwf	frexp@value
  4964  0F94  0858               	movf	log@x+1,w
  4965  0F95  00F1               	movwf	frexp@value+1
  4966  0F96  0859               	movf	log@x+2,w
  4967  0F97  00F2               	movwf	frexp@value+2
  4968  0F98  318B  23B9  318F   	fcall	_frexp
  4969  0F9B  0870               	movf	?_frexp,w
  4970  0F9C  0020               	movlb	0	; select bank0
  4971  0F9D  00A3               	movwf	___ftmul@f2
  4972  0F9E  0871               	movf	?_frexp+1,w
  4973  0F9F  00A4               	movwf	___ftmul@f2+1
  4974  0FA0  0872               	movf	?_frexp+2,w
  4975  0FA1  00A5               	movwf	___ftmul@f2+2
  4976  0FA2  3180  2030  318F   	fcall	___ftmul
  4977  0FA5  0020               	movlb	0	; select bank0
  4978  0FA6  0820               	movf	?___ftmul,w
  4979  0FA7  00C3               	movwf	___ftadd@f2
  4980  0FA8  0821               	movf	?___ftmul+1,w
  4981  0FA9  00C4               	movwf	___ftadd@f2+1
  4982  0FAA  0822               	movf	?___ftmul+2,w
  4983  0FAB  00C5               	movwf	___ftadd@f2+2
  4984  0FAC  3181  21AF  318F   	fcall	___ftadd
  4985  0FAF  0020               	movlb	0	; select bank0
  4986  0FB0  0840               	movf	?___ftadd,w
  4987  0FB1  00D7               	movwf	log@x
  4988  0FB2  0841               	movf	?___ftadd+1,w
  4989  0FB3  00D8               	movwf	log@x+1
  4990  0FB4  0842               	movf	?___ftadd+2,w
  4991  0FB5  00D9               	movwf	log@x+2
  4992  0FB6  30FF               	movlw	255
  4993  0FB7  07DB               	addwf	log@exponent,f
  4994  0FB8  30FF               	movlw	255
  4995  0FB9  3DDC               	addwfc	log@exponent+1,f
  4996  0FBA  0857               	movf	log@x,w
  4997  0FBB  00CD               	movwf	eval_poly@x
  4998  0FBC  0858               	movf	log@x+1,w
  4999  0FBD  00CE               	movwf	eval_poly@x+1
  5000  0FBE  0859               	movf	log@x+2,w
  5001  0FBF  00CF               	movwf	eval_poly@x+2
  5002  0FC0  307F               	movlw	low (log@coeff| (0+32768))
  5003  0FC1  00D0               	movwf	eval_poly@d
  5004  0FC2  308A               	movlw	high (log@coeff| (0+32768))
  5005  0FC3  00D1               	movwf	eval_poly@d+1
  5006  0FC4  3008               	movlw	8
  5007  0FC5  00D2               	movwf	eval_poly@n
  5008  0FC6  3000               	movlw	0
  5009  0FC7  00D3               	movwf	eval_poly@n+1
  5010  0FC8  318C  24DE  318F   	fcall	_eval_poly
  5011  0FCB  0020               	movlb	0	; select bank0
  5012  0FCC  084D               	movf	?_eval_poly,w
  5013  0FCD  00D7               	movwf	log@x
  5014  0FCE  084E               	movf	?_eval_poly+1,w
  5015  0FCF  00D8               	movwf	log@x+1
  5016  0FD0  084F               	movf	?_eval_poly+2,w
  5017  0FD1  00D9               	movwf	log@x+2
  5018  0FD2  0857               	movf	log@x,w
  5019  0FD3  00C0               	movwf	___ftadd@f1
  5020  0FD4  0858               	movf	log@x+1,w
  5021  0FD5  00C1               	movwf	___ftadd@f1+1
  5022  0FD6  0859               	movf	log@x+2,w
  5023  0FD7  00C2               	movwf	___ftadd@f1+2
  5024  0FD8  3072               	movlw	114
  5025  0FD9  00A0               	movwf	___ftmul@f1
  5026  0FDA  3031               	movlw	49
  5027  0FDB  00A1               	movwf	___ftmul@f1+1
  5028  0FDC  303F               	movlw	63
  5029  0FDD  00A2               	movwf	___ftmul@f1+2
  5030  0FDE  085C               	movf	log@exponent+1,w
  5031  0FDF  00F9               	movwf	___awtoft@c+1
  5032  0FE0  085B               	movf	log@exponent,w
  5033  0FE1  00F8               	movwf	___awtoft@c
  5034  0FE2  3197  27E0  318F   	fcall	___awtoft
  5035  0FE5  0878               	movf	?___awtoft,w
  5036  0FE6  0020               	movlb	0	; select bank0
  5037  0FE7  00A3               	movwf	___ftmul@f2
  5038  0FE8  0879               	movf	?___awtoft+1,w
  5039  0FE9  00A4               	movwf	___ftmul@f2+1
  5040  0FEA  087A               	movf	?___awtoft+2,w
  5041  0FEB  00A5               	movwf	___ftmul@f2+2
  5042  0FEC  3180  2030  318F   	fcall	___ftmul
  5043  0FEF  0020               	movlb	0	; select bank0
  5044  0FF0  0820               	movf	?___ftmul,w
  5045  0FF1  00C3               	movwf	___ftadd@f2
  5046  0FF2  0821               	movf	?___ftmul+1,w
  5047  0FF3  00C4               	movwf	___ftadd@f2+1
  5048  0FF4  0822               	movf	?___ftmul+2,w
  5049  0FF5  00C5               	movwf	___ftadd@f2+2
  5050  0FF6  3181  21AF         	fcall	___ftadd
  5051  0FF8  0020               	movlb	0	; select bank0
  5052  0FF9  0840               	movf	?___ftadd,w
  5053  0FFA  00D7               	movwf	?_log
  5054  0FFB  0841               	movf	?___ftadd+1,w
  5055  0FFC  00D8               	movwf	?_log+1
  5056  0FFD  0842               	movf	?___ftadd+2,w
  5057  0FFE  00D9               	movwf	?_log+2
  5058  0FFF  0008               	return
  5059  1000                     __end_of_log:	
  5060                           
  5061                           	psect	text2
  5062  0BB9                     __ptext2:	
  5063 ;; *************** function _frexp *****************
  5064 ;; Defined at:
  5065 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  value           3    0[COMMON] int 
  5068 ;;  eptr            1    3[COMMON] PTR int 
  5069 ;;		 -> log@exponent(2), 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  3    0[COMMON] PTR int 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;Total ram usage:        6 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; This function calls:
  5088 ;;		Nothing
  5089 ;; This function is called by:
  5090 ;;		_log
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           
  5094                           
  5095                           ;psect for function _frexp
  5096  0BB9                     _frexp:	
  5097                           
  5098                           ;incstack = 0
  5099                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5100  0BB9  0872               	movf	frexp@value+2,w
  5101  0BBA  0471               	iorwf	frexp@value+1,w
  5102  0BBB  0470               	iorwf	frexp@value,w
  5103  0BBC  1D03               	skipz
  5104  0BBD  2BCB               	goto	l1948
  5105  0BBE  0873               	movf	frexp@eptr,w
  5106  0BBF  0086               	movwf	6
  5107  0BC0  0187               	clrf	7
  5108  0BC1  3000               	movlw	0
  5109  0BC2  3FC0               	movwi [0]fsr1
  5110  0BC3  3FC1               	movwi [1]fsr1
  5111  0BC4  3000               	movlw	0
  5112  0BC5  00F0               	movwf	?_frexp
  5113  0BC6  3000               	movlw	0
  5114  0BC7  00F1               	movwf	?_frexp+1
  5115  0BC8  3000               	movlw	0
  5116  0BC9  00F2               	movwf	?_frexp+2
  5117  0BCA  0008               	return
  5118  0BCB                     l1948:	
  5119  0BCB  0872               	movf	frexp@value+2,w
  5120  0BCC  397F               	andlw	127
  5121  0BCD  00F4               	movwf	??_frexp
  5122  0BCE  01F5               	clrf	??_frexp+1
  5123  0BCF  35F4               	lslf	??_frexp,f
  5124  0BD0  0DF5               	rlf	??_frexp+1,f
  5125  0BD1  0873               	movf	frexp@eptr,w
  5126  0BD2  0086               	movwf	6
  5127  0BD3  0187               	clrf	7
  5128  0BD4  0874               	movf	??_frexp,w
  5129  0BD5  3FC0               	movwi [0]fsr1
  5130  0BD6  0875               	movf	??_frexp+1,w
  5131  0BD7  3FC1               	movwi [1]fsr1
  5132  0BD8  0D71               	rlf	frexp@value+1,w
  5133  0BD9  0D71               	rlf	frexp@value+1,w
  5134  0BDA  3901               	andlw	1
  5135  0BDB  00F4               	movwf	??_frexp
  5136  0BDC  01F5               	clrf	??_frexp+1
  5137  0BDD  0873               	movf	frexp@eptr,w
  5138  0BDE  0086               	movwf	6
  5139  0BDF  0187               	clrf	7
  5140  0BE0  0874               	movf	??_frexp,w
  5141  0BE1  0481               	iorwf	1,f
  5142  0BE2  3141               	addfsr 1,1
  5143  0BE3  0875               	movf	??_frexp+1,w
  5144  0BE4  0481               	iorwf	1,f
  5145  0BE5  0873               	movf	frexp@eptr,w
  5146  0BE6  0086               	movwf	6
  5147  0BE7  0187               	clrf	7
  5148  0BE8  3082               	movlw	130
  5149  0BE9  0781               	addwf	1,f
  5150  0BEA  3141               	addfsr 1,1
  5151  0BEB  30FF               	movlw	255
  5152  0BEC  3D81               	addwfc	1,f
  5153  0BED  317F               	addfsr 1,-1
  5154  0BEE  0872               	movf	frexp@value+2,w
  5155  0BEF  3980               	andlw	-128
  5156  0BF0  383F               	iorlw	63
  5157  0BF1  00F2               	movwf	frexp@value+2
  5158  0BF2  13F1               	bcf	frexp@value+1,7
  5159  0BF3  0008               	return
  5160  0BF4                     __end_of_frexp:	
  5161                           
  5162                           	psect	text3
  5163  0CDE                     __ptext3:	
  5164 ;; *************** function _eval_poly *****************
  5165 ;; Defined at:
  5166 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  x               3   45[BANK0 ] PTR int 
  5169 ;;  d               2   48[BANK0 ] PTR const 
  5170 ;;		 -> log@coeff(27), 
  5171 ;;  n               2   50[BANK0 ] int 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  res             3   52[BANK0 ] int 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  3   45[BANK0 ] int 
  5176 ;; Registers used:
  5177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5183 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;Total ram usage:       10 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    2
  5190 ;; This function calls:
  5191 ;;		___ftadd
  5192 ;;		___ftmul
  5193 ;;		___wmul
  5194 ;; This function is called by:
  5195 ;;		_log
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _eval_poly
  5201  0CDE                     _eval_poly:	
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5205  0CDE  0020               	movlb	0	; select bank0
  5206  0CDF  0853               	movf	eval_poly@n+1,w
  5207  0CE0  00F1               	movwf	___wmul@multiplier+1
  5208  0CE1  0852               	movf	eval_poly@n,w
  5209  0CE2  00F0               	movwf	___wmul@multiplier
  5210  0CE3  3003               	movlw	3
  5211  0CE4  00F2               	movwf	___wmul@multiplicand
  5212  0CE5  3000               	movlw	0
  5213  0CE6  00F3               	movwf	___wmul@multiplicand+1
  5214  0CE7  3197  27A7  318C   	fcall	___wmul
  5215  0CEA  0020               	movlb	0	; select bank0
  5216  0CEB  0850               	movf	eval_poly@d,w
  5217  0CEC  0770               	addwf	?___wmul,w
  5218  0CED  0084               	movwf	4
  5219  0CEE  0851               	movf	eval_poly@d+1,w
  5220  0CEF  3D71               	addwfc	?___wmul+1,w
  5221  0CF0  0085               	movwf	5
  5222  0CF1  3F00               	moviw [0]fsr0
  5223  0CF2  00D4               	movwf	eval_poly@res
  5224  0CF3  3F01               	moviw [1]fsr0
  5225  0CF4  00D5               	movwf	eval_poly@res+1
  5226  0CF5  3F02               	moviw [2]fsr0
  5227  0CF6                     L1:	
  5228  0CF6  00D6               	movwf	eval_poly@res+2
  5229  0CF7  0852               	movf	eval_poly@n,w
  5230  0CF8  0453               	iorwf	eval_poly@n+1,w
  5231  0CF9  1903               	btfsc	3,2
  5232  0CFA  2D37               	goto	l1966
  5233  0CFB  30FF               	movlw	255
  5234  0CFC  07D2               	addwf	eval_poly@n,f
  5235  0CFD  30FF               	movlw	255
  5236  0CFE  3DD3               	addwfc	eval_poly@n+1,f
  5237  0CFF  0853               	movf	eval_poly@n+1,w
  5238  0D00  00F1               	movwf	___wmul@multiplier+1
  5239  0D01  0852               	movf	eval_poly@n,w
  5240  0D02  00F0               	movwf	___wmul@multiplier
  5241  0D03  3003               	movlw	3
  5242  0D04  00F2               	movwf	___wmul@multiplicand
  5243  0D05  3000               	movlw	0
  5244  0D06  00F3               	movwf	___wmul@multiplicand+1
  5245  0D07  3197  27A7  318C   	fcall	___wmul
  5246  0D0A  0020               	movlb	0	; select bank0
  5247  0D0B  0850               	movf	eval_poly@d,w
  5248  0D0C  0770               	addwf	?___wmul,w
  5249  0D0D  0084               	movwf	4
  5250  0D0E  0851               	movf	eval_poly@d+1,w
  5251  0D0F  3D71               	addwfc	?___wmul+1,w
  5252  0D10  0085               	movwf	5
  5253  0D11  3F00               	moviw [0]fsr0
  5254  0D12  00C0               	movwf	___ftadd@f1
  5255  0D13  3F01               	moviw [1]fsr0
  5256  0D14  00C1               	movwf	___ftadd@f1+1
  5257  0D15  3F02               	moviw [2]fsr0
  5258  0D16  00C2               	movwf	___ftadd@f1+2
  5259  0D17  0854               	movf	eval_poly@res,w
  5260  0D18  00A0               	movwf	___ftmul@f1
  5261  0D19  0855               	movf	eval_poly@res+1,w
  5262  0D1A  00A1               	movwf	___ftmul@f1+1
  5263  0D1B  0856               	movf	eval_poly@res+2,w
  5264  0D1C  00A2               	movwf	___ftmul@f1+2
  5265  0D1D  084D               	movf	eval_poly@x,w
  5266  0D1E  00A3               	movwf	___ftmul@f2
  5267  0D1F  084E               	movf	eval_poly@x+1,w
  5268  0D20  00A4               	movwf	___ftmul@f2+1
  5269  0D21  084F               	movf	eval_poly@x+2,w
  5270  0D22  00A5               	movwf	___ftmul@f2+2
  5271  0D23  3180  2030  318C   	fcall	___ftmul
  5272  0D26  0020               	movlb	0	; select bank0
  5273  0D27  0820               	movf	?___ftmul,w
  5274  0D28  00C3               	movwf	___ftadd@f2
  5275  0D29  0821               	movf	?___ftmul+1,w
  5276  0D2A  00C4               	movwf	___ftadd@f2+1
  5277  0D2B  0822               	movf	?___ftmul+2,w
  5278  0D2C  00C5               	movwf	___ftadd@f2+2
  5279  0D2D  3181  21AF  318C   	fcall	___ftadd
  5280  0D30  0020               	movlb	0	; select bank0
  5281  0D31  0840               	movf	?___ftadd,w
  5282  0D32  00D4               	movwf	eval_poly@res
  5283  0D33  0841               	movf	?___ftadd+1,w
  5284  0D34  00D5               	movwf	eval_poly@res+1
  5285  0D35  0842               	movf	?___ftadd+2,w
  5286  0D36  2CF6               	goto	L1
  5287  0D37                     l1966:	
  5288  0D37  0854               	movf	eval_poly@res,w
  5289  0D38  00CD               	movwf	?_eval_poly
  5290  0D39  0855               	movf	eval_poly@res+1,w
  5291  0D3A  00CE               	movwf	?_eval_poly+1
  5292  0D3B  0856               	movf	eval_poly@res+2,w
  5293  0D3C  00CF               	movwf	?_eval_poly+2
  5294  0D3D  0008               	return
  5295  0D3E                     __end_of_eval_poly:	
  5296                           
  5297                           	psect	text4
  5298  0030                     __ptext4:	
  5299 ;; *************** function ___ftmul *****************
  5300 ;; Defined at:
  5301 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  f1              3    0[BANK0 ] float 
  5304 ;;  f2              3    3[BANK0 ] float 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  5307 ;;  sign            1   15[BANK0 ] unsigned char 
  5308 ;;  cntr            1   14[BANK0 ] unsigned char 
  5309 ;;  exp             1   10[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  3    0[BANK0 ] float 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5319 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5321 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5322 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5323 ;;Total ram usage:       16 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    1
  5326 ;; This function calls:
  5327 ;;		___ftpack
  5328 ;; This function is called by:
  5329 ;;		_main
  5330 ;;		_log
  5331 ;;		_eval_poly
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           
  5336                           ;psect for function ___ftmul
  5337  0030                     ___ftmul:	
  5338                           
  5339                           ;incstack = 0
  5340                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5341  0030  0020               	movlb	0	; select bank0
  5342  0031  0820               	movf	___ftmul@f1,w
  5343  0032  00A6               	movwf	??___ftmul
  5344  0033  0821               	movf	___ftmul@f1+1,w
  5345  0034  00A7               	movwf	??___ftmul+1
  5346  0035  0822               	movf	___ftmul@f1+2,w
  5347  0036  00A8               	movwf	??___ftmul+2
  5348  0037  1003               	clrc
  5349  0038  0D27               	rlf	??___ftmul+1,w
  5350  0039  0D28               	rlf	??___ftmul+2,w
  5351  003A  00A9               	movwf	??___ftmul+3
  5352  003B  0829               	movf	??___ftmul+3,w
  5353  003C  00AA               	movwf	___ftmul@exp
  5354  003D  082A               	movf	___ftmul@exp,w
  5355  003E  1D03               	btfss	3,2
  5356  003F  2847               	goto	l1712
  5357  0040  3000               	movlw	0
  5358  0041  00A0               	movwf	?___ftmul
  5359  0042  3000               	movlw	0
  5360  0043  00A1               	movwf	?___ftmul+1
  5361  0044  3000               	movlw	0
  5362  0045  00A2               	movwf	?___ftmul+2
  5363  0046  0008               	return
  5364  0047                     l1712:	
  5365  0047  0823               	movf	___ftmul@f2,w
  5366  0048  00A6               	movwf	??___ftmul
  5367  0049  0824               	movf	___ftmul@f2+1,w
  5368  004A  00A7               	movwf	??___ftmul+1
  5369  004B  0825               	movf	___ftmul@f2+2,w
  5370  004C  00A8               	movwf	??___ftmul+2
  5371  004D  1003               	clrc
  5372  004E  0D27               	rlf	??___ftmul+1,w
  5373  004F  0D28               	rlf	??___ftmul+2,w
  5374  0050  00A9               	movwf	??___ftmul+3
  5375  0051  0829               	movf	??___ftmul+3,w
  5376  0052  00AF               	movwf	___ftmul@sign
  5377  0053  082F               	movf	___ftmul@sign,w
  5378  0054  1D03               	btfss	3,2
  5379  0055  285D               	goto	l1718
  5380  0056  3000               	movlw	0
  5381  0057  00A0               	movwf	?___ftmul
  5382  0058  3000               	movlw	0
  5383  0059  00A1               	movwf	?___ftmul+1
  5384  005A  3000               	movlw	0
  5385  005B  00A2               	movwf	?___ftmul+2
  5386  005C  0008               	return
  5387  005D                     l1718:	
  5388  005D  082F               	movf	___ftmul@sign,w
  5389  005E  3E7B               	addlw	123
  5390  005F  00A6               	movwf	??___ftmul
  5391  0060  0826               	movf	??___ftmul,w
  5392  0061  07AA               	addwf	___ftmul@exp,f
  5393  0062  0820               	movf	___ftmul@f1,w
  5394  0063  00A6               	movwf	??___ftmul
  5395  0064  0821               	movf	___ftmul@f1+1,w
  5396  0065  00A7               	movwf	??___ftmul+1
  5397  0066  0822               	movf	___ftmul@f1+2,w
  5398  0067  00A8               	movwf	??___ftmul+2
  5399  0068  3010               	movlw	16
  5400  0069                     u1835:	
  5401  0069  36A8               	lsrf	??___ftmul+2,f
  5402  006A  0CA7               	rrf	??___ftmul+1,f
  5403  006B  0CA6               	rrf	??___ftmul,f
  5404  006C  0B89               	decfsz	9,f
  5405  006D  2869               	goto	u1835
  5406  006E  0826               	movf	??___ftmul,w
  5407  006F  00A9               	movwf	??___ftmul+3
  5408  0070  0829               	movf	??___ftmul+3,w
  5409  0071  00AF               	movwf	___ftmul@sign
  5410  0072  0823               	movf	___ftmul@f2,w
  5411  0073  00A6               	movwf	??___ftmul
  5412  0074  0824               	movf	___ftmul@f2+1,w
  5413  0075  00A7               	movwf	??___ftmul+1
  5414  0076  0825               	movf	___ftmul@f2+2,w
  5415  0077  00A8               	movwf	??___ftmul+2
  5416  0078  3010               	movlw	16
  5417  0079                     u1845:	
  5418  0079  36A8               	lsrf	??___ftmul+2,f
  5419  007A  0CA7               	rrf	??___ftmul+1,f
  5420  007B  0CA6               	rrf	??___ftmul,f
  5421  007C  0B89               	decfsz	9,f
  5422  007D  2879               	goto	u1845
  5423  007E  0826               	movf	??___ftmul,w
  5424  007F  00A9               	movwf	??___ftmul+3
  5425  0080  0829               	movf	??___ftmul+3,w
  5426  0081  06AF               	xorwf	___ftmul@sign,f
  5427  0082  3080               	movlw	128
  5428  0083  00A6               	movwf	??___ftmul
  5429  0084  0826               	movf	??___ftmul,w
  5430  0085  05AF               	andwf	___ftmul@sign,f
  5431  0086  17A1               	bsf	___ftmul@f1+1,7
  5432  0087  17A4               	bsf	___ftmul@f2+1,7
  5433  0088  30FF               	movlw	255
  5434  0089  05A3               	andwf	___ftmul@f2,f
  5435  008A  30FF               	movlw	255
  5436  008B  05A4               	andwf	___ftmul@f2+1,f
  5437  008C  3000               	movlw	0
  5438  008D  05A5               	andwf	___ftmul@f2+2,f
  5439  008E  3000               	movlw	0
  5440  008F  00AB               	movwf	___ftmul@f3_as_product
  5441  0090  3000               	movlw	0
  5442  0091  00AC               	movwf	___ftmul@f3_as_product+1
  5443  0092  3000               	movlw	0
  5444  0093  00AD               	movwf	___ftmul@f3_as_product+2
  5445  0094  3007               	movlw	7
  5446  0095  00A6               	movwf	??___ftmul
  5447  0096  0826               	movf	??___ftmul,w
  5448  0097  00AE               	movwf	___ftmul@cntr
  5449  0098                     l1730:	
  5450  0098  1C20               	btfss	___ftmul@f1,0
  5451  0099  28A0               	goto	l1734
  5452  009A  0823               	movf	___ftmul@f2,w
  5453  009B  07AB               	addwf	___ftmul@f3_as_product,f
  5454  009C  0824               	movf	___ftmul@f2+1,w
  5455  009D  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5456  009E  0825               	movf	___ftmul@f2+2,w
  5457  009F  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5458  00A0                     l1734:	
  5459  00A0  3001               	movlw	1
  5460  00A1                     u1865:	
  5461  00A1  36A2               	lsrf	___ftmul@f1+2,f
  5462  00A2  0CA1               	rrf	___ftmul@f1+1,f
  5463  00A3  0CA0               	rrf	___ftmul@f1,f
  5464  00A4  0B89               	decfsz	9,f
  5465  00A5  28A1               	goto	u1865
  5466  00A6  3001               	movlw	1
  5467  00A7                     u1875:	
  5468  00A7  35A3               	lslf	___ftmul@f2,f
  5469  00A8  0DA4               	rlf	___ftmul@f2+1,f
  5470  00A9  0DA5               	rlf	___ftmul@f2+2,f
  5471  00AA  0B89               	decfsz	9,f
  5472  00AB  28A7               	goto	u1875
  5473  00AC  3001               	movlw	1
  5474  00AD  02AE               	subwf	___ftmul@cntr,f
  5475  00AE  1D03               	btfss	3,2
  5476  00AF  2898               	goto	l1730
  5477  00B0  3009               	movlw	9
  5478  00B1  00A6               	movwf	??___ftmul
  5479  00B2  0826               	movf	??___ftmul,w
  5480  00B3  00AE               	movwf	___ftmul@cntr
  5481  00B4                     l1742:	
  5482  00B4  1C20               	btfss	___ftmul@f1,0
  5483  00B5  28BC               	goto	l1746
  5484  00B6  0823               	movf	___ftmul@f2,w
  5485  00B7  07AB               	addwf	___ftmul@f3_as_product,f
  5486  00B8  0824               	movf	___ftmul@f2+1,w
  5487  00B9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5488  00BA  0825               	movf	___ftmul@f2+2,w
  5489  00BB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5490  00BC                     l1746:	
  5491  00BC  3001               	movlw	1
  5492  00BD                     u1905:	
  5493  00BD  36A2               	lsrf	___ftmul@f1+2,f
  5494  00BE  0CA1               	rrf	___ftmul@f1+1,f
  5495  00BF  0CA0               	rrf	___ftmul@f1,f
  5496  00C0  0B89               	decfsz	9,f
  5497  00C1  28BD               	goto	u1905
  5498  00C2  3001               	movlw	1
  5499  00C3                     u1915:	
  5500  00C3  36AD               	lsrf	___ftmul@f3_as_product+2,f
  5501  00C4  0CAC               	rrf	___ftmul@f3_as_product+1,f
  5502  00C5  0CAB               	rrf	___ftmul@f3_as_product,f
  5503  00C6  0B89               	decfsz	9,f
  5504  00C7  28C3               	goto	u1915
  5505  00C8  3001               	movlw	1
  5506  00C9  02AE               	subwf	___ftmul@cntr,f
  5507  00CA  1D03               	btfss	3,2
  5508  00CB  28B4               	goto	l1742
  5509  00CC  082B               	movf	___ftmul@f3_as_product,w
  5510  00CD  00F0               	movwf	___ftpack@arg
  5511  00CE  082C               	movf	___ftmul@f3_as_product+1,w
  5512  00CF  00F1               	movwf	___ftpack@arg+1
  5513  00D0  082D               	movf	___ftmul@f3_as_product+2,w
  5514  00D1  00F2               	movwf	___ftpack@arg+2
  5515  00D2  082A               	movf	___ftmul@exp,w
  5516  00D3  00A6               	movwf	??___ftmul
  5517  00D4  0826               	movf	??___ftmul,w
  5518  00D5  00F3               	movwf	___ftpack@exp
  5519  00D6  082F               	movf	___ftmul@sign,w
  5520  00D7  00A7               	movwf	??___ftmul+1
  5521  00D8  0827               	movf	??___ftmul+1,w
  5522  00D9  00F4               	movwf	___ftpack@sign
  5523  00DA  318D  253E         	fcall	___ftpack
  5524  00DC  0870               	movf	?___ftpack,w
  5525  00DD  0020               	movlb	0	; select bank0
  5526  00DE  00A0               	movwf	?___ftmul
  5527  00DF  0871               	movf	?___ftpack+1,w
  5528  00E0  00A1               	movwf	?___ftmul+1
  5529  00E1  0872               	movf	?___ftpack+2,w
  5530  00E2  00A2               	movwf	?___ftmul+2
  5531  00E3  0008               	return
  5532  00E4                     __end_of___ftmul:	
  5533                           
  5534                           	psect	text5
  5535  0B7E                     __ptext5:	
  5536 ;; *************** function ___ftge *****************
  5537 ;; Defined at:
  5538 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  ff1             3    0[COMMON] float 
  5541 ;;  ff2             3    3[COMMON] float 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;		None               void
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5553 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;Total ram usage:        9 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_log
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           
  5567                           ;psect for function ___ftge
  5568  0B7E                     ___ftge:	
  5569                           
  5570                           ;incstack = 0
  5571                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5572  0B7E  1FF2               	btfss	___ftge@ff1+2,7
  5573  0B7F  2B94               	goto	l1924
  5574  0B80  0970               	comf	___ftge@ff1,w
  5575  0B81  00F6               	movwf	??___ftge
  5576  0B82  0971               	comf	___ftge@ff1+1,w
  5577  0B83  00F7               	movwf	??___ftge+1
  5578  0B84  0972               	comf	___ftge@ff1+2,w
  5579  0B85  00F8               	movwf	??___ftge+2
  5580  0B86  0AF6               	incf	??___ftge,f
  5581  0B87  1903               	skipnz
  5582  0B88  0AF7               	incf	??___ftge+1,f
  5583  0B89  1903               	skipnz
  5584  0B8A  0AF8               	incf	??___ftge+2,f
  5585  0B8B  3000               	movlw	0
  5586  0B8C  0776               	addwf	??___ftge,w
  5587  0B8D  00F0               	movwf	___ftge@ff1
  5588  0B8E  3000               	movlw	0
  5589  0B8F  3D77               	addwfc	??___ftge+1,w
  5590  0B90  00F1               	movwf	___ftge@ff1+1
  5591  0B91  3080               	movlw	128
  5592  0B92  3D78               	addwfc	??___ftge+2,w
  5593  0B93  00F2               	movwf	___ftge@ff1+2
  5594  0B94                     l1924:	
  5595  0B94  1FF5               	btfss	___ftge@ff2+2,7
  5596  0B95  2BAA               	goto	l1928
  5597  0B96  0973               	comf	___ftge@ff2,w
  5598  0B97  00F6               	movwf	??___ftge
  5599  0B98  0974               	comf	___ftge@ff2+1,w
  5600  0B99  00F7               	movwf	??___ftge+1
  5601  0B9A  0975               	comf	___ftge@ff2+2,w
  5602  0B9B  00F8               	movwf	??___ftge+2
  5603  0B9C  0AF6               	incf	??___ftge,f
  5604  0B9D  1903               	skipnz
  5605  0B9E  0AF7               	incf	??___ftge+1,f
  5606  0B9F  1903               	skipnz
  5607  0BA0  0AF8               	incf	??___ftge+2,f
  5608  0BA1  3000               	movlw	0
  5609  0BA2  0776               	addwf	??___ftge,w
  5610  0BA3  00F3               	movwf	___ftge@ff2
  5611  0BA4  3000               	movlw	0
  5612  0BA5  3D77               	addwfc	??___ftge+1,w
  5613  0BA6  00F4               	movwf	___ftge@ff2+1
  5614  0BA7  3080               	movlw	128
  5615  0BA8  3D78               	addwfc	??___ftge+2,w
  5616  0BA9  00F5               	movwf	___ftge@ff2+2
  5617  0BAA                     l1928:	
  5618  0BAA  3080               	movlw	128
  5619  0BAB  06F2               	xorwf	___ftge@ff1+2,f
  5620  0BAC  3080               	movlw	128
  5621  0BAD  06F5               	xorwf	___ftge@ff2+2,f
  5622  0BAE  0875               	movf	___ftge@ff2+2,w
  5623  0BAF  0272               	subwf	___ftge@ff1+2,w
  5624  0BB0  1D03               	skipz
  5625  0BB1  0008               	return
  5626  0BB2  0874               	movf	___ftge@ff2+1,w
  5627  0BB3  0271               	subwf	___ftge@ff1+1,w
  5628  0BB4  1D03               	skipz
  5629  0BB5  0008               	return
  5630  0BB6  0873               	movf	___ftge@ff2,w
  5631  0BB7  0270               	subwf	___ftge@ff1,w
  5632  0BB8  0008               	return
  5633  0BB9                     __end_of___ftge:	
  5634                           
  5635                           	psect	text6
  5636  17E0                     __ptext6:	
  5637 ;; *************** function ___awtoft *****************
  5638 ;; Defined at:
  5639 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  c               2    8[COMMON] int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  sign            1   13[COMMON] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  3    8[COMMON] float 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0, pclath, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5653 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;Total ram usage:        6 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    1
  5660 ;; This function calls:
  5661 ;;		___ftpack
  5662 ;; This function is called by:
  5663 ;;		_log
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function ___awtoft
  5669  17E0                     ___awtoft:	
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5673  17E0  01FD               	clrf	___awtoft@sign
  5674  17E1  1FF9               	btfss	___awtoft@c+1,7
  5675  17E2  2FEA               	goto	l1916
  5676  17E3  09F8               	comf	___awtoft@c,f
  5677  17E4  09F9               	comf	___awtoft@c+1,f
  5678  17E5  0AF8               	incf	___awtoft@c,f
  5679  17E6  1903               	skipnz
  5680  17E7  0AF9               	incf	___awtoft@c+1,f
  5681  17E8  01FD               	clrf	___awtoft@sign
  5682  17E9  0AFD               	incf	___awtoft@sign,f
  5683  17EA                     l1916:	
  5684  17EA  0878               	movf	___awtoft@c,w
  5685  17EB  00F0               	movwf	___ftpack@arg
  5686  17EC  0879               	movf	___awtoft@c+1,w
  5687  17ED  00F1               	movwf	___ftpack@arg+1
  5688  17EE  01F2               	clrf	___ftpack@arg+2
  5689  17EF  308E               	movlw	142
  5690  17F0  00FB               	movwf	??___awtoft
  5691  17F1  087B               	movf	??___awtoft,w
  5692  17F2  00F3               	movwf	___ftpack@exp
  5693  17F3  087D               	movf	___awtoft@sign,w
  5694  17F4  00FC               	movwf	??___awtoft+1
  5695  17F5  087C               	movf	??___awtoft+1,w
  5696  17F6  00F4               	movwf	___ftpack@sign
  5697  17F7  318D  253E         	fcall	___ftpack
  5698  17F9  0870               	movf	?___ftpack,w
  5699  17FA  00F8               	movwf	?___awtoft
  5700  17FB  0871               	movf	?___ftpack+1,w
  5701  17FC  00F9               	movwf	?___awtoft+1
  5702  17FD  0872               	movf	?___ftpack+2,w
  5703  17FE  00FA               	movwf	?___awtoft+2
  5704  17FF  0008               	return
  5705  1800                     __end_of___awtoft:	
  5706                           
  5707                           	psect	text7
  5708  1767                     __ptext7:	
  5709 ;; *************** function ___lwtoft *****************
  5710 ;; Defined at:
  5711 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  c               2    8[COMMON] unsigned int 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  3    8[COMMON] float 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0, pclath, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5725 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;Total ram usage:        4 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    1
  5732 ;; This function calls:
  5733 ;;		___ftpack
  5734 ;; This function is called by:
  5735 ;;		_main
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           
  5740                           ;psect for function ___lwtoft
  5741  1767                     ___lwtoft:	
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5745  1767  0878               	movf	___lwtoft@c,w
  5746  1768  00F0               	movwf	___ftpack@arg
  5747  1769  0879               	movf	___lwtoft@c+1,w
  5748  176A  00F1               	movwf	___ftpack@arg+1
  5749  176B  01F2               	clrf	___ftpack@arg+2
  5750  176C  308E               	movlw	142
  5751  176D  00FB               	movwf	??___lwtoft
  5752  176E  087B               	movf	??___lwtoft,w
  5753  176F  00F3               	movwf	___ftpack@exp
  5754  1770  01F4               	clrf	___ftpack@sign
  5755  1771  318D  253E         	fcall	___ftpack
  5756  1773  0870               	movf	?___ftpack,w
  5757  1774  00F8               	movwf	?___lwtoft
  5758  1775  0871               	movf	?___ftpack+1,w
  5759  1776  00F9               	movwf	?___lwtoft+1
  5760  1777  0872               	movf	?___ftpack+2,w
  5761  1778  00FA               	movwf	?___lwtoft+2
  5762  1779  0008               	return
  5763  177A                     __end_of___lwtoft:	
  5764                           
  5765                           	psect	text8
  5766  0E24                     __ptext8:	
  5767 ;; *************** function ___fttol *****************
  5768 ;; Defined at:
  5769 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  f1              3    0[COMMON] float 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  lval            4    9[COMMON] unsigned long 
  5774 ;;  exp1            1   13[COMMON] unsigned char 
  5775 ;;  sign1           1    8[COMMON] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  4    0[COMMON] long 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5786 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;Total ram usage:       14 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; This function calls:
  5792 ;;		Nothing
  5793 ;; This function is called by:
  5794 ;;		_main
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           
  5799                           ;psect for function ___fttol
  5800  0E24                     ___fttol:	
  5801                           
  5802                           ;incstack = 0
  5803                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5804  0E24  0870               	movf	___fttol@f1,w
  5805  0E25  00F4               	movwf	??___fttol
  5806  0E26  0871               	movf	___fttol@f1+1,w
  5807  0E27  00F5               	movwf	??___fttol+1
  5808  0E28  0872               	movf	___fttol@f1+2,w
  5809  0E29  00F6               	movwf	??___fttol+2
  5810  0E2A  1003               	clrc
  5811  0E2B  0D75               	rlf	??___fttol+1,w
  5812  0E2C  0D76               	rlf	??___fttol+2,w
  5813  0E2D  00F7               	movwf	??___fttol+3
  5814  0E2E  0877               	movf	??___fttol+3,w
  5815  0E2F  00FD               	movwf	___fttol@exp1
  5816  0E30  087D               	movf	___fttol@exp1,w
  5817  0E31  1D03               	btfss	3,2
  5818  0E32  2E3C               	goto	l2194
  5819  0E33  3000               	movlw	0
  5820  0E34  00F3               	movwf	?___fttol+3
  5821  0E35  3000               	movlw	0
  5822  0E36  00F2               	movwf	?___fttol+2
  5823  0E37  3000               	movlw	0
  5824  0E38  00F1               	movwf	?___fttol+1
  5825  0E39  3000               	movlw	0
  5826  0E3A  00F0               	movwf	?___fttol
  5827  0E3B  0008               	return
  5828  0E3C                     l2194:	
  5829  0E3C  0870               	movf	___fttol@f1,w
  5830  0E3D  00F4               	movwf	??___fttol
  5831  0E3E  0871               	movf	___fttol@f1+1,w
  5832  0E3F  00F5               	movwf	??___fttol+1
  5833  0E40  0872               	movf	___fttol@f1+2,w
  5834  0E41  00F6               	movwf	??___fttol+2
  5835  0E42  3017               	movlw	23
  5836  0E43                     u2545:	
  5837  0E43  36F6               	lsrf	??___fttol+2,f
  5838  0E44  0CF5               	rrf	??___fttol+1,f
  5839  0E45  0CF4               	rrf	??___fttol,f
  5840  0E46  0B89               	decfsz	9,f
  5841  0E47  2E43               	goto	u2545
  5842  0E48  0874               	movf	??___fttol,w
  5843  0E49  00F7               	movwf	??___fttol+3
  5844  0E4A  0877               	movf	??___fttol+3,w
  5845  0E4B  00F8               	movwf	___fttol@sign1
  5846  0E4C  17F1               	bsf	___fttol@f1+1,7
  5847  0E4D  30FF               	movlw	255
  5848  0E4E  05F0               	andwf	___fttol@f1,f
  5849  0E4F  30FF               	movlw	255
  5850  0E50  05F1               	andwf	___fttol@f1+1,f
  5851  0E51  3000               	movlw	0
  5852  0E52  05F2               	andwf	___fttol@f1+2,f
  5853  0E53  0870               	movf	___fttol@f1,w
  5854  0E54  00F9               	movwf	___fttol@lval
  5855  0E55  0871               	movf	___fttol@f1+1,w
  5856  0E56  00FA               	movwf	___fttol@lval+1
  5857  0E57  0872               	movf	___fttol@f1+2,w
  5858  0E58  00FB               	movwf	___fttol@lval+2
  5859  0E59  01FC               	clrf	___fttol@lval+3
  5860  0E5A  308E               	movlw	142
  5861  0E5B  02FD               	subwf	___fttol@exp1,f
  5862  0E5C  1FFD               	btfss	___fttol@exp1,7
  5863  0E5D  2E7A               	goto	l2214
  5864  0E5E  087D               	movf	___fttol@exp1,w
  5865  0E5F  3A80               	xorlw	128
  5866  0E60  3E8F               	addlw	143
  5867  0E61  1803               	skipnc
  5868  0E62  2E6C               	goto	l2212
  5869  0E63  3000               	movlw	0
  5870  0E64  00F3               	movwf	?___fttol+3
  5871  0E65  3000               	movlw	0
  5872  0E66  00F2               	movwf	?___fttol+2
  5873  0E67  3000               	movlw	0
  5874  0E68  00F1               	movwf	?___fttol+1
  5875  0E69  3000               	movlw	0
  5876  0E6A  00F0               	movwf	?___fttol
  5877  0E6B  0008               	return
  5878  0E6C                     l2212:	
  5879  0E6C  3001               	movlw	1
  5880  0E6D                     u2575:	
  5881  0E6D  36FC               	lsrf	___fttol@lval+3,f
  5882  0E6E  0CFB               	rrf	___fttol@lval+2,f
  5883  0E6F  0CFA               	rrf	___fttol@lval+1,f
  5884  0E70  0CF9               	rrf	___fttol@lval,f
  5885  0E71  0B89               	decfsz	9,f
  5886  0E72  2E6D               	goto	u2575
  5887  0E73  3001               	movlw	1
  5888  0E74  00F4               	movwf	??___fttol
  5889  0E75  0874               	movf	??___fttol,w
  5890  0E76  07FD               	addwf	___fttol@exp1,f
  5891  0E77  1903               	btfsc	3,2
  5892  0E78  2E93               	goto	l2222
  5893  0E79  2E6C               	goto	l2212
  5894  0E7A                     l2214:	
  5895  0E7A  3018               	movlw	24
  5896  0E7B  027D               	subwf	___fttol@exp1,w
  5897  0E7C  1C03               	skipc
  5898  0E7D  2E90               	goto	l552
  5899  0E7E  3000               	movlw	0
  5900  0E7F  00F3               	movwf	?___fttol+3
  5901  0E80  3000               	movlw	0
  5902  0E81  00F2               	movwf	?___fttol+2
  5903  0E82  3000               	movlw	0
  5904  0E83  00F1               	movwf	?___fttol+1
  5905  0E84  3000               	movlw	0
  5906  0E85  00F0               	movwf	?___fttol
  5907  0E86  0008               	return
  5908  0E87                     l2220:	
  5909  0E87  3001               	movlw	1
  5910  0E88                     u2605:	
  5911  0E88  35F9               	lslf	___fttol@lval,f
  5912  0E89  0DFA               	rlf	___fttol@lval+1,f
  5913  0E8A  0DFB               	rlf	___fttol@lval+2,f
  5914  0E8B  0DFC               	rlf	___fttol@lval+3,f
  5915  0E8C  0B89               	decfsz	9,f
  5916  0E8D  2E88               	goto	u2605
  5917  0E8E  3001               	movlw	1
  5918  0E8F  02FD               	subwf	___fttol@exp1,f
  5919  0E90                     l552:	
  5920  0E90  087D               	movf	___fttol@exp1,w
  5921  0E91  1D03               	btfss	3,2
  5922  0E92  2E87               	goto	l2220
  5923  0E93                     l2222:	
  5924  0E93  0878               	movf	___fttol@sign1,w
  5925  0E94  1903               	btfsc	3,2
  5926  0E95  2EA1               	goto	l2226
  5927  0E96  09F9               	comf	___fttol@lval,f
  5928  0E97  09FA               	comf	___fttol@lval+1,f
  5929  0E98  09FB               	comf	___fttol@lval+2,f
  5930  0E99  09FC               	comf	___fttol@lval+3,f
  5931  0E9A  0AF9               	incf	___fttol@lval,f
  5932  0E9B  1903               	skipnz
  5933  0E9C  0AFA               	incf	___fttol@lval+1,f
  5934  0E9D  1903               	skipnz
  5935  0E9E  0AFB               	incf	___fttol@lval+2,f
  5936  0E9F  1903               	skipnz
  5937  0EA0  0AFC               	incf	___fttol@lval+3,f
  5938  0EA1                     l2226:	
  5939  0EA1  087C               	movf	___fttol@lval+3,w
  5940  0EA2  00F3               	movwf	?___fttol+3
  5941  0EA3  087B               	movf	___fttol@lval+2,w
  5942  0EA4  00F2               	movwf	?___fttol+2
  5943  0EA5  087A               	movf	___fttol@lval+1,w
  5944  0EA6  00F1               	movwf	?___fttol+1
  5945  0EA7  0879               	movf	___fttol@lval,w
  5946  0EA8  00F0               	movwf	?___fttol
  5947  0EA9  0008               	return
  5948  0EAA                     __end_of___fttol:	
  5949                           
  5950                           	psect	text9
  5951  17C2                     __ptext9:	
  5952 ;; *************** function ___ftsub *****************
  5953 ;; Defined at:
  5954 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  f2              3   45[BANK0 ] float 
  5957 ;;  f1              3   48[BANK0 ] float 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;		None
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  3   45[BANK0 ] float 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0, pclath, cstack
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5973 ;;Total ram usage:        6 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    2
  5976 ;; This function calls:
  5977 ;;		___ftadd
  5978 ;; This function is called by:
  5979 ;;		_main
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           
  5984                           ;psect for function ___ftsub
  5985  17C2                     ___ftsub:	
  5986                           
  5987                           ;incstack = 0
  5988                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5989  17C2  0020               	movlb	0	; select bank0
  5990  17C3  084F               	movf	___ftsub@f2+2,w
  5991  17C4  044E               	iorwf	___ftsub@f2+1,w
  5992  17C5  044D               	iorwf	___ftsub@f2,w
  5993  17C6  1903               	skipnz
  5994  17C7  2FCA               	goto	l2184
  5995  17C8  3080               	movlw	128
  5996  17C9  06CF               	xorwf	___ftsub@f2+2,f
  5997  17CA                     l2184:	
  5998  17CA  0850               	movf	___ftsub@f1,w
  5999  17CB  00C0               	movwf	___ftadd@f1
  6000  17CC  0851               	movf	___ftsub@f1+1,w
  6001  17CD  00C1               	movwf	___ftadd@f1+1
  6002  17CE  0852               	movf	___ftsub@f1+2,w
  6003  17CF  00C2               	movwf	___ftadd@f1+2
  6004  17D0  084D               	movf	___ftsub@f2,w
  6005  17D1  00C3               	movwf	___ftadd@f2
  6006  17D2  084E               	movf	___ftsub@f2+1,w
  6007  17D3  00C4               	movwf	___ftadd@f2+1
  6008  17D4  084F               	movf	___ftsub@f2+2,w
  6009  17D5  00C5               	movwf	___ftadd@f2+2
  6010  17D6  3181  21AF         	fcall	___ftadd
  6011  17D8  0020               	movlb	0	; select bank0
  6012  17D9  0840               	movf	?___ftadd,w
  6013  17DA  00CD               	movwf	?___ftsub
  6014  17DB  0841               	movf	?___ftadd+1,w
  6015  17DC  00CE               	movwf	?___ftsub+1
  6016  17DD  0842               	movf	?___ftadd+2,w
  6017  17DE  00CF               	movwf	?___ftsub+2
  6018  17DF  0008               	return
  6019  17E0                     __end_of___ftsub:	
  6020                           
  6021                           	psect	text10
  6022  01AF                     __ptext10:	
  6023 ;; *************** function ___ftadd *****************
  6024 ;; Defined at:
  6025 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  f1              3   32[BANK0 ] float 
  6028 ;;  f2              3   35[BANK0 ] float 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  exp1            1   44[BANK0 ] unsigned char 
  6031 ;;  exp2            1   43[BANK0 ] unsigned char 
  6032 ;;  sign            1   42[BANK0 ] unsigned char 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  3   32[BANK0 ] float 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, pclath, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6042 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6045 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;Total ram usage:       13 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    1
  6049 ;; This function calls:
  6050 ;;		___ftpack
  6051 ;; This function is called by:
  6052 ;;		_main
  6053 ;;		___ftsub
  6054 ;;		_log
  6055 ;;		_eval_poly
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           
  6060                           ;psect for function ___ftadd
  6061  01AF                     ___ftadd:	
  6062                           
  6063                           ;incstack = 0
  6064                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6065  01AF  0020               	movlb	0	; select bank0
  6066  01B0  0840               	movf	___ftadd@f1,w
  6067  01B1  00C6               	movwf	??___ftadd
  6068  01B2  0841               	movf	___ftadd@f1+1,w
  6069  01B3  00C7               	movwf	??___ftadd+1
  6070  01B4  0842               	movf	___ftadd@f1+2,w
  6071  01B5  00C8               	movwf	??___ftadd+2
  6072  01B6  1003               	clrc
  6073  01B7  0D47               	rlf	??___ftadd+1,w
  6074  01B8  0D48               	rlf	??___ftadd+2,w
  6075  01B9  00C9               	movwf	??___ftadd+3
  6076  01BA  0849               	movf	??___ftadd+3,w
  6077  01BB  00CC               	movwf	___ftadd@exp1
  6078  01BC  0843               	movf	___ftadd@f2,w
  6079  01BD  00C6               	movwf	??___ftadd
  6080  01BE  0844               	movf	___ftadd@f2+1,w
  6081  01BF  00C7               	movwf	??___ftadd+1
  6082  01C0  0845               	movf	___ftadd@f2+2,w
  6083  01C1  00C8               	movwf	??___ftadd+2
  6084  01C2  1003               	clrc
  6085  01C3  0D47               	rlf	??___ftadd+1,w
  6086  01C4  0D48               	rlf	??___ftadd+2,w
  6087  01C5  00C9               	movwf	??___ftadd+3
  6088  01C6  0849               	movf	??___ftadd+3,w
  6089  01C7  00CB               	movwf	___ftadd@exp2
  6090  01C8  084C               	movf	___ftadd@exp1,w
  6091  01C9  1903               	btfsc	3,2
  6092  01CA  29D7               	goto	l1642
  6093  01CB  084B               	movf	___ftadd@exp2,w
  6094  01CC  024C               	subwf	___ftadd@exp1,w
  6095  01CD  1803               	skipnc
  6096  01CE  29DE               	goto	l1646
  6097  01CF  034C               	decf	___ftadd@exp1,w
  6098  01D0  3AFF               	xorlw	255
  6099  01D1  074B               	addwf	___ftadd@exp2,w
  6100  01D2  00C6               	movwf	??___ftadd
  6101  01D3  3019               	movlw	25
  6102  01D4  0246               	subwf	??___ftadd,w
  6103  01D5  1C03               	skipc
  6104  01D6  29DE               	goto	l1646
  6105  01D7                     l1642:	
  6106  01D7  0843               	movf	___ftadd@f2,w
  6107  01D8  00C0               	movwf	?___ftadd
  6108  01D9  0844               	movf	___ftadd@f2+1,w
  6109  01DA  00C1               	movwf	?___ftadd+1
  6110  01DB  0845               	movf	___ftadd@f2+2,w
  6111  01DC  00C2               	movwf	?___ftadd+2
  6112  01DD  0008               	return
  6113  01DE                     l1646:	
  6114  01DE  084B               	movf	___ftadd@exp2,w
  6115  01DF  1903               	btfsc	3,2
  6116  01E0  0008               	return
  6117  01E1  084C               	movf	___ftadd@exp1,w
  6118  01E2  024B               	subwf	___ftadd@exp2,w
  6119  01E3  1803               	skipnc
  6120  01E4  29ED               	goto	l1652
  6121  01E5  034B               	decf	___ftadd@exp2,w
  6122  01E6  3AFF               	xorlw	255
  6123  01E7  074C               	addwf	___ftadd@exp1,w
  6124  01E8  00C6               	movwf	??___ftadd
  6125  01E9  3019               	movlw	25
  6126  01EA  0246               	subwf	??___ftadd,w
  6127  01EB  1803               	btfsc	3,0
  6128  01EC  0008               	return
  6129  01ED                     l1652:	
  6130  01ED  3006               	movlw	6
  6131  01EE  00C6               	movwf	??___ftadd
  6132  01EF  0846               	movf	??___ftadd,w
  6133  01F0  00CA               	movwf	___ftadd@sign
  6134  01F1  1BC2               	btfsc	___ftadd@f1+2,7
  6135  01F2  17CA               	bsf	___ftadd@sign,7
  6136  01F3  1BC5               	btfsc	___ftadd@f2+2,7
  6137  01F4  174A               	bsf	___ftadd@sign,6
  6138  01F5  17C1               	bsf	___ftadd@f1+1,7
  6139  01F6  30FF               	movlw	255
  6140  01F7  05C0               	andwf	___ftadd@f1,f
  6141  01F8  30FF               	movlw	255
  6142  01F9  05C1               	andwf	___ftadd@f1+1,f
  6143  01FA  3000               	movlw	0
  6144  01FB  05C2               	andwf	___ftadd@f1+2,f
  6145  01FC  17C4               	bsf	___ftadd@f2+1,7
  6146  01FD  30FF               	movlw	255
  6147  01FE  05C3               	andwf	___ftadd@f2,f
  6148  01FF  30FF               	movlw	255
  6149  0200  05C4               	andwf	___ftadd@f2+1,f
  6150  0201  3000               	movlw	0
  6151  0202  05C5               	andwf	___ftadd@f2+2,f
  6152  0203  084B               	movf	___ftadd@exp2,w
  6153  0204  024C               	subwf	___ftadd@exp1,w
  6154  0205  1803               	skipnc
  6155  0206  2A29               	goto	l1674
  6156  0207                     l1664:	
  6157  0207  3001               	movlw	1
  6158  0208                     u1675:	
  6159  0208  35C3               	lslf	___ftadd@f2,f
  6160  0209  0DC4               	rlf	___ftadd@f2+1,f
  6161  020A  0DC5               	rlf	___ftadd@f2+2,f
  6162  020B  0B89               	decfsz	9,f
  6163  020C  2A08               	goto	u1675
  6164  020D  3001               	movlw	1
  6165  020E  02CB               	subwf	___ftadd@exp2,f
  6166  020F  084B               	movf	___ftadd@exp2,w
  6167  0210  064C               	xorwf	___ftadd@exp1,w
  6168  0211  1903               	skipnz
  6169  0212  2A24               	goto	l1672
  6170  0213  3001               	movlw	1
  6171  0214  02CA               	subwf	___ftadd@sign,f
  6172  0215  084A               	movf	___ftadd@sign,w
  6173  0216  3907               	andlw	7
  6174  0217  1903               	btfsc	3,2
  6175  0218  2A24               	goto	l1672
  6176  0219  2A07               	goto	l1664
  6177  021A                     l1670:	
  6178  021A  3001               	movlw	1
  6179  021B                     u1705:	
  6180  021B  36C2               	lsrf	___ftadd@f1+2,f
  6181  021C  0CC1               	rrf	___ftadd@f1+1,f
  6182  021D  0CC0               	rrf	___ftadd@f1,f
  6183  021E  0B89               	decfsz	9,f
  6184  021F  2A1B               	goto	u1705
  6185  0220  3001               	movlw	1
  6186  0221  00C6               	movwf	??___ftadd
  6187  0222  0846               	movf	??___ftadd,w
  6188  0223  07CC               	addwf	___ftadd@exp1,f
  6189  0224                     l1672:	
  6190  0224  084C               	movf	___ftadd@exp1,w
  6191  0225  064B               	xorwf	___ftadd@exp2,w
  6192  0226  1903               	btfsc	3,2
  6193  0227  2A4E               	goto	l492
  6194  0228  2A1A               	goto	l1670
  6195  0229                     l1674:	
  6196  0229  084C               	movf	___ftadd@exp1,w
  6197  022A  024B               	subwf	___ftadd@exp2,w
  6198  022B  1803               	skipnc
  6199  022C  2A4E               	goto	l492
  6200  022D                     l1676:	
  6201  022D  3001               	movlw	1
  6202  022E                     u1735:	
  6203  022E  35C0               	lslf	___ftadd@f1,f
  6204  022F  0DC1               	rlf	___ftadd@f1+1,f
  6205  0230  0DC2               	rlf	___ftadd@f1+2,f
  6206  0231  0B89               	decfsz	9,f
  6207  0232  2A2E               	goto	u1735
  6208  0233  3001               	movlw	1
  6209  0234  02CC               	subwf	___ftadd@exp1,f
  6210  0235  084B               	movf	___ftadd@exp2,w
  6211  0236  064C               	xorwf	___ftadd@exp1,w
  6212  0237  1903               	skipnz
  6213  0238  2A4A               	goto	l1684
  6214  0239  3001               	movlw	1
  6215  023A  02CA               	subwf	___ftadd@sign,f
  6216  023B  084A               	movf	___ftadd@sign,w
  6217  023C  3907               	andlw	7
  6218  023D  1903               	btfsc	3,2
  6219  023E  2A4A               	goto	l1684
  6220  023F  2A2D               	goto	l1676
  6221  0240                     l1682:	
  6222  0240  3001               	movlw	1
  6223  0241                     u1765:	
  6224  0241  36C5               	lsrf	___ftadd@f2+2,f
  6225  0242  0CC4               	rrf	___ftadd@f2+1,f
  6226  0243  0CC3               	rrf	___ftadd@f2,f
  6227  0244  0B89               	decfsz	9,f
  6228  0245  2A41               	goto	u1765
  6229  0246  3001               	movlw	1
  6230  0247  00C6               	movwf	??___ftadd
  6231  0248  0846               	movf	??___ftadd,w
  6232  0249  07CB               	addwf	___ftadd@exp2,f
  6233  024A                     l1684:	
  6234  024A  084C               	movf	___ftadd@exp1,w
  6235  024B  064B               	xorwf	___ftadd@exp2,w
  6236  024C  1D03               	skipz
  6237  024D  2A40               	goto	l1682
  6238  024E                     l492:	
  6239  024E  1FCA               	btfss	___ftadd@sign,7
  6240  024F  2A60               	goto	l1688
  6241  0250  30FF               	movlw	255
  6242  0251  06C0               	xorwf	___ftadd@f1,f
  6243  0252  30FF               	movlw	255
  6244  0253  06C1               	xorwf	___ftadd@f1+1,f
  6245  0254  30FF               	movlw	255
  6246  0255  06C2               	xorwf	___ftadd@f1+2,f
  6247  0256  3001               	movlw	1
  6248  0257  07C0               	addwf	___ftadd@f1,f
  6249  0258  3000               	movlw	0
  6250  0259  1803               	skipnc
  6251  025A  3001               	movlw	1
  6252  025B  07C1               	addwf	___ftadd@f1+1,f
  6253  025C  3000               	movlw	0
  6254  025D  1803               	skipnc
  6255  025E  3001               	movlw	1
  6256  025F  07C2               	addwf	___ftadd@f1+2,f
  6257  0260                     l1688:	
  6258  0260  1F4A               	btfss	___ftadd@sign,6
  6259  0261  2A72               	goto	l1692
  6260  0262  30FF               	movlw	255
  6261  0263  06C3               	xorwf	___ftadd@f2,f
  6262  0264  30FF               	movlw	255
  6263  0265  06C4               	xorwf	___ftadd@f2+1,f
  6264  0266  30FF               	movlw	255
  6265  0267  06C5               	xorwf	___ftadd@f2+2,f
  6266  0268  3001               	movlw	1
  6267  0269  07C3               	addwf	___ftadd@f2,f
  6268  026A  3000               	movlw	0
  6269  026B  1803               	skipnc
  6270  026C  3001               	movlw	1
  6271  026D  07C4               	addwf	___ftadd@f2+1,f
  6272  026E  3000               	movlw	0
  6273  026F  1803               	skipnc
  6274  0270  3001               	movlw	1
  6275  0271  07C5               	addwf	___ftadd@f2+2,f
  6276  0272                     l1692:	
  6277  0272  01CA               	clrf	___ftadd@sign
  6278  0273  0840               	movf	___ftadd@f1,w
  6279  0274  07C3               	addwf	___ftadd@f2,f
  6280  0275  0841               	movf	___ftadd@f1+1,w
  6281  0276  3DC4               	addwfc	___ftadd@f2+1,f
  6282  0277  0842               	movf	___ftadd@f1+2,w
  6283  0278  3DC5               	addwfc	___ftadd@f2+2,f
  6284  0279  1FC5               	btfss	___ftadd@f2+2,7
  6285  027A  2A8D               	goto	l1702
  6286  027B  30FF               	movlw	255
  6287  027C  06C3               	xorwf	___ftadd@f2,f
  6288  027D  30FF               	movlw	255
  6289  027E  06C4               	xorwf	___ftadd@f2+1,f
  6290  027F  30FF               	movlw	255
  6291  0280  06C5               	xorwf	___ftadd@f2+2,f
  6292  0281  3001               	movlw	1
  6293  0282  07C3               	addwf	___ftadd@f2,f
  6294  0283  3000               	movlw	0
  6295  0284  1803               	skipnc
  6296  0285  3001               	movlw	1
  6297  0286  07C4               	addwf	___ftadd@f2+1,f
  6298  0287  3000               	movlw	0
  6299  0288  1803               	skipnc
  6300  0289  3001               	movlw	1
  6301  028A  07C5               	addwf	___ftadd@f2+2,f
  6302  028B  01CA               	clrf	___ftadd@sign
  6303  028C  0ACA               	incf	___ftadd@sign,f
  6304  028D                     l1702:	
  6305  028D  0843               	movf	___ftadd@f2,w
  6306  028E  00F0               	movwf	___ftpack@arg
  6307  028F  0844               	movf	___ftadd@f2+1,w
  6308  0290  00F1               	movwf	___ftpack@arg+1
  6309  0291  0845               	movf	___ftadd@f2+2,w
  6310  0292  00F2               	movwf	___ftpack@arg+2
  6311  0293  084C               	movf	___ftadd@exp1,w
  6312  0294  00C6               	movwf	??___ftadd
  6313  0295  0846               	movf	??___ftadd,w
  6314  0296  00F3               	movwf	___ftpack@exp
  6315  0297  084A               	movf	___ftadd@sign,w
  6316  0298  00C7               	movwf	??___ftadd+1
  6317  0299  0847               	movf	??___ftadd+1,w
  6318  029A  00F4               	movwf	___ftpack@sign
  6319  029B  318D  253E         	fcall	___ftpack
  6320  029D  0870               	movf	?___ftpack,w
  6321  029E  0020               	movlb	0	; select bank0
  6322  029F  00C0               	movwf	?___ftadd
  6323  02A0  0871               	movf	?___ftpack+1,w
  6324  02A1  00C1               	movwf	?___ftadd+1
  6325  02A2  0872               	movf	?___ftpack+2,w
  6326  02A3  00C2               	movwf	?___ftadd+2
  6327  02A4  0008               	return
  6328  02A5                     __end_of___ftadd:	
  6329                           
  6330                           	psect	text11
  6331  0EAA                     __ptext11:	
  6332 ;; *************** function ___ftdiv *****************
  6333 ;; Defined at:
  6334 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  f2              3   16[BANK0 ] float 
  6337 ;;  f1              3   19[BANK0 ] float 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  f3              3   27[BANK0 ] float 
  6340 ;;  sign            1   31[BANK0 ] unsigned char 
  6341 ;;  exp             1   30[BANK0 ] unsigned char 
  6342 ;;  cntr            1   26[BANK0 ] unsigned char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  3   16[BANK0 ] float 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0, pclath, cstack
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6352 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;Total ram usage:       16 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    1
  6359 ;; This function calls:
  6360 ;;		___ftpack
  6361 ;; This function is called by:
  6362 ;;		_main
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           
  6367                           ;psect for function ___ftdiv
  6368  0EAA                     ___ftdiv:	
  6369                           
  6370                           ;incstack = 0
  6371                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6372  0EAA  0020               	movlb	0	; select bank0
  6373  0EAB  0833               	movf	___ftdiv@f1,w
  6374  0EAC  00B6               	movwf	??___ftdiv
  6375  0EAD  0834               	movf	___ftdiv@f1+1,w
  6376  0EAE  00B7               	movwf	??___ftdiv+1
  6377  0EAF  0835               	movf	___ftdiv@f1+2,w
  6378  0EB0  00B8               	movwf	??___ftdiv+2
  6379  0EB1  1003               	clrc
  6380  0EB2  0D37               	rlf	??___ftdiv+1,w
  6381  0EB3  0D38               	rlf	??___ftdiv+2,w
  6382  0EB4  00B9               	movwf	??___ftdiv+3
  6383  0EB5  0839               	movf	??___ftdiv+3,w
  6384  0EB6  00BE               	movwf	___ftdiv@exp
  6385  0EB7  083E               	movf	___ftdiv@exp,w
  6386  0EB8  1D03               	btfss	3,2
  6387  0EB9  2EC1               	goto	l2144
  6388  0EBA  3000               	movlw	0
  6389  0EBB  00B0               	movwf	?___ftdiv
  6390  0EBC  3000               	movlw	0
  6391  0EBD  00B1               	movwf	?___ftdiv+1
  6392  0EBE  3000               	movlw	0
  6393  0EBF  00B2               	movwf	?___ftdiv+2
  6394  0EC0  0008               	return
  6395  0EC1                     l2144:	
  6396  0EC1  0830               	movf	___ftdiv@f2,w
  6397  0EC2  00B6               	movwf	??___ftdiv
  6398  0EC3  0831               	movf	___ftdiv@f2+1,w
  6399  0EC4  00B7               	movwf	??___ftdiv+1
  6400  0EC5  0832               	movf	___ftdiv@f2+2,w
  6401  0EC6  00B8               	movwf	??___ftdiv+2
  6402  0EC7  1003               	clrc
  6403  0EC8  0D37               	rlf	??___ftdiv+1,w
  6404  0EC9  0D38               	rlf	??___ftdiv+2,w
  6405  0ECA  00B9               	movwf	??___ftdiv+3
  6406  0ECB  0839               	movf	??___ftdiv+3,w
  6407  0ECC  00BF               	movwf	___ftdiv@sign
  6408  0ECD  083F               	movf	___ftdiv@sign,w
  6409  0ECE  1D03               	btfss	3,2
  6410  0ECF  2ED7               	goto	l2150
  6411  0ED0  3000               	movlw	0
  6412  0ED1  00B0               	movwf	?___ftdiv
  6413  0ED2  3000               	movlw	0
  6414  0ED3  00B1               	movwf	?___ftdiv+1
  6415  0ED4  3000               	movlw	0
  6416  0ED5  00B2               	movwf	?___ftdiv+2
  6417  0ED6  0008               	return
  6418  0ED7                     l2150:	
  6419  0ED7  3000               	movlw	0
  6420  0ED8  00BB               	movwf	___ftdiv@f3
  6421  0ED9  3000               	movlw	0
  6422  0EDA  00BC               	movwf	___ftdiv@f3+1
  6423  0EDB  3000               	movlw	0
  6424  0EDC  00BD               	movwf	___ftdiv@f3+2
  6425  0EDD  3089               	movlw	137
  6426  0EDE  073F               	addwf	___ftdiv@sign,w
  6427  0EDF  00B6               	movwf	??___ftdiv
  6428  0EE0  0836               	movf	??___ftdiv,w
  6429  0EE1  02BE               	subwf	___ftdiv@exp,f
  6430  0EE2  0833               	movf	___ftdiv@f1,w
  6431  0EE3  00B6               	movwf	??___ftdiv
  6432  0EE4  0834               	movf	___ftdiv@f1+1,w
  6433  0EE5  00B7               	movwf	??___ftdiv+1
  6434  0EE6  0835               	movf	___ftdiv@f1+2,w
  6435  0EE7  00B8               	movwf	??___ftdiv+2
  6436  0EE8  3010               	movlw	16
  6437  0EE9                     u2465:	
  6438  0EE9  36B8               	lsrf	??___ftdiv+2,f
  6439  0EEA  0CB7               	rrf	??___ftdiv+1,f
  6440  0EEB  0CB6               	rrf	??___ftdiv,f
  6441  0EEC  0B89               	decfsz	9,f
  6442  0EED  2EE9               	goto	u2465
  6443  0EEE  0836               	movf	??___ftdiv,w
  6444  0EEF  00B9               	movwf	??___ftdiv+3
  6445  0EF0  0839               	movf	??___ftdiv+3,w
  6446  0EF1  00BF               	movwf	___ftdiv@sign
  6447  0EF2  0830               	movf	___ftdiv@f2,w
  6448  0EF3  00B6               	movwf	??___ftdiv
  6449  0EF4  0831               	movf	___ftdiv@f2+1,w
  6450  0EF5  00B7               	movwf	??___ftdiv+1
  6451  0EF6  0832               	movf	___ftdiv@f2+2,w
  6452  0EF7  00B8               	movwf	??___ftdiv+2
  6453  0EF8  3010               	movlw	16
  6454  0EF9                     u2475:	
  6455  0EF9  36B8               	lsrf	??___ftdiv+2,f
  6456  0EFA  0CB7               	rrf	??___ftdiv+1,f
  6457  0EFB  0CB6               	rrf	??___ftdiv,f
  6458  0EFC  0B89               	decfsz	9,f
  6459  0EFD  2EF9               	goto	u2475
  6460  0EFE  0836               	movf	??___ftdiv,w
  6461  0EFF  00B9               	movwf	??___ftdiv+3
  6462  0F00  0839               	movf	??___ftdiv+3,w
  6463  0F01  06BF               	xorwf	___ftdiv@sign,f
  6464  0F02  3080               	movlw	128
  6465  0F03  00B6               	movwf	??___ftdiv
  6466  0F04  0836               	movf	??___ftdiv,w
  6467  0F05  05BF               	andwf	___ftdiv@sign,f
  6468  0F06  17B4               	bsf	___ftdiv@f1+1,7
  6469  0F07  30FF               	movlw	255
  6470  0F08  05B3               	andwf	___ftdiv@f1,f
  6471  0F09  30FF               	movlw	255
  6472  0F0A  05B4               	andwf	___ftdiv@f1+1,f
  6473  0F0B  3000               	movlw	0
  6474  0F0C  05B5               	andwf	___ftdiv@f1+2,f
  6475  0F0D  17B1               	bsf	___ftdiv@f2+1,7
  6476  0F0E  30FF               	movlw	255
  6477  0F0F  05B0               	andwf	___ftdiv@f2,f
  6478  0F10  30FF               	movlw	255
  6479  0F11  05B1               	andwf	___ftdiv@f2+1,f
  6480  0F12  3000               	movlw	0
  6481  0F13  05B2               	andwf	___ftdiv@f2+2,f
  6482  0F14  3018               	movlw	24
  6483  0F15  00B6               	movwf	??___ftdiv
  6484  0F16  0836               	movf	??___ftdiv,w
  6485  0F17  00BA               	movwf	___ftdiv@cntr
  6486  0F18                     l2164:	
  6487  0F18  3001               	movlw	1
  6488  0F19                     u2485:	
  6489  0F19  35BB               	lslf	___ftdiv@f3,f
  6490  0F1A  0DBC               	rlf	___ftdiv@f3+1,f
  6491  0F1B  0DBD               	rlf	___ftdiv@f3+2,f
  6492  0F1C  0B89               	decfsz	9,f
  6493  0F1D  2F19               	goto	u2485
  6494  0F1E  0832               	movf	___ftdiv@f2+2,w
  6495  0F1F  0235               	subwf	___ftdiv@f1+2,w
  6496  0F20  1D03               	skipz
  6497  0F21  2F28               	goto	u2495
  6498  0F22  0831               	movf	___ftdiv@f2+1,w
  6499  0F23  0234               	subwf	___ftdiv@f1+1,w
  6500  0F24  1D03               	skipz
  6501  0F25  2F28               	goto	u2495
  6502  0F26  0830               	movf	___ftdiv@f2,w
  6503  0F27  0233               	subwf	___ftdiv@f1,w
  6504  0F28                     u2495:	
  6505  0F28  1C03               	skipc
  6506  0F29  2F31               	goto	l2172
  6507  0F2A  0830               	movf	___ftdiv@f2,w
  6508  0F2B  02B3               	subwf	___ftdiv@f1,f
  6509  0F2C  0831               	movf	___ftdiv@f2+1,w
  6510  0F2D  3BB4               	subwfb	___ftdiv@f1+1,f
  6511  0F2E  0832               	movf	___ftdiv@f2+2,w
  6512  0F2F  3BB5               	subwfb	___ftdiv@f1+2,f
  6513  0F30  143B               	bsf	___ftdiv@f3,0
  6514  0F31                     l2172:	
  6515  0F31  3001               	movlw	1
  6516  0F32                     u2505:	
  6517  0F32  35B3               	lslf	___ftdiv@f1,f
  6518  0F33  0DB4               	rlf	___ftdiv@f1+1,f
  6519  0F34  0DB5               	rlf	___ftdiv@f1+2,f
  6520  0F35  0B89               	decfsz	9,f
  6521  0F36  2F32               	goto	u2505
  6522  0F37  3001               	movlw	1
  6523  0F38  02BA               	subwf	___ftdiv@cntr,f
  6524  0F39  1D03               	btfss	3,2
  6525  0F3A  2F18               	goto	l2164
  6526  0F3B  083B               	movf	___ftdiv@f3,w
  6527  0F3C  00F0               	movwf	___ftpack@arg
  6528  0F3D  083C               	movf	___ftdiv@f3+1,w
  6529  0F3E  00F1               	movwf	___ftpack@arg+1
  6530  0F3F  083D               	movf	___ftdiv@f3+2,w
  6531  0F40  00F2               	movwf	___ftpack@arg+2
  6532  0F41  083E               	movf	___ftdiv@exp,w
  6533  0F42  00B6               	movwf	??___ftdiv
  6534  0F43  0836               	movf	??___ftdiv,w
  6535  0F44  00F3               	movwf	___ftpack@exp
  6536  0F45  083F               	movf	___ftdiv@sign,w
  6537  0F46  00B7               	movwf	??___ftdiv+1
  6538  0F47  0837               	movf	??___ftdiv+1,w
  6539  0F48  00F4               	movwf	___ftpack@sign
  6540  0F49  318D  253E         	fcall	___ftpack
  6541  0F4B  0870               	movf	?___ftpack,w
  6542  0F4C  0020               	movlb	0	; select bank0
  6543  0F4D  00B0               	movwf	?___ftdiv
  6544  0F4E  0871               	movf	?___ftpack+1,w
  6545  0F4F  00B1               	movwf	?___ftdiv+1
  6546  0F50  0872               	movf	?___ftpack+2,w
  6547  0F51  00B2               	movwf	?___ftdiv+2
  6548  0F52  0008               	return
  6549  0F53                     __end_of___ftdiv:	
  6550                           
  6551                           	psect	text12
  6552  0D3E                     __ptext12:	
  6553 ;; *************** function ___ftpack *****************
  6554 ;; Defined at:
  6555 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  arg             3    0[COMMON] unsigned um
  6558 ;;  exp             1    3[COMMON] unsigned char 
  6559 ;;  sign            1    4[COMMON] unsigned char 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  3    0[COMMON] float 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6571 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;Total ram usage:        8 bytes
  6576 ;; Hardware stack levels used:    1
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		___awtoft
  6581 ;;		___ftadd
  6582 ;;		___ftdiv
  6583 ;;		___ftmul
  6584 ;;		___lwtoft
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           
  6589                           ;psect for function ___ftpack
  6590  0D3E                     ___ftpack:	
  6591                           
  6592                           ;incstack = 0
  6593                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6594  0D3E  0873               	movf	___ftpack@exp,w
  6595  0D3F  1903               	btfsc	3,2
  6596  0D40  2D46               	goto	l1592
  6597  0D41  0872               	movf	___ftpack@arg+2,w
  6598  0D42  0471               	iorwf	___ftpack@arg+1,w
  6599  0D43  0470               	iorwf	___ftpack@arg,w
  6600  0D44  1D03               	skipz
  6601  0D45  2D57               	goto	l1598
  6602  0D46                     l1592:	
  6603  0D46  3000               	movlw	0
  6604  0D47  00F0               	movwf	?___ftpack
  6605  0D48  3000               	movlw	0
  6606  0D49  00F1               	movwf	?___ftpack+1
  6607  0D4A  3000               	movlw	0
  6608  0D4B  00F2               	movwf	?___ftpack+2
  6609  0D4C  0008               	return
  6610  0D4D                     l1596:	
  6611  0D4D  3001               	movlw	1
  6612  0D4E  00F5               	movwf	??___ftpack
  6613  0D4F  0875               	movf	??___ftpack,w
  6614  0D50  07F3               	addwf	___ftpack@exp,f
  6615  0D51  3001               	movlw	1
  6616  0D52                     u1445:	
  6617  0D52  36F2               	lsrf	___ftpack@arg+2,f
  6618  0D53  0CF1               	rrf	___ftpack@arg+1,f
  6619  0D54  0CF0               	rrf	___ftpack@arg,f
  6620  0D55  0B89               	decfsz	9,f
  6621  0D56  2D52               	goto	u1445
  6622  0D57                     l1598:	
  6623  0D57  30FE               	movlw	254
  6624  0D58  0572               	andwf	___ftpack@arg+2,w
  6625  0D59  1903               	btfsc	3,2
  6626  0D5A  2D70               	goto	l461
  6627  0D5B  2D4D               	goto	l1596
  6628  0D5C                     l1600:	
  6629  0D5C  3001               	movlw	1
  6630  0D5D  00F5               	movwf	??___ftpack
  6631  0D5E  0875               	movf	??___ftpack,w
  6632  0D5F  07F3               	addwf	___ftpack@exp,f
  6633  0D60  3001               	movlw	1
  6634  0D61  07F0               	addwf	___ftpack@arg,f
  6635  0D62  3000               	movlw	0
  6636  0D63  1803               	skipnc
  6637  0D64  3001               	movlw	1
  6638  0D65  07F1               	addwf	___ftpack@arg+1,f
  6639  0D66  3000               	movlw	0
  6640  0D67  1803               	skipnc
  6641  0D68  3001               	movlw	1
  6642  0D69  07F2               	addwf	___ftpack@arg+2,f
  6643  0D6A  3001               	movlw	1
  6644  0D6B                     u1465:	
  6645  0D6B  36F2               	lsrf	___ftpack@arg+2,f
  6646  0D6C  0CF1               	rrf	___ftpack@arg+1,f
  6647  0D6D  0CF0               	rrf	___ftpack@arg,f
  6648  0D6E  0B89               	decfsz	9,f
  6649  0D6F  2D6B               	goto	u1465
  6650  0D70                     l461:	
  6651  0D70  30FF               	movlw	255
  6652  0D71  0572               	andwf	___ftpack@arg+2,w
  6653  0D72  1903               	btfsc	3,2
  6654  0D73  2D7D               	goto	l1608
  6655  0D74  2D5C               	goto	l1600
  6656  0D75                     l1606:	
  6657  0D75  3001               	movlw	1
  6658  0D76  02F3               	subwf	___ftpack@exp,f
  6659  0D77  3001               	movlw	1
  6660  0D78                     u1485:	
  6661  0D78  35F0               	lslf	___ftpack@arg,f
  6662  0D79  0DF1               	rlf	___ftpack@arg+1,f
  6663  0D7A  0DF2               	rlf	___ftpack@arg+2,f
  6664  0D7B  0B89               	decfsz	9,f
  6665  0D7C  2D78               	goto	u1485
  6666  0D7D                     l1608:	
  6667  0D7D  1BF1               	btfsc	___ftpack@arg+1,7
  6668  0D7E  2D83               	goto	l468
  6669  0D7F  3002               	movlw	2
  6670  0D80  0273               	subwf	___ftpack@exp,w
  6671  0D81  1803               	skipnc
  6672  0D82  2D75               	goto	l1606
  6673  0D83                     l468:	
  6674  0D83  1873               	btfsc	___ftpack@exp,0
  6675  0D84  2D8B               	goto	l469
  6676  0D85  30FF               	movlw	255
  6677  0D86  05F0               	andwf	___ftpack@arg,f
  6678  0D87  307F               	movlw	127
  6679  0D88  05F1               	andwf	___ftpack@arg+1,f
  6680  0D89  30FF               	movlw	255
  6681  0D8A  05F2               	andwf	___ftpack@arg+2,f
  6682  0D8B                     l469:	
  6683  0D8B  1003               	clrc
  6684  0D8C  0CF3               	rrf	___ftpack@exp,f
  6685  0D8D  0873               	movf	___ftpack@exp,w
  6686  0D8E  00F5               	movwf	??___ftpack
  6687  0D8F  01F6               	clrf	??___ftpack+1
  6688  0D90  01F7               	clrf	??___ftpack+2
  6689  0D91  3010               	movlw	16
  6690  0D92                     u1525:	
  6691  0D92  35F5               	lslf	??___ftpack,f
  6692  0D93  0DF6               	rlf	??___ftpack+1,f
  6693  0D94  0DF7               	rlf	??___ftpack+2,f
  6694  0D95  0B89               	decfsz	9,f
  6695  0D96  2D92               	goto	u1525
  6696  0D97  0875               	movf	??___ftpack,w
  6697  0D98  04F0               	iorwf	___ftpack@arg,f
  6698  0D99  0876               	movf	??___ftpack+1,w
  6699  0D9A  04F1               	iorwf	___ftpack@arg+1,f
  6700  0D9B  0877               	movf	??___ftpack+2,w
  6701  0D9C  04F2               	iorwf	___ftpack@arg+2,f
  6702  0D9D  0874               	movf	___ftpack@sign,w
  6703  0D9E  1903               	btfsc	3,2
  6704  0D9F  0008               	return
  6705  0DA0  17F2               	bsf	___ftpack@arg+2,7
  6706  0DA1  0008               	return
  6707  0DA2                     __end_of___ftpack:	
  6708                           
  6709                           	psect	text13
  6710  0DA2                     __ptext13:	
  6711 ;; *************** function ___aldiv *****************
  6712 ;; Defined at:
  6713 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  divisor         4    0[COMMON] long 
  6716 ;;  dividend        4    4[COMMON] long 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  quotient        4    2[BANK0 ] long 
  6719 ;;  sign            1    1[BANK0 ] unsigned char 
  6720 ;;  counter         1    0[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  4    0[COMMON] long 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6730 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6733 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6734 ;;Total ram usage:       15 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_main
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function ___aldiv
  6745  0DA2                     ___aldiv:	
  6746                           
  6747                           ;incstack = 0
  6748                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  6749  0DA2  0020               	movlb	0	; select bank0
  6750  0DA3  01A1               	clrf	___aldiv@sign
  6751  0DA4  1FF3               	btfss	___aldiv@divisor+3,7
  6752  0DA5  2DB3               	goto	l355
  6753  0DA6  09F0               	comf	___aldiv@divisor,f
  6754  0DA7  09F1               	comf	___aldiv@divisor+1,f
  6755  0DA8  09F2               	comf	___aldiv@divisor+2,f
  6756  0DA9  09F3               	comf	___aldiv@divisor+3,f
  6757  0DAA  0AF0               	incf	___aldiv@divisor,f
  6758  0DAB  1903               	skipnz
  6759  0DAC  0AF1               	incf	___aldiv@divisor+1,f
  6760  0DAD  1903               	skipnz
  6761  0DAE  0AF2               	incf	___aldiv@divisor+2,f
  6762  0DAF  1903               	skipnz
  6763  0DB0  0AF3               	incf	___aldiv@divisor+3,f
  6764  0DB1  01A1               	clrf	___aldiv@sign
  6765  0DB2  0AA1               	incf	___aldiv@sign,f
  6766  0DB3                     l355:	
  6767  0DB3  1FF7               	btfss	___aldiv@dividend+3,7
  6768  0DB4  2DC4               	goto	l2108
  6769  0DB5  09F4               	comf	___aldiv@dividend,f
  6770  0DB6  09F5               	comf	___aldiv@dividend+1,f
  6771  0DB7  09F6               	comf	___aldiv@dividend+2,f
  6772  0DB8  09F7               	comf	___aldiv@dividend+3,f
  6773  0DB9  0AF4               	incf	___aldiv@dividend,f
  6774  0DBA  1903               	skipnz
  6775  0DBB  0AF5               	incf	___aldiv@dividend+1,f
  6776  0DBC  1903               	skipnz
  6777  0DBD  0AF6               	incf	___aldiv@dividend+2,f
  6778  0DBE  1903               	skipnz
  6779  0DBF  0AF7               	incf	___aldiv@dividend+3,f
  6780  0DC0  3001               	movlw	1
  6781  0DC1  00F8               	movwf	??___aldiv
  6782  0DC2  0878               	movf	??___aldiv,w
  6783  0DC3  06A1               	xorwf	___aldiv@sign,f
  6784  0DC4                     l2108:	
  6785  0DC4  3000               	movlw	0
  6786  0DC5  00A5               	movwf	___aldiv@quotient+3
  6787  0DC6  3000               	movlw	0
  6788  0DC7  00A4               	movwf	___aldiv@quotient+2
  6789  0DC8  3000               	movlw	0
  6790  0DC9  00A3               	movwf	___aldiv@quotient+1
  6791  0DCA  3000               	movlw	0
  6792  0DCB  00A2               	movwf	___aldiv@quotient
  6793  0DCC  0873               	movf	___aldiv@divisor+3,w
  6794  0DCD  0472               	iorwf	___aldiv@divisor+2,w
  6795  0DCE  0471               	iorwf	___aldiv@divisor+1,w
  6796  0DCF  0470               	iorwf	___aldiv@divisor,w
  6797  0DD0  1903               	skipnz
  6798  0DD1  2E0D               	goto	l2130
  6799  0DD2  01A0               	clrf	___aldiv@counter
  6800  0DD3  0AA0               	incf	___aldiv@counter,f
  6801  0DD4                     l2116:	
  6802  0DD4  1BF3               	btfsc	___aldiv@divisor+3,7
  6803  0DD5  2DE2               	goto	l2118
  6804  0DD6  3001               	movlw	1
  6805  0DD7                     u2375:	
  6806  0DD7  35F0               	lslf	___aldiv@divisor,f
  6807  0DD8  0DF1               	rlf	___aldiv@divisor+1,f
  6808  0DD9  0DF2               	rlf	___aldiv@divisor+2,f
  6809  0DDA  0DF3               	rlf	___aldiv@divisor+3,f
  6810  0DDB  0B89               	decfsz	9,f
  6811  0DDC  2DD7               	goto	u2375
  6812  0DDD  3001               	movlw	1
  6813  0DDE  00F8               	movwf	??___aldiv
  6814  0DDF  0878               	movf	??___aldiv,w
  6815  0DE0  07A0               	addwf	___aldiv@counter,f
  6816  0DE1  2DD4               	goto	l2116
  6817  0DE2                     l2118:	
  6818  0DE2  3001               	movlw	1
  6819  0DE3                     u2395:	
  6820  0DE3  35A2               	lslf	___aldiv@quotient,f
  6821  0DE4  0DA3               	rlf	___aldiv@quotient+1,f
  6822  0DE5  0DA4               	rlf	___aldiv@quotient+2,f
  6823  0DE6  0DA5               	rlf	___aldiv@quotient+3,f
  6824  0DE7  0B89               	decfsz	9,f
  6825  0DE8  2DE3               	goto	u2395
  6826  0DE9  0873               	movf	___aldiv@divisor+3,w
  6827  0DEA  0277               	subwf	___aldiv@dividend+3,w
  6828  0DEB  1D03               	skipz
  6829  0DEC  2DF7               	goto	u2405
  6830  0DED  0872               	movf	___aldiv@divisor+2,w
  6831  0DEE  0276               	subwf	___aldiv@dividend+2,w
  6832  0DEF  1D03               	skipz
  6833  0DF0  2DF7               	goto	u2405
  6834  0DF1  0871               	movf	___aldiv@divisor+1,w
  6835  0DF2  0275               	subwf	___aldiv@dividend+1,w
  6836  0DF3  1D03               	skipz
  6837  0DF4  2DF7               	goto	u2405
  6838  0DF5  0870               	movf	___aldiv@divisor,w
  6839  0DF6  0274               	subwf	___aldiv@dividend,w
  6840  0DF7                     u2405:	
  6841  0DF7  1C03               	skipc
  6842  0DF8  2E02               	goto	l2126
  6843  0DF9  0870               	movf	___aldiv@divisor,w
  6844  0DFA  02F4               	subwf	___aldiv@dividend,f
  6845  0DFB  0871               	movf	___aldiv@divisor+1,w
  6846  0DFC  3BF5               	subwfb	___aldiv@dividend+1,f
  6847  0DFD  0872               	movf	___aldiv@divisor+2,w
  6848  0DFE  3BF6               	subwfb	___aldiv@dividend+2,f
  6849  0DFF  0873               	movf	___aldiv@divisor+3,w
  6850  0E00  3BF7               	subwfb	___aldiv@dividend+3,f
  6851  0E01  1422               	bsf	___aldiv@quotient,0
  6852  0E02                     l2126:	
  6853  0E02  3001               	movlw	1
  6854  0E03                     u2415:	
  6855  0E03  36F3               	lsrf	___aldiv@divisor+3,f
  6856  0E04  0CF2               	rrf	___aldiv@divisor+2,f
  6857  0E05  0CF1               	rrf	___aldiv@divisor+1,f
  6858  0E06  0CF0               	rrf	___aldiv@divisor,f
  6859  0E07  0B89               	decfsz	9,f
  6860  0E08  2E03               	goto	u2415
  6861  0E09  3001               	movlw	1
  6862  0E0A  02A0               	subwf	___aldiv@counter,f
  6863  0E0B  1D03               	btfss	3,2
  6864  0E0C  2DE2               	goto	l2118
  6865  0E0D                     l2130:	
  6866  0E0D  0821               	movf	___aldiv@sign,w
  6867  0E0E  1903               	btfsc	3,2
  6868  0E0F  2E1B               	goto	l2134
  6869  0E10  09A2               	comf	___aldiv@quotient,f
  6870  0E11  09A3               	comf	___aldiv@quotient+1,f
  6871  0E12  09A4               	comf	___aldiv@quotient+2,f
  6872  0E13  09A5               	comf	___aldiv@quotient+3,f
  6873  0E14  0AA2               	incf	___aldiv@quotient,f
  6874  0E15  1903               	skipnz
  6875  0E16  0AA3               	incf	___aldiv@quotient+1,f
  6876  0E17  1903               	skipnz
  6877  0E18  0AA4               	incf	___aldiv@quotient+2,f
  6878  0E19  1903               	skipnz
  6879  0E1A  0AA5               	incf	___aldiv@quotient+3,f
  6880  0E1B                     l2134:	
  6881  0E1B  0825               	movf	___aldiv@quotient+3,w
  6882  0E1C  00F3               	movwf	?___aldiv+3
  6883  0E1D  0824               	movf	___aldiv@quotient+2,w
  6884  0E1E  00F2               	movwf	?___aldiv+2
  6885  0E1F  0823               	movf	___aldiv@quotient+1,w
  6886  0E20  00F1               	movwf	?___aldiv+1
  6887  0E21  0822               	movf	___aldiv@quotient,w
  6888  0E22  00F0               	movwf	?___aldiv
  6889  0E23  0008               	return
  6890  0E24                     __end_of___aldiv:	
  6891                           
  6892                           	psect	text14
  6893  0B09                     __ptext14:	
  6894 ;; *************** function _SYSTEM_Initialize *****************
  6895 ;; Defined at:
  6896 ;;		line 37 in file "system.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0, pclath, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:        2 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    3
  6917 ;; This function calls:
  6918 ;;		_ADCC_Initialize
  6919 ;;		_LCDClear
  6920 ;;		_LCDInit
  6921 ;;		_OSCILLATOR_Initialize
  6922 ;; This function is called by:
  6923 ;;		_main
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           
  6928                           ;psect for function _SYSTEM_Initialize
  6929  0B09                     _SYSTEM_Initialize:	
  6930                           
  6931                           ;system.c: 39: LATA = 0x20;
  6932                           
  6933                           ;incstack = 0
  6934                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6935  0B09  3020               	movlw	32
  6936  0B0A  0020               	movlb	0	; select bank0
  6937  0B0B  0096               	movwf	22	;volatile
  6938                           
  6939                           ;system.c: 40: LATB = 0x04;
  6940  0B0C  3004               	movlw	4
  6941  0B0D  0097               	movwf	23	;volatile
  6942                           
  6943                           ;system.c: 41: LATC = 0x80;
  6944  0B0E  3080               	movlw	128
  6945  0B0F  0098               	movwf	24	;volatile
  6946                           
  6947                           ;system.c: 43: WPUA = 0x00;
  6948  0B10  003E               	movlb	30	; select bank30
  6949  0B11  01B9               	clrf	57	;volatile
  6950                           
  6951                           ;system.c: 44: WPUB = 0x00;
  6952  0B12  01C4               	clrf	68	;volatile
  6953                           
  6954                           ;system.c: 45: WPUC = 0x00;
  6955  0B13  01CF               	clrf	79	;volatile
  6956                           
  6957                           ;system.c: 46: WPUE = 0x8;
  6958  0B14  3008               	movlw	8
  6959  0B15  00E5               	movwf	101	;volatile
  6960                           
  6961                           ;system.c: 48: TRISA = 0x00;
  6962  0B16  0020               	movlb	0	; select bank0
  6963  0B17  0191               	clrf	17	;volatile
  6964                           
  6965                           ;system.c: 49: TRISB = 0x02;
  6966  0B18  3002               	movlw	2
  6967  0B19  0092               	movwf	18	;volatile
  6968                           
  6969                           ;system.c: 50: TRISC = 0x40;
  6970  0B1A  3040               	movlw	64
  6971  0B1B  0093               	movwf	19	;volatile
  6972                           
  6973                           ;system.c: 52: ANSELA = 0x00;
  6974  0B1C  003E               	movlb	30	; select bank30
  6975  0B1D  01B8               	clrf	56	;volatile
  6976                           
  6977                           ;system.c: 53: ANSELB = 0x02;
  6978  0B1E  3002               	movlw	2
  6979  0B1F  00C3               	movwf	67	;volatile
  6980                           
  6981                           ;system.c: 54: ANSELC = 0x40;
  6982  0B20  3040               	movlw	64
  6983  0B21  00CE               	movwf	78	;volatile
  6984                           
  6985                           ;system.c: 56: OSCILLATOR_Initialize();
  6986  0B22  3197  2732  318B   	fcall	_OSCILLATOR_Initialize
  6987                           
  6988                           ;system.c: 57: FVRCON = 0x00;
  6989  0B25  0032               	movlb	18	; select bank18
  6990  0B26  018C               	clrf	12	;volatile
  6991                           
  6992                           ;system.c: 58: ADCC_Initialize();
  6993  0B27  3197  278E  318B   	fcall	_ADCC_Initialize
  6994                           
  6995                           ;system.c: 59: LCDInit();
  6996  0B2A  318B  2343  318B   	fcall	_LCDInit
  6997                           
  6998                           ;system.c: 60: _delay((unsigned long)((200)*(1000000/4000.0)));
  6999  0B2D  3041               	movlw	65
  7000  0B2E  00FC               	movwf	??_SYSTEM_Initialize+1
  7001  0B2F  30EE               	movlw	238
  7002  0B30  00FB               	movwf	??_SYSTEM_Initialize
  7003  0B31                     u2767:	
  7004  0B31  0BFB               	decfsz	??_SYSTEM_Initialize,f
  7005  0B32  2B31               	goto	u2767
  7006  0B33  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  7007  0B34  2B31               	goto	u2767
  7008  0B35  0000               	nop
  7009                           
  7010                           ;system.c: 61: LCDClear();
  7011  0B36  318A  22E3  318B   	fcall	_LCDClear
  7012                           
  7013                           ;system.c: 62: _delay((unsigned long)((100)*(1000000/4000.0)));
  7014  0B39  3021               	movlw	33
  7015  0B3A  00FC               	movwf	??_SYSTEM_Initialize+1
  7016  0B3B  3076               	movlw	118
  7017  0B3C  00FB               	movwf	??_SYSTEM_Initialize
  7018  0B3D                     u2777:	
  7019  0B3D  0BFB               	decfsz	??_SYSTEM_Initialize,f
  7020  0B3E  2B3D               	goto	u2777
  7021  0B3F  0BFC               	decfsz	??_SYSTEM_Initialize+1,f
  7022  0B40  2B3D               	goto	u2777
  7023  0B41  0000               	nop
  7024  0B42  0008               	return
  7025  0B43                     __end_of_SYSTEM_Initialize:	
  7026                           
  7027                           	psect	text15
  7028  1732                     __ptext15:	
  7029 ;; *************** function _OSCILLATOR_Initialize *****************
  7030 ;; Defined at:
  7031 ;;		line 65 in file "system.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;Total ram usage:        0 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_SYSTEM_Initialize
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           
  7059                           ;psect for function _OSCILLATOR_Initialize
  7060  1732                     _OSCILLATOR_Initialize:	
  7061                           
  7062                           ;system.c: 67: OSCCON1 = 0x60;
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7066  1732  3060               	movlw	96
  7067  1733  0031               	movlb	17	; select bank17
  7068  1734  008D               	movwf	13	;volatile
  7069                           
  7070                           ;system.c: 68: OSCCON3 = 0x00;
  7071  1735  018F               	clrf	15	;volatile
  7072                           
  7073                           ;system.c: 69: OSCEN = 0x00;
  7074  1736  0191               	clrf	17	;volatile
  7075                           
  7076                           ;system.c: 70: OSCFRQ = 0x00;
  7077  1737  0193               	clrf	19	;volatile
  7078                           
  7079                           ;system.c: 71: OSCTUNE = 0x00;
  7080  1738  0192               	clrf	18	;volatile
  7081  1739  0008               	return
  7082  173A                     __end_of_OSCILLATOR_Initialize:	
  7083                           
  7084                           	psect	text16
  7085  0B43                     __ptext16:	
  7086 ;; *************** function _LCDInit *****************
  7087 ;; Defined at:
  7088 ;;		line 247 in file "lcd.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;		None
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;		None
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2, status,0, pclath, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;Total ram usage:        1 bytes
  7107 ;; Hardware stack levels used:    1
  7108 ;; Hardware stack levels required when called:    1
  7109 ;; This function calls:
  7110 ;;		_LCDWrite
  7111 ;; This function is called by:
  7112 ;;		_SYSTEM_Initialize
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function _LCDInit
  7118  0B43                     _LCDInit:	
  7119                           
  7120                           ;lcd.c: 249: TRISAbits.TRISA0 = 0;
  7121                           
  7122                           ;incstack = 0
  7123                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  7124  0B43  0020               	movlb	0	; select bank0
  7125  0B44  1011               	bcf	17,0	;volatile
  7126                           
  7127                           ;lcd.c: 250: TRISAbits.TRISA1 = 0;
  7128  0B45  1091               	bcf	17,1	;volatile
  7129                           
  7130                           ;lcd.c: 251: TRISAbits.TRISA2 = 0;
  7131  0B46  1111               	bcf	17,2	;volatile
  7132                           
  7133                           ;lcd.c: 252: TRISAbits.TRISA3 = 0;
  7134  0B47  1191               	bcf	17,3	;volatile
  7135                           
  7136                           ;lcd.c: 253: TRISAbits.TRISA4 = 0;
  7137  0B48  1211               	bcf	17,4	;volatile
  7138                           
  7139                           ;lcd.c: 254: LATAbits.LATA3 = 0;
  7140  0B49  1196               	bcf	22,3	;volatile
  7141                           
  7142                           ;lcd.c: 255: LATAbits.LATA4 = 0;
  7143  0B4A  1216               	bcf	22,4	;volatile
  7144                           
  7145                           ;lcd.c: 256: LATAbits.LATA2 = 0;
  7146  0B4B  1116               	bcf	22,2	;volatile
  7147                           
  7148                           ;lcd.c: 257: LATAbits.LATA0 = 0;
  7149  0B4C  1016               	bcf	22,0	;volatile
  7150                           
  7151                           ;lcd.c: 259: LATAbits.LATA0 = 1;
  7152  0B4D  1416               	bsf	22,0	;volatile
  7153                           
  7154                           ;lcd.c: 261: LCDWrite(0, 0x21);
  7155  0B4E  3021               	movlw	33
  7156  0B4F  00F5               	movwf	??_LCDInit
  7157  0B50  0875               	movf	??_LCDInit,w
  7158  0B51  00F0               	movwf	LCDWrite@data
  7159  0B52  3000               	movlw	0
  7160  0B53  318A  22BE  318B   	fcall	_LCDWrite
  7161                           
  7162                           ;lcd.c: 268: LCDWrite(0, 0xBE);
  7163  0B56  30BE               	movlw	190
  7164  0B57  00F5               	movwf	??_LCDInit
  7165  0B58  0875               	movf	??_LCDInit,w
  7166  0B59  00F0               	movwf	LCDWrite@data
  7167  0B5A  3000               	movlw	0
  7168  0B5B  318A  22BE  318B   	fcall	_LCDWrite
  7169                           
  7170                           ;lcd.c: 270: LCDWrite(0, 0x04);
  7171  0B5E  3004               	movlw	4
  7172  0B5F  00F5               	movwf	??_LCDInit
  7173  0B60  0875               	movf	??_LCDInit,w
  7174  0B61  00F0               	movwf	LCDWrite@data
  7175  0B62  3000               	movlw	0
  7176  0B63  318A  22BE  318B   	fcall	_LCDWrite
  7177                           
  7178                           ;lcd.c: 272: LCDWrite(0, 0x14);
  7179  0B66  3014               	movlw	20
  7180  0B67  00F5               	movwf	??_LCDInit
  7181  0B68  0875               	movf	??_LCDInit,w
  7182  0B69  00F0               	movwf	LCDWrite@data
  7183  0B6A  3000               	movlw	0
  7184  0B6B  318A  22BE  318B   	fcall	_LCDWrite
  7185                           
  7186                           ;lcd.c: 274: LCDWrite(0, 0x20);
  7187  0B6E  3020               	movlw	32
  7188  0B6F  00F5               	movwf	??_LCDInit
  7189  0B70  0875               	movf	??_LCDInit,w
  7190  0B71  00F0               	movwf	LCDWrite@data
  7191  0B72  3000               	movlw	0
  7192  0B73  318A  22BE  318B   	fcall	_LCDWrite
  7193                           
  7194                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  7195  0B76  300C               	movlw	12
  7196  0B77  00F5               	movwf	??_LCDInit
  7197  0B78  0875               	movf	??_LCDInit,w
  7198  0B79  00F0               	movwf	LCDWrite@data
  7199  0B7A  3000               	movlw	0
  7200  0B7B  318A  22BE         	fcall	_LCDWrite
  7201  0B7D  0008               	return
  7202  0B7E                     __end_of_LCDInit:	
  7203                           
  7204                           	psect	text17
  7205  0AE3                     __ptext17:	
  7206 ;; *************** function _LCDClear *****************
  7207 ;; Defined at:
  7208 ;;		line 182 in file "lcd.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;		None
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;  index           2    9[COMMON] int 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		wreg, status,2, status,0, pclath, cstack
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7226 ;;Total ram usage:        3 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    2
  7229 ;; This function calls:
  7230 ;;		_LCDWrite
  7231 ;;		_gotoXY
  7232 ;; This function is called by:
  7233 ;;		_SYSTEM_Initialize
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           
  7238                           ;psect for function _LCDClear
  7239  0AE3                     _LCDClear:	
  7240                           
  7241                           ;lcd.c: 184: int index;
  7242                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  7243                           
  7244                           ;incstack = 0
  7245                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  7246  0AE3  01F9               	clrf	LCDClear@index
  7247  0AE4  01FA               	clrf	LCDClear@index+1
  7248  0AE5  087A               	movf	LCDClear@index+1,w
  7249  0AE6  3A80               	xorlw	128
  7250  0AE7  00F8               	movwf	??_LCDClear
  7251  0AE8  3081               	movlw	129
  7252  0AE9  0278               	subwf	??_LCDClear,w
  7253  0AEA  1D03               	skipz
  7254  0AEB  2AEE               	goto	u1935
  7255  0AEC  30F8               	movlw	248
  7256  0AED  0279               	subwf	LCDClear@index,w
  7257  0AEE                     u1935:	
  7258  0AEE  1803               	btfsc	3,0
  7259  0AEF  2B04               	goto	l1812
  7260  0AF0                     l1806:	
  7261                           
  7262                           ;lcd.c: 186: LCDWrite(1, 0x00);
  7263  0AF0  01F0               	clrf	LCDWrite@data
  7264  0AF1  3001               	movlw	1
  7265  0AF2  318A  22BE  318A   	fcall	_LCDWrite
  7266  0AF5  3001               	movlw	1
  7267  0AF6  07F9               	addwf	LCDClear@index,f
  7268  0AF7  3000               	movlw	0
  7269  0AF8  3DFA               	addwfc	LCDClear@index+1,f
  7270  0AF9  087A               	movf	LCDClear@index+1,w
  7271  0AFA  3A80               	xorlw	128
  7272  0AFB  00F8               	movwf	??_LCDClear
  7273  0AFC  3081               	movlw	129
  7274  0AFD  0278               	subwf	??_LCDClear,w
  7275  0AFE  1D03               	skipz
  7276  0AFF  2B02               	goto	u1945
  7277  0B00  30F8               	movlw	248
  7278  0B01  0279               	subwf	LCDClear@index,w
  7279  0B02                     u1945:	
  7280  0B02  1C03               	skipc
  7281  0B03  2AF0               	goto	l1806
  7282  0B04                     l1812:	
  7283                           
  7284                           ;lcd.c: 187: gotoXY(0, 0);
  7285  0B04  01F5               	clrf	gotoXY@y
  7286  0B05  3000               	movlw	0
  7287  0B06  3197  2754         	fcall	_gotoXY
  7288  0B08  0008               	return
  7289  0B09                     __end_of_LCDClear:	
  7290                           
  7291                           	psect	text18
  7292  178E                     __ptext18:	
  7293 ;; *************** function _ADCC_Initialize *****************
  7294 ;; Defined at:
  7295 ;;		line 5 in file "adcc.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;Total ram usage:        0 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_SYSTEM_Initialize
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _ADCC_Initialize
  7324  178E                     _ADCC_Initialize:	
  7325                           
  7326                           ;adcc.c: 8: ADCON1 = 0x00;
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7330  178E  0021               	movlb	1	; select bank1
  7331  178F  0194               	clrf	20	;volatile
  7332                           
  7333                           ;adcc.c: 10: ADCON2 = 0x00;
  7334  1790  0195               	clrf	21	;volatile
  7335                           
  7336                           ;adcc.c: 12: ADCON3 = 0x00;
  7337  1791  0196               	clrf	22	;volatile
  7338                           
  7339                           ;adcc.c: 14: ADACT = 0x00;
  7340  1792  0199               	clrf	25	;volatile
  7341                           
  7342                           ;adcc.c: 16: ADSTAT = 0x00;
  7343  1793  0197               	clrf	23	;volatile
  7344                           
  7345                           ;adcc.c: 18: ADCLK = 0x0F;
  7346  1794  300F               	movlw	15
  7347  1795  0098               	movwf	24	;volatile
  7348                           
  7349                           ;adcc.c: 21: ADREF = 0x00;
  7350  1796  019A               	clrf	26	;volatile
  7351                           
  7352                           ;adcc.c: 23: ADCAP = 0x00;
  7353  1797  019B               	clrf	27	;volatile
  7354                           
  7355                           ;adcc.c: 25: ADPRE = 0x00;
  7356  1798  019C               	clrf	28	;volatile
  7357                           
  7358                           ;adcc.c: 27: ADACQ = 0x00;
  7359  1799  019D               	clrf	29	;volatile
  7360                           
  7361                           ;adcc.c: 29: ADPCH = 0x00;
  7362  179A  019E               	clrf	30	;volatile
  7363                           
  7364                           ;adcc.c: 31: ADRPT = 0x00;
  7365  179B  0022               	movlb	2	; select bank2
  7366  179C  018D               	clrf	13	;volatile
  7367                           
  7368                           ;adcc.c: 33: ADLTHL = 0x00;
  7369  179D  018E               	clrf	14	;volatile
  7370                           
  7371                           ;adcc.c: 35: ADLTHH = 0x00;
  7372  179E  018F               	clrf	15	;volatile
  7373                           
  7374                           ;adcc.c: 37: ADUTHL = 0x00;
  7375  179F  0190               	clrf	16	;volatile
  7376                           
  7377                           ;adcc.c: 39: ADUTHH = 0x00;
  7378  17A0  0191               	clrf	17	;volatile
  7379                           
  7380                           ;adcc.c: 41: ADSTPTL = 0x00;
  7381  17A1  0192               	clrf	18	;volatile
  7382                           
  7383                           ;adcc.c: 43: ADSTPTH = 0x00;
  7384  17A2  0193               	clrf	19	;volatile
  7385                           
  7386                           ;adcc.c: 46: ADCON0 = 0x84;
  7387  17A3  3084               	movlw	132
  7388  17A4  0021               	movlb	1	; select bank1
  7389  17A5  0093               	movwf	19	;volatile
  7390  17A6  0008               	return
  7391  17A7                     __end_of_ADCC_Initialize:	
  7392                           
  7393                           	psect	text19
  7394  177A                     __ptext19:	
  7395 ;; *************** function _LCDWriteString *****************
  7396 ;; Defined at:
  7397 ;;		line 176 in file "lcd.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  characters      2   12[COMMON] PTR const unsigned char 
  7400 ;;		 -> STR_2(15), STR_1(15), 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;		None
  7403 ;; Return value:  Size  Location     Type
  7404 ;;                  1    wreg      void 
  7405 ;; Registers used:
  7406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7407 ;; Tracked objects:
  7408 ;;		On entry : 0/0
  7409 ;;		On exit  : 0/0
  7410 ;;		Unchanged: 0/0
  7411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;Total ram usage:        3 bytes
  7417 ;; Hardware stack levels used:    1
  7418 ;; Hardware stack levels required when called:    2
  7419 ;; This function calls:
  7420 ;;		_LCDWriteCharacter
  7421 ;; This function is called by:
  7422 ;;		_main
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           
  7427                           ;psect for function _LCDWriteString
  7428  177A                     _LCDWriteString:	
  7429  177A                     l2024:	
  7430                           ;lcd.c: 178: while (*characters)
  7431                           
  7432                           ;incstack = 0
  7433                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7434                           
  7435  177A  087C               	movf	LCDWriteString@characters,w
  7436  177B  0084               	movwf	4
  7437  177C  087D               	movf	LCDWriteString@characters+1,w
  7438  177D  0085               	movwf	5
  7439  177E  0012               	moviw fsr0++
  7440  177F  1903               	btfsc	3,2
  7441  1780  0008               	return
  7442                           
  7443                           ;lcd.c: 179: LCDWriteCharacter(*characters++);
  7444  1781  087C               	movf	LCDWriteString@characters,w
  7445  1782  0084               	movwf	4
  7446  1783  087D               	movf	LCDWriteString@characters+1,w
  7447  1784  0085               	movwf	5
  7448  1785  0800               	movf	0,w	;code access
  7449  1786  318C  248A  3197   	fcall	_LCDWriteCharacter
  7450  1789  3001               	movlw	1
  7451  178A  07FC               	addwf	LCDWriteString@characters,f
  7452  178B  3000               	movlw	0
  7453  178C  3DFD               	addwfc	LCDWriteString@characters+1,f
  7454  178D  2F7A               	goto	l2024
  7455  178E                     __end_of_LCDWriteString:	
  7456                           
  7457                           	psect	text20
  7458  00E4                     __ptext20:	
  7459 ;; *************** function _LCDWriteInt *****************
  7460 ;; Defined at:
  7461 ;;		line 190 in file "lcd.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  value           2    0[BANK0 ] int 
  7464 ;;  fieldLength     1    2[BANK0 ] char 
  7465 ;;  numPlaces       1    3[BANK0 ] char 
  7466 ;;  sign            1    4[BANK0 ] char 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  str             5   10[BANK0 ] unsigned char [5]
  7469 ;;  i               2   17[BANK0 ] int 
  7470 ;;  j               2   15[BANK0 ] int 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7480 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7483 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7484 ;;Total ram usage:       19 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:    2
  7487 ;; This function calls:
  7488 ;;		_LCDWriteCharacter
  7489 ;;		___awdiv
  7490 ;;		___awmod
  7491 ;; This function is called by:
  7492 ;;		_main
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           
  7497                           ;psect for function _LCDWriteInt
  7498  00E4                     _LCDWriteInt:	
  7499                           
  7500                           ;lcd.c: 192: char str[5]={0,0,0,0,0};
  7501                           
  7502                           ;incstack = 0
  7503                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7504  00E4  3067               	movlw	low LCDWriteInt@F13664
  7505  00E5  0086               	movwf	6
  7506  00E6  3000               	movlw	high LCDWriteInt@F13664
  7507  00E7  0087               	movwf	7
  7508  00E8  302A               	movlw	low LCDWriteInt@str
  7509  00E9  0084               	movwf	4
  7510  00EA  3000               	movlw	high LCDWriteInt@str
  7511  00EB  0085               	movwf	5
  7512  00EC  3005               	movlw	5
  7513  00ED  0020               	movlb	0	; select bank0
  7514  00EE  00A5               	movwf	??_LCDWriteInt
  7515  00EF                     u2230:	
  7516  00EF  0016               	moviw fsr1++
  7517  00F0  001A               	movwi fsr0++
  7518  00F1  0BA5               	decfsz	??_LCDWriteInt,f
  7519  00F2  28EF               	goto	u2230
  7520                           
  7521                           ;lcd.c: 193: int i=4,j=0;
  7522  00F3  3004               	movlw	4
  7523  00F4  00B1               	movwf	LCDWriteInt@i
  7524  00F5  3000               	movlw	0
  7525  00F6  00B2               	movwf	LCDWriteInt@i+1
  7526  00F7  01AF               	clrf	LCDWriteInt@j
  7527  00F8  01B0               	clrf	LCDWriteInt@j+1
  7528                           
  7529                           ;lcd.c: 195: if(value<0)
  7530  00F9  1FA1               	btfss	LCDWriteInt@value+1,7
  7531  00FA  2906               	goto	l2038
  7532                           
  7533                           ;lcd.c: 196: {
  7534                           ;lcd.c: 197: LCDWriteCharacter('-');
  7535  00FB  302D               	movlw	45
  7536  00FC  318C  248A  3180   	fcall	_LCDWriteCharacter
  7537                           
  7538                           ;lcd.c: 198: value=value*-1;
  7539  00FF  0020               	movlb	0	; select bank0
  7540  0100  09A0               	comf	LCDWriteInt@value,f
  7541  0101  09A1               	comf	LCDWriteInt@value+1,f
  7542  0102  0AA0               	incf	LCDWriteInt@value,f
  7543  0103  1903               	skipnz
  7544  0104  0AA1               	incf	LCDWriteInt@value+1,f
  7545                           
  7546                           ;lcd.c: 199: }
  7547  0105  290D               	goto	l2048
  7548  0106                     l2038:	
  7549                           
  7550                           ;lcd.c: 201: else
  7551                           ;lcd.c: 202: {
  7552                           ;lcd.c: 203: if(sign == 1)
  7553  0106  0324               	decf	LCDWriteInt@sign,w
  7554  0107  1D03               	btfss	3,2
  7555  0108  290D               	goto	l2048
  7556                           
  7557                           ;lcd.c: 204: {
  7558                           ;lcd.c: 205: LCDWriteCharacter('+');
  7559  0109  302B               	movlw	43
  7560  010A  318C  248A  3180   	fcall	_LCDWriteCharacter
  7561  010D                     l2048:	
  7562                           ;lcd.c: 206: }
  7563                           ;lcd.c: 207: }
  7564                           ;lcd.c: 209: while(value)
  7565                           
  7566  010D  0020               	movlb	0	; select bank0
  7567  010E  0820               	movf	LCDWriteInt@value,w
  7568  010F  0421               	iorwf	LCDWriteInt@value+1,w
  7569  0110  1903               	btfsc	3,2
  7570  0111  293C               	goto	l2050
  7571                           
  7572                           ;lcd.c: 210: {
  7573                           ;lcd.c: 211: str[i]=value%10;
  7574  0112  300A               	movlw	10
  7575  0113  00F0               	movwf	___awmod@divisor
  7576  0114  3000               	movlw	0
  7577  0115  00F1               	movwf	___awmod@divisor+1
  7578  0116  0020               	movlb	0	; select bank0
  7579  0117  0821               	movf	LCDWriteInt@value+1,w
  7580  0118  00F3               	movwf	___awmod@dividend+1
  7581  0119  0820               	movf	LCDWriteInt@value,w
  7582  011A  00F2               	movwf	___awmod@dividend
  7583  011B  318B  23F4  3180   	fcall	___awmod
  7584  011E  0870               	movf	?___awmod,w
  7585  011F  0020               	movlb	0	; select bank0
  7586  0120  00A5               	movwf	??_LCDWriteInt
  7587  0121  0831               	movf	LCDWriteInt@i,w
  7588  0122  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  7589  0123  0086               	movwf	6
  7590  0124  0187               	clrf	7
  7591  0125  0825               	movf	??_LCDWriteInt,w
  7592  0126  0081               	movwf	1
  7593                           
  7594                           ;lcd.c: 212: value=value/10;
  7595  0127  300A               	movlw	10
  7596  0128  00F0               	movwf	___awdiv@divisor
  7597  0129  3000               	movlw	0
  7598  012A  00F1               	movwf	___awdiv@divisor+1
  7599  012B  0821               	movf	LCDWriteInt@value+1,w
  7600  012C  00F3               	movwf	___awdiv@dividend+1
  7601  012D  0820               	movf	LCDWriteInt@value,w
  7602  012E  00F2               	movwf	___awdiv@dividend
  7603  012F  318C  2439  3180   	fcall	___awdiv
  7604  0132  0871               	movf	?___awdiv+1,w
  7605  0133  0020               	movlb	0	; select bank0
  7606  0134  00A1               	movwf	LCDWriteInt@value+1
  7607  0135  0870               	movf	?___awdiv,w
  7608  0136  00A0               	movwf	LCDWriteInt@value
  7609                           
  7610                           ;lcd.c: 213: i--;
  7611  0137  30FF               	movlw	255
  7612  0138  07B1               	addwf	LCDWriteInt@i,f
  7613  0139  30FF               	movlw	255
  7614  013A  3DB2               	addwfc	LCDWriteInt@i+1,f
  7615  013B  290D               	goto	l2048
  7616  013C                     l2050:	
  7617                           
  7618                           ;lcd.c: 214: }
  7619                           ;lcd.c: 215: if(fieldLength==-1)
  7620  013C  0A22               	incf	LCDWriteInt@fieldLength,w
  7621  013D  1903               	btfsc	3,2
  7622  013E  2944               	goto	l2056
  7623  013F  294C               	goto	l2058
  7624  0140                     l2054:	
  7625                           ;lcd.c: 216: {
  7626                           ;lcd.c: 217: while(str[j]==0)
  7627                           
  7628                           
  7629                           ;lcd.c: 218: {
  7630                           ;lcd.c: 219: j++;
  7631  0140  3001               	movlw	1
  7632  0141  07AF               	addwf	LCDWriteInt@j,f
  7633  0142  3000               	movlw	0
  7634  0143  3DB0               	addwfc	LCDWriteInt@j+1,f
  7635  0144                     l2056:	
  7636  0144  082F               	movf	LCDWriteInt@j,w
  7637  0145  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  7638  0146  0086               	movwf	6
  7639  0147  0187               	clrf	7
  7640  0148  0801               	movf	1,w
  7641  0149  1D03               	btfss	3,2
  7642  014A  295C               	goto	l2060
  7643  014B  2940               	goto	l2054
  7644  014C                     l2058:	
  7645                           ;lcd.c: 220: }
  7646                           ;lcd.c: 221: }
  7647                           
  7648                           
  7649                           ;lcd.c: 222: else
  7650                           ;lcd.c: 223: {
  7651                           ;lcd.c: 224: j=5-fieldLength;
  7652  014C  0822               	movf	LCDWriteInt@fieldLength,w
  7653  014D  00A5               	movwf	??_LCDWriteInt
  7654  014E  01A6               	clrf	??_LCDWriteInt+1
  7655  014F  1BA5               	btfsc	??_LCDWriteInt,7
  7656  0150  03A6               	decf	??_LCDWriteInt+1,f
  7657  0151  09A5               	comf	??_LCDWriteInt,f
  7658  0152  09A6               	comf	??_LCDWriteInt+1,f
  7659  0153  0AA5               	incf	??_LCDWriteInt,f
  7660  0154  1903               	skipnz
  7661  0155  0AA6               	incf	??_LCDWriteInt+1,f
  7662  0156  0825               	movf	??_LCDWriteInt,w
  7663  0157  3E05               	addlw	5
  7664  0158  00AF               	movwf	LCDWriteInt@j
  7665  0159  3000               	movlw	0
  7666  015A  3D26               	addwfc	??_LCDWriteInt+1,w
  7667  015B  00B0               	movwf	LCDWriteInt@j+1
  7668  015C                     l2060:	
  7669                           
  7670                           ;lcd.c: 225: }
  7671                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
  7672  015C  0830               	movf	LCDWriteInt@j+1,w
  7673  015D  00B2               	movwf	LCDWriteInt@i+1
  7674  015E  082F               	movf	LCDWriteInt@j,w
  7675  015F  00B1               	movwf	LCDWriteInt@i
  7676  0160                     l2066:	
  7677  0160  0823               	movf	LCDWriteInt@numPlaces,w
  7678  0161  00A5               	movwf	??_LCDWriteInt
  7679  0162  01A6               	clrf	??_LCDWriteInt+1
  7680  0163  1BA5               	btfsc	??_LCDWriteInt,7
  7681  0164  03A6               	decf	??_LCDWriteInt+1,f
  7682  0165  09A5               	comf	??_LCDWriteInt,f
  7683  0166  09A6               	comf	??_LCDWriteInt+1,f
  7684  0167  0AA5               	incf	??_LCDWriteInt,f
  7685  0168  1903               	skipnz
  7686  0169  0AA6               	incf	??_LCDWriteInt+1,f
  7687  016A  0825               	movf	??_LCDWriteInt,w
  7688  016B  3E05               	addlw	5
  7689  016C  00A7               	movwf	??_LCDWriteInt+2
  7690  016D  3000               	movlw	0
  7691  016E  3D26               	addwfc	??_LCDWriteInt+1,w
  7692  016F  00A8               	movwf	??_LCDWriteInt+3
  7693  0170  0832               	movf	LCDWriteInt@i+1,w
  7694  0171  3A80               	xorlw	128
  7695  0172  00A9               	movwf	??_LCDWriteInt+4
  7696  0173  0828               	movf	??_LCDWriteInt+3,w
  7697  0174  3A80               	xorlw	128
  7698  0175  0229               	subwf	??_LCDWriteInt+4,w
  7699  0176  1D03               	skipz
  7700  0177  297A               	goto	u2295
  7701  0178  0827               	movf	??_LCDWriteInt+2,w
  7702  0179  0231               	subwf	LCDWriteInt@i,w
  7703  017A                     u2295:	
  7704  017A  1803               	btfsc	3,0
  7705  017B  298C               	goto	l2068
  7706                           
  7707                           ;lcd.c: 228: {
  7708                           ;lcd.c: 229: LCDWriteCharacter(48+str[i]);
  7709  017C  0020               	movlb	0	; select bank0
  7710  017D  0831               	movf	LCDWriteInt@i,w
  7711  017E  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  7712  017F  0086               	movwf	6
  7713  0180  0187               	clrf	7
  7714  0181  0801               	movf	1,w
  7715  0182  3E30               	addlw	48
  7716  0183  318C  248A  3180   	fcall	_LCDWriteCharacter
  7717  0186  3001               	movlw	1
  7718  0187  0020               	movlb	0	; select bank0
  7719  0188  07B1               	addwf	LCDWriteInt@i,f
  7720  0189  3000               	movlw	0
  7721  018A  3DB2               	addwfc	LCDWriteInt@i+1,f
  7722  018B  2960               	goto	l2066
  7723  018C                     l2068:	
  7724                           
  7725                           ;lcd.c: 230: }
  7726                           ;lcd.c: 232: if(numPlaces == 1)
  7727  018C  0020               	movlb	0	; select bank0
  7728  018D  0323               	decf	LCDWriteInt@numPlaces,w
  7729  018E  1D03               	btfss	3,2
  7730  018F  299A               	goto	l2072
  7731                           
  7732                           ;lcd.c: 233: {
  7733                           ;lcd.c: 234: LCDWriteCharacter(46);
  7734  0190  302E               	movlw	46
  7735  0191  318C  248A  3180   	fcall	_LCDWriteCharacter
  7736                           
  7737                           ;lcd.c: 235: LCDWriteCharacter(48+str[4]);
  7738  0194  0020               	movlb	0	; select bank0
  7739  0195  082E               	movf	LCDWriteInt@str+4,w
  7740  0196  3E30               	addlw	48
  7741  0197  318C  248A  3180   	fcall	_LCDWriteCharacter
  7742  019A                     l2072:	
  7743                           
  7744                           ;lcd.c: 236: }
  7745                           ;lcd.c: 238: if(numPlaces == 2)
  7746  019A  3002               	movlw	2
  7747  019B  0020               	movlb	0	; select bank0
  7748  019C  0623               	xorwf	LCDWriteInt@numPlaces,w
  7749  019D  1D03               	btfss	3,2
  7750  019E  0008               	return
  7751                           
  7752                           ;lcd.c: 239: {
  7753                           ;lcd.c: 240: LCDWriteCharacter(46);
  7754  019F  302E               	movlw	46
  7755  01A0  318C  248A  3180   	fcall	_LCDWriteCharacter
  7756                           
  7757                           ;lcd.c: 241: LCDWriteCharacter(48+str[3]);
  7758  01A3  0020               	movlb	0	; select bank0
  7759  01A4  082D               	movf	LCDWriteInt@str+3,w
  7760  01A5  3E30               	addlw	48
  7761  01A6  318C  248A  3180   	fcall	_LCDWriteCharacter
  7762                           
  7763                           ;lcd.c: 242: LCDWriteCharacter(48+str[4]);
  7764  01A9  0020               	movlb	0	; select bank0
  7765  01AA  082E               	movf	LCDWriteInt@str+4,w
  7766  01AB  3E30               	addlw	48
  7767  01AC  318C  248A         	fcall	_LCDWriteCharacter
  7768  01AE  0008               	return
  7769  01AF                     __end_of_LCDWriteInt:	
  7770                           
  7771                           	psect	text21
  7772  0BF4                     __ptext21:	
  7773 ;; *************** function ___awmod *****************
  7774 ;; Defined at:
  7775 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  divisor         2    0[COMMON] int 
  7778 ;;  dividend        2    2[COMMON] int 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  sign            1    6[COMMON] unsigned char 
  7781 ;;  counter         1    5[COMMON] unsigned char 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  2    0[COMMON] int 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;Total ram usage:        7 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_LCDWriteInt
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           
  7805                           ;psect for function ___awmod
  7806  0BF4                     ___awmod:	
  7807                           
  7808                           ;incstack = 0
  7809                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7810  0BF4  01F6               	clrf	___awmod@sign
  7811  0BF5  1FF3               	btfss	___awmod@dividend+1,7
  7812  0BF6  2BFE               	goto	l1878
  7813  0BF7  09F2               	comf	___awmod@dividend,f
  7814  0BF8  09F3               	comf	___awmod@dividend+1,f
  7815  0BF9  0AF2               	incf	___awmod@dividend,f
  7816  0BFA  1903               	skipnz
  7817  0BFB  0AF3               	incf	___awmod@dividend+1,f
  7818  0BFC  01F6               	clrf	___awmod@sign
  7819  0BFD  0AF6               	incf	___awmod@sign,f
  7820  0BFE                     l1878:	
  7821  0BFE  1FF1               	btfss	___awmod@divisor+1,7
  7822  0BFF  2C05               	goto	l1882
  7823  0C00  09F0               	comf	___awmod@divisor,f
  7824  0C01  09F1               	comf	___awmod@divisor+1,f
  7825  0C02  0AF0               	incf	___awmod@divisor,f
  7826  0C03  1903               	skipnz
  7827  0C04  0AF1               	incf	___awmod@divisor+1,f
  7828  0C05                     l1882:	
  7829  0C05  0870               	movf	___awmod@divisor,w
  7830  0C06  0471               	iorwf	___awmod@divisor+1,w
  7831  0C07  1903               	btfsc	3,2
  7832  0C08  2C2C               	goto	l1900
  7833  0C09  01F5               	clrf	___awmod@counter
  7834  0C0A  0AF5               	incf	___awmod@counter,f
  7835  0C0B                     l1890:	
  7836  0C0B  1BF1               	btfsc	___awmod@divisor+1,7
  7837  0C0C  2C17               	goto	l1892
  7838  0C0D  3001               	movlw	1
  7839  0C0E                     u2085:	
  7840  0C0E  35F0               	lslf	___awmod@divisor,f
  7841  0C0F  0DF1               	rlf	___awmod@divisor+1,f
  7842  0C10  0B89               	decfsz	9,f
  7843  0C11  2C0E               	goto	u2085
  7844  0C12  3001               	movlw	1
  7845  0C13  00F4               	movwf	??___awmod
  7846  0C14  0874               	movf	??___awmod,w
  7847  0C15  07F5               	addwf	___awmod@counter,f
  7848  0C16  2C0B               	goto	l1890
  7849  0C17                     l1892:	
  7850  0C17  0871               	movf	___awmod@divisor+1,w
  7851  0C18  0273               	subwf	___awmod@dividend+1,w
  7852  0C19  1D03               	skipz
  7853  0C1A  2C1D               	goto	u2105
  7854  0C1B  0870               	movf	___awmod@divisor,w
  7855  0C1C  0272               	subwf	___awmod@dividend,w
  7856  0C1D                     u2105:	
  7857  0C1D  1C03               	skipc
  7858  0C1E  2C23               	goto	l1896
  7859  0C1F  0870               	movf	___awmod@divisor,w
  7860  0C20  02F2               	subwf	___awmod@dividend,f
  7861  0C21  0871               	movf	___awmod@divisor+1,w
  7862  0C22  3BF3               	subwfb	___awmod@dividend+1,f
  7863  0C23                     l1896:	
  7864  0C23  3001               	movlw	1
  7865  0C24                     u2115:	
  7866  0C24  36F1               	lsrf	___awmod@divisor+1,f
  7867  0C25  0CF0               	rrf	___awmod@divisor,f
  7868  0C26  0B89               	decfsz	9,f
  7869  0C27  2C24               	goto	u2115
  7870  0C28  3001               	movlw	1
  7871  0C29  02F5               	subwf	___awmod@counter,f
  7872  0C2A  1D03               	btfss	3,2
  7873  0C2B  2C17               	goto	l1892
  7874  0C2C                     l1900:	
  7875  0C2C  0876               	movf	___awmod@sign,w
  7876  0C2D  1903               	btfsc	3,2
  7877  0C2E  2C34               	goto	l1904
  7878  0C2F  09F2               	comf	___awmod@dividend,f
  7879  0C30  09F3               	comf	___awmod@dividend+1,f
  7880  0C31  0AF2               	incf	___awmod@dividend,f
  7881  0C32  1903               	skipnz
  7882  0C33  0AF3               	incf	___awmod@dividend+1,f
  7883  0C34                     l1904:	
  7884  0C34  0873               	movf	___awmod@dividend+1,w
  7885  0C35  00F1               	movwf	?___awmod+1
  7886  0C36  0872               	movf	___awmod@dividend,w
  7887  0C37  00F0               	movwf	?___awmod
  7888  0C38  0008               	return
  7889  0C39                     __end_of___awmod:	
  7890                           
  7891                           	psect	text22
  7892  0C39                     __ptext22:	
  7893 ;; *************** function ___awdiv *****************
  7894 ;; Defined at:
  7895 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  divisor         2    0[COMMON] int 
  7898 ;;  dividend        2    2[COMMON] int 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  quotient        2    7[COMMON] int 
  7901 ;;  sign            1    6[COMMON] unsigned char 
  7902 ;;  counter         1    5[COMMON] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  2    0[COMMON] int 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7915 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7916 ;;Total ram usage:        9 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_LCDWriteInt
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function ___awdiv
  7927  0C39                     ___awdiv:	
  7928                           
  7929                           ;incstack = 0
  7930                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7931  0C39  01F6               	clrf	___awdiv@sign
  7932  0C3A  1FF1               	btfss	___awdiv@divisor+1,7
  7933  0C3B  2C43               	goto	l1834
  7934  0C3C  09F0               	comf	___awdiv@divisor,f
  7935  0C3D  09F1               	comf	___awdiv@divisor+1,f
  7936  0C3E  0AF0               	incf	___awdiv@divisor,f
  7937  0C3F  1903               	skipnz
  7938  0C40  0AF1               	incf	___awdiv@divisor+1,f
  7939  0C41  01F6               	clrf	___awdiv@sign
  7940  0C42  0AF6               	incf	___awdiv@sign,f
  7941  0C43                     l1834:	
  7942  0C43  1FF3               	btfss	___awdiv@dividend+1,7
  7943  0C44  2C4E               	goto	l1840
  7944  0C45  09F2               	comf	___awdiv@dividend,f
  7945  0C46  09F3               	comf	___awdiv@dividend+1,f
  7946  0C47  0AF2               	incf	___awdiv@dividend,f
  7947  0C48  1903               	skipnz
  7948  0C49  0AF3               	incf	___awdiv@dividend+1,f
  7949  0C4A  3001               	movlw	1
  7950  0C4B  00F4               	movwf	??___awdiv
  7951  0C4C  0874               	movf	??___awdiv,w
  7952  0C4D  06F6               	xorwf	___awdiv@sign,f
  7953  0C4E                     l1840:	
  7954  0C4E  01F7               	clrf	___awdiv@quotient
  7955  0C4F  01F8               	clrf	___awdiv@quotient+1
  7956  0C50  0870               	movf	___awdiv@divisor,w
  7957  0C51  0471               	iorwf	___awdiv@divisor+1,w
  7958  0C52  1903               	btfsc	3,2
  7959  0C53  2C7D               	goto	l1862
  7960  0C54  01F5               	clrf	___awdiv@counter
  7961  0C55  0AF5               	incf	___awdiv@counter,f
  7962  0C56                     l1850:	
  7963  0C56  1BF1               	btfsc	___awdiv@divisor+1,7
  7964  0C57  2C62               	goto	l1852
  7965  0C58  3001               	movlw	1
  7966  0C59                     u1985:	
  7967  0C59  35F0               	lslf	___awdiv@divisor,f
  7968  0C5A  0DF1               	rlf	___awdiv@divisor+1,f
  7969  0C5B  0B89               	decfsz	9,f
  7970  0C5C  2C59               	goto	u1985
  7971  0C5D  3001               	movlw	1
  7972  0C5E  00F4               	movwf	??___awdiv
  7973  0C5F  0874               	movf	??___awdiv,w
  7974  0C60  07F5               	addwf	___awdiv@counter,f
  7975  0C61  2C56               	goto	l1850
  7976  0C62                     l1852:	
  7977  0C62  3001               	movlw	1
  7978  0C63                     u2005:	
  7979  0C63  35F7               	lslf	___awdiv@quotient,f
  7980  0C64  0DF8               	rlf	___awdiv@quotient+1,f
  7981  0C65  0B89               	decfsz	9,f
  7982  0C66  2C63               	goto	u2005
  7983  0C67  0871               	movf	___awdiv@divisor+1,w
  7984  0C68  0273               	subwf	___awdiv@dividend+1,w
  7985  0C69  1D03               	skipz
  7986  0C6A  2C6D               	goto	u2015
  7987  0C6B  0870               	movf	___awdiv@divisor,w
  7988  0C6C  0272               	subwf	___awdiv@dividend,w
  7989  0C6D                     u2015:	
  7990  0C6D  1C03               	skipc
  7991  0C6E  2C74               	goto	l1858
  7992  0C6F  0870               	movf	___awdiv@divisor,w
  7993  0C70  02F2               	subwf	___awdiv@dividend,f
  7994  0C71  0871               	movf	___awdiv@divisor+1,w
  7995  0C72  3BF3               	subwfb	___awdiv@dividend+1,f
  7996  0C73  1477               	bsf	___awdiv@quotient,0
  7997  0C74                     l1858:	
  7998  0C74  3001               	movlw	1
  7999  0C75                     u2025:	
  8000  0C75  36F1               	lsrf	___awdiv@divisor+1,f
  8001  0C76  0CF0               	rrf	___awdiv@divisor,f
  8002  0C77  0B89               	decfsz	9,f
  8003  0C78  2C75               	goto	u2025
  8004  0C79  3001               	movlw	1
  8005  0C7A  02F5               	subwf	___awdiv@counter,f
  8006  0C7B  1D03               	btfss	3,2
  8007  0C7C  2C62               	goto	l1852
  8008  0C7D                     l1862:	
  8009  0C7D  0876               	movf	___awdiv@sign,w
  8010  0C7E  1903               	btfsc	3,2
  8011  0C7F  2C85               	goto	l1866
  8012  0C80  09F7               	comf	___awdiv@quotient,f
  8013  0C81  09F8               	comf	___awdiv@quotient+1,f
  8014  0C82  0AF7               	incf	___awdiv@quotient,f
  8015  0C83  1903               	skipnz
  8016  0C84  0AF8               	incf	___awdiv@quotient+1,f
  8017  0C85                     l1866:	
  8018  0C85  0878               	movf	___awdiv@quotient+1,w
  8019  0C86  00F1               	movwf	?___awdiv+1
  8020  0C87  0877               	movf	___awdiv@quotient,w
  8021  0C88  00F0               	movwf	?___awdiv
  8022  0C89  0008               	return
  8023  0C8A                     __end_of___awdiv:	
  8024                           
  8025                           	psect	text23
  8026  0C8A                     __ptext23:	
  8027 ;; *************** function _LCDWriteCharacter *****************
  8028 ;; Defined at:
  8029 ;;		line 140 in file "lcd.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  character       1    wreg     const unsigned char 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  character       1    9[COMMON] const unsigned char 
  8034 ;;  base            2   10[COMMON] unsigned int 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8045 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8046 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8048 ;;Total ram usage:        6 bytes
  8049 ;; Hardware stack levels used:    1
  8050 ;; Hardware stack levels required when called:    1
  8051 ;; This function calls:
  8052 ;;		_LCDWrite
  8053 ;;		___wmul
  8054 ;; This function is called by:
  8055 ;;		_LCDWriteString
  8056 ;;		_LCDWriteInt
  8057 ;;		_main
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           
  8062                           ;psect for function _LCDWriteCharacter
  8063  0C8A                     _LCDWriteCharacter:	
  8064                           
  8065                           ;incstack = 0
  8066                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8067                           ;LCDWriteCharacter@character stored from wreg
  8068  0C8A  00F9               	movwf	LCDWriteCharacter@character
  8069                           
  8070                           ;lcd.c: 142: uint16_t base;
  8071                           ;lcd.c: 143: base = character - 32;
  8072  0C8B  0879               	movf	LCDWriteCharacter@character,w
  8073  0C8C  3EE0               	addlw	224
  8074  0C8D  00FA               	movwf	LCDWriteCharacter@base
  8075  0C8E  30FF               	movlw	255
  8076  0C8F  1803               	skipnc
  8077  0C90  3000               	movlw	0
  8078  0C91  00FB               	movwf	LCDWriteCharacter@base+1
  8079                           
  8080                           ;lcd.c: 144: base *= 3;
  8081  0C92  3003               	movlw	3
  8082  0C93  00F0               	movwf	___wmul@multiplier
  8083  0C94  3000               	movlw	0
  8084  0C95  00F1               	movwf	___wmul@multiplier+1
  8085  0C96  087B               	movf	LCDWriteCharacter@base+1,w
  8086  0C97  00F3               	movwf	___wmul@multiplicand+1
  8087  0C98  087A               	movf	LCDWriteCharacter@base,w
  8088  0C99  00F2               	movwf	___wmul@multiplicand
  8089  0C9A  3197  27A7  318C   	fcall	___wmul
  8090  0C9D  0871               	movf	?___wmul+1,w
  8091  0C9E  00FB               	movwf	LCDWriteCharacter@base+1
  8092  0C9F  0870               	movf	?___wmul,w
  8093  0CA0  00FA               	movwf	LCDWriteCharacter@base
  8094                           
  8095                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
  8096  0CA1  087B               	movf	LCDWriteCharacter@base+1,w
  8097  0CA2  0085               	movwf	5
  8098  0CA3  087A               	movf	LCDWriteCharacter@base,w
  8099  0CA4  0084               	movwf	4
  8100  0CA5  3000               	movlw	low (_fonts| (0+32768))
  8101  0CA6  0784               	addwf	4,f
  8102  0CA7  3088               	movlw	high (_fonts| (0+32768))
  8103  0CA8  3D85               	addwfc	5,f
  8104  0CA9  0800               	movf	0,w	;code access
  8105  0CAA  00F6               	movwf	??_LCDWriteCharacter
  8106  0CAB  0876               	movf	??_LCDWriteCharacter,w
  8107  0CAC  00F0               	movwf	LCDWrite@data
  8108  0CAD  3001               	movlw	1
  8109  0CAE  318A  22BE  318C   	fcall	_LCDWrite
  8110                           
  8111                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
  8112  0CB1  087A               	movf	LCDWriteCharacter@base,w
  8113  0CB2  3E01               	addlw	1
  8114  0CB3  00F6               	movwf	??_LCDWriteCharacter
  8115  0CB4  3000               	movlw	0
  8116  0CB5  3D7B               	addwfc	LCDWriteCharacter@base+1,w
  8117  0CB6  00F7               	movwf	??_LCDWriteCharacter+1
  8118  0CB7  3000               	movlw	low (_fonts| (0+32768))
  8119  0CB8  0776               	addwf	??_LCDWriteCharacter,w
  8120  0CB9  0084               	movwf	4
  8121  0CBA  3088               	movlw	high (_fonts| (0+32768))
  8122  0CBB  3D77               	addwfc	??_LCDWriteCharacter+1,w
  8123  0CBC  0085               	movwf	5
  8124  0CBD  0800               	movf	0,w	;code access
  8125  0CBE  00F8               	movwf	??_LCDWriteCharacter+2
  8126  0CBF  0878               	movf	??_LCDWriteCharacter+2,w
  8127  0CC0  00F0               	movwf	LCDWrite@data
  8128  0CC1  3001               	movlw	1
  8129  0CC2  318A  22BE  318C   	fcall	_LCDWrite
  8130                           
  8131                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
  8132  0CC5  087A               	movf	LCDWriteCharacter@base,w
  8133  0CC6  3E02               	addlw	2
  8134  0CC7  00F6               	movwf	??_LCDWriteCharacter
  8135  0CC8  3000               	movlw	0
  8136  0CC9  3D7B               	addwfc	LCDWriteCharacter@base+1,w
  8137  0CCA  00F7               	movwf	??_LCDWriteCharacter+1
  8138  0CCB  3000               	movlw	low (_fonts| (0+32768))
  8139  0CCC  0776               	addwf	??_LCDWriteCharacter,w
  8140  0CCD  0084               	movwf	4
  8141  0CCE  3088               	movlw	high (_fonts| (0+32768))
  8142  0CCF  3D77               	addwfc	??_LCDWriteCharacter+1,w
  8143  0CD0  0085               	movwf	5
  8144  0CD1  0800               	movf	0,w	;code access
  8145  0CD2  00F8               	movwf	??_LCDWriteCharacter+2
  8146  0CD3  0878               	movf	??_LCDWriteCharacter+2,w
  8147  0CD4  00F0               	movwf	LCDWrite@data
  8148  0CD5  3001               	movlw	1
  8149  0CD6  318A  22BE  318C   	fcall	_LCDWrite
  8150                           
  8151                           ;lcd.c: 148: LCDWrite(1, 0x00);
  8152  0CD9  01F0               	clrf	LCDWrite@data
  8153  0CDA  3001               	movlw	1
  8154  0CDB  318A  22BE         	fcall	_LCDWrite
  8155  0CDD  0008               	return
  8156  0CDE                     __end_of_LCDWriteCharacter:	
  8157                           
  8158                           	psect	text24
  8159  17A7                     __ptext24:	
  8160 ;; *************** function ___wmul *****************
  8161 ;; Defined at:
  8162 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  multiplier      2    0[COMMON] unsigned int 
  8165 ;;  multiplicand    2    2[COMMON] unsigned int 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  product         2    4[COMMON] unsigned int 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  2    0[COMMON] unsigned int 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;Total ram usage:        6 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; This function calls:
  8184 ;;		Nothing
  8185 ;; This function is called by:
  8186 ;;		_LCDWriteCharacter
  8187 ;;		_eval_poly
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           
  8192                           ;psect for function ___wmul
  8193  17A7                     ___wmul:	
  8194                           
  8195                           ;incstack = 0
  8196                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8197  17A7  01F4               	clrf	___wmul@product
  8198  17A8  01F5               	clrf	___wmul@product+1
  8199  17A9                     l1624:	
  8200  17A9  1C70               	btfss	___wmul@multiplier,0
  8201  17AA  2FAF               	goto	l300
  8202  17AB  0872               	movf	___wmul@multiplicand,w
  8203  17AC  07F4               	addwf	___wmul@product,f
  8204  17AD  0873               	movf	___wmul@multiplicand+1,w
  8205  17AE  3DF5               	addwfc	___wmul@product+1,f
  8206  17AF                     l300:	
  8207  17AF  3001               	movlw	1
  8208  17B0                     u1555:	
  8209  17B0  35F2               	lslf	___wmul@multiplicand,f
  8210  17B1  0DF3               	rlf	___wmul@multiplicand+1,f
  8211  17B2  0B89               	decfsz	9,f
  8212  17B3  2FB0               	goto	u1555
  8213  17B4  3001               	movlw	1
  8214  17B5                     u1565:	
  8215  17B5  36F1               	lsrf	___wmul@multiplier+1,f
  8216  17B6  0CF0               	rrf	___wmul@multiplier,f
  8217  17B7  0B89               	decfsz	9,f
  8218  17B8  2FB5               	goto	u1565
  8219  17B9  0870               	movf	___wmul@multiplier,w
  8220  17BA  0471               	iorwf	___wmul@multiplier+1,w
  8221  17BB  1D03               	btfss	3,2
  8222  17BC  2FA9               	goto	l1624
  8223  17BD  0875               	movf	___wmul@product+1,w
  8224  17BE  00F1               	movwf	?___wmul+1
  8225  17BF  0874               	movf	___wmul@product,w
  8226  17C0  00F0               	movwf	?___wmul
  8227  17C1  0008               	return
  8228  17C2                     __end_of___wmul:	
  8229                           
  8230                           	psect	text25
  8231  0009                     __ptext25:	
  8232 ;; *************** function _LCDBitmap *****************
  8233 ;; Defined at:
  8234 ;;		line 131 in file "lcd.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  my_array        2    8[COMMON] PTR const unsigned char 
  8237 ;;		 -> aloha(336), 
  8238 ;;  startPositio    1   10[COMMON] unsigned char 
  8239 ;;  len             2   11[COMMON] unsigned int 
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;  index           2    0[BANK0 ] unsigned int 
  8242 ;; Return value:  Size  Location     Type
  8243 ;;                  1    wreg      void 
  8244 ;; Registers used:
  8245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8251 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;Total ram usage:        8 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    2
  8258 ;; This function calls:
  8259 ;;		_LCDWrite
  8260 ;;		_gotoXY
  8261 ;; This function is called by:
  8262 ;;		_main
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           
  8267                           ;psect for function _LCDBitmap
  8268  0009                     _LCDBitmap:	
  8269                           
  8270                           ;lcd.c: 133: uint16_t index;
  8271                           ;lcd.c: 134: gotoXY(0,startPosition);
  8272                           
  8273                           ;incstack = 0
  8274                           ; Regs used in _LCDBitmap: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8275  0009  087A               	movf	LCDBitmap@startPosition,w
  8276  000A  00FD               	movwf	??_LCDBitmap
  8277  000B  087D               	movf	??_LCDBitmap,w
  8278  000C  00F5               	movwf	gotoXY@y
  8279  000D  3000               	movlw	0
  8280  000E  3197  2754  3180   	fcall	_gotoXY
  8281                           
  8282                           ;lcd.c: 135: for (index = 0 ; index < len ; index++)
  8283  0011  0020               	movlb	0	; select bank0
  8284  0012  01A0               	clrf	LCDBitmap@index
  8285  0013  01A1               	clrf	LCDBitmap@index+1
  8286  0014                     l2016:	
  8287  0014  087C               	movf	LCDBitmap@len+1,w
  8288  0015  0221               	subwf	LCDBitmap@index+1,w
  8289  0016  1D03               	skipz
  8290  0017  281A               	goto	u2215
  8291  0018  087B               	movf	LCDBitmap@len,w
  8292  0019  0220               	subwf	LCDBitmap@index,w
  8293  001A                     u2215:	
  8294  001A  1803               	btfsc	3,0
  8295  001B  0008               	return
  8296                           
  8297                           ;lcd.c: 136: LCDWrite(1, my_array[index]);
  8298  001C  0878               	movf	LCDBitmap@my_array,w
  8299  001D  0720               	addwf	LCDBitmap@index,w
  8300  001E  0084               	movwf	4
  8301  001F  0879               	movf	LCDBitmap@my_array+1,w
  8302  0020  3D21               	addwfc	LCDBitmap@index+1,w
  8303  0021  0085               	movwf	5
  8304  0022  0800               	movf	0,w	;code access
  8305  0023  00FD               	movwf	??_LCDBitmap
  8306  0024  087D               	movf	??_LCDBitmap,w
  8307  0025  00F0               	movwf	LCDWrite@data
  8308  0026  3001               	movlw	1
  8309  0027  318A  22BE  3180   	fcall	_LCDWrite
  8310  002A  3001               	movlw	1
  8311  002B  0020               	movlb	0	; select bank0
  8312  002C  07A0               	addwf	LCDBitmap@index,f
  8313  002D  3000               	movlw	0
  8314  002E  3DA1               	addwfc	LCDBitmap@index+1,f
  8315  002F  2814               	goto	l2016
  8316  0030                     __end_of_LCDBitmap:	
  8317                           
  8318                           	psect	text26
  8319  1754                     __ptext26:	
  8320 ;; *************** function _gotoXY *****************
  8321 ;; Defined at:
  8322 ;;		line 124 in file "lcd.c"
  8323 ;; Parameters:    Size  Location     Type
  8324 ;;  x               1    wreg     unsigned char 
  8325 ;;  y               1    5[COMMON] unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  x               1    7[COMMON] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0, pclath, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8341 ;;Total ram usage:        3 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    1
  8344 ;; This function calls:
  8345 ;;		_LCDWrite
  8346 ;; This function is called by:
  8347 ;;		_LCDBitmap
  8348 ;;		_LCDClear
  8349 ;;		_main
  8350 ;;		_LCDDrawBox
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           
  8355                           ;psect for function _gotoXY
  8356  1754                     _gotoXY:	
  8357                           
  8358                           ;incstack = 0
  8359                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  8360                           ;gotoXY@x stored from wreg
  8361  1754  00F7               	movwf	gotoXY@x
  8362                           
  8363                           ;lcd.c: 126: LCDWrite(0, 0x80 | x);
  8364  1755  0877               	movf	gotoXY@x,w
  8365  1756  3880               	iorlw	128
  8366  1757  00F6               	movwf	??_gotoXY
  8367  1758  0876               	movf	??_gotoXY,w
  8368  1759  00F0               	movwf	LCDWrite@data
  8369  175A  3000               	movlw	0
  8370  175B  318A  22BE  3197   	fcall	_LCDWrite
  8371                           
  8372                           ;lcd.c: 127: LCDWrite(0, 0x40 | y);
  8373  175E  0875               	movf	gotoXY@y,w
  8374  175F  3840               	iorlw	64
  8375  1760  00F6               	movwf	??_gotoXY
  8376  1761  0876               	movf	??_gotoXY,w
  8377  1762  00F0               	movwf	LCDWrite@data
  8378  1763  3000               	movlw	0
  8379  1764  318A  22BE         	fcall	_LCDWrite
  8380  1766  0008               	return
  8381  1767                     __end_of_gotoXY:	
  8382                           
  8383                           	psect	text27
  8384  0ABE                     __ptext27:	
  8385 ;; *************** function _LCDWrite *****************
  8386 ;; Defined at:
  8387 ;;		line 280 in file "lcd.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  data_or_comm    1    wreg     unsigned char 
  8390 ;;  data            1    0[COMMON] unsigned char 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  data_or_comm    1    2[COMMON] unsigned char 
  8393 ;;  i               1    4[COMMON] unsigned char 
  8394 ;;  d               1    3[COMMON] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8404 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;Total ram usage:        5 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_gotoXY
  8414 ;;		_LCDBitmap
  8415 ;;		_LCDWriteCharacter
  8416 ;;		_LCDClear
  8417 ;;		_LCDInit
  8418 ;;		_LCDDrawBox
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function _LCDWrite
  8424  0ABE                     _LCDWrite:	
  8425                           
  8426                           ;incstack = 0
  8427                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
  8428                           ;LCDWrite@data_or_command stored from wreg
  8429  0ABE  00F2               	movwf	LCDWrite@data_or_command
  8430                           
  8431                           ;lcd.c: 282: uint8_t i,d;
  8432                           ;lcd.c: 284: d=data;
  8433  0ABF  0870               	movf	LCDWrite@data,w
  8434  0AC0  00F1               	movwf	??_LCDWrite
  8435  0AC1  0871               	movf	??_LCDWrite,w
  8436  0AC2  00F3               	movwf	LCDWrite@d
  8437                           
  8438                           ;lcd.c: 286: if(data_or_command == 0)
  8439  0AC3  0872               	movf	LCDWrite@data_or_command,w
  8440  0AC4  1D03               	btfss	3,2
  8441  0AC5  2AC9               	goto	l165
  8442                           
  8443                           ;lcd.c: 287: {
  8444                           ;lcd.c: 288: LATAbits.LATA2 = 0;
  8445  0AC6  0020               	movlb	0	; select bank0
  8446  0AC7  1116               	bcf	22,2	;volatile
  8447                           
  8448                           ;lcd.c: 289: }
  8449  0AC8  2ACB               	goto	l166
  8450  0AC9                     l165:	
  8451                           
  8452                           ;lcd.c: 290: else
  8453                           ;lcd.c: 291: {
  8454                           ;lcd.c: 292: LATAbits.LATA2 = 1;
  8455  0AC9  0020               	movlb	0	; select bank0
  8456  0ACA  1516               	bsf	22,2	;volatile
  8457  0ACB                     l166:	
  8458                           
  8459                           ;lcd.c: 293: }
  8460                           ;lcd.c: 295: LATAbits.LATA1 = 0;
  8461  0ACB  1096               	bcf	22,1	;volatile
  8462                           
  8463                           ;lcd.c: 297: for(i=0;i<8;i++)
  8464  0ACC  01F4               	clrf	LCDWrite@i
  8465  0ACD  3008               	movlw	8
  8466  0ACE  0274               	subwf	LCDWrite@i,w
  8467  0ACF  1803               	btfsc	3,0
  8468  0AD0  2AE1               	goto	l168
  8469  0AD1                     l167:	
  8470                           
  8471                           ;lcd.c: 298: {
  8472                           ;lcd.c: 299: LATAbits.LATA3 = 0;
  8473  0AD1  1196               	bcf	22,3	;volatile
  8474                           
  8475                           ;lcd.c: 301: if(d&0x80)
  8476  0AD2  1FF3               	btfss	LCDWrite@d,7
  8477  0AD3  2AD5               	goto	l169
  8478                           
  8479                           ;lcd.c: 302: {
  8480                           ;lcd.c: 303: LATAbits.LATA3 = 1;
  8481  0AD4  1596               	bsf	22,3	;volatile
  8482  0AD5                     l169:	
  8483                           
  8484                           ;lcd.c: 304: }
  8485                           ;lcd.c: 306: LATAbits.LATA4 = 1;
  8486  0AD5  1616               	bsf	22,4	;volatile
  8487                           
  8488                           ;lcd.c: 308: d<<=1;
  8489  0AD6  1003               	clrc
  8490  0AD7  0DF3               	rlf	LCDWrite@d,f
  8491                           
  8492                           ;lcd.c: 310: LATAbits.LATA4=0;
  8493  0AD8  1216               	bcf	22,4	;volatile
  8494  0AD9  3001               	movlw	1
  8495  0ADA  00F1               	movwf	??_LCDWrite
  8496  0ADB  0871               	movf	??_LCDWrite,w
  8497  0ADC  07F4               	addwf	LCDWrite@i,f
  8498  0ADD  3008               	movlw	8
  8499  0ADE  0274               	subwf	LCDWrite@i,w
  8500  0ADF  1C03               	skipc
  8501  0AE0  2AD1               	goto	l167
  8502  0AE1                     l168:	
  8503                           
  8504                           ;lcd.c: 311: }
  8505                           ;lcd.c: 313: LATAbits.LATA1 = 1;
  8506  0AE1  1496               	bsf	22,1	;volatile
  8507  0AE2  0008               	return
  8508  0AE3                     __end_of_LCDWrite:	
  8509                           
  8510                           	psect	text28
  8511  1746                     __ptext28:	
  8512 ;; *************** function _ADCRead *****************
  8513 ;; Defined at:
  8514 ;;		line 52 in file "adcc.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  channel         1    wreg     enum E13559
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;  channel         1    3[COMMON] enum E13559
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  2    0[COMMON] unsigned int 
  8521 ;; Registers used:
  8522 ;;		wreg
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8532 ;;Total ram usage:        4 bytes
  8533 ;; Hardware stack levels used:    1
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_main
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           
  8542                           ;psect for function _ADCRead
  8543  1746                     _ADCRead:	
  8544                           
  8545                           ;incstack = 0
  8546                           ; Regs used in _ADCRead: [wreg]
  8547                           ;ADCRead@channel stored from wreg
  8548  1746  00F3               	movwf	ADCRead@channel
  8549                           
  8550                           ;adcc.c: 55: ADPCH = channel;
  8551  1747  0873               	movf	ADCRead@channel,w
  8552  1748  0021               	movlb	1	; select bank1
  8553  1749  009E               	movwf	30	;volatile
  8554                           
  8555                           ;adcc.c: 58: ADCON0bits.ADON = 1;
  8556  174A  1793               	bsf	19,7	;volatile
  8557                           
  8558                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
  8559  174B  1313               	bcf	19,6	;volatile
  8560                           
  8561                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
  8562  174C  1413               	bsf	19,0	;volatile
  8563  174D                     l50:	
  8564                           ;adcc.c: 68: {
  8565                           
  8566                           ;adcc.c: 67: while (ADCON0bits.ADGO)
  8567                           
  8568  174D  1813               	btfsc	19,0	;volatile
  8569  174E  2F4D               	goto	l50
  8570                           
  8571                           ;adcc.c: 69: }
  8572                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
  8573  174F  080D               	movf	13,w	;volatile
  8574  1750  00F1               	movwf	?_ADCRead+1
  8575  1751  080C               	movf	12,w	;volatile
  8576  1752  00F0               	movwf	?_ADCRead
  8577  1753  0008               	return
  8578  1754                     __end_of_ADCRead:	
  8579  007E                     btemp	set	126	;btemp
  8580  007E                     wtemp	set	126
  8581  007E                     wtemp0	set	126
  8582  0080                     wtemp1	set	128
  8583  0082                     wtemp2	set	130
  8584  0084                     wtemp3	set	132
  8585  0086                     wtemp4	set	134
  8586  0088                     wtemp5	set	136
  8587  007F                     wtemp6	set	127
  8588  007E                     ttemp	set	126
  8589  007E                     ttemp0	set	126
  8590  0081                     ttemp1	set	129
  8591  0084                     ttemp2	set	132
  8592  0087                     ttemp3	set	135
  8593  007F                     ttemp4	set	127
  8594  007E                     ltemp	set	126
  8595  007E                     ltemp0	set	126
  8596  0082                     ltemp1	set	130
  8597  0086                     ltemp2	set	134
  8598  0080                     ltemp3	set	128


Data Sizes:
    Strings     30
    Constant    666
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      78
    BANK1            80     28      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10            8      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 

    LCDWriteString@characters	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    LCDBitmap@my_array	PTR const unsigned char  size(2) Largest target is 336
		 -> aloha(CODE[336]), 


Critical Paths under _main in COMMON

    _main->_LCDBitmap
    _main->_LCDWriteString
    _main->___fttol
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftadd->___awtoft
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _LCDWriteString->_LCDWriteCharacter
    _LCDWriteInt->___fttol
    _LCDWriteCharacter->___wmul
    _LCDBitmap->_gotoXY
    _gotoXY->_LCDWrite

Critical Paths under _main in BANK0

    _main->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   49119
                                             61 BANK0     10    10      0
                                              0 BANK1     28    28      0
                            _ADCRead
                          _LCDBitmap
                  _LCDWriteCharacter
                        _LCDWriteInt
                     _LCDWriteString
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                             _gotoXY
                                _log
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   16680
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    7287
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2894
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1874
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3925
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3646
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    3298
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    2     2      0    3824
                                             11 COMMON     2     2      0
                    _ADCC_Initialize
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1068
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2756
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     1      2    1741
                                             12 COMMON     2     0      2
                                              0 BANK0      1     1      0
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         19    14      5    3323
                                              0 BANK0     19    14      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1590
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCDBitmap                                            8     3      5    2981
                                              8 COMMON     6     1      5
                                              0 BANK0      2     2      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (1) _gotoXY                                               3     2      1    1642
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDWrite                                             5     4      1    1068
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _ADCRead                                              4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCRead
   _LCDBitmap
     _LCDWrite
     _gotoXY
       _LCDWrite
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
     ___awdiv
     ___awmod
     ___fttol (ARG)
   _LCDWriteString
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
   _SYSTEM_Initialize
     _ADCC_Initialize
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
   ___lwtoft
     ___ftpack
   _gotoXY
     _LCDWrite
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      84      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10               8      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      84      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Dec 11 16:10:10 2017

        LCDWriteInt@fieldLength 0022                     __CFG_CP$OFF 0000                              l50 174D  
                  ___awdiv@sign 0076             ___wmul@multiplicand 0072                    ___ftadd@exp1 004C  
                  ___ftadd@exp2 004B                     __CFG_LVP$ON 0000                    ___ftadd@sign 004A  
                           l300 17AF                             l165 0AC9                             l166 0ACB  
                           l167 0AD1                             l168 0AE1                             l169 0AD5  
                           l355 0DB3                             l461 0D70                   LCDClear@index 0079  
                           l552 0E90                             l468 0D83                             l492 024E  
                           l469 0D8B                    __CFG_CPD$OFF 0000                             _log 0F53  
               __end_of_ADCRead 1754                    ___awmod@sign 0076                    __CFG_BORV$LO 0000  
                           wreg 0009                    LCDBitmap@len 007B                 __end_of_LCDInit 0B7E  
                  ?_LCDWriteInt 0020                    __CFG_ZCD$OFF 0000                    ___ftdiv@cntr 003A  
                  ___ftdiv@sign 003F                            l2016 0014                            l2024 177A  
                          l2050 013C                            l2130 0E0D                            l2060 015C  
                          l2116 0DD4                            l2108 0DC4                            l2220 0E87  
                          l2212 0E6C                            l2054 0140                            l2038 0106  
                          l2134 0E1B                            l2126 0E02                            l2118 0DE2  
                          l2150 0ED7                            l2222 0E93                            l2214 0E7A  
                          l2072 019A                            l2056 0144                            l2048 010D  
                          l1600 0D5C                            l2144 0EC1                            l2066 0160  
                          l2058 014C                            l2226 0EA1                            l2082 0F71  
                          l2068 018C                            l2172 0F31                            l2164 0F18  
                          l2332 03FE                            l1606 0D75                            l1702 028D  
                          l2318 034D                            l1624 17A9                            l1608 0D7D  
                          l2184 17CA                            l1712 0047                            l2088 0F82  
                          l1642 01D7                            l2194 0E3C                            l1730 0098  
                          l1900 0C2C                            l1812 0B04                            l1652 01ED  
                          l2348 04C7                            l2292 02D6                            l1806 0AF0  
                          l1670 021A                            l1646 01DE                            l1742 00B4  
                          l1734 00A0                            l1718 005D                            l1840 0C4E  
                          l1904 0C34                            l1592 0D46                            l1672 0224  
                          l1664 0207                            l1850 0C56                            l1834 0C43  
                          l1682 0240                            l1674 0229                            l1746 00BC  
                          l1852 0C62                            l1596 0D4D                            l1692 0272  
                          l1684 024A                            l1676 022D                            l1916 17EA  
                          l1924 0B94                            l1862 0C7D                            l1598 0D57  
                          l1688 0260                            l1928 0BAA                            l1866 0C85  
                          l1858 0C74                            l1890 0C0B                            l1882 0C05  
                          l1892 0C17                            l1948 0BCB                            l1878 0BFE  
                          l1966 0D37                            l1896 0C23                            ?_log 0057  
                          STR_1 0AA9                            STR_2 0A9A                            u2005 0C63  
                          u2015 0C6D                            u2025 0C75                            u2105 0C1D  
                          u2115 0C24                            _LATA 0016                            u2230 00EF  
                          _LATB 0017                            u2215 001A                            _LATC 0018  
                          u2085 0C0E                            u2405 0DF7                            u1525 0D92  
                          u1445 0D52                            u2415 0E03                            u1465 0D6B  
                          u2505 0F32                            u1705 021B                            u1555 17B0  
                          u1565 17B5                            u1485 0D78                            u2605 0E88  
                          u2710 02B3                            u2295 017A                            u2375 0DD7  
                          u1735 022E                            u2465 0EE9                            u2545 0E43  
                          u1905 00BD                            u2395 0DE3                            u2475 0EF9  
                          u1675 0208                            u1915 00C3                            u1835 0069  
                          u2485 0F19                            u1765 0241                            u1845 0079  
                          u1935 0AEE                            u2495 0F28                            u2575 0E6D  
                          u1945 0B02                            u1865 00A1                            u1875 00A7  
                          u2757 02CF                            u2767 0B31                            u1985 0C59  
                          u2777 0B3D                            _WPUA 0F39                            _WPUB 0F44  
                          _WPUC 0F4F                            _WPUE 0F65                    __CFG_WRT$OFF 0000  
                 __CFG_FCMEN$ON 0000              __size_of_LCDBitmap 0027                            _main 02A5  
                  ___ftpack@arg 0070                    ___ftpack@exp 0073                            fsr0h 0005  
                          fsr1h 0007                            fsr0l 0004                            indf0 0000  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
             LCDBitmap@my_array 0078                            log@x 0057                            ltemp 007E  
                          start 0002                            ttemp 007E                            wtemp 007E  
                 __CFG_CSWEN$ON 0000                   __CFG_MCLRE$ON 0000                    ___ftmul@cntr 002E  
                  ___ftmul@sign 002F                __end_of_LCDClear 0B09                    ___fttol@exp1 007D  
                         ??_log 005A                    ___fttol@lval 0079  __size_of_OSCILLATOR_Initialize 0008  
              __end_of_LCDWrite 0AE3   __end_of_OSCILLATOR_Initialize 173A                 __end_of___aldiv 0E24  
                         _ADACQ 009D                           _ADCAP 009B                           _ADACT 0099  
                         ?_main 0070                           _ADCLK 0098                           _ADPCH 009E  
                         _ADREF 009A                 __end_of___awdiv 0C8A                           _ADPRE 009C  
               __end_of___ftadd 02A5                   __CFG_WDTE$OFF 0000                 __end_of___awmod 0C39  
                         _ADRPT 010D                 __end_of___ftdiv 0F53                 __end_of___ftmul 00E4  
               ___awdiv@divisor 0070                 __end_of___ftsub 17E0                 __end_of___fttol 0EAA  
               ___awdiv@counter 0075                           _OSCEN 0891                           _TRISA 0011  
                         _TRISB 0012                           _TRISC 0013                   ___awtoft@sign 007D  
                         _aloha 092F                           _frexp 0BB9                           _fonts 0800  
                         _errno 006C                   ___ftpack@sign 0074                           main@R 00A1  
                __CFG_BOREN$OFF 0000                           ltemp0 007E                           ltemp1 0082  
                         ltemp2 0086                           ltemp3 0080                           ttemp0 007E  
                         ttemp1 0081                           ttemp2 0084                           ttemp3 0087  
                         ttemp4 007F                           status 0003                           wtemp0 007E  
                         wtemp1 0080                           wtemp2 0082                           wtemp3 0084  
                         wtemp4 0086                           wtemp5 0088                           wtemp6 007F  
                LCDBitmap@index 0020                 __initialization 07E0                     log@exponent 005B  
                  __end_of_main 07E0          LCDBitmap@startPosition 007A                       ??_ADCRead 0073  
             __end_of_LCDBitmap 0030                          ??_main 005D                   ___fttol@sign1 0078  
                     ??_LCDInit 0075         LCDWrite@data_or_command 0072                          _ADCON0 0093  
                        _ADCON1 0094                          _ADCON2 0095                          _ADCON3 0096  
                        ?_frexp 0070                          _ADLTHH 010F                          _ADLTHL 010E  
                        _ADRESH 008D                          _ADRESL 008C                          _ADSTAT 0097  
                        _ADUTHH 0111                ___awdiv@dividend 0072                          _ADUTHL 0110  
              __end_of___awtoft 1800                          _ANSELA 0F38                          _ANSELB 0F43  
                        _ANSELC 0F4E                __end_of___ftpack 0DA2              __CFG_RSTOSC$HFINT1 0000  
                __CFG_WDTCCS$SC 0000                          _FVRCON 090C                __end_of___lwtoft 177A  
                        _OSCFRQ 0893                  __CFG_PWRTE$OFF 0000                  _LCDWriteString 177A  
                        ___ftge 0B7E                       ??___aldiv 0078                          ___wmul 17A7  
                     ??___awdiv 0074                       ??___ftadd 0046                  __CFG_STVREN$ON 0000  
                     ??___awmod 0074                       ??___ftdiv 0036                       ??___ftmul 0026  
                     ??___ftsub 007E                       ??___fttol 0074                          _gotoXY 1754  
              ___awdiv@quotient 0077                 ___awmod@divisor 0070                 ___awmod@counter 0075  
         ___ftmul@f3_as_product 002B                 _ADCC_Initialize 178E                    LCDWrite@data 0070  
                  LCDWriteInt@i 0031                    LCDWriteInt@j 002F                   main@steinhart 00B9  
                     ?_LCDClear 0070               _SYSTEM_Initialize 0B09            __size_of_LCDWriteInt 00CB  
              __end_oflog@coeff 0A9A         __end_of__initialization 07FD                      ___ftadd@f1 0040  
                    ___ftadd@f2 0043                      ___ftge@ff1 0070                      ___ftge@ff2 0073  
                     ?_LCDWrite 0070              ?_SYSTEM_Initialize 0070          __end_of_LCDWriteString 178E  
                  eval_poly@res 0054                      ___ftdiv@f1 0033                      ___ftdiv@f2 0030  
                    ___ftdiv@f3 003B                      ___awtoft@c 0078                      ___ftmul@f1 0020  
                    ___ftmul@f2 0023                      ___ftsub@f1 0050                      ___ftsub@f2 004D  
                    ___fttol@f1 0070                  __pcstackCOMMON 0070             ??_SYSTEM_Initialize 007B  
                 __end_of_aloha 0A7F                   __end_of_frexp 0BF4                   __end_of_fonts 092F  
                     LCDWrite@d 0073                       LCDWrite@i 0074                      ___lwtoft@c 0078  
             LCDWriteInt@F13664 0067                         ??_frexp 0074       __end_of_SYSTEM_Initialize 0B43  
                    __pbssBANK0 0067                      __pbssBANK1 00BC              __size_of_eval_poly 0060  
                    ??_LCDClear 0078                      ??_LCDWrite 0071                 ?_LCDWriteString 007C  
                    __pmaintext 02A5                         ?___ftge 0070                         ?___wmul 0070  
               __CFG_PPS1WAY$ON 0000         __end_of_ADCC_Initialize 17A7                         ?_gotoXY 0075  
                       _ADCRead 1746                       ?___awtoft 0078                       ?___ftpack 0070  
                       _ADSTPTH 0113                         _ADSTPTL 0112                main@displayTemp2 00A7  
                     ?___lwtoft 0078                         _LCDInit 0B43                         _OSCCON1 088D  
                       _OSCCON3 088F                         _OSCTUNE 0892            __CFG_SCANE$available 0000  
                       ___aldiv 0DA2                 __size_of___ftge 003B                         ___awdiv 0C39  
                       ___ftadd 01AF                         ___awmod 0BF4                         ___ftdiv 0EAA  
               __size_of___wmul 001B                         ___ftmul 0030                         ___ftsub 17C2  
                       ___fttol 0E24                 __size_of_gotoXY 0013                      ??___awtoft 007B  
                    ??___ftpack 0075               __end_of_eval_poly 0D3E                         __ptext1 0F53  
                       __ptext2 0BB9                         __ptext3 0CDE                         __ptext4 0030  
                       __ptext5 0B7E                         __ptext6 17E0                         __ptext7 1767  
                       __ptext8 0E24                         __ptext9 17C2                      ??___lwtoft 007B  
         _OSCILLATOR_Initialize 1732                    __size_of_log 00AD                ___awmod@dividend 0072  
                ADCRead@channel 0073                ___aldiv@dividend 0074                       _LCDBitmap 0009  
                       _samples 2328      __size_of_SYSTEM_Initialize 003A                         clrloop0 173B  
          end_of_initialization 07FD           LCDWriteCharacter@base 007A                         gotoXY@x 0077  
                       gotoXY@y 0075                ___aldiv@quotient 0022                      main@F13721 00BC  
                  __pstringtext 0800                ?_ADCC_Initialize 0070               _LCDWriteCharacter 0C8A  
         __CFG_WDTCPS$WDTCPS_31 0000              ?_LCDWriteCharacter 0070                      ?_LCDBitmap 0078  
                     _TRISAbits 0011             ??_LCDWriteCharacter 0076                __CFG_FEXTOSC$OFF 0000  
                   ___ftdiv@exp 003E               __size_of_LCDClear 0026      LCDWriteCharacter@character 0079  
                    main@totals 00B1               __size_of_LCDWrite 0025                     ___ftmul@exp 002A  
     __end_of_LCDWriteCharacter 0CDE                  __end_of___ftge 0BB9                  __end_of___wmul 17C2  
                __end_of_gotoXY 1767          ?_OSCILLATOR_Initialize 0070             start_initialization 07E0  
                    eval_poly@d 0050                      eval_poly@n 0052                      eval_poly@x 004D  
                   __end_of_log 1000                   ??_LCDWriteInt 0025                ??_LCDWriteString 0020  
                    frexp@value 0070                __CFG_LPBOREN$OFF 0000                        ??___ftge 0076  
                      ??___wmul 0074                        ??_gotoXY 0076                        ?_ADCRead 0070  
             __size_of___awtoft 0020                        ?_LCDInit 0070               __size_of___ftpack 0064  
                   __pbssBIGRAM 2328                       ___latbits 0002                     ??_LCDBitmap 007D  
             __size_of___lwtoft 0013                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
           __end_of_LCDWriteInt 01AF                main@sampleIndex0 00C4                main@sampleIndex1 00C6  
    __size_of_LCDWriteCharacter 0054                        ?___aldiv 0070                        ?___awdiv 0070  
                      ?___ftadd 0040                        ?___awmod 0070                        ?___ftdiv 0030  
                      ?___ftmul 0020                        ?___ftsub 004D                        ?___fttol 0070  
              LCDWriteInt@value 0020                 main@displayTemp 00A4                       _eval_poly 0CDE  
                __size_of_frexp 003B                        _LCDClear 0AE3                 ___aldiv@divisor 0070  
               ___aldiv@counter 0020                  ___wmul@product 0074                        _LATAbits 0016  
                      _LCDWrite 0ABE                       clear_ram0 173A                __size_of_ADCRead 000E  
                    _ADCON0bits 0093               ___wmul@multiplier 0070                       main@count 00A0  
                    ?_eval_poly 004D                __size_of_LCDInit 003B                     _LCDWriteInt 00E4  
                     frexp@eptr 0073         ??_OSCILLATOR_Initialize 0070            LCDWriteInt@numPlaces 0023  
              __size_of___aldiv 0082                __size_of___awdiv 0051                __size_of___ftadd 00F6  
              __size_of___awmod 0045                __size_of___ftdiv 00A9                __size_of___ftmul 00B4  
              __size_of___ftsub 001E                __size_of___fttol 0086                        ___awtoft 17E0  
                      ___ftpack 0D3E                        ___lwtoft 1767        __size_of_ADCC_Initialize 0019  
                      _main$806 00AA                main@solarOutTemp 00AF                        __ptext10 01AF  
                      __ptext11 0EAA                        __ptext20 00E4                        __ptext12 0D3E  
                      __ptext21 0BF4                        __ptext13 0DA2                        __ptext22 0C39  
                      __ptext14 0B09                        __ptext23 0C8A                        __ptext15 1732  
                      __ptext24 17A7                        __ptext16 0B43                        __ptext25 0009  
                      __ptext17 0AE3                        __ptext26 1754                        __ptext18 178E  
                      __ptext27 0ABE                        __ptext19 177A                        __ptext28 1746  
               LCDWriteInt@sign 0024                   __size_of_main 053B            __CFG_WDTCWS$WDTCWS_7 0000  
                      log@coeff 0A7F                     ??_eval_poly 007E                 main@solarInTemp 00AD  
                LCDWriteInt@str 002A               __CFG_CLKOUTEN$OFF 0000        LCDWriteString@characters 007C  
                  ___aldiv@sign 0021               ??_ADCC_Initialize 0070         __size_of_LCDWriteString 0014  
