

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Nov 03 13:58:17 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x620,48
    42                           	dabs	1,0x5BC,52
    43                           	dabs	1,0x238C,0,_samples
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F18855 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  001C                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0110                     	;# 
   135  0110                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0112                     	;# 
   139  0113                     	;# 
   140  0114                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0116                     	;# 
   145  0117                     	;# 
   146  0119                     	;# 
   147  0119                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011A                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011B                     	;# 
   156  011B                     	;# 
   157  011C                     	;# 
   158  011C                     	;# 
   159  011C                     	;# 
   160  011D                     	;# 
   161  011D                     	;# 
   162  011D                     	;# 
   163  011E                     	;# 
   164  011E                     	;# 
   165  011E                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  011F                     	;# 
   170  011F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  018E                     	;# 
   174  018F                     	;# 
   175  0190                     	;# 
   176  0191                     	;# 
   177  0192                     	;# 
   178  0196                     	;# 
   179  0197                     	;# 
   180  0198                     	;# 
   181  0199                     	;# 
   182  019A                     	;# 
   183  019B                     	;# 
   184  019C                     	;# 
   185  020C                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  020F                     	;# 
   190  020F                     	;# 
   191  0210                     	;# 
   192  0210                     	;# 
   193  0211                     	;# 
   194  0211                     	;# 
   195  0212                     	;# 
   196  0212                     	;# 
   197  0213                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0216                     	;# 
   202  0216                     	;# 
   203  0217                     	;# 
   204  0217                     	;# 
   205  0218                     	;# 
   206  0218                     	;# 
   207  0219                     	;# 
   208  021A                     	;# 
   209  021B                     	;# 
   210  021B                     	;# 
   211  021C                     	;# 
   212  021C                     	;# 
   213  021D                     	;# 
   214  021D                     	;# 
   215  021E                     	;# 
   216  021F                     	;# 
   217  028C                     	;# 
   218  028C                     	;# 
   219  028D                     	;# 
   220  028D                     	;# 
   221  028E                     	;# 
   222  028F                     	;# 
   223  0290                     	;# 
   224  0290                     	;# 
   225  0291                     	;# 
   226  0292                     	;# 
   227  0292                     	;# 
   228  0293                     	;# 
   229  0293                     	;# 
   230  0294                     	;# 
   231  0295                     	;# 
   232  0296                     	;# 
   233  0296                     	;# 
   234  0297                     	;# 
   235  0298                     	;# 
   236  0298                     	;# 
   237  0299                     	;# 
   238  0299                     	;# 
   239  029A                     	;# 
   240  029B                     	;# 
   241  029C                     	;# 
   242  029C                     	;# 
   243  029D                     	;# 
   244  030C                     	;# 
   245  030C                     	;# 
   246  030D                     	;# 
   247  030E                     	;# 
   248  030F                     	;# 
   249  0310                     	;# 
   250  0310                     	;# 
   251  0311                     	;# 
   252  0312                     	;# 
   253  0313                     	;# 
   254  0314                     	;# 
   255  0314                     	;# 
   256  0315                     	;# 
   257  0316                     	;# 
   258  0317                     	;# 
   259  0318                     	;# 
   260  0318                     	;# 
   261  0319                     	;# 
   262  031A                     	;# 
   263  031B                     	;# 
   264  031C                     	;# 
   265  031C                     	;# 
   266  031D                     	;# 
   267  031E                     	;# 
   268  031F                     	;# 
   269  038C                     	;# 
   270  038D                     	;# 
   271  038E                     	;# 
   272  0390                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  040C                     	;# 
   276  040D                     	;# 
   277  040E                     	;# 
   278  040F                     	;# 
   279  0410                     	;# 
   280  0411                     	;# 
   281  0416                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041A                     	;# 
   289  041B                     	;# 
   290  041C                     	;# 
   291  041C                     	;# 
   292  041D                     	;# 
   293  041E                     	;# 
   294  041F                     	;# 
   295  048C                     	;# 
   296  048C                     	;# 
   297  048D                     	;# 
   298  048E                     	;# 
   299  048F                     	;# 
   300  048F                     	;# 
   301  0490                     	;# 
   302  0491                     	;# 
   303  0492                     	;# 
   304  0492                     	;# 
   305  0493                     	;# 
   306  0494                     	;# 
   307  0495                     	;# 
   308  0495                     	;# 
   309  0496                     	;# 
   310  0497                     	;# 
   311  0498                     	;# 
   312  0499                     	;# 
   313  049A                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  050C                     	;# 
   318  050C                     	;# 
   319  050D                     	;# 
   320  050E                     	;# 
   321  050F                     	;# 
   322  050F                     	;# 
   323  0510                     	;# 
   324  0511                     	;# 
   325  0512                     	;# 
   326  0512                     	;# 
   327  0513                     	;# 
   328  0514                     	;# 
   329  0515                     	;# 
   330  0515                     	;# 
   331  0516                     	;# 
   332  0517                     	;# 
   333  0518                     	;# 
   334  0519                     	;# 
   335  051A                     	;# 
   336  051B                     	;# 
   337  051C                     	;# 
   338  051D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  060C                     	;# 
   350  060D                     	;# 
   351  060E                     	;# 
   352  060F                     	;# 
   353  0610                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0616                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061D                     	;# 
   366  061E                     	;# 
   367  068C                     	;# 
   368  068D                     	;# 
   369  068E                     	;# 
   370  068F                     	;# 
   371  0690                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  0796                     	;# 
   395  0797                     	;# 
   396  0798                     	;# 
   397  0799                     	;# 
   398  079A                     	;# 
   399  079B                     	;# 
   400  080C                     	;# 
   401  080D                     	;# 
   402  080E                     	;# 
   403  080F                     	;# 
   404  0810                     	;# 
   405  0811                     	;# 
   406  0812                     	;# 
   407  0813                     	;# 
   408  0814                     	;# 
   409  081A                     	;# 
   410  081B                     	;# 
   411  081C                     	;# 
   412  081D                     	;# 
   413  081E                     	;# 
   414  081F                     	;# 
   415  088C                     	;# 
   416  088D                     	;# 
   417  088E                     	;# 
   418  088F                     	;# 
   419  0890                     	;# 
   420  0891                     	;# 
   421  0892                     	;# 
   422  0893                     	;# 
   423  0895                     	;# 
   424  0896                     	;# 
   425  0897                     	;# 
   426  0898                     	;# 
   427  0899                     	;# 
   428  089A                     	;# 
   429  089B                     	;# 
   430  090C                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  091F                     	;# 
   434  091F                     	;# 
   435  098F                     	;# 
   436  098F                     	;# 
   437  0990                     	;# 
   438  0991                     	;# 
   439  0992                     	;# 
   440  0993                     	;# 
   441  0994                     	;# 
   442  0995                     	;# 
   443  0996                     	;# 
   444  0997                     	;# 
   445  0E0F                     	;# 
   446  0E10                     	;# 
   447  0E11                     	;# 
   448  0E12                     	;# 
   449  0E13                     	;# 
   450  0E14                     	;# 
   451  0E15                     	;# 
   452  0E16                     	;# 
   453  0E17                     	;# 
   454  0E18                     	;# 
   455  0E19                     	;# 
   456  0E1A                     	;# 
   457  0E1B                     	;# 
   458  0E1C                     	;# 
   459  0E1D                     	;# 
   460  0E1E                     	;# 
   461  0E1F                     	;# 
   462  0E20                     	;# 
   463  0E21                     	;# 
   464  0E22                     	;# 
   465  0E23                     	;# 
   466  0E24                     	;# 
   467  0E25                     	;# 
   468  0E26                     	;# 
   469  0E27                     	;# 
   470  0E28                     	;# 
   471  0E29                     	;# 
   472  0E2A                     	;# 
   473  0E2B                     	;# 
   474  0E2C                     	;# 
   475  0E2D                     	;# 
   476  0E2E                     	;# 
   477  0E2F                     	;# 
   478  0E30                     	;# 
   479  0E31                     	;# 
   480  0E32                     	;# 
   481  0E33                     	;# 
   482  0E34                     	;# 
   483  0E35                     	;# 
   484  0E36                     	;# 
   485  0E37                     	;# 
   486  0E8F                     	;# 
   487  0E90                     	;# 
   488  0E91                     	;# 
   489  0E92                     	;# 
   490  0E93                     	;# 
   491  0E94                     	;# 
   492  0E95                     	;# 
   493  0E96                     	;# 
   494  0E97                     	;# 
   495  0E9C                     	;# 
   496  0E9D                     	;# 
   497  0E9E                     	;# 
   498  0EA1                     	;# 
   499  0EA2                     	;# 
   500  0EA3                     	;# 
   501  0EA4                     	;# 
   502  0EA5                     	;# 
   503  0EA9                     	;# 
   504  0EAA                     	;# 
   505  0EAB                     	;# 
   506  0EAC                     	;# 
   507  0EB1                     	;# 
   508  0EB2                     	;# 
   509  0EB3                     	;# 
   510  0EB8                     	;# 
   511  0EB9                     	;# 
   512  0EBA                     	;# 
   513  0EBB                     	;# 
   514  0EBC                     	;# 
   515  0EBD                     	;# 
   516  0EBE                     	;# 
   517  0EC3                     	;# 
   518  0EC5                     	;# 
   519  0EC6                     	;# 
   520  0EC7                     	;# 
   521  0EC8                     	;# 
   522  0EC9                     	;# 
   523  0ECA                     	;# 
   524  0ECB                     	;# 
   525  0ECC                     	;# 
   526  0F10                     	;# 
   527  0F11                     	;# 
   528  0F12                     	;# 
   529  0F13                     	;# 
   530  0F14                     	;# 
   531  0F15                     	;# 
   532  0F16                     	;# 
   533  0F17                     	;# 
   534  0F18                     	;# 
   535  0F19                     	;# 
   536  0F1A                     	;# 
   537  0F1B                     	;# 
   538  0F1C                     	;# 
   539  0F1D                     	;# 
   540  0F1E                     	;# 
   541  0F1F                     	;# 
   542  0F20                     	;# 
   543  0F21                     	;# 
   544  0F22                     	;# 
   545  0F23                     	;# 
   546  0F24                     	;# 
   547  0F25                     	;# 
   548  0F26                     	;# 
   549  0F27                     	;# 
   550  0F38                     	;# 
   551  0F39                     	;# 
   552  0F3A                     	;# 
   553  0F3B                     	;# 
   554  0F3C                     	;# 
   555  0F3D                     	;# 
   556  0F3E                     	;# 
   557  0F3F                     	;# 
   558  0F40                     	;# 
   559  0F41                     	;# 
   560  0F43                     	;# 
   561  0F44                     	;# 
   562  0F45                     	;# 
   563  0F46                     	;# 
   564  0F47                     	;# 
   565  0F48                     	;# 
   566  0F49                     	;# 
   567  0F4A                     	;# 
   568  0F4B                     	;# 
   569  0F4C                     	;# 
   570  0F4E                     	;# 
   571  0F4F                     	;# 
   572  0F50                     	;# 
   573  0F51                     	;# 
   574  0F52                     	;# 
   575  0F53                     	;# 
   576  0F54                     	;# 
   577  0F55                     	;# 
   578  0F56                     	;# 
   579  0F57                     	;# 
   580  0F65                     	;# 
   581  0F68                     	;# 
   582  0F69                     	;# 
   583  0F6A                     	;# 
   584  0F6B                     	;# 
   585  0FE4                     	;# 
   586  0FE5                     	;# 
   587  0FE6                     	;# 
   588  0FE7                     	;# 
   589  0FE8                     	;# 
   590  0FE9                     	;# 
   591  0FEA                     	;# 
   592  0FEB                     	;# 
   593  0FED                     	;# 
   594  0FEE                     	;# 
   595  0FEF                     	;# 
   596  0000                     	;# 
   597  0001                     	;# 
   598  0002                     	;# 
   599  0003                     	;# 
   600  0004                     	;# 
   601  0005                     	;# 
   602  0006                     	;# 
   603  0007                     	;# 
   604  0008                     	;# 
   605  0009                     	;# 
   606  000A                     	;# 
   607  000B                     	;# 
   608  000C                     	;# 
   609  000D                     	;# 
   610  000E                     	;# 
   611  0010                     	;# 
   612  0011                     	;# 
   613  0012                     	;# 
   614  0013                     	;# 
   615  0016                     	;# 
   616  0017                     	;# 
   617  0018                     	;# 
   618  001C                     	;# 
   619  001C                     	;# 
   620  001D                     	;# 
   621  001D                     	;# 
   622  001E                     	;# 
   623  001F                     	;# 
   624  008C                     	;# 
   625  008C                     	;# 
   626  008D                     	;# 
   627  008E                     	;# 
   628  008E                     	;# 
   629  008F                     	;# 
   630  0090                     	;# 
   631  0090                     	;# 
   632  0091                     	;# 
   633  0093                     	;# 
   634  0094                     	;# 
   635  0095                     	;# 
   636  0096                     	;# 
   637  0097                     	;# 
   638  0098                     	;# 
   639  0099                     	;# 
   640  009A                     	;# 
   641  009B                     	;# 
   642  009C                     	;# 
   643  009D                     	;# 
   644  009E                     	;# 
   645  010C                     	;# 
   646  010D                     	;# 
   647  010E                     	;# 
   648  010E                     	;# 
   649  010F                     	;# 
   650  0110                     	;# 
   651  0110                     	;# 
   652  0111                     	;# 
   653  0112                     	;# 
   654  0112                     	;# 
   655  0113                     	;# 
   656  0114                     	;# 
   657  0114                     	;# 
   658  0115                     	;# 
   659  0116                     	;# 
   660  0116                     	;# 
   661  0117                     	;# 
   662  0119                     	;# 
   663  0119                     	;# 
   664  0119                     	;# 
   665  011A                     	;# 
   666  011A                     	;# 
   667  011A                     	;# 
   668  011B                     	;# 
   669  011B                     	;# 
   670  011B                     	;# 
   671  011B                     	;# 
   672  011B                     	;# 
   673  011C                     	;# 
   674  011C                     	;# 
   675  011C                     	;# 
   676  011D                     	;# 
   677  011D                     	;# 
   678  011D                     	;# 
   679  011E                     	;# 
   680  011E                     	;# 
   681  011E                     	;# 
   682  011F                     	;# 
   683  011F                     	;# 
   684  011F                     	;# 
   685  011F                     	;# 
   686  011F                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  018E                     	;# 
   690  018F                     	;# 
   691  0190                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0196                     	;# 
   695  0197                     	;# 
   696  0198                     	;# 
   697  0199                     	;# 
   698  019A                     	;# 
   699  019B                     	;# 
   700  019C                     	;# 
   701  020C                     	;# 
   702  020C                     	;# 
   703  020D                     	;# 
   704  020E                     	;# 
   705  020F                     	;# 
   706  020F                     	;# 
   707  0210                     	;# 
   708  0210                     	;# 
   709  0211                     	;# 
   710  0211                     	;# 
   711  0212                     	;# 
   712  0212                     	;# 
   713  0213                     	;# 
   714  0214                     	;# 
   715  0215                     	;# 
   716  0215                     	;# 
   717  0216                     	;# 
   718  0216                     	;# 
   719  0217                     	;# 
   720  0217                     	;# 
   721  0218                     	;# 
   722  0218                     	;# 
   723  0219                     	;# 
   724  021A                     	;# 
   725  021B                     	;# 
   726  021B                     	;# 
   727  021C                     	;# 
   728  021C                     	;# 
   729  021D                     	;# 
   730  021D                     	;# 
   731  021E                     	;# 
   732  021F                     	;# 
   733  028C                     	;# 
   734  028C                     	;# 
   735  028D                     	;# 
   736  028D                     	;# 
   737  028E                     	;# 
   738  028F                     	;# 
   739  0290                     	;# 
   740  0290                     	;# 
   741  0291                     	;# 
   742  0292                     	;# 
   743  0292                     	;# 
   744  0293                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0296                     	;# 
   749  0296                     	;# 
   750  0297                     	;# 
   751  0298                     	;# 
   752  0298                     	;# 
   753  0299                     	;# 
   754  0299                     	;# 
   755  029A                     	;# 
   756  029B                     	;# 
   757  029C                     	;# 
   758  029C                     	;# 
   759  029D                     	;# 
   760  030C                     	;# 
   761  030C                     	;# 
   762  030D                     	;# 
   763  030E                     	;# 
   764  030F                     	;# 
   765  0310                     	;# 
   766  0310                     	;# 
   767  0311                     	;# 
   768  0312                     	;# 
   769  0313                     	;# 
   770  0314                     	;# 
   771  0314                     	;# 
   772  0315                     	;# 
   773  0316                     	;# 
   774  0317                     	;# 
   775  0318                     	;# 
   776  0318                     	;# 
   777  0319                     	;# 
   778  031A                     	;# 
   779  031B                     	;# 
   780  031C                     	;# 
   781  031C                     	;# 
   782  031D                     	;# 
   783  031E                     	;# 
   784  031F                     	;# 
   785  038C                     	;# 
   786  038D                     	;# 
   787  038E                     	;# 
   788  0390                     	;# 
   789  0391                     	;# 
   790  0392                     	;# 
   791  040C                     	;# 
   792  040D                     	;# 
   793  040E                     	;# 
   794  040F                     	;# 
   795  0410                     	;# 
   796  0411                     	;# 
   797  0416                     	;# 
   798  0416                     	;# 
   799  0417                     	;# 
   800  0418                     	;# 
   801  0418                     	;# 
   802  0419                     	;# 
   803  041A                     	;# 
   804  041A                     	;# 
   805  041B                     	;# 
   806  041C                     	;# 
   807  041C                     	;# 
   808  041D                     	;# 
   809  041E                     	;# 
   810  041F                     	;# 
   811  048C                     	;# 
   812  048C                     	;# 
   813  048D                     	;# 
   814  048E                     	;# 
   815  048F                     	;# 
   816  048F                     	;# 
   817  0490                     	;# 
   818  0491                     	;# 
   819  0492                     	;# 
   820  0492                     	;# 
   821  0493                     	;# 
   822  0494                     	;# 
   823  0495                     	;# 
   824  0495                     	;# 
   825  0496                     	;# 
   826  0497                     	;# 
   827  0498                     	;# 
   828  0499                     	;# 
   829  049A                     	;# 
   830  049B                     	;# 
   831  049C                     	;# 
   832  049D                     	;# 
   833  050C                     	;# 
   834  050C                     	;# 
   835  050D                     	;# 
   836  050E                     	;# 
   837  050F                     	;# 
   838  050F                     	;# 
   839  0510                     	;# 
   840  0511                     	;# 
   841  0512                     	;# 
   842  0512                     	;# 
   843  0513                     	;# 
   844  0514                     	;# 
   845  0515                     	;# 
   846  0515                     	;# 
   847  0516                     	;# 
   848  0517                     	;# 
   849  0518                     	;# 
   850  0519                     	;# 
   851  051A                     	;# 
   852  051B                     	;# 
   853  051C                     	;# 
   854  051D                     	;# 
   855  058C                     	;# 
   856  058C                     	;# 
   857  058D                     	;# 
   858  058E                     	;# 
   859  058F                     	;# 
   860  058F                     	;# 
   861  0590                     	;# 
   862  0591                     	;# 
   863  0592                     	;# 
   864  0593                     	;# 
   865  060C                     	;# 
   866  060D                     	;# 
   867  060E                     	;# 
   868  060F                     	;# 
   869  0610                     	;# 
   870  0611                     	;# 
   871  0612                     	;# 
   872  0613                     	;# 
   873  0614                     	;# 
   874  0616                     	;# 
   875  0617                     	;# 
   876  0618                     	;# 
   877  0619                     	;# 
   878  061A                     	;# 
   879  061B                     	;# 
   880  061C                     	;# 
   881  061D                     	;# 
   882  061E                     	;# 
   883  068C                     	;# 
   884  068D                     	;# 
   885  068E                     	;# 
   886  068F                     	;# 
   887  0690                     	;# 
   888  0691                     	;# 
   889  0692                     	;# 
   890  0693                     	;# 
   891  0694                     	;# 
   892  070C                     	;# 
   893  070D                     	;# 
   894  070E                     	;# 
   895  070F                     	;# 
   896  0710                     	;# 
   897  0711                     	;# 
   898  0712                     	;# 
   899  0713                     	;# 
   900  0714                     	;# 
   901  0716                     	;# 
   902  0717                     	;# 
   903  0718                     	;# 
   904  0719                     	;# 
   905  071A                     	;# 
   906  071B                     	;# 
   907  071C                     	;# 
   908  071D                     	;# 
   909  071E                     	;# 
   910  0796                     	;# 
   911  0797                     	;# 
   912  0798                     	;# 
   913  0799                     	;# 
   914  079A                     	;# 
   915  079B                     	;# 
   916  080C                     	;# 
   917  080D                     	;# 
   918  080E                     	;# 
   919  080F                     	;# 
   920  0810                     	;# 
   921  0811                     	;# 
   922  0812                     	;# 
   923  0813                     	;# 
   924  0814                     	;# 
   925  081A                     	;# 
   926  081B                     	;# 
   927  081C                     	;# 
   928  081D                     	;# 
   929  081E                     	;# 
   930  081F                     	;# 
   931  088C                     	;# 
   932  088D                     	;# 
   933  088E                     	;# 
   934  088F                     	;# 
   935  0890                     	;# 
   936  0891                     	;# 
   937  0892                     	;# 
   938  0893                     	;# 
   939  0895                     	;# 
   940  0896                     	;# 
   941  0897                     	;# 
   942  0898                     	;# 
   943  0899                     	;# 
   944  089A                     	;# 
   945  089B                     	;# 
   946  090C                     	;# 
   947  090E                     	;# 
   948  090F                     	;# 
   949  091F                     	;# 
   950  091F                     	;# 
   951  098F                     	;# 
   952  098F                     	;# 
   953  0990                     	;# 
   954  0991                     	;# 
   955  0992                     	;# 
   956  0993                     	;# 
   957  0994                     	;# 
   958  0995                     	;# 
   959  0996                     	;# 
   960  0997                     	;# 
   961  0E0F                     	;# 
   962  0E10                     	;# 
   963  0E11                     	;# 
   964  0E12                     	;# 
   965  0E13                     	;# 
   966  0E14                     	;# 
   967  0E15                     	;# 
   968  0E16                     	;# 
   969  0E17                     	;# 
   970  0E18                     	;# 
   971  0E19                     	;# 
   972  0E1A                     	;# 
   973  0E1B                     	;# 
   974  0E1C                     	;# 
   975  0E1D                     	;# 
   976  0E1E                     	;# 
   977  0E1F                     	;# 
   978  0E20                     	;# 
   979  0E21                     	;# 
   980  0E22                     	;# 
   981  0E23                     	;# 
   982  0E24                     	;# 
   983  0E25                     	;# 
   984  0E26                     	;# 
   985  0E27                     	;# 
   986  0E28                     	;# 
   987  0E29                     	;# 
   988  0E2A                     	;# 
   989  0E2B                     	;# 
   990  0E2C                     	;# 
   991  0E2D                     	;# 
   992  0E2E                     	;# 
   993  0E2F                     	;# 
   994  0E30                     	;# 
   995  0E31                     	;# 
   996  0E32                     	;# 
   997  0E33                     	;# 
   998  0E34                     	;# 
   999  0E35                     	;# 
  1000  0E36                     	;# 
  1001  0E37                     	;# 
  1002  0E8F                     	;# 
  1003  0E90                     	;# 
  1004  0E91                     	;# 
  1005  0E92                     	;# 
  1006  0E93                     	;# 
  1007  0E94                     	;# 
  1008  0E95                     	;# 
  1009  0E96                     	;# 
  1010  0E97                     	;# 
  1011  0E9C                     	;# 
  1012  0E9D                     	;# 
  1013  0E9E                     	;# 
  1014  0EA1                     	;# 
  1015  0EA2                     	;# 
  1016  0EA3                     	;# 
  1017  0EA4                     	;# 
  1018  0EA5                     	;# 
  1019  0EA9                     	;# 
  1020  0EAA                     	;# 
  1021  0EAB                     	;# 
  1022  0EAC                     	;# 
  1023  0EB1                     	;# 
  1024  0EB2                     	;# 
  1025  0EB3                     	;# 
  1026  0EB8                     	;# 
  1027  0EB9                     	;# 
  1028  0EBA                     	;# 
  1029  0EBB                     	;# 
  1030  0EBC                     	;# 
  1031  0EBD                     	;# 
  1032  0EBE                     	;# 
  1033  0EC3                     	;# 
  1034  0EC5                     	;# 
  1035  0EC6                     	;# 
  1036  0EC7                     	;# 
  1037  0EC8                     	;# 
  1038  0EC9                     	;# 
  1039  0ECA                     	;# 
  1040  0ECB                     	;# 
  1041  0ECC                     	;# 
  1042  0F10                     	;# 
  1043  0F11                     	;# 
  1044  0F12                     	;# 
  1045  0F13                     	;# 
  1046  0F14                     	;# 
  1047  0F15                     	;# 
  1048  0F16                     	;# 
  1049  0F17                     	;# 
  1050  0F18                     	;# 
  1051  0F19                     	;# 
  1052  0F1A                     	;# 
  1053  0F1B                     	;# 
  1054  0F1C                     	;# 
  1055  0F1D                     	;# 
  1056  0F1E                     	;# 
  1057  0F1F                     	;# 
  1058  0F20                     	;# 
  1059  0F21                     	;# 
  1060  0F22                     	;# 
  1061  0F23                     	;# 
  1062  0F24                     	;# 
  1063  0F25                     	;# 
  1064  0F26                     	;# 
  1065  0F27                     	;# 
  1066  0F38                     	;# 
  1067  0F39                     	;# 
  1068  0F3A                     	;# 
  1069  0F3B                     	;# 
  1070  0F3C                     	;# 
  1071  0F3D                     	;# 
  1072  0F3E                     	;# 
  1073  0F3F                     	;# 
  1074  0F40                     	;# 
  1075  0F41                     	;# 
  1076  0F43                     	;# 
  1077  0F44                     	;# 
  1078  0F45                     	;# 
  1079  0F46                     	;# 
  1080  0F47                     	;# 
  1081  0F48                     	;# 
  1082  0F49                     	;# 
  1083  0F4A                     	;# 
  1084  0F4B                     	;# 
  1085  0F4C                     	;# 
  1086  0F4E                     	;# 
  1087  0F4F                     	;# 
  1088  0F50                     	;# 
  1089  0F51                     	;# 
  1090  0F52                     	;# 
  1091  0F53                     	;# 
  1092  0F54                     	;# 
  1093  0F55                     	;# 
  1094  0F56                     	;# 
  1095  0F57                     	;# 
  1096  0F65                     	;# 
  1097  0F68                     	;# 
  1098  0F69                     	;# 
  1099  0F6A                     	;# 
  1100  0F6B                     	;# 
  1101  0FE4                     	;# 
  1102  0FE5                     	;# 
  1103  0FE6                     	;# 
  1104  0FE7                     	;# 
  1105  0FE8                     	;# 
  1106  0FE9                     	;# 
  1107  0FEA                     	;# 
  1108  0FEB                     	;# 
  1109  0FED                     	;# 
  1110  0FEE                     	;# 
  1111  0FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  001C                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001D                     	;# 
  1138  001E                     	;# 
  1139  001F                     	;# 
  1140  008C                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008E                     	;# 
  1145  008F                     	;# 
  1146  0090                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0093                     	;# 
  1150  0094                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009C                     	;# 
  1159  009D                     	;# 
  1160  009E                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010E                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0110                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0112                     	;# 
  1171  0113                     	;# 
  1172  0114                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0119                     	;# 
  1179  0119                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011A                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011B                     	;# 
  1187  011B                     	;# 
  1188  011B                     	;# 
  1189  011C                     	;# 
  1190  011C                     	;# 
  1191  011C                     	;# 
  1192  011D                     	;# 
  1193  011D                     	;# 
  1194  011D                     	;# 
  1195  011E                     	;# 
  1196  011E                     	;# 
  1197  011E                     	;# 
  1198  011F                     	;# 
  1199  011F                     	;# 
  1200  011F                     	;# 
  1201  011F                     	;# 
  1202  011F                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  018F                     	;# 
  1207  0190                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0196                     	;# 
  1211  0197                     	;# 
  1212  0198                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  020C                     	;# 
  1218  020C                     	;# 
  1219  020D                     	;# 
  1220  020E                     	;# 
  1221  020F                     	;# 
  1222  020F                     	;# 
  1223  0210                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0216                     	;# 
  1234  0216                     	;# 
  1235  0217                     	;# 
  1236  0217                     	;# 
  1237  0218                     	;# 
  1238  0218                     	;# 
  1239  0219                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021B                     	;# 
  1243  021C                     	;# 
  1244  021C                     	;# 
  1245  021D                     	;# 
  1246  021D                     	;# 
  1247  021E                     	;# 
  1248  021F                     	;# 
  1249  028C                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  028F                     	;# 
  1255  0290                     	;# 
  1256  0290                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0292                     	;# 
  1260  0293                     	;# 
  1261  0293                     	;# 
  1262  0294                     	;# 
  1263  0295                     	;# 
  1264  0296                     	;# 
  1265  0296                     	;# 
  1266  0297                     	;# 
  1267  0298                     	;# 
  1268  0298                     	;# 
  1269  0299                     	;# 
  1270  0299                     	;# 
  1271  029A                     	;# 
  1272  029B                     	;# 
  1273  029C                     	;# 
  1274  029C                     	;# 
  1275  029D                     	;# 
  1276  030C                     	;# 
  1277  030C                     	;# 
  1278  030D                     	;# 
  1279  030E                     	;# 
  1280  030F                     	;# 
  1281  0310                     	;# 
  1282  0310                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0314                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  0318                     	;# 
  1293  0319                     	;# 
  1294  031A                     	;# 
  1295  031B                     	;# 
  1296  031C                     	;# 
  1297  031C                     	;# 
  1298  031D                     	;# 
  1299  031E                     	;# 
  1300  031F                     	;# 
  1301  038C                     	;# 
  1302  038D                     	;# 
  1303  038E                     	;# 
  1304  0390                     	;# 
  1305  0391                     	;# 
  1306  0392                     	;# 
  1307  040C                     	;# 
  1308  040D                     	;# 
  1309  040E                     	;# 
  1310  040F                     	;# 
  1311  0410                     	;# 
  1312  0411                     	;# 
  1313  0416                     	;# 
  1314  0416                     	;# 
  1315  0417                     	;# 
  1316  0418                     	;# 
  1317  0418                     	;# 
  1318  0419                     	;# 
  1319  041A                     	;# 
  1320  041A                     	;# 
  1321  041B                     	;# 
  1322  041C                     	;# 
  1323  041C                     	;# 
  1324  041D                     	;# 
  1325  041E                     	;# 
  1326  041F                     	;# 
  1327  048C                     	;# 
  1328  048C                     	;# 
  1329  048D                     	;# 
  1330  048E                     	;# 
  1331  048F                     	;# 
  1332  048F                     	;# 
  1333  0490                     	;# 
  1334  0491                     	;# 
  1335  0492                     	;# 
  1336  0492                     	;# 
  1337  0493                     	;# 
  1338  0494                     	;# 
  1339  0495                     	;# 
  1340  0495                     	;# 
  1341  0496                     	;# 
  1342  0497                     	;# 
  1343  0498                     	;# 
  1344  0499                     	;# 
  1345  049A                     	;# 
  1346  049B                     	;# 
  1347  049C                     	;# 
  1348  049D                     	;# 
  1349  050C                     	;# 
  1350  050C                     	;# 
  1351  050D                     	;# 
  1352  050E                     	;# 
  1353  050F                     	;# 
  1354  050F                     	;# 
  1355  0510                     	;# 
  1356  0511                     	;# 
  1357  0512                     	;# 
  1358  0512                     	;# 
  1359  0513                     	;# 
  1360  0514                     	;# 
  1361  0515                     	;# 
  1362  0515                     	;# 
  1363  0516                     	;# 
  1364  0517                     	;# 
  1365  0518                     	;# 
  1366  0519                     	;# 
  1367  051A                     	;# 
  1368  051B                     	;# 
  1369  051C                     	;# 
  1370  051D                     	;# 
  1371  058C                     	;# 
  1372  058C                     	;# 
  1373  058D                     	;# 
  1374  058E                     	;# 
  1375  058F                     	;# 
  1376  058F                     	;# 
  1377  0590                     	;# 
  1378  0591                     	;# 
  1379  0592                     	;# 
  1380  0593                     	;# 
  1381  060C                     	;# 
  1382  060D                     	;# 
  1383  060E                     	;# 
  1384  060F                     	;# 
  1385  0610                     	;# 
  1386  0611                     	;# 
  1387  0612                     	;# 
  1388  0613                     	;# 
  1389  0614                     	;# 
  1390  0616                     	;# 
  1391  0617                     	;# 
  1392  0618                     	;# 
  1393  0619                     	;# 
  1394  061A                     	;# 
  1395  061B                     	;# 
  1396  061C                     	;# 
  1397  061D                     	;# 
  1398  061E                     	;# 
  1399  068C                     	;# 
  1400  068D                     	;# 
  1401  068E                     	;# 
  1402  068F                     	;# 
  1403  0690                     	;# 
  1404  0691                     	;# 
  1405  0692                     	;# 
  1406  0693                     	;# 
  1407  0694                     	;# 
  1408  070C                     	;# 
  1409  070D                     	;# 
  1410  070E                     	;# 
  1411  070F                     	;# 
  1412  0710                     	;# 
  1413  0711                     	;# 
  1414  0712                     	;# 
  1415  0713                     	;# 
  1416  0714                     	;# 
  1417  0716                     	;# 
  1418  0717                     	;# 
  1419  0718                     	;# 
  1420  0719                     	;# 
  1421  071A                     	;# 
  1422  071B                     	;# 
  1423  071C                     	;# 
  1424  071D                     	;# 
  1425  071E                     	;# 
  1426  0796                     	;# 
  1427  0797                     	;# 
  1428  0798                     	;# 
  1429  0799                     	;# 
  1430  079A                     	;# 
  1431  079B                     	;# 
  1432  080C                     	;# 
  1433  080D                     	;# 
  1434  080E                     	;# 
  1435  080F                     	;# 
  1436  0810                     	;# 
  1437  0811                     	;# 
  1438  0812                     	;# 
  1439  0813                     	;# 
  1440  0814                     	;# 
  1441  081A                     	;# 
  1442  081B                     	;# 
  1443  081C                     	;# 
  1444  081D                     	;# 
  1445  081E                     	;# 
  1446  081F                     	;# 
  1447  088C                     	;# 
  1448  088D                     	;# 
  1449  088E                     	;# 
  1450  088F                     	;# 
  1451  0890                     	;# 
  1452  0891                     	;# 
  1453  0892                     	;# 
  1454  0893                     	;# 
  1455  0895                     	;# 
  1456  0896                     	;# 
  1457  0897                     	;# 
  1458  0898                     	;# 
  1459  0899                     	;# 
  1460  089A                     	;# 
  1461  089B                     	;# 
  1462  090C                     	;# 
  1463  090E                     	;# 
  1464  090F                     	;# 
  1465  091F                     	;# 
  1466  091F                     	;# 
  1467  098F                     	;# 
  1468  098F                     	;# 
  1469  0990                     	;# 
  1470  0991                     	;# 
  1471  0992                     	;# 
  1472  0993                     	;# 
  1473  0994                     	;# 
  1474  0995                     	;# 
  1475  0996                     	;# 
  1476  0997                     	;# 
  1477  0E0F                     	;# 
  1478  0E10                     	;# 
  1479  0E11                     	;# 
  1480  0E12                     	;# 
  1481  0E13                     	;# 
  1482  0E14                     	;# 
  1483  0E15                     	;# 
  1484  0E16                     	;# 
  1485  0E17                     	;# 
  1486  0E18                     	;# 
  1487  0E19                     	;# 
  1488  0E1A                     	;# 
  1489  0E1B                     	;# 
  1490  0E1C                     	;# 
  1491  0E1D                     	;# 
  1492  0E1E                     	;# 
  1493  0E1F                     	;# 
  1494  0E20                     	;# 
  1495  0E21                     	;# 
  1496  0E22                     	;# 
  1497  0E23                     	;# 
  1498  0E24                     	;# 
  1499  0E25                     	;# 
  1500  0E26                     	;# 
  1501  0E27                     	;# 
  1502  0E28                     	;# 
  1503  0E29                     	;# 
  1504  0E2A                     	;# 
  1505  0E2B                     	;# 
  1506  0E2C                     	;# 
  1507  0E2D                     	;# 
  1508  0E2E                     	;# 
  1509  0E2F                     	;# 
  1510  0E30                     	;# 
  1511  0E31                     	;# 
  1512  0E32                     	;# 
  1513  0E33                     	;# 
  1514  0E34                     	;# 
  1515  0E35                     	;# 
  1516  0E36                     	;# 
  1517  0E37                     	;# 
  1518  0E8F                     	;# 
  1519  0E90                     	;# 
  1520  0E91                     	;# 
  1521  0E92                     	;# 
  1522  0E93                     	;# 
  1523  0E94                     	;# 
  1524  0E95                     	;# 
  1525  0E96                     	;# 
  1526  0E97                     	;# 
  1527  0E9C                     	;# 
  1528  0E9D                     	;# 
  1529  0E9E                     	;# 
  1530  0EA1                     	;# 
  1531  0EA2                     	;# 
  1532  0EA3                     	;# 
  1533  0EA4                     	;# 
  1534  0EA5                     	;# 
  1535  0EA9                     	;# 
  1536  0EAA                     	;# 
  1537  0EAB                     	;# 
  1538  0EAC                     	;# 
  1539  0EB1                     	;# 
  1540  0EB2                     	;# 
  1541  0EB3                     	;# 
  1542  0EB8                     	;# 
  1543  0EB9                     	;# 
  1544  0EBA                     	;# 
  1545  0EBB                     	;# 
  1546  0EBC                     	;# 
  1547  0EBD                     	;# 
  1548  0EBE                     	;# 
  1549  0EC3                     	;# 
  1550  0EC5                     	;# 
  1551  0EC6                     	;# 
  1552  0EC7                     	;# 
  1553  0EC8                     	;# 
  1554  0EC9                     	;# 
  1555  0ECA                     	;# 
  1556  0ECB                     	;# 
  1557  0ECC                     	;# 
  1558  0F10                     	;# 
  1559  0F11                     	;# 
  1560  0F12                     	;# 
  1561  0F13                     	;# 
  1562  0F14                     	;# 
  1563  0F15                     	;# 
  1564  0F16                     	;# 
  1565  0F17                     	;# 
  1566  0F18                     	;# 
  1567  0F19                     	;# 
  1568  0F1A                     	;# 
  1569  0F1B                     	;# 
  1570  0F1C                     	;# 
  1571  0F1D                     	;# 
  1572  0F1E                     	;# 
  1573  0F1F                     	;# 
  1574  0F20                     	;# 
  1575  0F21                     	;# 
  1576  0F22                     	;# 
  1577  0F23                     	;# 
  1578  0F24                     	;# 
  1579  0F25                     	;# 
  1580  0F26                     	;# 
  1581  0F27                     	;# 
  1582  0F38                     	;# 
  1583  0F39                     	;# 
  1584  0F3A                     	;# 
  1585  0F3B                     	;# 
  1586  0F3C                     	;# 
  1587  0F3D                     	;# 
  1588  0F3E                     	;# 
  1589  0F3F                     	;# 
  1590  0F40                     	;# 
  1591  0F41                     	;# 
  1592  0F43                     	;# 
  1593  0F44                     	;# 
  1594  0F45                     	;# 
  1595  0F46                     	;# 
  1596  0F47                     	;# 
  1597  0F48                     	;# 
  1598  0F49                     	;# 
  1599  0F4A                     	;# 
  1600  0F4B                     	;# 
  1601  0F4C                     	;# 
  1602  0F4E                     	;# 
  1603  0F4F                     	;# 
  1604  0F50                     	;# 
  1605  0F51                     	;# 
  1606  0F52                     	;# 
  1607  0F53                     	;# 
  1608  0F54                     	;# 
  1609  0F55                     	;# 
  1610  0F56                     	;# 
  1611  0F57                     	;# 
  1612  0F65                     	;# 
  1613  0F68                     	;# 
  1614  0F69                     	;# 
  1615  0F6A                     	;# 
  1616  0F6B                     	;# 
  1617  0FE4                     	;# 
  1618  0FE5                     	;# 
  1619  0FE6                     	;# 
  1620  0FE7                     	;# 
  1621  0FE8                     	;# 
  1622  0FE9                     	;# 
  1623  0FEA                     	;# 
  1624  0FEB                     	;# 
  1625  0FED                     	;# 
  1626  0FEE                     	;# 
  1627  0FEF                     	;# 
  1628  0000                     	;# 
  1629  0001                     	;# 
  1630  0002                     	;# 
  1631  0003                     	;# 
  1632  0004                     	;# 
  1633  0005                     	;# 
  1634  0006                     	;# 
  1635  0007                     	;# 
  1636  0008                     	;# 
  1637  0009                     	;# 
  1638  000A                     	;# 
  1639  000B                     	;# 
  1640  000C                     	;# 
  1641  000D                     	;# 
  1642  000E                     	;# 
  1643  0010                     	;# 
  1644  0011                     	;# 
  1645  0012                     	;# 
  1646  0013                     	;# 
  1647  0016                     	;# 
  1648  0017                     	;# 
  1649  0018                     	;# 
  1650  001C                     	;# 
  1651  001C                     	;# 
  1652  001D                     	;# 
  1653  001D                     	;# 
  1654  001E                     	;# 
  1655  001F                     	;# 
  1656  008C                     	;# 
  1657  008C                     	;# 
  1658  008D                     	;# 
  1659  008E                     	;# 
  1660  008E                     	;# 
  1661  008F                     	;# 
  1662  0090                     	;# 
  1663  0090                     	;# 
  1664  0091                     	;# 
  1665  0093                     	;# 
  1666  0094                     	;# 
  1667  0095                     	;# 
  1668  0096                     	;# 
  1669  0097                     	;# 
  1670  0098                     	;# 
  1671  0099                     	;# 
  1672  009A                     	;# 
  1673  009B                     	;# 
  1674  009C                     	;# 
  1675  009D                     	;# 
  1676  009E                     	;# 
  1677  010C                     	;# 
  1678  010D                     	;# 
  1679  010E                     	;# 
  1680  010E                     	;# 
  1681  010F                     	;# 
  1682  0110                     	;# 
  1683  0110                     	;# 
  1684  0111                     	;# 
  1685  0112                     	;# 
  1686  0112                     	;# 
  1687  0113                     	;# 
  1688  0114                     	;# 
  1689  0114                     	;# 
  1690  0115                     	;# 
  1691  0116                     	;# 
  1692  0116                     	;# 
  1693  0117                     	;# 
  1694  0119                     	;# 
  1695  0119                     	;# 
  1696  0119                     	;# 
  1697  011A                     	;# 
  1698  011A                     	;# 
  1699  011A                     	;# 
  1700  011B                     	;# 
  1701  011B                     	;# 
  1702  011B                     	;# 
  1703  011B                     	;# 
  1704  011B                     	;# 
  1705  011C                     	;# 
  1706  011C                     	;# 
  1707  011C                     	;# 
  1708  011D                     	;# 
  1709  011D                     	;# 
  1710  011D                     	;# 
  1711  011E                     	;# 
  1712  011E                     	;# 
  1713  011E                     	;# 
  1714  011F                     	;# 
  1715  011F                     	;# 
  1716  011F                     	;# 
  1717  011F                     	;# 
  1718  011F                     	;# 
  1719  018C                     	;# 
  1720  018D                     	;# 
  1721  018E                     	;# 
  1722  018F                     	;# 
  1723  0190                     	;# 
  1724  0191                     	;# 
  1725  0192                     	;# 
  1726  0196                     	;# 
  1727  0197                     	;# 
  1728  0198                     	;# 
  1729  0199                     	;# 
  1730  019A                     	;# 
  1731  019B                     	;# 
  1732  019C                     	;# 
  1733  020C                     	;# 
  1734  020C                     	;# 
  1735  020D                     	;# 
  1736  020E                     	;# 
  1737  020F                     	;# 
  1738  020F                     	;# 
  1739  0210                     	;# 
  1740  0210                     	;# 
  1741  0211                     	;# 
  1742  0211                     	;# 
  1743  0212                     	;# 
  1744  0212                     	;# 
  1745  0213                     	;# 
  1746  0214                     	;# 
  1747  0215                     	;# 
  1748  0215                     	;# 
  1749  0216                     	;# 
  1750  0216                     	;# 
  1751  0217                     	;# 
  1752  0217                     	;# 
  1753  0218                     	;# 
  1754  0218                     	;# 
  1755  0219                     	;# 
  1756  021A                     	;# 
  1757  021B                     	;# 
  1758  021B                     	;# 
  1759  021C                     	;# 
  1760  021C                     	;# 
  1761  021D                     	;# 
  1762  021D                     	;# 
  1763  021E                     	;# 
  1764  021F                     	;# 
  1765  028C                     	;# 
  1766  028C                     	;# 
  1767  028D                     	;# 
  1768  028D                     	;# 
  1769  028E                     	;# 
  1770  028F                     	;# 
  1771  0290                     	;# 
  1772  0290                     	;# 
  1773  0291                     	;# 
  1774  0292                     	;# 
  1775  0292                     	;# 
  1776  0293                     	;# 
  1777  0293                     	;# 
  1778  0294                     	;# 
  1779  0295                     	;# 
  1780  0296                     	;# 
  1781  0296                     	;# 
  1782  0297                     	;# 
  1783  0298                     	;# 
  1784  0298                     	;# 
  1785  0299                     	;# 
  1786  0299                     	;# 
  1787  029A                     	;# 
  1788  029B                     	;# 
  1789  029C                     	;# 
  1790  029C                     	;# 
  1791  029D                     	;# 
  1792  030C                     	;# 
  1793  030C                     	;# 
  1794  030D                     	;# 
  1795  030E                     	;# 
  1796  030F                     	;# 
  1797  0310                     	;# 
  1798  0310                     	;# 
  1799  0311                     	;# 
  1800  0312                     	;# 
  1801  0313                     	;# 
  1802  0314                     	;# 
  1803  0314                     	;# 
  1804  0315                     	;# 
  1805  0316                     	;# 
  1806  0317                     	;# 
  1807  0318                     	;# 
  1808  0318                     	;# 
  1809  0319                     	;# 
  1810  031A                     	;# 
  1811  031B                     	;# 
  1812  031C                     	;# 
  1813  031C                     	;# 
  1814  031D                     	;# 
  1815  031E                     	;# 
  1816  031F                     	;# 
  1817  038C                     	;# 
  1818  038D                     	;# 
  1819  038E                     	;# 
  1820  0390                     	;# 
  1821  0391                     	;# 
  1822  0392                     	;# 
  1823  040C                     	;# 
  1824  040D                     	;# 
  1825  040E                     	;# 
  1826  040F                     	;# 
  1827  0410                     	;# 
  1828  0411                     	;# 
  1829  0416                     	;# 
  1830  0416                     	;# 
  1831  0417                     	;# 
  1832  0418                     	;# 
  1833  0418                     	;# 
  1834  0419                     	;# 
  1835  041A                     	;# 
  1836  041A                     	;# 
  1837  041B                     	;# 
  1838  041C                     	;# 
  1839  041C                     	;# 
  1840  041D                     	;# 
  1841  041E                     	;# 
  1842  041F                     	;# 
  1843  048C                     	;# 
  1844  048C                     	;# 
  1845  048D                     	;# 
  1846  048E                     	;# 
  1847  048F                     	;# 
  1848  048F                     	;# 
  1849  0490                     	;# 
  1850  0491                     	;# 
  1851  0492                     	;# 
  1852  0492                     	;# 
  1853  0493                     	;# 
  1854  0494                     	;# 
  1855  0495                     	;# 
  1856  0495                     	;# 
  1857  0496                     	;# 
  1858  0497                     	;# 
  1859  0498                     	;# 
  1860  0499                     	;# 
  1861  049A                     	;# 
  1862  049B                     	;# 
  1863  049C                     	;# 
  1864  049D                     	;# 
  1865  050C                     	;# 
  1866  050C                     	;# 
  1867  050D                     	;# 
  1868  050E                     	;# 
  1869  050F                     	;# 
  1870  050F                     	;# 
  1871  0510                     	;# 
  1872  0511                     	;# 
  1873  0512                     	;# 
  1874  0512                     	;# 
  1875  0513                     	;# 
  1876  0514                     	;# 
  1877  0515                     	;# 
  1878  0515                     	;# 
  1879  0516                     	;# 
  1880  0517                     	;# 
  1881  0518                     	;# 
  1882  0519                     	;# 
  1883  051A                     	;# 
  1884  051B                     	;# 
  1885  051C                     	;# 
  1886  051D                     	;# 
  1887  058C                     	;# 
  1888  058C                     	;# 
  1889  058D                     	;# 
  1890  058E                     	;# 
  1891  058F                     	;# 
  1892  058F                     	;# 
  1893  0590                     	;# 
  1894  0591                     	;# 
  1895  0592                     	;# 
  1896  0593                     	;# 
  1897  060C                     	;# 
  1898  060D                     	;# 
  1899  060E                     	;# 
  1900  060F                     	;# 
  1901  0610                     	;# 
  1902  0611                     	;# 
  1903  0612                     	;# 
  1904  0613                     	;# 
  1905  0614                     	;# 
  1906  0616                     	;# 
  1907  0617                     	;# 
  1908  0618                     	;# 
  1909  0619                     	;# 
  1910  061A                     	;# 
  1911  061B                     	;# 
  1912  061C                     	;# 
  1913  061D                     	;# 
  1914  061E                     	;# 
  1915  068C                     	;# 
  1916  068D                     	;# 
  1917  068E                     	;# 
  1918  068F                     	;# 
  1919  0690                     	;# 
  1920  0691                     	;# 
  1921  0692                     	;# 
  1922  0693                     	;# 
  1923  0694                     	;# 
  1924  070C                     	;# 
  1925  070D                     	;# 
  1926  070E                     	;# 
  1927  070F                     	;# 
  1928  0710                     	;# 
  1929  0711                     	;# 
  1930  0712                     	;# 
  1931  0713                     	;# 
  1932  0714                     	;# 
  1933  0716                     	;# 
  1934  0717                     	;# 
  1935  0718                     	;# 
  1936  0719                     	;# 
  1937  071A                     	;# 
  1938  071B                     	;# 
  1939  071C                     	;# 
  1940  071D                     	;# 
  1941  071E                     	;# 
  1942  0796                     	;# 
  1943  0797                     	;# 
  1944  0798                     	;# 
  1945  0799                     	;# 
  1946  079A                     	;# 
  1947  079B                     	;# 
  1948  080C                     	;# 
  1949  080D                     	;# 
  1950  080E                     	;# 
  1951  080F                     	;# 
  1952  0810                     	;# 
  1953  0811                     	;# 
  1954  0812                     	;# 
  1955  0813                     	;# 
  1956  0814                     	;# 
  1957  081A                     	;# 
  1958  081B                     	;# 
  1959  081C                     	;# 
  1960  081D                     	;# 
  1961  081E                     	;# 
  1962  081F                     	;# 
  1963  088C                     	;# 
  1964  088D                     	;# 
  1965  088E                     	;# 
  1966  088F                     	;# 
  1967  0890                     	;# 
  1968  0891                     	;# 
  1969  0892                     	;# 
  1970  0893                     	;# 
  1971  0895                     	;# 
  1972  0896                     	;# 
  1973  0897                     	;# 
  1974  0898                     	;# 
  1975  0899                     	;# 
  1976  089A                     	;# 
  1977  089B                     	;# 
  1978  090C                     	;# 
  1979  090E                     	;# 
  1980  090F                     	;# 
  1981  091F                     	;# 
  1982  091F                     	;# 
  1983  098F                     	;# 
  1984  098F                     	;# 
  1985  0990                     	;# 
  1986  0991                     	;# 
  1987  0992                     	;# 
  1988  0993                     	;# 
  1989  0994                     	;# 
  1990  0995                     	;# 
  1991  0996                     	;# 
  1992  0997                     	;# 
  1993  0E0F                     	;# 
  1994  0E10                     	;# 
  1995  0E11                     	;# 
  1996  0E12                     	;# 
  1997  0E13                     	;# 
  1998  0E14                     	;# 
  1999  0E15                     	;# 
  2000  0E16                     	;# 
  2001  0E17                     	;# 
  2002  0E18                     	;# 
  2003  0E19                     	;# 
  2004  0E1A                     	;# 
  2005  0E1B                     	;# 
  2006  0E1C                     	;# 
  2007  0E1D                     	;# 
  2008  0E1E                     	;# 
  2009  0E1F                     	;# 
  2010  0E20                     	;# 
  2011  0E21                     	;# 
  2012  0E22                     	;# 
  2013  0E23                     	;# 
  2014  0E24                     	;# 
  2015  0E25                     	;# 
  2016  0E26                     	;# 
  2017  0E27                     	;# 
  2018  0E28                     	;# 
  2019  0E29                     	;# 
  2020  0E2A                     	;# 
  2021  0E2B                     	;# 
  2022  0E2C                     	;# 
  2023  0E2D                     	;# 
  2024  0E2E                     	;# 
  2025  0E2F                     	;# 
  2026  0E30                     	;# 
  2027  0E31                     	;# 
  2028  0E32                     	;# 
  2029  0E33                     	;# 
  2030  0E34                     	;# 
  2031  0E35                     	;# 
  2032  0E36                     	;# 
  2033  0E37                     	;# 
  2034  0E8F                     	;# 
  2035  0E90                     	;# 
  2036  0E91                     	;# 
  2037  0E92                     	;# 
  2038  0E93                     	;# 
  2039  0E94                     	;# 
  2040  0E95                     	;# 
  2041  0E96                     	;# 
  2042  0E97                     	;# 
  2043  0E9C                     	;# 
  2044  0E9D                     	;# 
  2045  0E9E                     	;# 
  2046  0EA1                     	;# 
  2047  0EA2                     	;# 
  2048  0EA3                     	;# 
  2049  0EA4                     	;# 
  2050  0EA5                     	;# 
  2051  0EA9                     	;# 
  2052  0EAA                     	;# 
  2053  0EAB                     	;# 
  2054  0EAC                     	;# 
  2055  0EB1                     	;# 
  2056  0EB2                     	;# 
  2057  0EB3                     	;# 
  2058  0EB8                     	;# 
  2059  0EB9                     	;# 
  2060  0EBA                     	;# 
  2061  0EBB                     	;# 
  2062  0EBC                     	;# 
  2063  0EBD                     	;# 
  2064  0EBE                     	;# 
  2065  0EC3                     	;# 
  2066  0EC5                     	;# 
  2067  0EC6                     	;# 
  2068  0EC7                     	;# 
  2069  0EC8                     	;# 
  2070  0EC9                     	;# 
  2071  0ECA                     	;# 
  2072  0ECB                     	;# 
  2073  0ECC                     	;# 
  2074  0F10                     	;# 
  2075  0F11                     	;# 
  2076  0F12                     	;# 
  2077  0F13                     	;# 
  2078  0F14                     	;# 
  2079  0F15                     	;# 
  2080  0F16                     	;# 
  2081  0F17                     	;# 
  2082  0F18                     	;# 
  2083  0F19                     	;# 
  2084  0F1A                     	;# 
  2085  0F1B                     	;# 
  2086  0F1C                     	;# 
  2087  0F1D                     	;# 
  2088  0F1E                     	;# 
  2089  0F1F                     	;# 
  2090  0F20                     	;# 
  2091  0F21                     	;# 
  2092  0F22                     	;# 
  2093  0F23                     	;# 
  2094  0F24                     	;# 
  2095  0F25                     	;# 
  2096  0F26                     	;# 
  2097  0F27                     	;# 
  2098  0F38                     	;# 
  2099  0F39                     	;# 
  2100  0F3A                     	;# 
  2101  0F3B                     	;# 
  2102  0F3C                     	;# 
  2103  0F3D                     	;# 
  2104  0F3E                     	;# 
  2105  0F3F                     	;# 
  2106  0F40                     	;# 
  2107  0F41                     	;# 
  2108  0F43                     	;# 
  2109  0F44                     	;# 
  2110  0F45                     	;# 
  2111  0F46                     	;# 
  2112  0F47                     	;# 
  2113  0F48                     	;# 
  2114  0F49                     	;# 
  2115  0F4A                     	;# 
  2116  0F4B                     	;# 
  2117  0F4C                     	;# 
  2118  0F4E                     	;# 
  2119  0F4F                     	;# 
  2120  0F50                     	;# 
  2121  0F51                     	;# 
  2122  0F52                     	;# 
  2123  0F53                     	;# 
  2124  0F54                     	;# 
  2125  0F55                     	;# 
  2126  0F56                     	;# 
  2127  0F57                     	;# 
  2128  0F65                     	;# 
  2129  0F68                     	;# 
  2130  0F69                     	;# 
  2131  0F6A                     	;# 
  2132  0F6B                     	;# 
  2133  0FE4                     	;# 
  2134  0FE5                     	;# 
  2135  0FE6                     	;# 
  2136  0FE7                     	;# 
  2137  0FE8                     	;# 
  2138  0FE9                     	;# 
  2139  0FEA                     	;# 
  2140  0FEB                     	;# 
  2141  0FED                     	;# 
  2142  0FEE                     	;# 
  2143  0FEF                     	;# 
  2144  0000                     	;# 
  2145  0001                     	;# 
  2146  0002                     	;# 
  2147  0003                     	;# 
  2148  0004                     	;# 
  2149  0005                     	;# 
  2150  0006                     	;# 
  2151  0007                     	;# 
  2152  0008                     	;# 
  2153  0009                     	;# 
  2154  000A                     	;# 
  2155  000B                     	;# 
  2156  000C                     	;# 
  2157  000D                     	;# 
  2158  000E                     	;# 
  2159  0010                     	;# 
  2160  0011                     	;# 
  2161  0012                     	;# 
  2162  0013                     	;# 
  2163  0016                     	;# 
  2164  0017                     	;# 
  2165  0018                     	;# 
  2166  001C                     	;# 
  2167  001C                     	;# 
  2168  001D                     	;# 
  2169  001D                     	;# 
  2170  001E                     	;# 
  2171  001F                     	;# 
  2172  008C                     	;# 
  2173  008C                     	;# 
  2174  008D                     	;# 
  2175  008E                     	;# 
  2176  008E                     	;# 
  2177  008F                     	;# 
  2178  0090                     	;# 
  2179  0090                     	;# 
  2180  0091                     	;# 
  2181  0093                     	;# 
  2182  0094                     	;# 
  2183  0095                     	;# 
  2184  0096                     	;# 
  2185  0097                     	;# 
  2186  0098                     	;# 
  2187  0099                     	;# 
  2188  009A                     	;# 
  2189  009B                     	;# 
  2190  009C                     	;# 
  2191  009D                     	;# 
  2192  009E                     	;# 
  2193  010C                     	;# 
  2194  010D                     	;# 
  2195  010E                     	;# 
  2196  010E                     	;# 
  2197  010F                     	;# 
  2198  0110                     	;# 
  2199  0110                     	;# 
  2200  0111                     	;# 
  2201  0112                     	;# 
  2202  0112                     	;# 
  2203  0113                     	;# 
  2204  0114                     	;# 
  2205  0114                     	;# 
  2206  0115                     	;# 
  2207  0116                     	;# 
  2208  0116                     	;# 
  2209  0117                     	;# 
  2210  0119                     	;# 
  2211  0119                     	;# 
  2212  0119                     	;# 
  2213  011A                     	;# 
  2214  011A                     	;# 
  2215  011A                     	;# 
  2216  011B                     	;# 
  2217  011B                     	;# 
  2218  011B                     	;# 
  2219  011B                     	;# 
  2220  011B                     	;# 
  2221  011C                     	;# 
  2222  011C                     	;# 
  2223  011C                     	;# 
  2224  011D                     	;# 
  2225  011D                     	;# 
  2226  011D                     	;# 
  2227  011E                     	;# 
  2228  011E                     	;# 
  2229  011E                     	;# 
  2230  011F                     	;# 
  2231  011F                     	;# 
  2232  011F                     	;# 
  2233  011F                     	;# 
  2234  011F                     	;# 
  2235  018C                     	;# 
  2236  018D                     	;# 
  2237  018E                     	;# 
  2238  018F                     	;# 
  2239  0190                     	;# 
  2240  0191                     	;# 
  2241  0192                     	;# 
  2242  0196                     	;# 
  2243  0197                     	;# 
  2244  0198                     	;# 
  2245  0199                     	;# 
  2246  019A                     	;# 
  2247  019B                     	;# 
  2248  019C                     	;# 
  2249  020C                     	;# 
  2250  020C                     	;# 
  2251  020D                     	;# 
  2252  020E                     	;# 
  2253  020F                     	;# 
  2254  020F                     	;# 
  2255  0210                     	;# 
  2256  0210                     	;# 
  2257  0211                     	;# 
  2258  0211                     	;# 
  2259  0212                     	;# 
  2260  0212                     	;# 
  2261  0213                     	;# 
  2262  0214                     	;# 
  2263  0215                     	;# 
  2264  0215                     	;# 
  2265  0216                     	;# 
  2266  0216                     	;# 
  2267  0217                     	;# 
  2268  0217                     	;# 
  2269  0218                     	;# 
  2270  0218                     	;# 
  2271  0219                     	;# 
  2272  021A                     	;# 
  2273  021B                     	;# 
  2274  021B                     	;# 
  2275  021C                     	;# 
  2276  021C                     	;# 
  2277  021D                     	;# 
  2278  021D                     	;# 
  2279  021E                     	;# 
  2280  021F                     	;# 
  2281  028C                     	;# 
  2282  028C                     	;# 
  2283  028D                     	;# 
  2284  028D                     	;# 
  2285  028E                     	;# 
  2286  028F                     	;# 
  2287  0290                     	;# 
  2288  0290                     	;# 
  2289  0291                     	;# 
  2290  0292                     	;# 
  2291  0292                     	;# 
  2292  0293                     	;# 
  2293  0293                     	;# 
  2294  0294                     	;# 
  2295  0295                     	;# 
  2296  0296                     	;# 
  2297  0296                     	;# 
  2298  0297                     	;# 
  2299  0298                     	;# 
  2300  0298                     	;# 
  2301  0299                     	;# 
  2302  0299                     	;# 
  2303  029A                     	;# 
  2304  029B                     	;# 
  2305  029C                     	;# 
  2306  029C                     	;# 
  2307  029D                     	;# 
  2308  030C                     	;# 
  2309  030C                     	;# 
  2310  030D                     	;# 
  2311  030E                     	;# 
  2312  030F                     	;# 
  2313  0310                     	;# 
  2314  0310                     	;# 
  2315  0311                     	;# 
  2316  0312                     	;# 
  2317  0313                     	;# 
  2318  0314                     	;# 
  2319  0314                     	;# 
  2320  0315                     	;# 
  2321  0316                     	;# 
  2322  0317                     	;# 
  2323  0318                     	;# 
  2324  0318                     	;# 
  2325  0319                     	;# 
  2326  031A                     	;# 
  2327  031B                     	;# 
  2328  031C                     	;# 
  2329  031C                     	;# 
  2330  031D                     	;# 
  2331  031E                     	;# 
  2332  031F                     	;# 
  2333  038C                     	;# 
  2334  038D                     	;# 
  2335  038E                     	;# 
  2336  0390                     	;# 
  2337  0391                     	;# 
  2338  0392                     	;# 
  2339  040C                     	;# 
  2340  040D                     	;# 
  2341  040E                     	;# 
  2342  040F                     	;# 
  2343  0410                     	;# 
  2344  0411                     	;# 
  2345  0416                     	;# 
  2346  0416                     	;# 
  2347  0417                     	;# 
  2348  0418                     	;# 
  2349  0418                     	;# 
  2350  0419                     	;# 
  2351  041A                     	;# 
  2352  041A                     	;# 
  2353  041B                     	;# 
  2354  041C                     	;# 
  2355  041C                     	;# 
  2356  041D                     	;# 
  2357  041E                     	;# 
  2358  041F                     	;# 
  2359  048C                     	;# 
  2360  048C                     	;# 
  2361  048D                     	;# 
  2362  048E                     	;# 
  2363  048F                     	;# 
  2364  048F                     	;# 
  2365  0490                     	;# 
  2366  0491                     	;# 
  2367  0492                     	;# 
  2368  0492                     	;# 
  2369  0493                     	;# 
  2370  0494                     	;# 
  2371  0495                     	;# 
  2372  0495                     	;# 
  2373  0496                     	;# 
  2374  0497                     	;# 
  2375  0498                     	;# 
  2376  0499                     	;# 
  2377  049A                     	;# 
  2378  049B                     	;# 
  2379  049C                     	;# 
  2380  049D                     	;# 
  2381  050C                     	;# 
  2382  050C                     	;# 
  2383  050D                     	;# 
  2384  050E                     	;# 
  2385  050F                     	;# 
  2386  050F                     	;# 
  2387  0510                     	;# 
  2388  0511                     	;# 
  2389  0512                     	;# 
  2390  0512                     	;# 
  2391  0513                     	;# 
  2392  0514                     	;# 
  2393  0515                     	;# 
  2394  0515                     	;# 
  2395  0516                     	;# 
  2396  0517                     	;# 
  2397  0518                     	;# 
  2398  0519                     	;# 
  2399  051A                     	;# 
  2400  051B                     	;# 
  2401  051C                     	;# 
  2402  051D                     	;# 
  2403  058C                     	;# 
  2404  058C                     	;# 
  2405  058D                     	;# 
  2406  058E                     	;# 
  2407  058F                     	;# 
  2408  058F                     	;# 
  2409  0590                     	;# 
  2410  0591                     	;# 
  2411  0592                     	;# 
  2412  0593                     	;# 
  2413  060C                     	;# 
  2414  060D                     	;# 
  2415  060E                     	;# 
  2416  060F                     	;# 
  2417  0610                     	;# 
  2418  0611                     	;# 
  2419  0612                     	;# 
  2420  0613                     	;# 
  2421  0614                     	;# 
  2422  0616                     	;# 
  2423  0617                     	;# 
  2424  0618                     	;# 
  2425  0619                     	;# 
  2426  061A                     	;# 
  2427  061B                     	;# 
  2428  061C                     	;# 
  2429  061D                     	;# 
  2430  061E                     	;# 
  2431  068C                     	;# 
  2432  068D                     	;# 
  2433  068E                     	;# 
  2434  068F                     	;# 
  2435  0690                     	;# 
  2436  0691                     	;# 
  2437  0692                     	;# 
  2438  0693                     	;# 
  2439  0694                     	;# 
  2440  070C                     	;# 
  2441  070D                     	;# 
  2442  070E                     	;# 
  2443  070F                     	;# 
  2444  0710                     	;# 
  2445  0711                     	;# 
  2446  0712                     	;# 
  2447  0713                     	;# 
  2448  0714                     	;# 
  2449  0716                     	;# 
  2450  0717                     	;# 
  2451  0718                     	;# 
  2452  0719                     	;# 
  2453  071A                     	;# 
  2454  071B                     	;# 
  2455  071C                     	;# 
  2456  071D                     	;# 
  2457  071E                     	;# 
  2458  0796                     	;# 
  2459  0797                     	;# 
  2460  0798                     	;# 
  2461  0799                     	;# 
  2462  079A                     	;# 
  2463  079B                     	;# 
  2464  080C                     	;# 
  2465  080D                     	;# 
  2466  080E                     	;# 
  2467  080F                     	;# 
  2468  0810                     	;# 
  2469  0811                     	;# 
  2470  0812                     	;# 
  2471  0813                     	;# 
  2472  0814                     	;# 
  2473  081A                     	;# 
  2474  081B                     	;# 
  2475  081C                     	;# 
  2476  081D                     	;# 
  2477  081E                     	;# 
  2478  081F                     	;# 
  2479  088C                     	;# 
  2480  088D                     	;# 
  2481  088E                     	;# 
  2482  088F                     	;# 
  2483  0890                     	;# 
  2484  0891                     	;# 
  2485  0892                     	;# 
  2486  0893                     	;# 
  2487  0895                     	;# 
  2488  0896                     	;# 
  2489  0897                     	;# 
  2490  0898                     	;# 
  2491  0899                     	;# 
  2492  089A                     	;# 
  2493  089B                     	;# 
  2494  090C                     	;# 
  2495  090E                     	;# 
  2496  090F                     	;# 
  2497  091F                     	;# 
  2498  091F                     	;# 
  2499  098F                     	;# 
  2500  098F                     	;# 
  2501  0990                     	;# 
  2502  0991                     	;# 
  2503  0992                     	;# 
  2504  0993                     	;# 
  2505  0994                     	;# 
  2506  0995                     	;# 
  2507  0996                     	;# 
  2508  0997                     	;# 
  2509  0E0F                     	;# 
  2510  0E10                     	;# 
  2511  0E11                     	;# 
  2512  0E12                     	;# 
  2513  0E13                     	;# 
  2514  0E14                     	;# 
  2515  0E15                     	;# 
  2516  0E16                     	;# 
  2517  0E17                     	;# 
  2518  0E18                     	;# 
  2519  0E19                     	;# 
  2520  0E1A                     	;# 
  2521  0E1B                     	;# 
  2522  0E1C                     	;# 
  2523  0E1D                     	;# 
  2524  0E1E                     	;# 
  2525  0E1F                     	;# 
  2526  0E20                     	;# 
  2527  0E21                     	;# 
  2528  0E22                     	;# 
  2529  0E23                     	;# 
  2530  0E24                     	;# 
  2531  0E25                     	;# 
  2532  0E26                     	;# 
  2533  0E27                     	;# 
  2534  0E28                     	;# 
  2535  0E29                     	;# 
  2536  0E2A                     	;# 
  2537  0E2B                     	;# 
  2538  0E2C                     	;# 
  2539  0E2D                     	;# 
  2540  0E2E                     	;# 
  2541  0E2F                     	;# 
  2542  0E30                     	;# 
  2543  0E31                     	;# 
  2544  0E32                     	;# 
  2545  0E33                     	;# 
  2546  0E34                     	;# 
  2547  0E35                     	;# 
  2548  0E36                     	;# 
  2549  0E37                     	;# 
  2550  0E8F                     	;# 
  2551  0E90                     	;# 
  2552  0E91                     	;# 
  2553  0E92                     	;# 
  2554  0E93                     	;# 
  2555  0E94                     	;# 
  2556  0E95                     	;# 
  2557  0E96                     	;# 
  2558  0E97                     	;# 
  2559  0E9C                     	;# 
  2560  0E9D                     	;# 
  2561  0E9E                     	;# 
  2562  0EA1                     	;# 
  2563  0EA2                     	;# 
  2564  0EA3                     	;# 
  2565  0EA4                     	;# 
  2566  0EA5                     	;# 
  2567  0EA9                     	;# 
  2568  0EAA                     	;# 
  2569  0EAB                     	;# 
  2570  0EAC                     	;# 
  2571  0EB1                     	;# 
  2572  0EB2                     	;# 
  2573  0EB3                     	;# 
  2574  0EB8                     	;# 
  2575  0EB9                     	;# 
  2576  0EBA                     	;# 
  2577  0EBB                     	;# 
  2578  0EBC                     	;# 
  2579  0EBD                     	;# 
  2580  0EBE                     	;# 
  2581  0EC3                     	;# 
  2582  0EC5                     	;# 
  2583  0EC6                     	;# 
  2584  0EC7                     	;# 
  2585  0EC8                     	;# 
  2586  0EC9                     	;# 
  2587  0ECA                     	;# 
  2588  0ECB                     	;# 
  2589  0ECC                     	;# 
  2590  0F10                     	;# 
  2591  0F11                     	;# 
  2592  0F12                     	;# 
  2593  0F13                     	;# 
  2594  0F14                     	;# 
  2595  0F15                     	;# 
  2596  0F16                     	;# 
  2597  0F17                     	;# 
  2598  0F18                     	;# 
  2599  0F19                     	;# 
  2600  0F1A                     	;# 
  2601  0F1B                     	;# 
  2602  0F1C                     	;# 
  2603  0F1D                     	;# 
  2604  0F1E                     	;# 
  2605  0F1F                     	;# 
  2606  0F20                     	;# 
  2607  0F21                     	;# 
  2608  0F22                     	;# 
  2609  0F23                     	;# 
  2610  0F24                     	;# 
  2611  0F25                     	;# 
  2612  0F26                     	;# 
  2613  0F27                     	;# 
  2614  0F38                     	;# 
  2615  0F39                     	;# 
  2616  0F3A                     	;# 
  2617  0F3B                     	;# 
  2618  0F3C                     	;# 
  2619  0F3D                     	;# 
  2620  0F3E                     	;# 
  2621  0F3F                     	;# 
  2622  0F40                     	;# 
  2623  0F41                     	;# 
  2624  0F43                     	;# 
  2625  0F44                     	;# 
  2626  0F45                     	;# 
  2627  0F46                     	;# 
  2628  0F47                     	;# 
  2629  0F48                     	;# 
  2630  0F49                     	;# 
  2631  0F4A                     	;# 
  2632  0F4B                     	;# 
  2633  0F4C                     	;# 
  2634  0F4E                     	;# 
  2635  0F4F                     	;# 
  2636  0F50                     	;# 
  2637  0F51                     	;# 
  2638  0F52                     	;# 
  2639  0F53                     	;# 
  2640  0F54                     	;# 
  2641  0F55                     	;# 
  2642  0F56                     	;# 
  2643  0F57                     	;# 
  2644  0F65                     	;# 
  2645  0F68                     	;# 
  2646  0F69                     	;# 
  2647  0F6A                     	;# 
  2648  0F6B                     	;# 
  2649  0FE4                     	;# 
  2650  0FE5                     	;# 
  2651  0FE6                     	;# 
  2652  0FE7                     	;# 
  2653  0FE8                     	;# 
  2654  0FE9                     	;# 
  2655  0FEA                     	;# 
  2656  0FEB                     	;# 
  2657  0FED                     	;# 
  2658  0FEE                     	;# 
  2659  0FEF                     	;# 
  2660  0000                     	;# 
  2661  0001                     	;# 
  2662  0002                     	;# 
  2663  0003                     	;# 
  2664  0004                     	;# 
  2665  0005                     	;# 
  2666  0006                     	;# 
  2667  0007                     	;# 
  2668  0008                     	;# 
  2669  0009                     	;# 
  2670  000A                     	;# 
  2671  000B                     	;# 
  2672  000C                     	;# 
  2673  000D                     	;# 
  2674  000E                     	;# 
  2675  0010                     	;# 
  2676  0011                     	;# 
  2677  0012                     	;# 
  2678  0013                     	;# 
  2679  0016                     	;# 
  2680  0017                     	;# 
  2681  0018                     	;# 
  2682  001C                     	;# 
  2683  001C                     	;# 
  2684  001D                     	;# 
  2685  001D                     	;# 
  2686  001E                     	;# 
  2687  001F                     	;# 
  2688  008C                     	;# 
  2689  008C                     	;# 
  2690  008D                     	;# 
  2691  008E                     	;# 
  2692  008E                     	;# 
  2693  008F                     	;# 
  2694  0090                     	;# 
  2695  0090                     	;# 
  2696  0091                     	;# 
  2697  0093                     	;# 
  2698  0094                     	;# 
  2699  0095                     	;# 
  2700  0096                     	;# 
  2701  0097                     	;# 
  2702  0098                     	;# 
  2703  0099                     	;# 
  2704  009A                     	;# 
  2705  009B                     	;# 
  2706  009C                     	;# 
  2707  009D                     	;# 
  2708  009E                     	;# 
  2709  010C                     	;# 
  2710  010D                     	;# 
  2711  010E                     	;# 
  2712  010E                     	;# 
  2713  010F                     	;# 
  2714  0110                     	;# 
  2715  0110                     	;# 
  2716  0111                     	;# 
  2717  0112                     	;# 
  2718  0112                     	;# 
  2719  0113                     	;# 
  2720  0114                     	;# 
  2721  0114                     	;# 
  2722  0115                     	;# 
  2723  0116                     	;# 
  2724  0116                     	;# 
  2725  0117                     	;# 
  2726  0119                     	;# 
  2727  0119                     	;# 
  2728  0119                     	;# 
  2729  011A                     	;# 
  2730  011A                     	;# 
  2731  011A                     	;# 
  2732  011B                     	;# 
  2733  011B                     	;# 
  2734  011B                     	;# 
  2735  011B                     	;# 
  2736  011B                     	;# 
  2737  011C                     	;# 
  2738  011C                     	;# 
  2739  011C                     	;# 
  2740  011D                     	;# 
  2741  011D                     	;# 
  2742  011D                     	;# 
  2743  011E                     	;# 
  2744  011E                     	;# 
  2745  011E                     	;# 
  2746  011F                     	;# 
  2747  011F                     	;# 
  2748  011F                     	;# 
  2749  011F                     	;# 
  2750  011F                     	;# 
  2751  018C                     	;# 
  2752  018D                     	;# 
  2753  018E                     	;# 
  2754  018F                     	;# 
  2755  0190                     	;# 
  2756  0191                     	;# 
  2757  0192                     	;# 
  2758  0196                     	;# 
  2759  0197                     	;# 
  2760  0198                     	;# 
  2761  0199                     	;# 
  2762  019A                     	;# 
  2763  019B                     	;# 
  2764  019C                     	;# 
  2765  020C                     	;# 
  2766  020C                     	;# 
  2767  020D                     	;# 
  2768  020E                     	;# 
  2769  020F                     	;# 
  2770  020F                     	;# 
  2771  0210                     	;# 
  2772  0210                     	;# 
  2773  0211                     	;# 
  2774  0211                     	;# 
  2775  0212                     	;# 
  2776  0212                     	;# 
  2777  0213                     	;# 
  2778  0214                     	;# 
  2779  0215                     	;# 
  2780  0215                     	;# 
  2781  0216                     	;# 
  2782  0216                     	;# 
  2783  0217                     	;# 
  2784  0217                     	;# 
  2785  0218                     	;# 
  2786  0218                     	;# 
  2787  0219                     	;# 
  2788  021A                     	;# 
  2789  021B                     	;# 
  2790  021B                     	;# 
  2791  021C                     	;# 
  2792  021C                     	;# 
  2793  021D                     	;# 
  2794  021D                     	;# 
  2795  021E                     	;# 
  2796  021F                     	;# 
  2797  028C                     	;# 
  2798  028C                     	;# 
  2799  028D                     	;# 
  2800  028D                     	;# 
  2801  028E                     	;# 
  2802  028F                     	;# 
  2803  0290                     	;# 
  2804  0290                     	;# 
  2805  0291                     	;# 
  2806  0292                     	;# 
  2807  0292                     	;# 
  2808  0293                     	;# 
  2809  0293                     	;# 
  2810  0294                     	;# 
  2811  0295                     	;# 
  2812  0296                     	;# 
  2813  0296                     	;# 
  2814  0297                     	;# 
  2815  0298                     	;# 
  2816  0298                     	;# 
  2817  0299                     	;# 
  2818  0299                     	;# 
  2819  029A                     	;# 
  2820  029B                     	;# 
  2821  029C                     	;# 
  2822  029C                     	;# 
  2823  029D                     	;# 
  2824  030C                     	;# 
  2825  030C                     	;# 
  2826  030D                     	;# 
  2827  030E                     	;# 
  2828  030F                     	;# 
  2829  0310                     	;# 
  2830  0310                     	;# 
  2831  0311                     	;# 
  2832  0312                     	;# 
  2833  0313                     	;# 
  2834  0314                     	;# 
  2835  0314                     	;# 
  2836  0315                     	;# 
  2837  0316                     	;# 
  2838  0317                     	;# 
  2839  0318                     	;# 
  2840  0318                     	;# 
  2841  0319                     	;# 
  2842  031A                     	;# 
  2843  031B                     	;# 
  2844  031C                     	;# 
  2845  031C                     	;# 
  2846  031D                     	;# 
  2847  031E                     	;# 
  2848  031F                     	;# 
  2849  038C                     	;# 
  2850  038D                     	;# 
  2851  038E                     	;# 
  2852  0390                     	;# 
  2853  0391                     	;# 
  2854  0392                     	;# 
  2855  040C                     	;# 
  2856  040D                     	;# 
  2857  040E                     	;# 
  2858  040F                     	;# 
  2859  0410                     	;# 
  2860  0411                     	;# 
  2861  0416                     	;# 
  2862  0416                     	;# 
  2863  0417                     	;# 
  2864  0418                     	;# 
  2865  0418                     	;# 
  2866  0419                     	;# 
  2867  041A                     	;# 
  2868  041A                     	;# 
  2869  041B                     	;# 
  2870  041C                     	;# 
  2871  041C                     	;# 
  2872  041D                     	;# 
  2873  041E                     	;# 
  2874  041F                     	;# 
  2875  048C                     	;# 
  2876  048C                     	;# 
  2877  048D                     	;# 
  2878  048E                     	;# 
  2879  048F                     	;# 
  2880  048F                     	;# 
  2881  0490                     	;# 
  2882  0491                     	;# 
  2883  0492                     	;# 
  2884  0492                     	;# 
  2885  0493                     	;# 
  2886  0494                     	;# 
  2887  0495                     	;# 
  2888  0495                     	;# 
  2889  0496                     	;# 
  2890  0497                     	;# 
  2891  0498                     	;# 
  2892  0499                     	;# 
  2893  049A                     	;# 
  2894  049B                     	;# 
  2895  049C                     	;# 
  2896  049D                     	;# 
  2897  050C                     	;# 
  2898  050C                     	;# 
  2899  050D                     	;# 
  2900  050E                     	;# 
  2901  050F                     	;# 
  2902  050F                     	;# 
  2903  0510                     	;# 
  2904  0511                     	;# 
  2905  0512                     	;# 
  2906  0512                     	;# 
  2907  0513                     	;# 
  2908  0514                     	;# 
  2909  0515                     	;# 
  2910  0515                     	;# 
  2911  0516                     	;# 
  2912  0517                     	;# 
  2913  0518                     	;# 
  2914  0519                     	;# 
  2915  051A                     	;# 
  2916  051B                     	;# 
  2917  051C                     	;# 
  2918  051D                     	;# 
  2919  058C                     	;# 
  2920  058C                     	;# 
  2921  058D                     	;# 
  2922  058E                     	;# 
  2923  058F                     	;# 
  2924  058F                     	;# 
  2925  0590                     	;# 
  2926  0591                     	;# 
  2927  0592                     	;# 
  2928  0593                     	;# 
  2929  060C                     	;# 
  2930  060D                     	;# 
  2931  060E                     	;# 
  2932  060F                     	;# 
  2933  0610                     	;# 
  2934  0611                     	;# 
  2935  0612                     	;# 
  2936  0613                     	;# 
  2937  0614                     	;# 
  2938  0616                     	;# 
  2939  0617                     	;# 
  2940  0618                     	;# 
  2941  0619                     	;# 
  2942  061A                     	;# 
  2943  061B                     	;# 
  2944  061C                     	;# 
  2945  061D                     	;# 
  2946  061E                     	;# 
  2947  068C                     	;# 
  2948  068D                     	;# 
  2949  068E                     	;# 
  2950  068F                     	;# 
  2951  0690                     	;# 
  2952  0691                     	;# 
  2953  0692                     	;# 
  2954  0693                     	;# 
  2955  0694                     	;# 
  2956  070C                     	;# 
  2957  070D                     	;# 
  2958  070E                     	;# 
  2959  070F                     	;# 
  2960  0710                     	;# 
  2961  0711                     	;# 
  2962  0712                     	;# 
  2963  0713                     	;# 
  2964  0714                     	;# 
  2965  0716                     	;# 
  2966  0717                     	;# 
  2967  0718                     	;# 
  2968  0719                     	;# 
  2969  071A                     	;# 
  2970  071B                     	;# 
  2971  071C                     	;# 
  2972  071D                     	;# 
  2973  071E                     	;# 
  2974  0796                     	;# 
  2975  0797                     	;# 
  2976  0798                     	;# 
  2977  0799                     	;# 
  2978  079A                     	;# 
  2979  079B                     	;# 
  2980  080C                     	;# 
  2981  080D                     	;# 
  2982  080E                     	;# 
  2983  080F                     	;# 
  2984  0810                     	;# 
  2985  0811                     	;# 
  2986  0812                     	;# 
  2987  0813                     	;# 
  2988  0814                     	;# 
  2989  081A                     	;# 
  2990  081B                     	;# 
  2991  081C                     	;# 
  2992  081D                     	;# 
  2993  081E                     	;# 
  2994  081F                     	;# 
  2995  088C                     	;# 
  2996  088D                     	;# 
  2997  088E                     	;# 
  2998  088F                     	;# 
  2999  0890                     	;# 
  3000  0891                     	;# 
  3001  0892                     	;# 
  3002  0893                     	;# 
  3003  0895                     	;# 
  3004  0896                     	;# 
  3005  0897                     	;# 
  3006  0898                     	;# 
  3007  0899                     	;# 
  3008  089A                     	;# 
  3009  089B                     	;# 
  3010  090C                     	;# 
  3011  090E                     	;# 
  3012  090F                     	;# 
  3013  091F                     	;# 
  3014  091F                     	;# 
  3015  098F                     	;# 
  3016  098F                     	;# 
  3017  0990                     	;# 
  3018  0991                     	;# 
  3019  0992                     	;# 
  3020  0993                     	;# 
  3021  0994                     	;# 
  3022  0995                     	;# 
  3023  0996                     	;# 
  3024  0997                     	;# 
  3025  0E0F                     	;# 
  3026  0E10                     	;# 
  3027  0E11                     	;# 
  3028  0E12                     	;# 
  3029  0E13                     	;# 
  3030  0E14                     	;# 
  3031  0E15                     	;# 
  3032  0E16                     	;# 
  3033  0E17                     	;# 
  3034  0E18                     	;# 
  3035  0E19                     	;# 
  3036  0E1A                     	;# 
  3037  0E1B                     	;# 
  3038  0E1C                     	;# 
  3039  0E1D                     	;# 
  3040  0E1E                     	;# 
  3041  0E1F                     	;# 
  3042  0E20                     	;# 
  3043  0E21                     	;# 
  3044  0E22                     	;# 
  3045  0E23                     	;# 
  3046  0E24                     	;# 
  3047  0E25                     	;# 
  3048  0E26                     	;# 
  3049  0E27                     	;# 
  3050  0E28                     	;# 
  3051  0E29                     	;# 
  3052  0E2A                     	;# 
  3053  0E2B                     	;# 
  3054  0E2C                     	;# 
  3055  0E2D                     	;# 
  3056  0E2E                     	;# 
  3057  0E2F                     	;# 
  3058  0E30                     	;# 
  3059  0E31                     	;# 
  3060  0E32                     	;# 
  3061  0E33                     	;# 
  3062  0E34                     	;# 
  3063  0E35                     	;# 
  3064  0E36                     	;# 
  3065  0E37                     	;# 
  3066  0E8F                     	;# 
  3067  0E90                     	;# 
  3068  0E91                     	;# 
  3069  0E92                     	;# 
  3070  0E93                     	;# 
  3071  0E94                     	;# 
  3072  0E95                     	;# 
  3073  0E96                     	;# 
  3074  0E97                     	;# 
  3075  0E9C                     	;# 
  3076  0E9D                     	;# 
  3077  0E9E                     	;# 
  3078  0EA1                     	;# 
  3079  0EA2                     	;# 
  3080  0EA3                     	;# 
  3081  0EA4                     	;# 
  3082  0EA5                     	;# 
  3083  0EA9                     	;# 
  3084  0EAA                     	;# 
  3085  0EAB                     	;# 
  3086  0EAC                     	;# 
  3087  0EB1                     	;# 
  3088  0EB2                     	;# 
  3089  0EB3                     	;# 
  3090  0EB8                     	;# 
  3091  0EB9                     	;# 
  3092  0EBA                     	;# 
  3093  0EBB                     	;# 
  3094  0EBC                     	;# 
  3095  0EBD                     	;# 
  3096  0EBE                     	;# 
  3097  0EC3                     	;# 
  3098  0EC5                     	;# 
  3099  0EC6                     	;# 
  3100  0EC7                     	;# 
  3101  0EC8                     	;# 
  3102  0EC9                     	;# 
  3103  0ECA                     	;# 
  3104  0ECB                     	;# 
  3105  0ECC                     	;# 
  3106  0F10                     	;# 
  3107  0F11                     	;# 
  3108  0F12                     	;# 
  3109  0F13                     	;# 
  3110  0F14                     	;# 
  3111  0F15                     	;# 
  3112  0F16                     	;# 
  3113  0F17                     	;# 
  3114  0F18                     	;# 
  3115  0F19                     	;# 
  3116  0F1A                     	;# 
  3117  0F1B                     	;# 
  3118  0F1C                     	;# 
  3119  0F1D                     	;# 
  3120  0F1E                     	;# 
  3121  0F1F                     	;# 
  3122  0F20                     	;# 
  3123  0F21                     	;# 
  3124  0F22                     	;# 
  3125  0F23                     	;# 
  3126  0F24                     	;# 
  3127  0F25                     	;# 
  3128  0F26                     	;# 
  3129  0F27                     	;# 
  3130  0F38                     	;# 
  3131  0F39                     	;# 
  3132  0F3A                     	;# 
  3133  0F3B                     	;# 
  3134  0F3C                     	;# 
  3135  0F3D                     	;# 
  3136  0F3E                     	;# 
  3137  0F3F                     	;# 
  3138  0F40                     	;# 
  3139  0F41                     	;# 
  3140  0F43                     	;# 
  3141  0F44                     	;# 
  3142  0F45                     	;# 
  3143  0F46                     	;# 
  3144  0F47                     	;# 
  3145  0F48                     	;# 
  3146  0F49                     	;# 
  3147  0F4A                     	;# 
  3148  0F4B                     	;# 
  3149  0F4C                     	;# 
  3150  0F4E                     	;# 
  3151  0F4F                     	;# 
  3152  0F50                     	;# 
  3153  0F51                     	;# 
  3154  0F52                     	;# 
  3155  0F53                     	;# 
  3156  0F54                     	;# 
  3157  0F55                     	;# 
  3158  0F56                     	;# 
  3159  0F57                     	;# 
  3160  0F65                     	;# 
  3161  0F68                     	;# 
  3162  0F69                     	;# 
  3163  0F6A                     	;# 
  3164  0F6B                     	;# 
  3165  0FE4                     	;# 
  3166  0FE5                     	;# 
  3167  0FE6                     	;# 
  3168  0FE7                     	;# 
  3169  0FE8                     	;# 
  3170  0FE9                     	;# 
  3171  0FEA                     	;# 
  3172  0FEB                     	;# 
  3173  0FED                     	;# 
  3174  0FEE                     	;# 
  3175  0FEF                     	;_samples
  3176                           
  3177                           	psect	stringtext
  3178  0800                     __pstringtext:	
  3179  0800                     _fonts:	
  3180  0800  3400               	retlw	0
  3181  0801  3400               	retlw	0
  3182  0802  3400               	retlw	0
  3183  0803  3400               	retlw	0
  3184  0804  344E               	retlw	78
  3185  0805  3400               	retlw	0
  3186  0806  3406               	retlw	6
  3187  0807  3400               	retlw	0
  3188  0808  3406               	retlw	6
  3189  0809  34FF               	retlw	255
  3190  080A  34FF               	retlw	255
  3191  080B  34FF               	retlw	255
  3192  080C  3448               	retlw	72
  3193  080D  34D6               	retlw	214
  3194  080E  3424               	retlw	36
  3195  080F  3412               	retlw	18
  3196  0810  3408               	retlw	8
  3197  0811  3424               	retlw	36
  3198  0812  34FF               	retlw	255
  3199  0813  34FF               	retlw	255
  3200  0814  34FF               	retlw	255
  3201  0815  3400               	retlw	0
  3202  0816  3406               	retlw	6
  3203  0817  3400               	retlw	0
  3204  0818  3438               	retlw	56
  3205  0819  3444               	retlw	68
  3206  081A  3482               	retlw	130
  3207  081B  3482               	retlw	130
  3208  081C  3444               	retlw	68
  3209  081D  3438               	retlw	56
  3210  081E  3414               	retlw	20
  3211  081F  3408               	retlw	8
  3212  0820  343E               	retlw	62
  3213  0821  3410               	retlw	16
  3214  0822  3438               	retlw	56
  3215  0823  3410               	retlw	16
  3216  0824  34A0               	retlw	160
  3217  0825  3460               	retlw	96
  3218  0826  3400               	retlw	0
  3219  0827  3410               	retlw	16
  3220  0828  3410               	retlw	16
  3221  0829  3410               	retlw	16
  3222  082A  3460               	retlw	96
  3223  082B  3460               	retlw	96
  3224  082C  3400               	retlw	0
  3225  082D  3460               	retlw	96
  3226  082E  3418               	retlw	24
  3227  082F  3406               	retlw	6
  3228  0830  347C               	retlw	124
  3229  0831  3442               	retlw	66
  3230  0832  347C               	retlw	124
  3231  0833  3444               	retlw	68
  3232  0834  347E               	retlw	126
  3233  0835  3440               	retlw	64
  3234  0836  3464               	retlw	100
  3235  0837  3452               	retlw	82
  3236  0838  344C               	retlw	76
  3237  0839  344A               	retlw	74
  3238  083A  344A               	retlw	74
  3239  083B  3434               	retlw	52
  3240  083C  3438               	retlw	56
  3241  083D  3424               	retlw	36
  3242  083E  347E               	retlw	126
  3243  083F  344E               	retlw	78
  3244  0840  344A               	retlw	74
  3245  0841  3432               	retlw	50
  3246  0842  343C               	retlw	60
  3247  0843  344A               	retlw	74
  3248  0844  3432               	retlw	50
  3249  0845  3462               	retlw	98
  3250  0846  341A               	retlw	26
  3251  0847  3406               	retlw	6
  3252  0848  3476               	retlw	118
  3253  0849  344A               	retlw	74
  3254  084A  3476               	retlw	118
  3255  084B  344C               	retlw	76
  3256  084C  3452               	retlw	82
  3257  084D  343C               	retlw	60
  3258  084E  346C               	retlw	108
  3259  084F  346C               	retlw	108
  3260  0850  3400               	retlw	0
  3261  0851  34AC               	retlw	172
  3262  0852  346C               	retlw	108
  3263  0853  3400               	retlw	0
  3264  0854  3410               	retlw	16
  3265  0855  3428               	retlw	40
  3266  0856  3444               	retlw	68
  3267  0857  3428               	retlw	40
  3268  0858  3428               	retlw	40
  3269  0859  3428               	retlw	40
  3270  085A  3444               	retlw	68
  3271  085B  3428               	retlw	40
  3272  085C  3410               	retlw	16
  3273  085D  3402               	retlw	2
  3274  085E  3459               	retlw	89
  3275  085F  3406               	retlw	6
  3276  0860  34FF               	retlw	255
  3277  0861  34FF               	retlw	255
  3278  0862  34FF               	retlw	255
  3279  0863  347C               	retlw	124
  3280  0864  3412               	retlw	18
  3281  0865  347C               	retlw	124
  3282  0866  347E               	retlw	126
  3283  0867  345A               	retlw	90
  3284  0868  3434               	retlw	52
  3285  0869  343C               	retlw	60
  3286  086A  3442               	retlw	66
  3287  086B  3442               	retlw	66
  3288  086C  347E               	retlw	126
  3289  086D  3442               	retlw	66
  3290  086E  343C               	retlw	60
  3291  086F  347E               	retlw	126
  3292  0870  344A               	retlw	74
  3293  0871  3442               	retlw	66
  3294  0872  347E               	retlw	126
  3295  0873  340A               	retlw	10
  3296  0874  340A               	retlw	10
  3297  0875  343C               	retlw	60
  3298  0876  3452               	retlw	82
  3299  0877  3434               	retlw	52
  3300  0878  347E               	retlw	126
  3301  0879  3408               	retlw	8
  3302  087A  347E               	retlw	126
  3303  087B  3442               	retlw	66
  3304  087C  347E               	retlw	126
  3305  087D  3442               	retlw	66
  3306  087E  3430               	retlw	48
  3307  087F  3440               	retlw	64
  3308  0880  343E               	retlw	62
  3309  0881  347E               	retlw	126
  3310  0882  3418               	retlw	24
  3311  0883  3466               	retlw	102
  3312  0884  347E               	retlw	126
  3313  0885  3440               	retlw	64
  3314  0886  3440               	retlw	64
  3315  0887  347E               	retlw	126
  3316  0888  341C               	retlw	28
  3317  0889  347E               	retlw	126
  3318  088A  347E               	retlw	126
  3319  088B  3402               	retlw	2
  3320  088C  347E               	retlw	126
  3321  088D  343C               	retlw	60
  3322  088E  3442               	retlw	66
  3323  088F  343C               	retlw	60
  3324  0890  347E               	retlw	126
  3325  0891  3412               	retlw	18
  3326  0892  340C               	retlw	12
  3327  0893  347E               	retlw	126
  3328  0894  3462               	retlw	98
  3329  0895  34FE               	retlw	254
  3330  0896  347E               	retlw	126
  3331  0897  3432               	retlw	50
  3332  0898  344E               	retlw	78
  3333  0899  3444               	retlw	68
  3334  089A  344A               	retlw	74
  3335  089B  3432               	retlw	50
  3336  089C  3402               	retlw	2
  3337  089D  347E               	retlw	126
  3338  089E  3402               	retlw	2
  3339  089F  347E               	retlw	126
  3340  08A0  3440               	retlw	64
  3341  08A1  347E               	retlw	126
  3342  08A2  343E               	retlw	62
  3343  08A3  3440               	retlw	64
  3344  08A4  343E               	retlw	62
  3345  08A5  347E               	retlw	126
  3346  08A6  3438               	retlw	56
  3347  08A7  347E               	retlw	126
  3348  08A8  3466               	retlw	102
  3349  08A9  3418               	retlw	24
  3350  08AA  3466               	retlw	102
  3351  08AB  340E               	retlw	14
  3352  08AC  3470               	retlw	112
  3353  08AD  340E               	retlw	14
  3354  08AE  3462               	retlw	98
  3355  08AF  345A               	retlw	90
  3356  08B0  3446               	retlw	70
  3357  08B1  3400               	retlw	0
  3358  08B2  347E               	retlw	126
  3359  08B3  3442               	retlw	66
  3360  08B4  3406               	retlw	6
  3361  08B5  3418               	retlw	24
  3362  08B6  3460               	retlw	96
  3363  08B7  3442               	retlw	66
  3364  08B8  347E               	retlw	126
  3365  08B9  3400               	retlw	0
  3366  08BA  3404               	retlw	4
  3367  08BB  3402               	retlw	2
  3368  08BC  3404               	retlw	4
  3369  08BD  3440               	retlw	64
  3370  08BE  3440               	retlw	64
  3371  08BF  3440               	retlw	64
  3372  08C0  3400               	retlw	0
  3373  08C1  3402               	retlw	2
  3374  08C2  3404               	retlw	4
  3375  08C3  3474               	retlw	116
  3376  08C4  3454               	retlw	84
  3377  08C5  3478               	retlw	120
  3378  08C6  347E               	retlw	126
  3379  08C7  3448               	retlw	72
  3380  08C8  3430               	retlw	48
  3381  08C9  3430               	retlw	48
  3382  08CA  3448               	retlw	72
  3383  08CB  3448               	retlw	72
  3384  08CC  3430               	retlw	48
  3385  08CD  3448               	retlw	72
  3386  08CE  347E               	retlw	126
  3387  08CF  3438               	retlw	56
  3388  08D0  3454               	retlw	84
  3389  08D1  3458               	retlw	88
  3390  08D2  347C               	retlw	124
  3391  08D3  340A               	retlw	10
  3392  08D4  3402               	retlw	2
  3393  08D5  3498               	retlw	152
  3394  08D6  34A4               	retlw	164
  3395  08D7  347C               	retlw	124
  3396  08D8  347E               	retlw	126
  3397  08D9  3408               	retlw	8
  3398  08DA  3470               	retlw	112
  3399  08DB  3448               	retlw	72
  3400  08DC  347A               	retlw	122
  3401  08DD  3440               	retlw	64
  3402  08DE  3488               	retlw	136
  3403  08DF  34FA               	retlw	250
  3404  08E0  3400               	retlw	0
  3405  08E1  347E               	retlw	126
  3406  08E2  3418               	retlw	24
  3407  08E3  3464               	retlw	100
  3408  08E4  3442               	retlw	66
  3409  08E5  347E               	retlw	126
  3410  08E6  3440               	retlw	64
  3411  08E7  347C               	retlw	124
  3412  08E8  3438               	retlw	56
  3413  08E9  347C               	retlw	124
  3414  08EA  347C               	retlw	124
  3415  08EB  3404               	retlw	4
  3416  08EC  3478               	retlw	120
  3417  08ED  3438               	retlw	56
  3418  08EE  3444               	retlw	68
  3419  08EF  3438               	retlw	56
  3420  08F0  34FC               	retlw	252
  3421  08F1  3424               	retlw	36
  3422  08F2  3418               	retlw	24
  3423  08F3  3418               	retlw	24
  3424  08F4  3424               	retlw	36
  3425  08F5  34FC               	retlw	252
  3426  08F6  3478               	retlw	120
  3427  08F7  3404               	retlw	4
  3428  08F8  3404               	retlw	4
  3429  08F9  3448               	retlw	72
  3430  08FA  3454               	retlw	84
  3431  08FB  3424               	retlw	36
  3432  08FC  3404               	retlw	4
  3433  08FD  343E               	retlw	62
  3434  08FE  3444               	retlw	68
  3435  08FF  347C               	retlw	124
  3436  0900  3440               	retlw	64
  3437  0901  347C               	retlw	124
  3438  0902  343C               	retlw	60
  3439  0903  3440               	retlw	64
  3440  0904  343C               	retlw	60
  3441  0905  347C               	retlw	124
  3442  0906  3430               	retlw	48
  3443  0907  347C               	retlw	124
  3444  0908  346C               	retlw	108
  3445  0909  3410               	retlw	16
  3446  090A  346C               	retlw	108
  3447  090B  349C               	retlw	156
  3448  090C  34A0               	retlw	160
  3449  090D  347C               	retlw	124
  3450  090E  3464               	retlw	100
  3451  090F  3454               	retlw	84
  3452  0910  344C               	retlw	76
  3453  0911  340C               	retlw	12
  3454  0912  3412               	retlw	18
  3455  0913  340C               	retlw	12
  3456  0914  34FF               	retlw	255
  3457  0915  34FF               	retlw	255
  3458  0916  34FF               	retlw	255
  3459  0917  34FF               	retlw	255
  3460  0918  34FF               	retlw	255
  3461  0919  34FF               	retlw	255
  3462  091A  34FF               	retlw	255
  3463  091B  34FF               	retlw	255
  3464  091C  34FF               	retlw	255
  3465  091D  34FF               	retlw	255
  3466  091E  34FF               	retlw	255
  3467  091F  34FF               	retlw	255
  3468  0920  34FF               	retlw	255
  3469  0921  34FF               	retlw	255
  3470  0922  34FF               	retlw	255
  3471  0923  34FF               	retlw	255
  3472  0924  34FF               	retlw	255
  3473  0925  34FF               	retlw	255
  3474  0926  34FC               	retlw	252
  3475  0927  3440               	retlw	64
  3476  0928  347C               	retlw	124
  3477  0929  34FF               	retlw	255
  3478  092A  34FF               	retlw	255
  3479  092B  34FF               	retlw	255
  3480  092C  34FF               	retlw	255
  3481  092D  34FF               	retlw	255
  3482  092E  34FF               	retlw	255
  3483  092F                     __end_of_fonts:	
  3484  092F                     log@coeff:	
  3485  092F  3400               	retlw	0
  3486  0930  3400               	retlw	0
  3487  0931  3400               	retlw	0
  3488  0932  3400               	retlw	0
  3489  0933  3480               	retlw	128
  3490  0934  343F               	retlw	63
  3491  0935  34F0               	retlw	240
  3492  0936  34FF               	retlw	255
  3493  0937  34BE               	retlw	190
  3494  0938  34E2               	retlw	226
  3495  0939  34A9               	retlw	169
  3496  093A  343E               	retlw	62
  3497  093B  3483               	retlw	131
  3498  093C  3476               	retlw	118
  3499  093D  34BE               	retlw	190
  3500  093E  34AE               	retlw	174
  3501  093F  342B               	retlw	43
  3502  0940  343E               	retlw	62
  3503  0941  343C               	retlw	60
  3504  0942  34C3               	retlw	195
  3505  0943  34BD               	retlw	189
  3506  0944  34D2               	retlw	210
  3507  0945  3413               	retlw	19
  3508  0946  343D               	retlw	61
  3509  0947  3478               	retlw	120
  3510  0948  34D3               	retlw	211
  3511  0949  34BB               	retlw	187
  3512  094A                     __end_oflog@coeff:	
  3513  0018                     _LATCbits	set	24
  3514  0013                     _TRISCbits	set	19
  3515  0013                     _TRISC	set	19
  3516  0012                     _TRISB	set	18
  3517  0011                     _TRISA	set	17
  3518  0018                     _LATC	set	24
  3519  0017                     _LATB	set	23
  3520  0016                     _LATA	set	22
  3521  005F                     _GIE	set	95
  3522  0064                     _RA4	set	100
  3523  0063                     _RA3	set	99
  3524  008C                     _ADRESL	set	140
  3525  008D                     _ADRESH	set	141
  3526  0093                     _ADCON0bits	set	147
  3527  0093                     _ADCON0	set	147
  3528  009E                     _ADPCH	set	158
  3529  009D                     _ADACQ	set	157
  3530  009C                     _ADPRE	set	156
  3531  009B                     _ADCAP	set	155
  3532  009A                     _ADREF	set	154
  3533  0098                     _ADCLK	set	152
  3534  0097                     _ADSTAT	set	151
  3535  0099                     _ADACT	set	153
  3536  0096                     _ADCON3	set	150
  3537  0095                     _ADCON2	set	149
  3538  0094                     _ADCON1	set	148
  3539  0113                     _ADSTPTH	set	275
  3540  0112                     _ADSTPTL	set	274
  3541  0111                     _ADUTHH	set	273
  3542  0110                     _ADUTHL	set	272
  3543  010F                     _ADLTHH	set	271
  3544  010E                     _ADLTHL	set	270
  3545  010D                     _ADRPT	set	269
  3546  0716                     _PIE0bits	set	1814
  3547  0892                     _OSCTUNE	set	2194
  3548  0893                     _OSCFRQ	set	2195
  3549  0891                     _OSCEN	set	2193
  3550  088F                     _OSCCON3	set	2191
  3551  088D                     _OSCCON1	set	2189
  3552  090C                     _FVRCON	set	2316
  3553  0E8F                     _PPSLOCKbits	set	3727
  3554  0E8F                     _PPSLOCK	set	3727
  3555  0F11                     _RA1PPS	set	3857
  3556  0F4E                     _ANSELC	set	3918
  3557  0F43                     _ANSELB	set	3907
  3558  0F38                     _ANSELA	set	3896
  3559  0F65                     _WPUE	set	3941
  3560  0F4F                     _WPUC	set	3919
  3561  0F44                     _WPUB	set	3908
  3562  0F39                     _WPUA	set	3897
  3563                           
  3564                           ; #config settings
  3565  0000                     
  3566                           	psect	cinit
  3567  07E4                     start_initialization:	
  3568  07E4                     __initialization:		;BIGRAM
  3569                           
  3570                           ; Clear objects allocated to BIGRAM
  3571  07E4  308C               	movlw	low (0+9100)
  3572  07E5  0084               	movwf	4
  3573  07E6  3023               	movlw	high (0+9100)
  3574  07E7  0085               	movwf	5
  3575  07E8  3064               	movlw	100
  3576  07E9  00FE               	movwf	btemp
  3577  07EA  3000               	movlw	0
  3578  07EB  00FF               	movwf	btemp+1
  3579  07EC  318C  2434         	fcall	clear_ram0
  3580                           
  3581                           ; Clear objects allocated to BANK0
  3582  07EE  0020               	movlb	0	; select bank0
  3583  07EF  01EB               	clrf	__pbssBANK0& (0+127)
  3584  07F0  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  3585  07F1  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  3586  07F2  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  3587                           
  3588                           ; Clear objects allocated to BANK1
  3589  07F3  0021               	movlb	1	; select bank1
  3590  07F4  01B9               	clrf	__pbssBANK1& (0+127)
  3591  07F5  01BA               	clrf	(__pbssBANK1+1)& (0+127)
  3592  07F6  01BB               	clrf	(__pbssBANK1+2)& (0+127)
  3593  07F7  01BC               	clrf	(__pbssBANK1+3)& (0+127)
  3594  07F8  01BD               	clrf	(__pbssBANK1+4)& (0+127)
  3595  07F9  01BE               	clrf	(__pbssBANK1+5)& (0+127)
  3596  07FA  01BF               	clrf	(__pbssBANK1+6)& (0+127)
  3597  07FB  01C0               	clrf	(__pbssBANK1+7)& (0+127)
  3598  07FC  01C1               	clrf	(__pbssBANK1+8)& (0+127)
  3599  07FD                     end_of_initialization:	
  3600                           ;End of C runtime variable initialization code
  3601                           
  3602  07FD                     __end_of__initialization:	
  3603  07FD  0020               	movlb	0
  3604  07FE  3185  2D16         	ljmp	_main	;jump to C main() function
  3605                           
  3606                           	psect	bssBANK0
  3607  006B                     __pbssBANK0:	
  3608  006B                     _x:	
  3609  006B                     	ds	1
  3610  006C                     _toggleCount:	
  3611  006C                     	ds	1
  3612  006D                     _upCount:	
  3613  006D                     	ds	1
  3614  006E                     _downCount:	
  3615  006E                     	ds	1
  3616                           
  3617                           	psect	bssBANK1
  3618  00B9                     __pbssBANK1:	
  3619  00B9                     LCDWriteInt@F14368:	
  3620  00B9                     	ds	5
  3621  00BE                     _errno:	
  3622  00BE                     	ds	2
  3623  00C0                     main@sampleIndex:	
  3624  00C0                     	ds	2
  3625                           
  3626                           	psect	clrtext
  3627  0C34                     clear_ram0:	
  3628                           ;	Called with FSR0 containing the base address, and
  3629                           ;	btemp/btemp+1 has the size to clear
  3630                           
  3631  0C34  0064               	clrwdt	;clear the watchdog before getting into this loop
  3632  0C35                     clrloop0:	
  3633  0C35  0180               	clrf	0	;clear RAM location pointed to by FSR
  3634  0C36  3101               	addfsr 0,1
  3635  0C37  3001               	movlw	1
  3636  0C38  02FE               	subwf	126,f
  3637  0C39  3000               	movlw	0
  3638  0C3A  3BFF               	subwfb	127,f
  3639  0C3B  087F               	movf	127,w
  3640  0C3C  047E               	iorwf	126,w
  3641  0C3D  1903               	btfsc	3,2
  3642  0C3E  3400               	retlw	0	;all done for this memory range, return
  3643  0C3F  2C35               	goto	clrloop0	;have we reached the end yet?
  3644                           
  3645                           	psect	cstackBANK1
  3646  00A0                     __pcstackBANK1:	
  3647  00A0                     main@seconds:	
  3648                           
  3649                           ; 2 bytes @ 0x0
  3650  00A0                     	ds	2
  3651  00A2                     main@minutes:	
  3652                           
  3653                           ; 2 bytes @ 0x2
  3654  00A2                     	ds	2
  3655  00A4                     main@R:	
  3656                           
  3657                           ; 3 bytes @ 0x4
  3658  00A4                     	ds	3
  3659  00A7                     _main$863:	
  3660                           
  3661                           ; 3 bytes @ 0x7
  3662  00A7                     	ds	3
  3663  00AA                     main@counter:	
  3664                           
  3665                           ; 2 bytes @ 0xA
  3666  00AA                     	ds	2
  3667  00AC                     main@readTemperature:	
  3668                           
  3669                           ; 2 bytes @ 0xC
  3670  00AC                     	ds	2
  3671  00AE                     main@toggle:	
  3672                           
  3673                           ; 1 bytes @ 0xE
  3674  00AE                     	ds	1
  3675  00AF                     main@displayTemp:	
  3676                           
  3677                           ; 3 bytes @ 0xF
  3678  00AF                     	ds	3
  3679  00B2                     main@totals:	
  3680                           
  3681                           ; 4 bytes @ 0x12
  3682  00B2                     	ds	4
  3683  00B6                     main@steinhart:	
  3684                           
  3685                           ; 3 bytes @ 0x16
  3686  00B6                     	ds	3
  3687                           
  3688                           	psect	cstackCOMMON
  3689  0070                     __pcstackCOMMON:	
  3690  0070                     ?___ftge:	
  3691  0070                     ?_LCDWriteCharacter:	
  3692                           ; 1 bit 
  3693                           
  3694  0070                     ?_LCDClear:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ?_OSCILLATOR_Initialize:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ??_OSCILLATOR_Initialize:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ?_LCDInit:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?_LCDWrite:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?_ADCC_Initialize:	
  3710                           ; 1 bytes @ 0x0
  3711                           
  3712  0070                     ??_ADCC_Initialize:	
  3713                           ; 1 bytes @ 0x0
  3714                           
  3715  0070                     ?_readButtons:	
  3716                           ; 1 bytes @ 0x0
  3717                           
  3718  0070                     ?_PIN_MANAGER_Initialize:	
  3719                           ; 1 bytes @ 0x0
  3720                           
  3721  0070                     ??_PIN_MANAGER_Initialize:	
  3722                           ; 1 bytes @ 0x0
  3723                           
  3724  0070                     ?_SYSTEM_Initialize:	
  3725                           ; 1 bytes @ 0x0
  3726                           
  3727  0070                     ?_main:	
  3728                           ; 1 bytes @ 0x0
  3729                           
  3730  0070                     ?_ADCC_GetSingleConversion:	
  3731                           ; 1 bytes @ 0x0
  3732                           
  3733  0070                     ?___wmul:	
  3734                           ; 2 bytes @ 0x0
  3735                           
  3736  0070                     ?___awdiv:	
  3737                           ; 2 bytes @ 0x0
  3738                           
  3739  0070                     ?___awmod:	
  3740                           ; 2 bytes @ 0x0
  3741                           
  3742  0070                     ?___ftpack:	
  3743                           ; 2 bytes @ 0x0
  3744                           
  3745  0070                     ?_frexp:	
  3746                           ; 3 bytes @ 0x0
  3747                           
  3748  0070                     ?___aldiv:	
  3749                           ; 3 bytes @ 0x0
  3750                           
  3751  0070                     ?___fttol:	
  3752                           ; 4 bytes @ 0x0
  3753                           
  3754  0070                     PIN_MANAGER_Initialize@state:	
  3755                           ; 4 bytes @ 0x0
  3756                           
  3757  0070                     LCDWrite@data:	
  3758                           ; 1 bytes @ 0x0
  3759                           
  3760  0070                     ___wmul@multiplier:	
  3761                           ; 1 bytes @ 0x0
  3762                           
  3763  0070                     ___awdiv@divisor:	
  3764                           ; 2 bytes @ 0x0
  3765                           
  3766  0070                     ___awmod@divisor:	
  3767                           ; 2 bytes @ 0x0
  3768                           
  3769  0070                     ___ftpack@arg:	
  3770                           ; 2 bytes @ 0x0
  3771                           
  3772  0070                     ___ftge@ff1:	
  3773                           ; 3 bytes @ 0x0
  3774                           
  3775  0070                     ___fttol@f1:	
  3776                           ; 3 bytes @ 0x0
  3777                           
  3778  0070                     frexp@value:	
  3779                           ; 3 bytes @ 0x0
  3780                           
  3781  0070                     ___aldiv@divisor:	
  3782                           ; 3 bytes @ 0x0
  3783                           
  3784                           
  3785                           ; 4 bytes @ 0x0
  3786  0070                     	ds	1
  3787  0071                     ??_LCDWrite:	
  3788                           
  3789                           ; 1 bytes @ 0x1
  3790  0071                     	ds	1
  3791  0072                     LCDWrite@data_or_command:	
  3792  0072                     ___wmul@multiplicand:	
  3793                           ; 1 bytes @ 0x2
  3794                           
  3795  0072                     ___awdiv@dividend:	
  3796                           ; 2 bytes @ 0x2
  3797                           
  3798  0072                     ___awmod@dividend:	
  3799                           ; 2 bytes @ 0x2
  3800                           
  3801                           
  3802                           ; 2 bytes @ 0x2
  3803  0072                     	ds	1
  3804  0073                     ??_ADCC_GetSingleConversion:	
  3805  0073                     ADCC_GetSingleConversion@channel:	
  3806                           ; 1 bytes @ 0x3
  3807                           
  3808  0073                     LCDWrite@d:	
  3809                           ; 1 bytes @ 0x3
  3810                           
  3811  0073                     ___ftpack@exp:	
  3812                           ; 1 bytes @ 0x3
  3813                           
  3814  0073                     frexp@eptr:	
  3815                           ; 1 bytes @ 0x3
  3816                           
  3817  0073                     ___ftge@ff2:	
  3818                           ; 1 bytes @ 0x3
  3819                           
  3820                           
  3821                           ; 3 bytes @ 0x3
  3822  0073                     	ds	1
  3823  0074                     ??_frexp:	
  3824  0074                     ??___wmul:	
  3825                           ; 1 bytes @ 0x4
  3826                           
  3827  0074                     ??___awdiv:	
  3828                           ; 1 bytes @ 0x4
  3829                           
  3830  0074                     ??___awmod:	
  3831                           ; 1 bytes @ 0x4
  3832                           
  3833  0074                     ??___fttol:	
  3834                           ; 1 bytes @ 0x4
  3835                           
  3836  0074                     LCDWrite@i:	
  3837                           ; 1 bytes @ 0x4
  3838                           
  3839  0074                     ___ftpack@sign:	
  3840                           ; 1 bytes @ 0x4
  3841                           
  3842  0074                     ___wmul@product:	
  3843                           ; 1 bytes @ 0x4
  3844                           
  3845  0074                     ___aldiv@dividend:	
  3846                           ; 2 bytes @ 0x4
  3847                           
  3848                           
  3849                           ; 4 bytes @ 0x4
  3850  0074                     	ds	1
  3851  0075                     ??_LCDInit:	
  3852  0075                     ?_gotoXY:	
  3853                           ; 1 bytes @ 0x5
  3854                           
  3855  0075                     ??___ftpack:	
  3856                           ; 1 bytes @ 0x5
  3857                           
  3858  0075                     gotoXY@y:	
  3859                           ; 1 bytes @ 0x5
  3860                           
  3861  0075                     ___awdiv@counter:	
  3862                           ; 1 bytes @ 0x5
  3863                           
  3864  0075                     ___awmod@counter:	
  3865                           ; 1 bytes @ 0x5
  3866                           
  3867                           
  3868                           ; 1 bytes @ 0x5
  3869  0075                     	ds	1
  3870  0076                     ??_LCDWriteCharacter:	
  3871  0076                     ??_gotoXY:	
  3872                           ; 1 bytes @ 0x6
  3873                           
  3874  0076                     ??___ftge:	
  3875                           ; 1 bytes @ 0x6
  3876                           
  3877  0076                     ___awdiv@sign:	
  3878                           ; 1 bytes @ 0x6
  3879                           
  3880  0076                     ___awmod@sign:	
  3881                           ; 1 bytes @ 0x6
  3882                           
  3883                           
  3884                           ; 1 bytes @ 0x6
  3885  0076                     	ds	1
  3886  0077                     gotoXY@x:	
  3887  0077                     ___awdiv@quotient:	
  3888                           ; 1 bytes @ 0x7
  3889                           
  3890                           
  3891                           ; 2 bytes @ 0x7
  3892  0077                     	ds	1
  3893  0078                     ??_LCDClear:	
  3894  0078                     ??___aldiv:	
  3895                           ; 1 bytes @ 0x8
  3896                           
  3897  0078                     ?___awtoft:	
  3898                           ; 1 bytes @ 0x8
  3899                           
  3900  0078                     ?___lwtoft:	
  3901                           ; 3 bytes @ 0x8
  3902                           
  3903  0078                     ___fttol@sign1:	
  3904                           ; 3 bytes @ 0x8
  3905                           
  3906  0078                     ___awtoft@c:	
  3907                           ; 1 bytes @ 0x8
  3908                           
  3909  0078                     ___lwtoft@c:	
  3910                           ; 2 bytes @ 0x8
  3911                           
  3912                           
  3913                           ; 2 bytes @ 0x8
  3914  0078                     	ds	1
  3915  0079                     LCDWriteCharacter@character:	
  3916  0079                     LCDClear@index:	
  3917                           ; 1 bytes @ 0x9
  3918                           
  3919  0079                     ___fttol@lval:	
  3920                           ; 2 bytes @ 0x9
  3921                           
  3922                           
  3923                           ; 4 bytes @ 0x9
  3924  0079                     	ds	1
  3925  007A                     LCDWriteCharacter@base:	
  3926                           
  3927                           ; 2 bytes @ 0xA
  3928  007A                     	ds	1
  3929  007B                     ??_SYSTEM_Initialize:	
  3930  007B                     ??___awtoft:	
  3931                           ; 1 bytes @ 0xB
  3932                           
  3933  007B                     ??___lwtoft:	
  3934                           ; 1 bytes @ 0xB
  3935                           
  3936                           
  3937                           ; 1 bytes @ 0xB
  3938  007B                     	ds	1
  3939  007C                     ??_readButtons:	
  3940                           
  3941                           ; 1 bytes @ 0xC
  3942  007C                     	ds	1
  3943  007D                     ___awtoft@sign:	
  3944  007D                     ___fttol@exp1:	
  3945                           ; 1 bytes @ 0xD
  3946                           
  3947                           
  3948                           ; 1 bytes @ 0xD
  3949  007D                     	ds	1
  3950  007E                     ??_eval_poly:	
  3951  007E                     ??___ftsub:	
  3952                           ; 1 bytes @ 0xE
  3953                           
  3954                           
  3955                           	psect	cstackBANK0
  3956  0020                     __pcstackBANK0:	
  3957                           ; 1 bytes @ 0xE
  3958                           
  3959  0020                     ?_LCDWriteInt:	
  3960  0020                     ?___ftmul:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963  0020                     ___aldiv@counter:	
  3964                           ; 3 bytes @ 0x0
  3965                           
  3966  0020                     LCDWriteInt@value:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969  0020                     ___ftmul@f1:	
  3970                           ; 2 bytes @ 0x0
  3971                           
  3972                           
  3973                           ; 3 bytes @ 0x0
  3974  0020                     	ds	1
  3975  0021                     ___aldiv@sign:	
  3976                           
  3977                           ; 1 bytes @ 0x1
  3978  0021                     	ds	1
  3979  0022                     LCDWriteInt@fieldLength:	
  3980  0022                     ___aldiv@quotient:	
  3981                           ; 1 bytes @ 0x2
  3982                           
  3983                           
  3984                           ; 4 bytes @ 0x2
  3985  0022                     	ds	1
  3986  0023                     LCDWriteInt@numPlaces:	
  3987  0023                     ___ftmul@f2:	
  3988                           ; 1 bytes @ 0x3
  3989                           
  3990                           
  3991                           ; 3 bytes @ 0x3
  3992  0023                     	ds	1
  3993  0024                     LCDWriteInt@sign:	
  3994                           
  3995                           ; 1 bytes @ 0x4
  3996  0024                     	ds	1
  3997  0025                     ??_LCDWriteInt:	
  3998                           
  3999                           ; 1 bytes @ 0x5
  4000  0025                     	ds	1
  4001  0026                     ??___ftmul:	
  4002                           
  4003                           ; 1 bytes @ 0x6
  4004  0026                     	ds	4
  4005  002A                     ___ftmul@exp:	
  4006  002A                     LCDWriteInt@str:	
  4007                           ; 1 bytes @ 0xA
  4008                           
  4009                           
  4010                           ; 5 bytes @ 0xA
  4011  002A                     	ds	1
  4012  002B                     ___ftmul@f3_as_product:	
  4013                           
  4014                           ; 3 bytes @ 0xB
  4015  002B                     	ds	3
  4016  002E                     ___ftmul@cntr:	
  4017                           
  4018                           ; 1 bytes @ 0xE
  4019  002E                     	ds	1
  4020  002F                     ___ftmul@sign:	
  4021  002F                     LCDWriteInt@j:	
  4022                           ; 1 bytes @ 0xF
  4023                           
  4024                           
  4025                           ; 2 bytes @ 0xF
  4026  002F                     	ds	1
  4027  0030                     ?___ftdiv:	
  4028  0030                     ___ftdiv@f2:	
  4029                           ; 3 bytes @ 0x10
  4030                           
  4031                           
  4032                           ; 3 bytes @ 0x10
  4033  0030                     	ds	1
  4034  0031                     LCDWriteInt@i:	
  4035                           
  4036                           ; 2 bytes @ 0x11
  4037  0031                     	ds	2
  4038  0033                     ___ftdiv@f1:	
  4039                           
  4040                           ; 3 bytes @ 0x13
  4041  0033                     	ds	3
  4042  0036                     ??___ftdiv:	
  4043                           
  4044                           ; 1 bytes @ 0x16
  4045  0036                     	ds	4
  4046  003A                     ___ftdiv@cntr:	
  4047                           
  4048                           ; 1 bytes @ 0x1A
  4049  003A                     	ds	1
  4050  003B                     ___ftdiv@f3:	
  4051                           
  4052                           ; 3 bytes @ 0x1B
  4053  003B                     	ds	3
  4054  003E                     ___ftdiv@exp:	
  4055                           
  4056                           ; 1 bytes @ 0x1E
  4057  003E                     	ds	1
  4058  003F                     ___ftdiv@sign:	
  4059                           
  4060                           ; 1 bytes @ 0x1F
  4061  003F                     	ds	1
  4062  0040                     ?___ftadd:	
  4063  0040                     ___ftadd@f1:	
  4064                           ; 3 bytes @ 0x20
  4065                           
  4066                           
  4067                           ; 3 bytes @ 0x20
  4068  0040                     	ds	3
  4069  0043                     ___ftadd@f2:	
  4070                           
  4071                           ; 3 bytes @ 0x23
  4072  0043                     	ds	3
  4073  0046                     ??___ftadd:	
  4074                           
  4075                           ; 1 bytes @ 0x26
  4076  0046                     	ds	4
  4077  004A                     ___ftadd@sign:	
  4078                           
  4079                           ; 1 bytes @ 0x2A
  4080  004A                     	ds	1
  4081  004B                     ___ftadd@exp2:	
  4082                           
  4083                           ; 1 bytes @ 0x2B
  4084  004B                     	ds	1
  4085  004C                     ___ftadd@exp1:	
  4086                           
  4087                           ; 1 bytes @ 0x2C
  4088  004C                     	ds	1
  4089  004D                     ?_eval_poly:	
  4090  004D                     ?___ftsub:	
  4091                           ; 3 bytes @ 0x2D
  4092                           
  4093  004D                     ___ftsub@f2:	
  4094                           ; 3 bytes @ 0x2D
  4095                           
  4096  004D                     eval_poly@x:	
  4097                           ; 3 bytes @ 0x2D
  4098                           
  4099                           
  4100                           ; 3 bytes @ 0x2D
  4101  004D                     	ds	3
  4102  0050                     eval_poly@d:	
  4103  0050                     ___ftsub@f1:	
  4104                           ; 2 bytes @ 0x30
  4105                           
  4106                           
  4107                           ; 3 bytes @ 0x30
  4108  0050                     	ds	2
  4109  0052                     eval_poly@n:	
  4110                           
  4111                           ; 2 bytes @ 0x32
  4112  0052                     	ds	2
  4113  0054                     eval_poly@res:	
  4114                           
  4115                           ; 3 bytes @ 0x34
  4116  0054                     	ds	3
  4117  0057                     ?_log:	
  4118  0057                     log@x:	
  4119                           ; 3 bytes @ 0x37
  4120                           
  4121                           
  4122                           ; 3 bytes @ 0x37
  4123  0057                     	ds	3
  4124  005A                     ??_log:	
  4125                           
  4126                           ; 1 bytes @ 0x3A
  4127  005A                     	ds	1
  4128  005B                     log@exponent:	
  4129                           
  4130                           ; 2 bytes @ 0x3B
  4131  005B                     	ds	2
  4132  005D                     ??_main:	
  4133                           
  4134                           ; 1 bytes @ 0x3D
  4135  005D                     	ds	14
  4136                           
  4137                           	psect	maintext
  4138  0516                     __pmaintext:	
  4139 ;;
  4140 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
  4141 ;;
  4142 ;; *************** function _main *****************
  4143 ;; Defined at:
  4144 ;;		line 12 in file "main.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  totals          4   18[BANK1 ] long 
  4149 ;;  steinhart       3   22[BANK1 ] float 
  4150 ;;  displayTemp     3   15[BANK1 ] float 
  4151 ;;  R               3    4[BANK1 ] float 
  4152 ;;  readTemperat    2   12[BANK1 ] unsigned int 
  4153 ;;  counter         2   10[BANK1 ] unsigned int 
  4154 ;;  minutes         2    2[BANK1 ] unsigned int 
  4155 ;;  seconds         2    0[BANK1 ] unsigned int 
  4156 ;;  readTemperat    2    0        unsigned int 
  4157 ;;  toggle          1   14[BANK1 ] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      void 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4162 ;; Tracked objects:
  4163 ;;		On entry : B1F/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4170 ;;      Totals:         0      14      25       0       0       0       0       0       0       0       0       0       
      +0       0
  4171 ;;Total ram usage:       39 bytes
  4172 ;; Hardware stack levels required when called:    4
  4173 ;; This function calls:
  4174 ;;		_ADCC_GetSingleConversion
  4175 ;;		_LCDWriteCharacter
  4176 ;;		_LCDWriteInt
  4177 ;;		_SYSTEM_Initialize
  4178 ;;		___aldiv
  4179 ;;		___ftadd
  4180 ;;		___ftdiv
  4181 ;;		___ftmul
  4182 ;;		___ftsub
  4183 ;;		___fttol
  4184 ;;		___lwtoft
  4185 ;;		_gotoXY
  4186 ;;		_log
  4187 ;;		_readButtons
  4188 ;; This function is called by:
  4189 ;;		Startup code after reset
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _main
  4195  0516                     _main:	
  4196                           
  4197                           ;main.c: 14: SYSTEM_Initialize();
  4198                           
  4199                           ;incstack = 0
  4200                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4201  0516  318C  24E6  3185   	fcall	_SYSTEM_Initialize
  4202                           
  4203                           ;main.c: 16: uint16_t readTemperature, readTemperatureOld, seconds = 0, counter = 0, min
      +                          utes = 0;
  4204  0519  0021               	movlb	1	; select bank1
  4205  051A  01A0               	clrf	main@seconds^(0+128)
  4206  051B  01A1               	clrf	(main@seconds+1)^(0+128)
  4207  051C  01AA               	clrf	main@counter^(0+128)
  4208  051D  01AB               	clrf	(main@counter+1)^(0+128)
  4209  051E  01A2               	clrf	main@minutes^(0+128)
  4210  051F  01A3               	clrf	(main@minutes+1)^(0+128)
  4211                           
  4212                           ;main.c: 18: uint8_t toggle = 0;
  4213  0520  01AE               	clrf	main@toggle^(0+128)
  4214                           
  4215                           ;main.c: 20: float R, steinhart, displayTemp;
  4216                           ;main.c: 22: static uint16_t sampleIndex = 0;
  4217                           ;main.c: 24: int32_t totals = 0;
  4218  0521  3000               	movlw	0
  4219  0522  00B5               	movwf	(main@totals+3)^(0+128)
  4220  0523  3000               	movlw	0
  4221  0524  00B4               	movwf	(main@totals+2)^(0+128)
  4222  0525  3000               	movlw	0
  4223  0526  00B3               	movwf	(main@totals+1)^(0+128)
  4224  0527  3000               	movlw	0
  4225  0528  00B2               	movwf	main@totals^(0+128)
  4226  0529                     l2388:	
  4227                           ;main.c: 27: while (1)
  4228                           
  4229                           
  4230                           ;main.c: 28: {
  4231                           ;main.c: 29: readTemperature = ADCC_GetSingleConversion(2);
  4232  0529  3002               	movlw	2
  4233  052A  318C  2440  3185   	fcall	_ADCC_GetSingleConversion
  4234  052D  0871               	movf	?_ADCC_GetSingleConversion+1,w
  4235  052E  0021               	movlb	1	; select bank1
  4236  052F  00AD               	movwf	(main@readTemperature+1)^(0+128)
  4237  0530  0870               	movf	?_ADCC_GetSingleConversion,w
  4238  0531  00AC               	movwf	main@readTemperature^(0+128)
  4239                           
  4240                           ;main.c: 31: totals = totals - samples[sampleIndex];
  4241  0532  0832               	movf	main@totals^(0+128),w
  4242  0533  0020               	movlb	0	; select bank0
  4243  0534  00DD               	movwf	??_main
  4244  0535  0021               	movlb	1	; select bank1
  4245  0536  0833               	movf	(main@totals+1)^(0+128),w
  4246  0537  0020               	movlb	0	; select bank0
  4247  0538  00DE               	movwf	??_main+1
  4248  0539  0021               	movlb	1	; select bank1
  4249  053A  0834               	movf	(main@totals+2)^(0+128),w
  4250  053B  0020               	movlb	0	; select bank0
  4251  053C  00DF               	movwf	??_main+2
  4252  053D  0021               	movlb	1	; select bank1
  4253  053E  0835               	movf	(main@totals+3)^(0+128),w
  4254  053F  0020               	movlb	0	; select bank0
  4255  0540  00E0               	movwf	??_main+3
  4256  0541  0021               	movlb	1	; select bank1
  4257  0542  0841               	movf	(main@sampleIndex+1)^(0+128),w
  4258  0543  0020               	movlb	0	; select bank0
  4259  0544  00E2               	movwf	??_main+5
  4260  0545  0021               	movlb	1	; select bank1
  4261  0546  0840               	movf	main@sampleIndex^(0+128),w
  4262  0547  0020               	movlb	0	; select bank0
  4263  0548  00E1               	movwf	??_main+4
  4264  0549  35E1               	lslf	??_main+4,f
  4265  054A  0DE2               	rlf	??_main+5,f
  4266  054B  308C               	movlw	140
  4267  054C  00E3               	movwf	??_main+6
  4268  054D  3023               	movlw	35
  4269  054E  00E4               	movwf	??_main+7
  4270  054F  0861               	movf	??_main+4,w
  4271  0550  0763               	addwf	??_main+6,w
  4272  0551  0086               	movwf	6
  4273  0552  0862               	movf	??_main+5,w
  4274  0553  3D64               	addwfc	??_main+7,w
  4275  0554  0087               	movwf	7
  4276  0555  3F40               	moviw [0]fsr1
  4277  0556  00E5               	movwf	??_main+8
  4278  0557  3F41               	moviw [1]fsr1
  4279  0558  00E6               	movwf	??_main+9
  4280  0559  0865               	movf	??_main+8,w
  4281  055A  00E7               	movwf	??_main+10
  4282  055B  0866               	movf	??_main+9,w
  4283  055C  00E8               	movwf	??_main+11
  4284  055D  01E9               	clrf	??_main+12
  4285  055E  01EA               	clrf	??_main+13
  4286  055F  09E7               	comf	??_main+10,f
  4287  0560  09E8               	comf	??_main+11,f
  4288  0561  09E9               	comf	??_main+12,f
  4289  0562  09EA               	comf	??_main+13,f
  4290  0563  0AE7               	incf	??_main+10,f
  4291  0564  1903               	skipnz
  4292  0565  0AE8               	incf	??_main+11,f
  4293  0566  1903               	skipnz
  4294  0567  0AE9               	incf	??_main+12,f
  4295  0568  1903               	skipnz
  4296  0569  0AEA               	incf	??_main+13,f
  4297  056A  0867               	movf	??_main+10,w
  4298  056B  07DD               	addwf	??_main,f
  4299  056C  0868               	movf	??_main+11,w
  4300  056D  3DDE               	addwfc	??_main+1,f
  4301  056E  0869               	movf	??_main+12,w
  4302  056F  3DDF               	addwfc	??_main+2,f
  4303  0570  086A               	movf	??_main+13,w
  4304  0571  3DE0               	addwfc	??_main+3,f
  4305  0572  0860               	movf	??_main+3,w
  4306  0573  0021               	movlb	1	; select bank1
  4307  0574  00B5               	movwf	(main@totals+3)^(0+128)
  4308  0575  0020               	movlb	0	; select bank0
  4309  0576  085F               	movf	??_main+2,w
  4310  0577  0021               	movlb	1	; select bank1
  4311  0578  00B4               	movwf	(main@totals+2)^(0+128)
  4312  0579  0020               	movlb	0	; select bank0
  4313  057A  085E               	movf	??_main+1,w
  4314  057B  0021               	movlb	1	; select bank1
  4315  057C  00B3               	movwf	(main@totals+1)^(0+128)
  4316  057D  0020               	movlb	0	; select bank0
  4317  057E  085D               	movf	??_main,w
  4318  057F  0021               	movlb	1	; select bank1
  4319  0580  00B2               	movwf	main@totals^(0+128)
  4320                           
  4321                           ;main.c: 33: samples[sampleIndex] = readTemperature;
  4322  0581  0841               	movf	(main@sampleIndex+1)^(0+128),w
  4323  0582  0020               	movlb	0	; select bank0
  4324  0583  00DE               	movwf	??_main+1
  4325  0584  0021               	movlb	1	; select bank1
  4326  0585  0840               	movf	main@sampleIndex^(0+128),w
  4327  0586  0020               	movlb	0	; select bank0
  4328  0587  00DD               	movwf	??_main
  4329  0588  35DD               	lslf	??_main,f
  4330  0589  0DDE               	rlf	??_main+1,f
  4331  058A  308C               	movlw	140
  4332  058B  00DF               	movwf	??_main+2
  4333  058C  3023               	movlw	35
  4334  058D  00E0               	movwf	??_main+3
  4335  058E  085D               	movf	??_main,w
  4336  058F  075F               	addwf	??_main+2,w
  4337  0590  0086               	movwf	6
  4338  0591  085E               	movf	??_main+1,w
  4339  0592  3D60               	addwfc	??_main+3,w
  4340  0593  0087               	movwf	7
  4341  0594  0021               	movlb	1	; select bank1
  4342  0595  082C               	movf	main@readTemperature^(0+128),w
  4343  0596  3FC0               	movwi [0]fsr1
  4344  0597  082D               	movf	(main@readTemperature+1)^(0+128),w
  4345  0598  3FC1               	movwi [1]fsr1
  4346                           
  4347                           ;main.c: 35: totals = totals + samples[sampleIndex];
  4348  0599  0832               	movf	main@totals^(0+128),w
  4349  059A  0020               	movlb	0	; select bank0
  4350  059B  00DD               	movwf	??_main
  4351  059C  0021               	movlb	1	; select bank1
  4352  059D  0833               	movf	(main@totals+1)^(0+128),w
  4353  059E  0020               	movlb	0	; select bank0
  4354  059F  00DE               	movwf	??_main+1
  4355  05A0  0021               	movlb	1	; select bank1
  4356  05A1  0834               	movf	(main@totals+2)^(0+128),w
  4357  05A2  0020               	movlb	0	; select bank0
  4358  05A3  00DF               	movwf	??_main+2
  4359  05A4  0021               	movlb	1	; select bank1
  4360  05A5  0835               	movf	(main@totals+3)^(0+128),w
  4361  05A6  0020               	movlb	0	; select bank0
  4362  05A7  00E0               	movwf	??_main+3
  4363  05A8  0021               	movlb	1	; select bank1
  4364  05A9  0841               	movf	(main@sampleIndex+1)^(0+128),w
  4365  05AA  0020               	movlb	0	; select bank0
  4366  05AB  00E2               	movwf	??_main+5
  4367  05AC  0021               	movlb	1	; select bank1
  4368  05AD  0840               	movf	main@sampleIndex^(0+128),w
  4369  05AE  0020               	movlb	0	; select bank0
  4370  05AF  00E1               	movwf	??_main+4
  4371  05B0  35E1               	lslf	??_main+4,f
  4372  05B1  0DE2               	rlf	??_main+5,f
  4373  05B2  308C               	movlw	140
  4374  05B3  00E3               	movwf	??_main+6
  4375  05B4  3023               	movlw	35
  4376  05B5  00E4               	movwf	??_main+7
  4377  05B6  0861               	movf	??_main+4,w
  4378  05B7  0763               	addwf	??_main+6,w
  4379  05B8  0086               	movwf	6
  4380  05B9  0862               	movf	??_main+5,w
  4381  05BA  3D64               	addwfc	??_main+7,w
  4382  05BB  0087               	movwf	7
  4383  05BC  3F40               	moviw [0]fsr1
  4384  05BD  00E5               	movwf	??_main+8
  4385  05BE  3F41               	moviw [1]fsr1
  4386  05BF  00E6               	movwf	??_main+9
  4387  05C0  0865               	movf	??_main+8,w
  4388  05C1  00E7               	movwf	??_main+10
  4389  05C2  0866               	movf	??_main+9,w
  4390  05C3  00E8               	movwf	??_main+11
  4391  05C4  01E9               	clrf	??_main+12
  4392  05C5  01EA               	clrf	??_main+13
  4393  05C6  0867               	movf	??_main+10,w
  4394  05C7  07DD               	addwf	??_main,f
  4395  05C8  0868               	movf	??_main+11,w
  4396  05C9  3DDE               	addwfc	??_main+1,f
  4397  05CA  0869               	movf	??_main+12,w
  4398  05CB  3DDF               	addwfc	??_main+2,f
  4399  05CC  086A               	movf	??_main+13,w
  4400  05CD  3DE0               	addwfc	??_main+3,f
  4401  05CE  0860               	movf	??_main+3,w
  4402  05CF  0021               	movlb	1	; select bank1
  4403  05D0  00B5               	movwf	(main@totals+3)^(0+128)
  4404  05D1  0020               	movlb	0	; select bank0
  4405  05D2  085F               	movf	??_main+2,w
  4406  05D3  0021               	movlb	1	; select bank1
  4407  05D4  00B4               	movwf	(main@totals+2)^(0+128)
  4408  05D5  0020               	movlb	0	; select bank0
  4409  05D6  085E               	movf	??_main+1,w
  4410  05D7  0021               	movlb	1	; select bank1
  4411  05D8  00B3               	movwf	(main@totals+1)^(0+128)
  4412  05D9  0020               	movlb	0	; select bank0
  4413  05DA  085D               	movf	??_main,w
  4414  05DB  0021               	movlb	1	; select bank1
  4415  05DC  00B2               	movwf	main@totals^(0+128)
  4416                           
  4417                           ;main.c: 37: sampleIndex += 1;
  4418  05DD  3001               	movlw	1
  4419  05DE  07C0               	addwf	main@sampleIndex^(0+128),f
  4420  05DF  3000               	movlw	0
  4421  05E0  3DC1               	addwfc	(main@sampleIndex+1)^(0+128),f
  4422                           
  4423                           ;main.c: 39: if(sampleIndex >= 50)
  4424  05E1  3000               	movlw	0
  4425  05E2  0241               	subwf	(main@sampleIndex+1)^(0+128),w
  4426  05E3  3032               	movlw	50
  4427  05E4  1903               	skipnz
  4428  05E5  0240               	subwf	main@sampleIndex^(0+128),w
  4429  05E6  1C03               	skipc
  4430  05E7  2DEA               	goto	l2402
  4431                           
  4432                           ;main.c: 40: {
  4433                           ;main.c: 41: sampleIndex = 0;
  4434  05E8  01C0               	clrf	main@sampleIndex^(0+128)
  4435  05E9  01C1               	clrf	(main@sampleIndex+1)^(0+128)
  4436  05EA                     l2402:	
  4437                           
  4438                           ;main.c: 42: }
  4439                           ;main.c: 44: readTemperature = totals / 50;
  4440  05EA  3000               	movlw	0
  4441  05EB  00F3               	movwf	___aldiv@divisor+3
  4442  05EC  3000               	movlw	0
  4443  05ED  00F2               	movwf	___aldiv@divisor+2
  4444  05EE  3000               	movlw	0
  4445  05EF  00F1               	movwf	___aldiv@divisor+1
  4446  05F0  3032               	movlw	50
  4447  05F1  00F0               	movwf	___aldiv@divisor
  4448  05F2  0835               	movf	(main@totals+3)^(0+128),w
  4449  05F3  00F7               	movwf	___aldiv@dividend+3
  4450  05F4  0834               	movf	(main@totals+2)^(0+128),w
  4451  05F5  00F6               	movwf	___aldiv@dividend+2
  4452  05F6  0833               	movf	(main@totals+1)^(0+128),w
  4453  05F7  00F5               	movwf	___aldiv@dividend+1
  4454  05F8  0832               	movf	main@totals^(0+128),w
  4455  05F9  00F4               	movwf	___aldiv@dividend
  4456  05FA  3180  2040  3185   	fcall	___aldiv
  4457  05FD  0871               	movf	?___aldiv+1,w
  4458  05FE  0021               	movlb	1	; select bank1
  4459  05FF  00AD               	movwf	(main@readTemperature+1)^(0+128)
  4460  0600  0870               	movf	?___aldiv,w
  4461  0601  00AC               	movwf	main@readTemperature^(0+128)
  4462                           
  4463                           ;main.c: 47: R = 10200/(1023/(float)readTemperature - 1);
  4464  0602  3000               	movlw	0
  4465  0603  0020               	movlb	0	; select bank0
  4466  0604  00C0               	movwf	___ftadd@f1
  4467  0605  3080               	movlw	128
  4468  0606  00C1               	movwf	___ftadd@f1+1
  4469  0607  30BF               	movlw	191
  4470  0608  00C2               	movwf	___ftadd@f1+2
  4471  0609  0021               	movlb	1	; select bank1
  4472  060A  082D               	movf	(main@readTemperature+1)^(0+128),w
  4473  060B  00F9               	movwf	___lwtoft@c+1
  4474  060C  082C               	movf	main@readTemperature^(0+128),w
  4475  060D  00F8               	movwf	___lwtoft@c
  4476  060E  318C  2461  3185   	fcall	___lwtoft
  4477  0611  0878               	movf	?___lwtoft,w
  4478  0612  0020               	movlb	0	; select bank0
  4479  0613  00B0               	movwf	___ftdiv@f2
  4480  0614  0879               	movf	?___lwtoft+1,w
  4481  0615  00B1               	movwf	___ftdiv@f2+1
  4482  0616  087A               	movf	?___lwtoft+2,w
  4483  0617  00B2               	movwf	___ftdiv@f2+2
  4484  0618  30C0               	movlw	192
  4485  0619  00B3               	movwf	___ftdiv@f1
  4486  061A  307F               	movlw	127
  4487  061B  00B4               	movwf	___ftdiv@f1+1
  4488  061C  3044               	movlw	68
  4489  061D  00B5               	movwf	___ftdiv@f1+2
  4490  061E  3181  2148  3185   	fcall	___ftdiv
  4491  0621  0020               	movlb	0	; select bank0
  4492  0622  0830               	movf	?___ftdiv,w
  4493  0623  00C3               	movwf	___ftadd@f2
  4494  0624  0831               	movf	?___ftdiv+1,w
  4495  0625  00C4               	movwf	___ftadd@f2+1
  4496  0626  0832               	movf	?___ftdiv+2,w
  4497  0627  00C5               	movwf	___ftadd@f2+2
  4498  0628  3184  2420  3185   	fcall	___ftadd
  4499  062B  0020               	movlb	0	; select bank0
  4500  062C  0840               	movf	?___ftadd,w
  4501  062D  0021               	movlb	1	; select bank1
  4502  062E  00A7               	movwf	_main$863^(0+128)
  4503  062F  0020               	movlb	0	; select bank0
  4504  0630  0841               	movf	?___ftadd+1,w
  4505  0631  0021               	movlb	1	; select bank1
  4506  0632  00A8               	movwf	(_main$863+1)^(0+128)
  4507  0633  0020               	movlb	0	; select bank0
  4508  0634  0842               	movf	?___ftadd+2,w
  4509  0635  0021               	movlb	1	; select bank1
  4510  0636  00A9               	movwf	(_main$863+2)^(0+128)
  4511                           
  4512                           ;main.c: 47: R = 10200/(1023/(float)readTemperature - 1);
  4513  0637  0827               	movf	_main$863^(0+128),w
  4514  0638  0020               	movlb	0	; select bank0
  4515  0639  00B0               	movwf	___ftdiv@f2
  4516  063A  0021               	movlb	1	; select bank1
  4517  063B  0828               	movf	(_main$863+1)^(0+128),w
  4518  063C  0020               	movlb	0	; select bank0
  4519  063D  00B1               	movwf	___ftdiv@f2+1
  4520  063E  0021               	movlb	1	; select bank1
  4521  063F  0829               	movf	(_main$863+2)^(0+128),w
  4522  0640  0020               	movlb	0	; select bank0
  4523  0641  00B2               	movwf	___ftdiv@f2+2
  4524  0642  3060               	movlw	96
  4525  0643  00B3               	movwf	___ftdiv@f1
  4526  0644  301F               	movlw	31
  4527  0645  00B4               	movwf	___ftdiv@f1+1
  4528  0646  3046               	movlw	70
  4529  0647  00B5               	movwf	___ftdiv@f1+2
  4530  0648  3181  2148  3185   	fcall	___ftdiv
  4531  064B  0020               	movlb	0	; select bank0
  4532  064C  0830               	movf	?___ftdiv,w
  4533  064D  0021               	movlb	1	; select bank1
  4534  064E  00A4               	movwf	main@R^(0+128)
  4535  064F  0020               	movlb	0	; select bank0
  4536  0650  0831               	movf	?___ftdiv+1,w
  4537  0651  0021               	movlb	1	; select bank1
  4538  0652  00A5               	movwf	(main@R+1)^(0+128)
  4539  0653  0020               	movlb	0	; select bank0
  4540  0654  0832               	movf	?___ftdiv+2,w
  4541  0655  0021               	movlb	1	; select bank1
  4542  0656  00A6               	movwf	(main@R+2)^(0+128)
  4543                           
  4544                           ;main.c: 49: steinhart = R /10061;
  4545  0657  3034               	movlw	52
  4546  0658  0020               	movlb	0	; select bank0
  4547  0659  00B0               	movwf	___ftdiv@f2
  4548  065A  301D               	movlw	29
  4549  065B  00B1               	movwf	___ftdiv@f2+1
  4550  065C  3046               	movlw	70
  4551  065D  00B2               	movwf	___ftdiv@f2+2
  4552  065E  0021               	movlb	1	; select bank1
  4553  065F  0824               	movf	main@R^(0+128),w
  4554  0660  0020               	movlb	0	; select bank0
  4555  0661  00B3               	movwf	___ftdiv@f1
  4556  0662  0021               	movlb	1	; select bank1
  4557  0663  0825               	movf	(main@R+1)^(0+128),w
  4558  0664  0020               	movlb	0	; select bank0
  4559  0665  00B4               	movwf	___ftdiv@f1+1
  4560  0666  0021               	movlb	1	; select bank1
  4561  0667  0826               	movf	(main@R+2)^(0+128),w
  4562  0668  0020               	movlb	0	; select bank0
  4563  0669  00B5               	movwf	___ftdiv@f1+2
  4564  066A  3181  2148  3185   	fcall	___ftdiv
  4565  066D  0020               	movlb	0	; select bank0
  4566  066E  0830               	movf	?___ftdiv,w
  4567  066F  0021               	movlb	1	; select bank1
  4568  0670  00B6               	movwf	main@steinhart^(0+128)
  4569  0671  0020               	movlb	0	; select bank0
  4570  0672  0831               	movf	?___ftdiv+1,w
  4571  0673  0021               	movlb	1	; select bank1
  4572  0674  00B7               	movwf	(main@steinhart+1)^(0+128)
  4573  0675  0020               	movlb	0	; select bank0
  4574  0676  0832               	movf	?___ftdiv+2,w
  4575  0677  0021               	movlb	1	; select bank1
  4576  0678  00B8               	movwf	(main@steinhart+2)^(0+128)
  4577                           
  4578                           ;main.c: 50: steinhart = log(steinhart);
  4579  0679  0836               	movf	main@steinhart^(0+128),w
  4580  067A  0020               	movlb	0	; select bank0
  4581  067B  00D7               	movwf	log@x
  4582  067C  0021               	movlb	1	; select bank1
  4583  067D  0837               	movf	(main@steinhart+1)^(0+128),w
  4584  067E  0020               	movlb	0	; select bank0
  4585  067F  00D8               	movwf	log@x+1
  4586  0680  0021               	movlb	1	; select bank1
  4587  0681  0838               	movf	(main@steinhart+2)^(0+128),w
  4588  0682  0020               	movlb	0	; select bank0
  4589  0683  00D9               	movwf	log@x+2
  4590  0684  3181  21F1  3185   	fcall	_log
  4591  0687  0020               	movlb	0	; select bank0
  4592  0688  0857               	movf	?_log,w
  4593  0689  0021               	movlb	1	; select bank1
  4594  068A  00B6               	movwf	main@steinhart^(0+128)
  4595  068B  0020               	movlb	0	; select bank0
  4596  068C  0858               	movf	?_log+1,w
  4597  068D  0021               	movlb	1	; select bank1
  4598  068E  00B7               	movwf	(main@steinhart+1)^(0+128)
  4599  068F  0020               	movlb	0	; select bank0
  4600  0690  0859               	movf	?_log+2,w
  4601  0691  0021               	movlb	1	; select bank1
  4602  0692  00B8               	movwf	(main@steinhart+2)^(0+128)
  4603                           
  4604                           ;main.c: 51: steinhart /= 3995;
  4605  0693  30B0               	movlw	176
  4606  0694  0020               	movlb	0	; select bank0
  4607  0695  00B0               	movwf	___ftdiv@f2
  4608  0696  3079               	movlw	121
  4609  0697  00B1               	movwf	___ftdiv@f2+1
  4610  0698  3045               	movlw	69
  4611  0699  00B2               	movwf	___ftdiv@f2+2
  4612  069A  0021               	movlb	1	; select bank1
  4613  069B  0836               	movf	main@steinhart^(0+128),w
  4614  069C  0020               	movlb	0	; select bank0
  4615  069D  00B3               	movwf	___ftdiv@f1
  4616  069E  0021               	movlb	1	; select bank1
  4617  069F  0837               	movf	(main@steinhart+1)^(0+128),w
  4618  06A0  0020               	movlb	0	; select bank0
  4619  06A1  00B4               	movwf	___ftdiv@f1+1
  4620  06A2  0021               	movlb	1	; select bank1
  4621  06A3  0838               	movf	(main@steinhart+2)^(0+128),w
  4622  06A4  0020               	movlb	0	; select bank0
  4623  06A5  00B5               	movwf	___ftdiv@f1+2
  4624  06A6  3181  2148  3185   	fcall	___ftdiv
  4625  06A9  0020               	movlb	0	; select bank0
  4626  06AA  0830               	movf	?___ftdiv,w
  4627  06AB  0021               	movlb	1	; select bank1
  4628  06AC  00B6               	movwf	main@steinhart^(0+128)
  4629  06AD  0020               	movlb	0	; select bank0
  4630  06AE  0831               	movf	?___ftdiv+1,w
  4631  06AF  0021               	movlb	1	; select bank1
  4632  06B0  00B7               	movwf	(main@steinhart+1)^(0+128)
  4633  06B1  0020               	movlb	0	; select bank0
  4634  06B2  0832               	movf	?___ftdiv+2,w
  4635  06B3  0021               	movlb	1	; select bank1
  4636  06B4  00B8               	movwf	(main@steinhart+2)^(0+128)
  4637                           
  4638                           ;main.c: 52: steinhart += 1.0 / (25 + 273.15);
  4639  06B5  30CF               	movlw	207
  4640  06B6  0020               	movlb	0	; select bank0
  4641  06B7  00C0               	movwf	___ftadd@f1
  4642  06B8  305B               	movlw	91
  4643  06B9  00C1               	movwf	___ftadd@f1+1
  4644  06BA  303B               	movlw	59
  4645  06BB  00C2               	movwf	___ftadd@f1+2
  4646  06BC  0021               	movlb	1	; select bank1
  4647  06BD  0836               	movf	main@steinhart^(0+128),w
  4648  06BE  0020               	movlb	0	; select bank0
  4649  06BF  00C3               	movwf	___ftadd@f2
  4650  06C0  0021               	movlb	1	; select bank1
  4651  06C1  0837               	movf	(main@steinhart+1)^(0+128),w
  4652  06C2  0020               	movlb	0	; select bank0
  4653  06C3  00C4               	movwf	___ftadd@f2+1
  4654  06C4  0021               	movlb	1	; select bank1
  4655  06C5  0838               	movf	(main@steinhart+2)^(0+128),w
  4656  06C6  0020               	movlb	0	; select bank0
  4657  06C7  00C5               	movwf	___ftadd@f2+2
  4658  06C8  3184  2420  3185   	fcall	___ftadd
  4659  06CB  0020               	movlb	0	; select bank0
  4660  06CC  0840               	movf	?___ftadd,w
  4661  06CD  0021               	movlb	1	; select bank1
  4662  06CE  00B6               	movwf	main@steinhart^(0+128)
  4663  06CF  0020               	movlb	0	; select bank0
  4664  06D0  0841               	movf	?___ftadd+1,w
  4665  06D1  0021               	movlb	1	; select bank1
  4666  06D2  00B7               	movwf	(main@steinhart+1)^(0+128)
  4667  06D3  0020               	movlb	0	; select bank0
  4668  06D4  0842               	movf	?___ftadd+2,w
  4669  06D5  0021               	movlb	1	; select bank1
  4670  06D6  00B8               	movwf	(main@steinhart+2)^(0+128)
  4671                           
  4672                           ;main.c: 53: steinhart = 1.0 / steinhart;
  4673  06D7  0836               	movf	main@steinhart^(0+128),w
  4674  06D8  0020               	movlb	0	; select bank0
  4675  06D9  00B0               	movwf	___ftdiv@f2
  4676  06DA  0021               	movlb	1	; select bank1
  4677  06DB  0837               	movf	(main@steinhart+1)^(0+128),w
  4678  06DC  0020               	movlb	0	; select bank0
  4679  06DD  00B1               	movwf	___ftdiv@f2+1
  4680  06DE  0021               	movlb	1	; select bank1
  4681  06DF  0838               	movf	(main@steinhart+2)^(0+128),w
  4682  06E0  0020               	movlb	0	; select bank0
  4683  06E1  00B2               	movwf	___ftdiv@f2+2
  4684  06E2  3000               	movlw	0
  4685  06E3  00B3               	movwf	___ftdiv@f1
  4686  06E4  3080               	movlw	128
  4687  06E5  00B4               	movwf	___ftdiv@f1+1
  4688  06E6  303F               	movlw	63
  4689  06E7  00B5               	movwf	___ftdiv@f1+2
  4690  06E8  3181  2148  3185   	fcall	___ftdiv
  4691  06EB  0020               	movlb	0	; select bank0
  4692  06EC  0830               	movf	?___ftdiv,w
  4693  06ED  0021               	movlb	1	; select bank1
  4694  06EE  00B6               	movwf	main@steinhart^(0+128)
  4695  06EF  0020               	movlb	0	; select bank0
  4696  06F0  0831               	movf	?___ftdiv+1,w
  4697  06F1  0021               	movlb	1	; select bank1
  4698  06F2  00B7               	movwf	(main@steinhart+1)^(0+128)
  4699  06F3  0020               	movlb	0	; select bank0
  4700  06F4  0832               	movf	?___ftdiv+2,w
  4701  06F5  0021               	movlb	1	; select bank1
  4702  06F6  00B8               	movwf	(main@steinhart+2)^(0+128)
  4703                           
  4704                           ;main.c: 54: steinhart -= 273.15;
  4705  06F7  3093               	movlw	147
  4706  06F8  0020               	movlb	0	; select bank0
  4707  06F9  00CD               	movwf	___ftsub@f2
  4708  06FA  3088               	movlw	136
  4709  06FB  00CE               	movwf	___ftsub@f2+1
  4710  06FC  3043               	movlw	67
  4711  06FD  00CF               	movwf	___ftsub@f2+2
  4712  06FE  0021               	movlb	1	; select bank1
  4713  06FF  0836               	movf	main@steinhart^(0+128),w
  4714  0700  0020               	movlb	0	; select bank0
  4715  0701  00D0               	movwf	___ftsub@f1
  4716  0702  0021               	movlb	1	; select bank1
  4717  0703  0837               	movf	(main@steinhart+1)^(0+128),w
  4718  0704  0020               	movlb	0	; select bank0
  4719  0705  00D1               	movwf	___ftsub@f1+1
  4720  0706  0021               	movlb	1	; select bank1
  4721  0707  0838               	movf	(main@steinhart+2)^(0+128),w
  4722  0708  0020               	movlb	0	; select bank0
  4723  0709  00D2               	movwf	___ftsub@f1+2
  4724  070A  318C  24A8  3185   	fcall	___ftsub
  4725  070D  0020               	movlb	0	; select bank0
  4726  070E  084D               	movf	?___ftsub,w
  4727  070F  0021               	movlb	1	; select bank1
  4728  0710  00B6               	movwf	main@steinhart^(0+128)
  4729  0711  0020               	movlb	0	; select bank0
  4730  0712  084E               	movf	?___ftsub+1,w
  4731  0713  0021               	movlb	1	; select bank1
  4732  0714  00B7               	movwf	(main@steinhart+1)^(0+128)
  4733  0715  0020               	movlb	0	; select bank0
  4734  0716  084F               	movf	?___ftsub+2,w
  4735  0717  0021               	movlb	1	; select bank1
  4736  0718  00B8               	movwf	(main@steinhart+2)^(0+128)
  4737                           
  4738                           ;main.c: 57: displayTemp = steinhart*10;
  4739  0719  3000               	movlw	0
  4740  071A  0020               	movlb	0	; select bank0
  4741  071B  00A0               	movwf	___ftmul@f1
  4742  071C  3020               	movlw	32
  4743  071D  00A1               	movwf	___ftmul@f1+1
  4744  071E  3041               	movlw	65
  4745  071F  00A2               	movwf	___ftmul@f1+2
  4746  0720  0021               	movlb	1	; select bank1
  4747  0721  0836               	movf	main@steinhart^(0+128),w
  4748  0722  0020               	movlb	0	; select bank0
  4749  0723  00A3               	movwf	___ftmul@f2
  4750  0724  0021               	movlb	1	; select bank1
  4751  0725  0837               	movf	(main@steinhart+1)^(0+128),w
  4752  0726  0020               	movlb	0	; select bank0
  4753  0727  00A4               	movwf	___ftmul@f2+1
  4754  0728  0021               	movlb	1	; select bank1
  4755  0729  0838               	movf	(main@steinhart+2)^(0+128),w
  4756  072A  0020               	movlb	0	; select bank0
  4757  072B  00A5               	movwf	___ftmul@f2+2
  4758  072C  3182  22A1  3185   	fcall	___ftmul
  4759  072F  0020               	movlb	0	; select bank0
  4760  0730  0820               	movf	?___ftmul,w
  4761  0731  0021               	movlb	1	; select bank1
  4762  0732  00AF               	movwf	main@displayTemp^(0+128)
  4763  0733  0020               	movlb	0	; select bank0
  4764  0734  0821               	movf	?___ftmul+1,w
  4765  0735  0021               	movlb	1	; select bank1
  4766  0736  00B0               	movwf	(main@displayTemp+1)^(0+128)
  4767  0737  0020               	movlb	0	; select bank0
  4768  0738  0822               	movf	?___ftmul+2,w
  4769  0739  0021               	movlb	1	; select bank1
  4770  073A  00B1               	movwf	(main@displayTemp+2)^(0+128)
  4771                           
  4772                           ;main.c: 59: if(toggle == 1)
  4773  073B  032E               	decf	main@toggle^(0+128),w
  4774  073C  1D03               	btfss	3,2
  4775  073D  2FA2               	goto	l2434
  4776                           
  4777                           ;main.c: 60: {
  4778                           ;main.c: 61: displayTemp = displayTemp*9/5+320;
  4779  073E  3000               	movlw	0
  4780  073F  0020               	movlb	0	; select bank0
  4781  0740  00C0               	movwf	___ftadd@f1
  4782  0741  30A0               	movlw	160
  4783  0742  00C1               	movwf	___ftadd@f1+1
  4784  0743  3043               	movlw	67
  4785  0744  00C2               	movwf	___ftadd@f1+2
  4786  0745  3000               	movlw	0
  4787  0746  00B0               	movwf	___ftdiv@f2
  4788  0747  30A0               	movlw	160
  4789  0748  00B1               	movwf	___ftdiv@f2+1
  4790  0749  3040               	movlw	64
  4791  074A  00B2               	movwf	___ftdiv@f2+2
  4792  074B  3000               	movlw	0
  4793  074C  00A0               	movwf	___ftmul@f1
  4794  074D  3010               	movlw	16
  4795  074E  00A1               	movwf	___ftmul@f1+1
  4796  074F  3041               	movlw	65
  4797  0750  00A2               	movwf	___ftmul@f1+2
  4798  0751  0021               	movlb	1	; select bank1
  4799  0752  082F               	movf	main@displayTemp^(0+128),w
  4800  0753  0020               	movlb	0	; select bank0
  4801  0754  00A3               	movwf	___ftmul@f2
  4802  0755  0021               	movlb	1	; select bank1
  4803  0756  0830               	movf	(main@displayTemp+1)^(0+128),w
  4804  0757  0020               	movlb	0	; select bank0
  4805  0758  00A4               	movwf	___ftmul@f2+1
  4806  0759  0021               	movlb	1	; select bank1
  4807  075A  0831               	movf	(main@displayTemp+2)^(0+128),w
  4808  075B  0020               	movlb	0	; select bank0
  4809  075C  00A5               	movwf	___ftmul@f2+2
  4810  075D  3182  22A1  3185   	fcall	___ftmul
  4811  0760  0020               	movlb	0	; select bank0
  4812  0761  0820               	movf	?___ftmul,w
  4813  0762  00B3               	movwf	___ftdiv@f1
  4814  0763  0821               	movf	?___ftmul+1,w
  4815  0764  00B4               	movwf	___ftdiv@f1+1
  4816  0765  0822               	movf	?___ftmul+2,w
  4817  0766  00B5               	movwf	___ftdiv@f1+2
  4818  0767  3181  2148  3185   	fcall	___ftdiv
  4819  076A  0020               	movlb	0	; select bank0
  4820  076B  0830               	movf	?___ftdiv,w
  4821  076C  00C3               	movwf	___ftadd@f2
  4822  076D  0831               	movf	?___ftdiv+1,w
  4823  076E  00C4               	movwf	___ftadd@f2+1
  4824  076F  0832               	movf	?___ftdiv+2,w
  4825  0770  00C5               	movwf	___ftadd@f2+2
  4826  0771  3184  2420  3185   	fcall	___ftadd
  4827  0774  0020               	movlb	0	; select bank0
  4828  0775  0840               	movf	?___ftadd,w
  4829  0776  0021               	movlb	1	; select bank1
  4830  0777  00AF               	movwf	main@displayTemp^(0+128)
  4831  0778  0020               	movlb	0	; select bank0
  4832  0779  0841               	movf	?___ftadd+1,w
  4833  077A  0021               	movlb	1	; select bank1
  4834  077B  00B0               	movwf	(main@displayTemp+1)^(0+128)
  4835  077C  0020               	movlb	0	; select bank0
  4836  077D  0842               	movf	?___ftadd+2,w
  4837  077E  0021               	movlb	1	; select bank1
  4838  077F  00B1               	movwf	(main@displayTemp+2)^(0+128)
  4839                           
  4840                           ;main.c: 63: { gotoXY(0,0); LCDWriteInt((int)displayTemp,-1, 1, 0);};
  4841  0780  01F5               	clrf	gotoXY@y
  4842  0781  3000               	movlw	0
  4843  0782  318C  244E  3185   	fcall	_gotoXY
  4844  0785  0021               	movlb	1	; select bank1
  4845  0786  082F               	movf	main@displayTemp^(0+128),w
  4846  0787  00F0               	movwf	___fttol@f1
  4847  0788  0830               	movf	(main@displayTemp+1)^(0+128),w
  4848  0789  00F1               	movwf	___fttol@f1+1
  4849  078A  0831               	movf	(main@displayTemp+2)^(0+128),w
  4850  078B  00F2               	movwf	___fttol@f1+2
  4851  078C  3180  20C2  3185   	fcall	___fttol
  4852  078F  0871               	movf	?___fttol+1,w
  4853  0790  0020               	movlb	0	; select bank0
  4854  0791  00A1               	movwf	LCDWriteInt@value+1
  4855  0792  0870               	movf	?___fttol,w
  4856  0793  00A0               	movwf	LCDWriteInt@value
  4857  0794  01A2               	clrf	LCDWriteInt@fieldLength
  4858  0795  03A2               	decf	LCDWriteInt@fieldLength,f
  4859  0796  01A3               	clrf	LCDWriteInt@numPlaces
  4860  0797  0AA3               	incf	LCDWriteInt@numPlaces,f
  4861  0798  01A4               	clrf	LCDWriteInt@sign
  4862  0799  3183  2355  3185   	fcall	_LCDWriteInt
  4863                           
  4864                           ;main.c: 64: LCDWriteCharacter(0);
  4865  079C  3000               	movlw	0
  4866  079D  318E  2691  3185   	fcall	_LCDWriteCharacter
  4867                           
  4868                           ;main.c: 65: LCDWriteCharacter('F');
  4869  07A0  3046               	movlw	70
  4870  07A1  2FC3               	goto	L1
  4871  07A2                     l2434:	
  4872                           ;main.c: 67: }
  4873                           
  4874                           ;main.c: 66: LCDWriteCharacter(' ');
  4875                           
  4876                           
  4877                           ;main.c: 68: else
  4878                           ;main.c: 69: {
  4879                           ;main.c: 70: { gotoXY(0,0); LCDWriteInt((int)displayTemp,-1, 1, 0);};
  4880  07A2  01F5               	clrf	gotoXY@y
  4881  07A3  3000               	movlw	0
  4882  07A4  318C  244E  3185   	fcall	_gotoXY
  4883  07A7  0021               	movlb	1	; select bank1
  4884  07A8  082F               	movf	main@displayTemp^(0+128),w
  4885  07A9  00F0               	movwf	___fttol@f1
  4886  07AA  0830               	movf	(main@displayTemp+1)^(0+128),w
  4887  07AB  00F1               	movwf	___fttol@f1+1
  4888  07AC  0831               	movf	(main@displayTemp+2)^(0+128),w
  4889  07AD  00F2               	movwf	___fttol@f1+2
  4890  07AE  3180  20C2  3185   	fcall	___fttol
  4891  07B1  0871               	movf	?___fttol+1,w
  4892  07B2  0020               	movlb	0	; select bank0
  4893  07B3  00A1               	movwf	LCDWriteInt@value+1
  4894  07B4  0870               	movf	?___fttol,w
  4895  07B5  00A0               	movwf	LCDWriteInt@value
  4896  07B6  01A2               	clrf	LCDWriteInt@fieldLength
  4897  07B7  03A2               	decf	LCDWriteInt@fieldLength,f
  4898  07B8  01A3               	clrf	LCDWriteInt@numPlaces
  4899  07B9  0AA3               	incf	LCDWriteInt@numPlaces,f
  4900  07BA  01A4               	clrf	LCDWriteInt@sign
  4901  07BB  3183  2355  3185   	fcall	_LCDWriteInt
  4902                           
  4903                           ;main.c: 71: LCDWriteCharacter(0);
  4904  07BE  3000               	movlw	0
  4905  07BF  318E  2691  3185   	fcall	_LCDWriteCharacter
  4906                           
  4907                           ;main.c: 72: LCDWriteCharacter('C');
  4908  07C2  3043               	movlw	67
  4909  07C3                     L1:	
  4910  07C3  318E  2691  3185   	fcall	_LCDWriteCharacter
  4911                           
  4912                           ;main.c: 73: LCDWriteCharacter(' ');
  4913  07C6  3020               	movlw	32
  4914  07C7  318E  2691  3185   	fcall	_LCDWriteCharacter
  4915                           
  4916                           ;main.c: 74: }
  4917                           ;main.c: 77: counter +=1;
  4918  07CA  3001               	movlw	1
  4919  07CB  0021               	movlb	1	; select bank1
  4920  07CC  07AA               	addwf	main@counter^(0+128),f
  4921  07CD  3000               	movlw	0
  4922  07CE  3DAB               	addwfc	(main@counter+1)^(0+128),f
  4923                           
  4924                           ;main.c: 79: if(counter>12)
  4925  07CF  3000               	movlw	0
  4926  07D0  022B               	subwf	(main@counter+1)^(0+128),w
  4927  07D1  300D               	movlw	13
  4928  07D2  1903               	skipnz
  4929  07D3  022A               	subwf	main@counter^(0+128),w
  4930  07D4  1C03               	skipc
  4931  07D5  2FE0               	goto	l2452
  4932                           
  4933                           ;main.c: 80: {
  4934                           ;main.c: 81: toggle = 1-toggle;
  4935  07D6  032E               	decf	main@toggle^(0+128),w
  4936  07D7  3AFF               	xorlw	255
  4937  07D8  3E01               	addlw	1
  4938  07D9  0020               	movlb	0	; select bank0
  4939  07DA  00DD               	movwf	??_main
  4940  07DB  085D               	movf	??_main,w
  4941  07DC  0021               	movlb	1	; select bank1
  4942  07DD  00AE               	movwf	main@toggle^(0+128)
  4943                           
  4944                           ;main.c: 82: counter = 0;
  4945  07DE  01AA               	clrf	main@counter^(0+128)
  4946  07DF  01AB               	clrf	(main@counter+1)^(0+128)
  4947  07E0                     l2452:	
  4948                           
  4949                           ;main.c: 83: }
  4950                           ;main.c: 86: readButtons();
  4951  07E0  318E  26E5  3185   	fcall	_readButtons
  4952  07E3  2D29               	goto	l2388
  4953  07E4                     __end_of_main:	
  4954                           
  4955                           	psect	text1
  4956  0EE5                     __ptext1:	
  4957 ;; *************** function _readButtons *****************
  4958 ;; Defined at:
  4959 ;;		line 9 in file "buttons.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  1    wreg      void 
  4966 ;; Registers used:
  4967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;Total ram usage:        2 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    3
  4980 ;; This function calls:
  4981 ;;		_LCDClear
  4982 ;;		_LCDWriteCharacter
  4983 ;; This function is called by:
  4984 ;;		_main
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _readButtons
  4990  0EE5                     _readButtons:	
  4991                           
  4992                           ;buttons.c: 11: while(RA3 == 0 && RA4 == 0)
  4993                           
  4994                           ;incstack = 0
  4995                           ; Regs used in _readButtons: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4996  0EE5  2F16               	goto	l2132
  4997  0EE6                     l2108:	
  4998                           
  4999                           ;buttons.c: 12: {
  5000                           ;buttons.c: 13: downCount = 0;
  5001  0EE6  0020               	movlb	0	; select bank0
  5002  0EE7  01EE               	clrf	_downCount
  5003                           
  5004                           ;buttons.c: 14: upCount = 0;
  5005  0EE8  01ED               	clrf	_upCount
  5006                           
  5007                           ;buttons.c: 15: toggleCount+=1;
  5008  0EE9  3001               	movlw	1
  5009  0EEA  00FC               	movwf	??_readButtons
  5010  0EEB  087C               	movf	??_readButtons,w
  5011  0EEC  07EC               	addwf	_toggleCount,f
  5012                           
  5013                           ;buttons.c: 16: if(toggleCount >=6)
  5014  0EED  3006               	movlw	6
  5015  0EEE  026C               	subwf	_toggleCount,w
  5016  0EEF  1C03               	skipc
  5017  0EF0  2F16               	goto	l2132
  5018                           
  5019                           ;buttons.c: 17: {
  5020                           ;buttons.c: 18: x+=1;
  5021  0EF1  3001               	movlw	1
  5022  0EF2  00FC               	movwf	??_readButtons
  5023  0EF3  087C               	movf	??_readButtons,w
  5024  0EF4  07EB               	addwf	_x,f
  5025                           
  5026                           ;buttons.c: 19: if(x>4)
  5027  0EF5  3005               	movlw	5
  5028  0EF6  026B               	subwf	_x,w
  5029  0EF7  1803               	btfsc	3,0
  5030                           
  5031                           ;buttons.c: 20: {
  5032                           ;buttons.c: 21: x=0;
  5033  0EF8  01EB               	clrf	_x
  5034                           
  5035                           ;buttons.c: 22: }
  5036                           ;buttons.c: 25: LCDWriteCharacter(0);
  5037  0EF9  3000               	movlw	0
  5038  0EFA  318E  2691  318E   	fcall	_LCDWriteCharacter
  5039                           
  5040                           ;buttons.c: 26: LCDWriteCharacter('C');
  5041  0EFD  3043               	movlw	67
  5042  0EFE  318E  2691  318E   	fcall	_LCDWriteCharacter
  5043                           
  5044                           ;buttons.c: 27: LCDWriteCharacter(' ');
  5045  0F01  3020               	movlw	32
  5046  0F02  318E  2691  318E   	fcall	_LCDWriteCharacter
  5047                           
  5048                           ;buttons.c: 28: _delay((unsigned long)((1500)*(1000000/4000.0)));
  5049  0F05  3002               	movlw	2
  5050  0F06  00FD               	movwf	??_readButtons+1
  5051  0F07  30E7               	movlw	231
  5052  0F08  00FC               	movwf	??_readButtons
  5053  0F09  3000               	movlw	0
  5054  0F0A                     u2937:	
  5055  0F0A  0B89               	decfsz	9,f
  5056  0F0B  2F0A               	goto	u2937
  5057  0F0C  0BFC               	decfsz	??_readButtons,f
  5058  0F0D  2F0A               	goto	u2937
  5059  0F0E  0BFD               	decfsz	??_readButtons+1,f
  5060  0F0F  2F0A               	goto	u2937
  5061  0F10  3200               	nop2
  5062                           
  5063                           ;buttons.c: 29: toggleCount = 0;
  5064  0F11  0020               	movlb	0	; select bank0
  5065  0F12  01EC               	clrf	_toggleCount
  5066                           
  5067                           ;buttons.c: 30: LCDClear();
  5068  0F13  318D  252D  318E   	fcall	_LCDClear
  5069  0F16                     l2132:	
  5070  0F16  0020               	movlb	0	; select bank0
  5071  0F17  198C               	btfsc	12,3	;volatile
  5072  0F18  2F1B               	goto	l80
  5073  0F19  1E0C               	btfss	12,4	;volatile
  5074  0F1A  2EE6               	goto	l2108
  5075  0F1B                     l80:	
  5076                           
  5077                           ;buttons.c: 31: }
  5078                           ;buttons.c: 32: }
  5079                           ;buttons.c: 34: if(RA3 == 0)
  5080  0F1B  198C               	btfsc	12,3	;volatile
  5081  0F1C  2F2A               	goto	l2142
  5082                           
  5083                           ;buttons.c: 35: {
  5084                           ;buttons.c: 36: downCount +=1;
  5085  0F1D  3001               	movlw	1
  5086  0F1E  00FC               	movwf	??_readButtons
  5087  0F1F  087C               	movf	??_readButtons,w
  5088  0F20  07EE               	addwf	_downCount,f
  5089                           
  5090                           ;buttons.c: 37: if(downCount>5)
  5091  0F21  3006               	movlw	6
  5092  0F22  026E               	subwf	_downCount,w
  5093  0F23  1C03               	skipc
  5094  0F24  2F2B               	goto	l2144
  5095                           
  5096                           ;buttons.c: 38: {
  5097                           ;buttons.c: 39: downCount = 5;
  5098  0F25  3005               	movlw	5
  5099  0F26  00FC               	movwf	??_readButtons
  5100  0F27  087C               	movf	??_readButtons,w
  5101  0F28  00EE               	movwf	_downCount
  5102                           
  5103                           ;buttons.c: 40: }
  5104                           ;buttons.c: 41: }
  5105  0F29  2F2B               	goto	l2144
  5106  0F2A                     l2142:	
  5107                           
  5108                           ;buttons.c: 42: else
  5109                           ;buttons.c: 43: {
  5110                           ;buttons.c: 44: downCount = 0;
  5111  0F2A  01EE               	clrf	_downCount
  5112  0F2B                     l2144:	
  5113                           
  5114                           ;buttons.c: 45: }
  5115                           ;buttons.c: 47: if(RA4 == 0)
  5116  0F2B  1A0C               	btfsc	12,4	;volatile
  5117  0F2C  2F3A               	goto	l2152
  5118                           
  5119                           ;buttons.c: 48: {
  5120                           ;buttons.c: 49: upCount +=1;
  5121  0F2D  3001               	movlw	1
  5122  0F2E  00FC               	movwf	??_readButtons
  5123  0F2F  087C               	movf	??_readButtons,w
  5124  0F30  07ED               	addwf	_upCount,f
  5125                           
  5126                           ;buttons.c: 50: if(upCount>5)
  5127  0F31  3006               	movlw	6
  5128  0F32  026D               	subwf	_upCount,w
  5129  0F33  1C03               	skipc
  5130  0F34  0008               	return
  5131                           
  5132                           ;buttons.c: 51: {
  5133                           ;buttons.c: 52: upCount = 5;
  5134  0F35  3005               	movlw	5
  5135  0F36  00FC               	movwf	??_readButtons
  5136  0F37  087C               	movf	??_readButtons,w
  5137  0F38  00ED               	movwf	_upCount
  5138                           
  5139                           ;buttons.c: 53: }
  5140                           ;buttons.c: 54: }
  5141  0F39  0008               	return
  5142  0F3A                     l2152:	
  5143                           
  5144                           ;buttons.c: 55: else
  5145                           ;buttons.c: 56: {
  5146                           ;buttons.c: 57: upCount = 0;
  5147  0F3A  01ED               	clrf	_upCount
  5148  0F3B  0008               	return
  5149  0F3C                     __end_of_readButtons:	
  5150                           
  5151                           	psect	text2
  5152  01F1                     __ptext2:	
  5153 ;; *************** function _log *****************
  5154 ;; Defined at:
  5155 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\log.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  x               3   55[BANK0 ] void 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  exponent        2   59[BANK0 ] int 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  3   55[BANK0 ] int 
  5162 ;; Registers used:
  5163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5169 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;Total ram usage:        6 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    3
  5176 ;; This function calls:
  5177 ;;		___awtoft
  5178 ;;		___ftadd
  5179 ;;		___ftge
  5180 ;;		___ftmul
  5181 ;;		_eval_poly
  5182 ;;		_frexp
  5183 ;; This function is called by:
  5184 ;;		_main
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           
  5189                           ;psect for function _log
  5190  01F1                     _log:	
  5191                           
  5192                           ;incstack = 0
  5193                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5194  01F1  0020               	movlb	0	; select bank0
  5195  01F2  0857               	movf	log@x,w
  5196  01F3  00F0               	movwf	___ftge@ff1
  5197  01F4  0858               	movf	log@x+1,w
  5198  01F5  00F1               	movwf	___ftge@ff1+1
  5199  01F6  0859               	movf	log@x+2,w
  5200  01F7  00F2               	movwf	___ftge@ff1+2
  5201  01F8  3000               	movlw	0
  5202  01F9  00F3               	movwf	___ftge@ff2
  5203  01FA  3000               	movlw	0
  5204  01FB  00F4               	movwf	___ftge@ff2+1
  5205  01FC  3000               	movlw	0
  5206  01FD  00F5               	movwf	___ftge@ff2+2
  5207  01FE  318D  25C0  3181   	fcall	___ftge
  5208  0201  1803               	btfsc	3,0
  5209  0202  2A10               	goto	l2174
  5210  0203  3021               	movlw	33
  5211  0204  0021               	movlb	1	; select bank1
  5212  0205  00BE               	movwf	_errno^(0+128)
  5213  0206  3000               	movlw	0
  5214  0207  00BF               	movwf	(_errno^(0+128)+1)
  5215  0208  3000               	movlw	0
  5216  0209  0020               	movlb	0	; select bank0
  5217  020A  00D7               	movwf	?_log
  5218  020B  3000               	movlw	0
  5219  020C  00D8               	movwf	?_log+1
  5220  020D  3000               	movlw	0
  5221  020E  00D9               	movwf	?_log+2
  5222  020F  0008               	return
  5223  0210                     l2174:	
  5224  0210  0020               	movlb	0	; select bank0
  5225  0211  0859               	movf	log@x+2,w
  5226  0212  0458               	iorwf	log@x+1,w
  5227  0213  0457               	iorwf	log@x,w
  5228  0214  1D03               	skipz
  5229  0215  2A23               	goto	l2180
  5230  0216  3022               	movlw	34
  5231  0217  0021               	movlb	1	; select bank1
  5232  0218  00BE               	movwf	_errno^(0+128)
  5233  0219  3000               	movlw	0
  5234  021A  00BF               	movwf	(_errno^(0+128)+1)
  5235  021B  3000               	movlw	0
  5236  021C  0020               	movlb	0	; select bank0
  5237  021D  00D7               	movwf	?_log
  5238  021E  3000               	movlw	0
  5239  021F  00D8               	movwf	?_log+1
  5240  0220  3000               	movlw	0
  5241  0221  00D9               	movwf	?_log+2
  5242  0222  0008               	return
  5243  0223                     l2180:	
  5244  0223  3000               	movlw	0
  5245  0224  00C0               	movwf	___ftadd@f1
  5246  0225  3080               	movlw	128
  5247  0226  00C1               	movwf	___ftadd@f1+1
  5248  0227  30BF               	movlw	191
  5249  0228  00C2               	movwf	___ftadd@f1+2
  5250  0229  3000               	movlw	0
  5251  022A  00A0               	movwf	___ftmul@f1
  5252  022B  3000               	movlw	0
  5253  022C  00A1               	movwf	___ftmul@f1+1
  5254  022D  3040               	movlw	64
  5255  022E  00A2               	movwf	___ftmul@f1+2
  5256  022F  305B               	movlw	(low (log@exponent| 0))& (0+255)
  5257  0230  00DA               	movwf	??_log
  5258  0231  085A               	movf	??_log,w
  5259  0232  00F3               	movwf	frexp@eptr
  5260  0233  0857               	movf	log@x,w
  5261  0234  00F0               	movwf	frexp@value
  5262  0235  0858               	movf	log@x+1,w
  5263  0236  00F1               	movwf	frexp@value+1
  5264  0237  0859               	movf	log@x+2,w
  5265  0238  00F2               	movwf	frexp@value+2
  5266  0239  3180  2005  3181   	fcall	_frexp
  5267  023C  0870               	movf	?_frexp,w
  5268  023D  0020               	movlb	0	; select bank0
  5269  023E  00A3               	movwf	___ftmul@f2
  5270  023F  0871               	movf	?_frexp+1,w
  5271  0240  00A4               	movwf	___ftmul@f2+1
  5272  0241  0872               	movf	?_frexp+2,w
  5273  0242  00A5               	movwf	___ftmul@f2+2
  5274  0243  3182  22A1  3181   	fcall	___ftmul
  5275  0246  0020               	movlb	0	; select bank0
  5276  0247  0820               	movf	?___ftmul,w
  5277  0248  00C3               	movwf	___ftadd@f2
  5278  0249  0821               	movf	?___ftmul+1,w
  5279  024A  00C4               	movwf	___ftadd@f2+1
  5280  024B  0822               	movf	?___ftmul+2,w
  5281  024C  00C5               	movwf	___ftadd@f2+2
  5282  024D  3184  2420  3181   	fcall	___ftadd
  5283  0250  0020               	movlb	0	; select bank0
  5284  0251  0840               	movf	?___ftadd,w
  5285  0252  00D7               	movwf	log@x
  5286  0253  0841               	movf	?___ftadd+1,w
  5287  0254  00D8               	movwf	log@x+1
  5288  0255  0842               	movf	?___ftadd+2,w
  5289  0256  00D9               	movwf	log@x+2
  5290  0257  30FF               	movlw	255
  5291  0258  07DB               	addwf	log@exponent,f
  5292  0259  30FF               	movlw	255
  5293  025A  3DDC               	addwfc	log@exponent+1,f
  5294  025B  0857               	movf	log@x,w
  5295  025C  00CD               	movwf	eval_poly@x
  5296  025D  0858               	movf	log@x+1,w
  5297  025E  00CE               	movwf	eval_poly@x+1
  5298  025F  0859               	movf	log@x+2,w
  5299  0260  00CF               	movwf	eval_poly@x+2
  5300  0261  302F               	movlw	low (log@coeff| (0+32768))
  5301  0262  00D0               	movwf	eval_poly@d
  5302  0263  3089               	movlw	high (log@coeff| (0+32768))
  5303  0264  00D1               	movwf	eval_poly@d+1
  5304  0265  3008               	movlw	8
  5305  0266  00D2               	movwf	eval_poly@n
  5306  0267  3000               	movlw	0
  5307  0268  00D3               	movwf	eval_poly@n+1
  5308  0269  318F  273C  3181   	fcall	_eval_poly
  5309  026C  0020               	movlb	0	; select bank0
  5310  026D  084D               	movf	?_eval_poly,w
  5311  026E  00D7               	movwf	log@x
  5312  026F  084E               	movf	?_eval_poly+1,w
  5313  0270  00D8               	movwf	log@x+1
  5314  0271  084F               	movf	?_eval_poly+2,w
  5315  0272  00D9               	movwf	log@x+2
  5316  0273  0857               	movf	log@x,w
  5317  0274  00C0               	movwf	___ftadd@f1
  5318  0275  0858               	movf	log@x+1,w
  5319  0276  00C1               	movwf	___ftadd@f1+1
  5320  0277  0859               	movf	log@x+2,w
  5321  0278  00C2               	movwf	___ftadd@f1+2
  5322  0279  3072               	movlw	114
  5323  027A  00A0               	movwf	___ftmul@f1
  5324  027B  3031               	movlw	49
  5325  027C  00A1               	movwf	___ftmul@f1+1
  5326  027D  303F               	movlw	63
  5327  027E  00A2               	movwf	___ftmul@f1+2
  5328  027F  085C               	movf	log@exponent+1,w
  5329  0280  00F9               	movwf	___awtoft@c+1
  5330  0281  085B               	movf	log@exponent,w
  5331  0282  00F8               	movwf	___awtoft@c
  5332  0283  318C  24C6  3181   	fcall	___awtoft
  5333  0286  0878               	movf	?___awtoft,w
  5334  0287  0020               	movlb	0	; select bank0
  5335  0288  00A3               	movwf	___ftmul@f2
  5336  0289  0879               	movf	?___awtoft+1,w
  5337  028A  00A4               	movwf	___ftmul@f2+1
  5338  028B  087A               	movf	?___awtoft+2,w
  5339  028C  00A5               	movwf	___ftmul@f2+2
  5340  028D  3182  22A1  3181   	fcall	___ftmul
  5341  0290  0020               	movlb	0	; select bank0
  5342  0291  0820               	movf	?___ftmul,w
  5343  0292  00C3               	movwf	___ftadd@f2
  5344  0293  0821               	movf	?___ftmul+1,w
  5345  0294  00C4               	movwf	___ftadd@f2+1
  5346  0295  0822               	movf	?___ftmul+2,w
  5347  0296  00C5               	movwf	___ftadd@f2+2
  5348  0297  3184  2420         	fcall	___ftadd
  5349  0299  0020               	movlb	0	; select bank0
  5350  029A  0840               	movf	?___ftadd,w
  5351  029B  00D7               	movwf	?_log
  5352  029C  0841               	movf	?___ftadd+1,w
  5353  029D  00D8               	movwf	?_log+1
  5354  029E  0842               	movf	?___ftadd+2,w
  5355  029F  00D9               	movwf	?_log+2
  5356  02A0  0008               	return
  5357  02A1                     __end_of_log:	
  5358                           
  5359                           	psect	text3
  5360  0005                     __ptext3:	
  5361 ;; *************** function _frexp *****************
  5362 ;; Defined at:
  5363 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\frexp.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  value           3    0[COMMON] int 
  5366 ;;  eptr            1    3[COMMON] PTR int 
  5367 ;;		 -> log@exponent(2), 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  3    0[COMMON] PTR int 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;Total ram usage:        6 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_log
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _frexp
  5394  0005                     _frexp:	
  5395                           
  5396                           ;incstack = 0
  5397                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  5398  0005  0872               	movf	frexp@value+2,w
  5399  0006  0471               	iorwf	frexp@value+1,w
  5400  0007  0470               	iorwf	frexp@value,w
  5401  0008  1D03               	skipz
  5402  0009  2817               	goto	l2072
  5403  000A  0873               	movf	frexp@eptr,w
  5404  000B  0086               	movwf	6
  5405  000C  0187               	clrf	7
  5406  000D  3000               	movlw	0
  5407  000E  3FC0               	movwi [0]fsr1
  5408  000F  3FC1               	movwi [1]fsr1
  5409  0010  3000               	movlw	0
  5410  0011  00F0               	movwf	?_frexp
  5411  0012  3000               	movlw	0
  5412  0013  00F1               	movwf	?_frexp+1
  5413  0014  3000               	movlw	0
  5414  0015  00F2               	movwf	?_frexp+2
  5415  0016  0008               	return
  5416  0017                     l2072:	
  5417  0017  0872               	movf	frexp@value+2,w
  5418  0018  397F               	andlw	127
  5419  0019  00F4               	movwf	??_frexp
  5420  001A  01F5               	clrf	??_frexp+1
  5421  001B  35F4               	lslf	??_frexp,f
  5422  001C  0DF5               	rlf	??_frexp+1,f
  5423  001D  0873               	movf	frexp@eptr,w
  5424  001E  0086               	movwf	6
  5425  001F  0187               	clrf	7
  5426  0020  0874               	movf	??_frexp,w
  5427  0021  3FC0               	movwi [0]fsr1
  5428  0022  0875               	movf	??_frexp+1,w
  5429  0023  3FC1               	movwi [1]fsr1
  5430  0024  0D71               	rlf	frexp@value+1,w
  5431  0025  0D71               	rlf	frexp@value+1,w
  5432  0026  3901               	andlw	1
  5433  0027  00F4               	movwf	??_frexp
  5434  0028  01F5               	clrf	??_frexp+1
  5435  0029  0873               	movf	frexp@eptr,w
  5436  002A  0086               	movwf	6
  5437  002B  0187               	clrf	7
  5438  002C  0874               	movf	??_frexp,w
  5439  002D  0481               	iorwf	1,f
  5440  002E  3141               	addfsr 1,1
  5441  002F  0875               	movf	??_frexp+1,w
  5442  0030  0481               	iorwf	1,f
  5443  0031  0873               	movf	frexp@eptr,w
  5444  0032  0086               	movwf	6
  5445  0033  0187               	clrf	7
  5446  0034  3082               	movlw	130
  5447  0035  0781               	addwf	1,f
  5448  0036  3141               	addfsr 1,1
  5449  0037  30FF               	movlw	255
  5450  0038  3D81               	addwfc	1,f
  5451  0039  317F               	addfsr 1,-1
  5452  003A  0872               	movf	frexp@value+2,w
  5453  003B  3980               	andlw	-128
  5454  003C  383F               	iorlw	63
  5455  003D  00F2               	movwf	frexp@value+2
  5456  003E  13F1               	bcf	frexp@value+1,7
  5457  003F  0008               	return
  5458  0040                     __end_of_frexp:	
  5459                           
  5460                           	psect	text4
  5461  0F3C                     __ptext4:	
  5462 ;; *************** function _eval_poly *****************
  5463 ;; Defined at:
  5464 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\evalpoly.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  x               3   45[BANK0 ] PTR int 
  5467 ;;  d               2   48[BANK0 ] PTR const 
  5468 ;;		 -> log@coeff(27), 
  5469 ;;  n               2   50[BANK0 ] int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  res             3   52[BANK0 ] int 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  3   45[BANK0 ] int 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5481 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;Total ram usage:       10 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    2
  5488 ;; This function calls:
  5489 ;;		___ftadd
  5490 ;;		___ftmul
  5491 ;;		___wmul
  5492 ;; This function is called by:
  5493 ;;		_log
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _eval_poly
  5499  0F3C                     _eval_poly:	
  5500                           
  5501                           ;incstack = 0
  5502                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5503  0F3C  0020               	movlb	0	; select bank0
  5504  0F3D  0853               	movf	eval_poly@n+1,w
  5505  0F3E  00F1               	movwf	___wmul@multiplier+1
  5506  0F3F  0852               	movf	eval_poly@n,w
  5507  0F40  00F0               	movwf	___wmul@multiplier
  5508  0F41  3003               	movlw	3
  5509  0F42  00F2               	movwf	___wmul@multiplicand
  5510  0F43  3000               	movlw	0
  5511  0F44  00F3               	movwf	___wmul@multiplicand+1
  5512  0F45  318C  248D  318F   	fcall	___wmul
  5513  0F48  0020               	movlb	0	; select bank0
  5514  0F49  0850               	movf	eval_poly@d,w
  5515  0F4A  0770               	addwf	?___wmul,w
  5516  0F4B  0084               	movwf	4
  5517  0F4C  0851               	movf	eval_poly@d+1,w
  5518  0F4D  3D71               	addwfc	?___wmul+1,w
  5519  0F4E  0085               	movwf	5
  5520  0F4F  3F00               	moviw [0]fsr0
  5521  0F50  00D4               	movwf	eval_poly@res
  5522  0F51  3F01               	moviw [1]fsr0
  5523  0F52  00D5               	movwf	eval_poly@res+1
  5524  0F53  3F02               	moviw [2]fsr0
  5525  0F54                     L2:	
  5526  0F54  00D6               	movwf	eval_poly@res+2
  5527  0F55  0852               	movf	eval_poly@n,w
  5528  0F56  0453               	iorwf	eval_poly@n+1,w
  5529  0F57  1903               	btfsc	3,2
  5530  0F58  2F95               	goto	l2090
  5531  0F59  30FF               	movlw	255
  5532  0F5A  07D2               	addwf	eval_poly@n,f
  5533  0F5B  30FF               	movlw	255
  5534  0F5C  3DD3               	addwfc	eval_poly@n+1,f
  5535  0F5D  0853               	movf	eval_poly@n+1,w
  5536  0F5E  00F1               	movwf	___wmul@multiplier+1
  5537  0F5F  0852               	movf	eval_poly@n,w
  5538  0F60  00F0               	movwf	___wmul@multiplier
  5539  0F61  3003               	movlw	3
  5540  0F62  00F2               	movwf	___wmul@multiplicand
  5541  0F63  3000               	movlw	0
  5542  0F64  00F3               	movwf	___wmul@multiplicand+1
  5543  0F65  318C  248D  318F   	fcall	___wmul
  5544  0F68  0020               	movlb	0	; select bank0
  5545  0F69  0850               	movf	eval_poly@d,w
  5546  0F6A  0770               	addwf	?___wmul,w
  5547  0F6B  0084               	movwf	4
  5548  0F6C  0851               	movf	eval_poly@d+1,w
  5549  0F6D  3D71               	addwfc	?___wmul+1,w
  5550  0F6E  0085               	movwf	5
  5551  0F6F  3F00               	moviw [0]fsr0
  5552  0F70  00C0               	movwf	___ftadd@f1
  5553  0F71  3F01               	moviw [1]fsr0
  5554  0F72  00C1               	movwf	___ftadd@f1+1
  5555  0F73  3F02               	moviw [2]fsr0
  5556  0F74  00C2               	movwf	___ftadd@f1+2
  5557  0F75  0854               	movf	eval_poly@res,w
  5558  0F76  00A0               	movwf	___ftmul@f1
  5559  0F77  0855               	movf	eval_poly@res+1,w
  5560  0F78  00A1               	movwf	___ftmul@f1+1
  5561  0F79  0856               	movf	eval_poly@res+2,w
  5562  0F7A  00A2               	movwf	___ftmul@f1+2
  5563  0F7B  084D               	movf	eval_poly@x,w
  5564  0F7C  00A3               	movwf	___ftmul@f2
  5565  0F7D  084E               	movf	eval_poly@x+1,w
  5566  0F7E  00A4               	movwf	___ftmul@f2+1
  5567  0F7F  084F               	movf	eval_poly@x+2,w
  5568  0F80  00A5               	movwf	___ftmul@f2+2
  5569  0F81  3182  22A1  318F   	fcall	___ftmul
  5570  0F84  0020               	movlb	0	; select bank0
  5571  0F85  0820               	movf	?___ftmul,w
  5572  0F86  00C3               	movwf	___ftadd@f2
  5573  0F87  0821               	movf	?___ftmul+1,w
  5574  0F88  00C4               	movwf	___ftadd@f2+1
  5575  0F89  0822               	movf	?___ftmul+2,w
  5576  0F8A  00C5               	movwf	___ftadd@f2+2
  5577  0F8B  3184  2420  318F   	fcall	___ftadd
  5578  0F8E  0020               	movlb	0	; select bank0
  5579  0F8F  0840               	movf	?___ftadd,w
  5580  0F90  00D4               	movwf	eval_poly@res
  5581  0F91  0841               	movf	?___ftadd+1,w
  5582  0F92  00D5               	movwf	eval_poly@res+1
  5583  0F93  0842               	movf	?___ftadd+2,w
  5584  0F94  2F54               	goto	L2
  5585  0F95                     l2090:	
  5586  0F95  0854               	movf	eval_poly@res,w
  5587  0F96  00CD               	movwf	?_eval_poly
  5588  0F97  0855               	movf	eval_poly@res+1,w
  5589  0F98  00CE               	movwf	?_eval_poly+1
  5590  0F99  0856               	movf	eval_poly@res+2,w
  5591  0F9A  00CF               	movwf	?_eval_poly+2
  5592  0F9B  0008               	return
  5593  0F9C                     __end_of_eval_poly:	
  5594                           
  5595                           	psect	text5
  5596  02A1                     __ptext5:	
  5597 ;; *************** function ___ftmul *****************
  5598 ;; Defined at:
  5599 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  f1              3    0[BANK0 ] float 
  5602 ;;  f2              3    3[BANK0 ] float 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  5605 ;;  sign            1   15[BANK0 ] unsigned char 
  5606 ;;  cntr            1   14[BANK0 ] unsigned char 
  5607 ;;  exp             1   10[BANK0 ] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  3    0[BANK0 ] float 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0, pclath, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5617 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;Total ram usage:       16 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    1
  5624 ;; This function calls:
  5625 ;;		___ftpack
  5626 ;; This function is called by:
  5627 ;;		_main
  5628 ;;		_log
  5629 ;;		_eval_poly
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           
  5634                           ;psect for function ___ftmul
  5635  02A1                     ___ftmul:	
  5636                           
  5637                           ;incstack = 0
  5638                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5639  02A1  0020               	movlb	0	; select bank0
  5640  02A2  0820               	movf	___ftmul@f1,w
  5641  02A3  00A6               	movwf	??___ftmul
  5642  02A4  0821               	movf	___ftmul@f1+1,w
  5643  02A5  00A7               	movwf	??___ftmul+1
  5644  02A6  0822               	movf	___ftmul@f1+2,w
  5645  02A7  00A8               	movwf	??___ftmul+2
  5646  02A8  1003               	clrc
  5647  02A9  0D27               	rlf	??___ftmul+1,w
  5648  02AA  0D28               	rlf	??___ftmul+2,w
  5649  02AB  00A9               	movwf	??___ftmul+3
  5650  02AC  0829               	movf	??___ftmul+3,w
  5651  02AD  00AA               	movwf	___ftmul@exp
  5652  02AE  082A               	movf	___ftmul@exp,w
  5653  02AF  1D03               	btfss	3,2
  5654  02B0  2AB8               	goto	l1796
  5655  02B1  3000               	movlw	0
  5656  02B2  00A0               	movwf	?___ftmul
  5657  02B3  3000               	movlw	0
  5658  02B4  00A1               	movwf	?___ftmul+1
  5659  02B5  3000               	movlw	0
  5660  02B6  00A2               	movwf	?___ftmul+2
  5661  02B7  0008               	return
  5662  02B8                     l1796:	
  5663  02B8  0823               	movf	___ftmul@f2,w
  5664  02B9  00A6               	movwf	??___ftmul
  5665  02BA  0824               	movf	___ftmul@f2+1,w
  5666  02BB  00A7               	movwf	??___ftmul+1
  5667  02BC  0825               	movf	___ftmul@f2+2,w
  5668  02BD  00A8               	movwf	??___ftmul+2
  5669  02BE  1003               	clrc
  5670  02BF  0D27               	rlf	??___ftmul+1,w
  5671  02C0  0D28               	rlf	??___ftmul+2,w
  5672  02C1  00A9               	movwf	??___ftmul+3
  5673  02C2  0829               	movf	??___ftmul+3,w
  5674  02C3  00AF               	movwf	___ftmul@sign
  5675  02C4  082F               	movf	___ftmul@sign,w
  5676  02C5  1D03               	btfss	3,2
  5677  02C6  2ACE               	goto	l1802
  5678  02C7  3000               	movlw	0
  5679  02C8  00A0               	movwf	?___ftmul
  5680  02C9  3000               	movlw	0
  5681  02CA  00A1               	movwf	?___ftmul+1
  5682  02CB  3000               	movlw	0
  5683  02CC  00A2               	movwf	?___ftmul+2
  5684  02CD  0008               	return
  5685  02CE                     l1802:	
  5686  02CE  082F               	movf	___ftmul@sign,w
  5687  02CF  3E7B               	addlw	123
  5688  02D0  00A6               	movwf	??___ftmul
  5689  02D1  0826               	movf	??___ftmul,w
  5690  02D2  07AA               	addwf	___ftmul@exp,f
  5691  02D3  0820               	movf	___ftmul@f1,w
  5692  02D4  00A6               	movwf	??___ftmul
  5693  02D5  0821               	movf	___ftmul@f1+1,w
  5694  02D6  00A7               	movwf	??___ftmul+1
  5695  02D7  0822               	movf	___ftmul@f1+2,w
  5696  02D8  00A8               	movwf	??___ftmul+2
  5697  02D9  3010               	movlw	16
  5698  02DA                     u1925:	
  5699  02DA  36A8               	lsrf	??___ftmul+2,f
  5700  02DB  0CA7               	rrf	??___ftmul+1,f
  5701  02DC  0CA6               	rrf	??___ftmul,f
  5702  02DD  0B89               	decfsz	9,f
  5703  02DE  2ADA               	goto	u1925
  5704  02DF  0826               	movf	??___ftmul,w
  5705  02E0  00A9               	movwf	??___ftmul+3
  5706  02E1  0829               	movf	??___ftmul+3,w
  5707  02E2  00AF               	movwf	___ftmul@sign
  5708  02E3  0823               	movf	___ftmul@f2,w
  5709  02E4  00A6               	movwf	??___ftmul
  5710  02E5  0824               	movf	___ftmul@f2+1,w
  5711  02E6  00A7               	movwf	??___ftmul+1
  5712  02E7  0825               	movf	___ftmul@f2+2,w
  5713  02E8  00A8               	movwf	??___ftmul+2
  5714  02E9  3010               	movlw	16
  5715  02EA                     u1935:	
  5716  02EA  36A8               	lsrf	??___ftmul+2,f
  5717  02EB  0CA7               	rrf	??___ftmul+1,f
  5718  02EC  0CA6               	rrf	??___ftmul,f
  5719  02ED  0B89               	decfsz	9,f
  5720  02EE  2AEA               	goto	u1935
  5721  02EF  0826               	movf	??___ftmul,w
  5722  02F0  00A9               	movwf	??___ftmul+3
  5723  02F1  0829               	movf	??___ftmul+3,w
  5724  02F2  06AF               	xorwf	___ftmul@sign,f
  5725  02F3  3080               	movlw	128
  5726  02F4  00A6               	movwf	??___ftmul
  5727  02F5  0826               	movf	??___ftmul,w
  5728  02F6  05AF               	andwf	___ftmul@sign,f
  5729  02F7  17A1               	bsf	___ftmul@f1+1,7
  5730  02F8  17A4               	bsf	___ftmul@f2+1,7
  5731  02F9  30FF               	movlw	255
  5732  02FA  05A3               	andwf	___ftmul@f2,f
  5733  02FB  30FF               	movlw	255
  5734  02FC  05A4               	andwf	___ftmul@f2+1,f
  5735  02FD  3000               	movlw	0
  5736  02FE  05A5               	andwf	___ftmul@f2+2,f
  5737  02FF  3000               	movlw	0
  5738  0300  00AB               	movwf	___ftmul@f3_as_product
  5739  0301  3000               	movlw	0
  5740  0302  00AC               	movwf	___ftmul@f3_as_product+1
  5741  0303  3000               	movlw	0
  5742  0304  00AD               	movwf	___ftmul@f3_as_product+2
  5743  0305  3007               	movlw	7
  5744  0306  00A6               	movwf	??___ftmul
  5745  0307  0826               	movf	??___ftmul,w
  5746  0308  00AE               	movwf	___ftmul@cntr
  5747  0309                     l1814:	
  5748  0309  1C20               	btfss	___ftmul@f1,0
  5749  030A  2B11               	goto	l1818
  5750  030B  0823               	movf	___ftmul@f2,w
  5751  030C  07AB               	addwf	___ftmul@f3_as_product,f
  5752  030D  0824               	movf	___ftmul@f2+1,w
  5753  030E  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5754  030F  0825               	movf	___ftmul@f2+2,w
  5755  0310  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5756  0311                     l1818:	
  5757  0311  3001               	movlw	1
  5758  0312                     u1955:	
  5759  0312  36A2               	lsrf	___ftmul@f1+2,f
  5760  0313  0CA1               	rrf	___ftmul@f1+1,f
  5761  0314  0CA0               	rrf	___ftmul@f1,f
  5762  0315  0B89               	decfsz	9,f
  5763  0316  2B12               	goto	u1955
  5764  0317  3001               	movlw	1
  5765  0318                     u1965:	
  5766  0318  35A3               	lslf	___ftmul@f2,f
  5767  0319  0DA4               	rlf	___ftmul@f2+1,f
  5768  031A  0DA5               	rlf	___ftmul@f2+2,f
  5769  031B  0B89               	decfsz	9,f
  5770  031C  2B18               	goto	u1965
  5771  031D  3001               	movlw	1
  5772  031E  02AE               	subwf	___ftmul@cntr,f
  5773  031F  1D03               	btfss	3,2
  5774  0320  2B09               	goto	l1814
  5775  0321  3009               	movlw	9
  5776  0322  00A6               	movwf	??___ftmul
  5777  0323  0826               	movf	??___ftmul,w
  5778  0324  00AE               	movwf	___ftmul@cntr
  5779  0325                     l1826:	
  5780  0325  1C20               	btfss	___ftmul@f1,0
  5781  0326  2B2D               	goto	l1830
  5782  0327  0823               	movf	___ftmul@f2,w
  5783  0328  07AB               	addwf	___ftmul@f3_as_product,f
  5784  0329  0824               	movf	___ftmul@f2+1,w
  5785  032A  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  5786  032B  0825               	movf	___ftmul@f2+2,w
  5787  032C  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  5788  032D                     l1830:	
  5789  032D  3001               	movlw	1
  5790  032E                     u1995:	
  5791  032E  36A2               	lsrf	___ftmul@f1+2,f
  5792  032F  0CA1               	rrf	___ftmul@f1+1,f
  5793  0330  0CA0               	rrf	___ftmul@f1,f
  5794  0331  0B89               	decfsz	9,f
  5795  0332  2B2E               	goto	u1995
  5796  0333  3001               	movlw	1
  5797  0334                     u2005:	
  5798  0334  36AD               	lsrf	___ftmul@f3_as_product+2,f
  5799  0335  0CAC               	rrf	___ftmul@f3_as_product+1,f
  5800  0336  0CAB               	rrf	___ftmul@f3_as_product,f
  5801  0337  0B89               	decfsz	9,f
  5802  0338  2B34               	goto	u2005
  5803  0339  3001               	movlw	1
  5804  033A  02AE               	subwf	___ftmul@cntr,f
  5805  033B  1D03               	btfss	3,2
  5806  033C  2B25               	goto	l1826
  5807  033D  082B               	movf	___ftmul@f3_as_product,w
  5808  033E  00F0               	movwf	___ftpack@arg
  5809  033F  082C               	movf	___ftmul@f3_as_product+1,w
  5810  0340  00F1               	movwf	___ftpack@arg+1
  5811  0341  082D               	movf	___ftmul@f3_as_product+2,w
  5812  0342  00F2               	movwf	___ftpack@arg+2
  5813  0343  082A               	movf	___ftmul@exp,w
  5814  0344  00A6               	movwf	??___ftmul
  5815  0345  0826               	movf	??___ftmul,w
  5816  0346  00F3               	movwf	___ftpack@exp
  5817  0347  082F               	movf	___ftmul@sign,w
  5818  0348  00A7               	movwf	??___ftmul+1
  5819  0349  0827               	movf	??___ftmul+1,w
  5820  034A  00F4               	movwf	___ftpack@sign
  5821  034B  318F  279C         	fcall	___ftpack
  5822  034D  0870               	movf	?___ftpack,w
  5823  034E  0020               	movlb	0	; select bank0
  5824  034F  00A0               	movwf	?___ftmul
  5825  0350  0871               	movf	?___ftpack+1,w
  5826  0351  00A1               	movwf	?___ftmul+1
  5827  0352  0872               	movf	?___ftpack+2,w
  5828  0353  00A2               	movwf	?___ftmul+2
  5829  0354  0008               	return
  5830  0355                     __end_of___ftmul:	
  5831                           
  5832                           	psect	text6
  5833  0DC0                     __ptext6:	
  5834 ;; *************** function ___ftge *****************
  5835 ;; Defined at:
  5836 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  ff1             3    0[COMMON] float 
  5839 ;;  ff2             3    3[COMMON] float 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;		None               void
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5851 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;Total ram usage:        9 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_log
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           
  5865                           ;psect for function ___ftge
  5866  0DC0                     ___ftge:	
  5867                           
  5868                           ;incstack = 0
  5869                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5870  0DC0  1FF2               	btfss	___ftge@ff1+2,7
  5871  0DC1  2DD6               	goto	l2048
  5872  0DC2  0970               	comf	___ftge@ff1,w
  5873  0DC3  00F6               	movwf	??___ftge
  5874  0DC4  0971               	comf	___ftge@ff1+1,w
  5875  0DC5  00F7               	movwf	??___ftge+1
  5876  0DC6  0972               	comf	___ftge@ff1+2,w
  5877  0DC7  00F8               	movwf	??___ftge+2
  5878  0DC8  0AF6               	incf	??___ftge,f
  5879  0DC9  1903               	skipnz
  5880  0DCA  0AF7               	incf	??___ftge+1,f
  5881  0DCB  1903               	skipnz
  5882  0DCC  0AF8               	incf	??___ftge+2,f
  5883  0DCD  3000               	movlw	0
  5884  0DCE  0776               	addwf	??___ftge,w
  5885  0DCF  00F0               	movwf	___ftge@ff1
  5886  0DD0  3000               	movlw	0
  5887  0DD1  3D77               	addwfc	??___ftge+1,w
  5888  0DD2  00F1               	movwf	___ftge@ff1+1
  5889  0DD3  3080               	movlw	128
  5890  0DD4  3D78               	addwfc	??___ftge+2,w
  5891  0DD5  00F2               	movwf	___ftge@ff1+2
  5892  0DD6                     l2048:	
  5893  0DD6  1FF5               	btfss	___ftge@ff2+2,7
  5894  0DD7  2DEC               	goto	l2052
  5895  0DD8  0973               	comf	___ftge@ff2,w
  5896  0DD9  00F6               	movwf	??___ftge
  5897  0DDA  0974               	comf	___ftge@ff2+1,w
  5898  0DDB  00F7               	movwf	??___ftge+1
  5899  0DDC  0975               	comf	___ftge@ff2+2,w
  5900  0DDD  00F8               	movwf	??___ftge+2
  5901  0DDE  0AF6               	incf	??___ftge,f
  5902  0DDF  1903               	skipnz
  5903  0DE0  0AF7               	incf	??___ftge+1,f
  5904  0DE1  1903               	skipnz
  5905  0DE2  0AF8               	incf	??___ftge+2,f
  5906  0DE3  3000               	movlw	0
  5907  0DE4  0776               	addwf	??___ftge,w
  5908  0DE5  00F3               	movwf	___ftge@ff2
  5909  0DE6  3000               	movlw	0
  5910  0DE7  3D77               	addwfc	??___ftge+1,w
  5911  0DE8  00F4               	movwf	___ftge@ff2+1
  5912  0DE9  3080               	movlw	128
  5913  0DEA  3D78               	addwfc	??___ftge+2,w
  5914  0DEB  00F5               	movwf	___ftge@ff2+2
  5915  0DEC                     l2052:	
  5916  0DEC  3080               	movlw	128
  5917  0DED  06F2               	xorwf	___ftge@ff1+2,f
  5918  0DEE  3080               	movlw	128
  5919  0DEF  06F5               	xorwf	___ftge@ff2+2,f
  5920  0DF0  0875               	movf	___ftge@ff2+2,w
  5921  0DF1  0272               	subwf	___ftge@ff1+2,w
  5922  0DF2  1D03               	skipz
  5923  0DF3  0008               	return
  5924  0DF4  0874               	movf	___ftge@ff2+1,w
  5925  0DF5  0271               	subwf	___ftge@ff1+1,w
  5926  0DF6  1D03               	skipz
  5927  0DF7  0008               	return
  5928  0DF8  0873               	movf	___ftge@ff2,w
  5929  0DF9  0270               	subwf	___ftge@ff1,w
  5930  0DFA  0008               	return
  5931  0DFB                     __end_of___ftge:	
  5932                           
  5933                           	psect	text7
  5934  0CC6                     __ptext7:	
  5935 ;; *************** function ___awtoft *****************
  5936 ;; Defined at:
  5937 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  c               2    8[COMMON] int 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  sign            1   13[COMMON] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  3    8[COMMON] float 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0, pclath, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5951 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;Total ram usage:        6 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    1
  5958 ;; This function calls:
  5959 ;;		___ftpack
  5960 ;; This function is called by:
  5961 ;;		_log
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           
  5966                           ;psect for function ___awtoft
  5967  0CC6                     ___awtoft:	
  5968                           
  5969                           ;incstack = 0
  5970                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5971  0CC6  01FD               	clrf	___awtoft@sign
  5972  0CC7  1FF9               	btfss	___awtoft@c+1,7
  5973  0CC8  2CD0               	goto	l2040
  5974  0CC9  09F8               	comf	___awtoft@c,f
  5975  0CCA  09F9               	comf	___awtoft@c+1,f
  5976  0CCB  0AF8               	incf	___awtoft@c,f
  5977  0CCC  1903               	skipnz
  5978  0CCD  0AF9               	incf	___awtoft@c+1,f
  5979  0CCE  01FD               	clrf	___awtoft@sign
  5980  0CCF  0AFD               	incf	___awtoft@sign,f
  5981  0CD0                     l2040:	
  5982  0CD0  0878               	movf	___awtoft@c,w
  5983  0CD1  00F0               	movwf	___ftpack@arg
  5984  0CD2  0879               	movf	___awtoft@c+1,w
  5985  0CD3  00F1               	movwf	___ftpack@arg+1
  5986  0CD4  01F2               	clrf	___ftpack@arg+2
  5987  0CD5  308E               	movlw	142
  5988  0CD6  00FB               	movwf	??___awtoft
  5989  0CD7  087B               	movf	??___awtoft,w
  5990  0CD8  00F3               	movwf	___ftpack@exp
  5991  0CD9  087D               	movf	___awtoft@sign,w
  5992  0CDA  00FC               	movwf	??___awtoft+1
  5993  0CDB  087C               	movf	??___awtoft+1,w
  5994  0CDC  00F4               	movwf	___ftpack@sign
  5995  0CDD  318F  279C         	fcall	___ftpack
  5996  0CDF  0870               	movf	?___ftpack,w
  5997  0CE0  00F8               	movwf	?___awtoft
  5998  0CE1  0871               	movf	?___ftpack+1,w
  5999  0CE2  00F9               	movwf	?___awtoft+1
  6000  0CE3  0872               	movf	?___ftpack+2,w
  6001  0CE4  00FA               	movwf	?___awtoft+2
  6002  0CE5  0008               	return
  6003  0CE6                     __end_of___awtoft:	
  6004                           
  6005                           	psect	text8
  6006  0C61                     __ptext8:	
  6007 ;; *************** function ___lwtoft *****************
  6008 ;; Defined at:
  6009 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;  c               2    8[COMMON] unsigned int 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  3    8[COMMON] float 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0, pclath, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6023 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;Total ram usage:        4 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    1
  6030 ;; This function calls:
  6031 ;;		___ftpack
  6032 ;; This function is called by:
  6033 ;;		_main
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           
  6038                           ;psect for function ___lwtoft
  6039  0C61                     ___lwtoft:	
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6043  0C61  0878               	movf	___lwtoft@c,w
  6044  0C62  00F0               	movwf	___ftpack@arg
  6045  0C63  0879               	movf	___lwtoft@c+1,w
  6046  0C64  00F1               	movwf	___ftpack@arg+1
  6047  0C65  01F2               	clrf	___ftpack@arg+2
  6048  0C66  308E               	movlw	142
  6049  0C67  00FB               	movwf	??___lwtoft
  6050  0C68  087B               	movf	??___lwtoft,w
  6051  0C69  00F3               	movwf	___ftpack@exp
  6052  0C6A  01F4               	clrf	___ftpack@sign
  6053  0C6B  318F  279C         	fcall	___ftpack
  6054  0C6D  0870               	movf	?___ftpack,w
  6055  0C6E  00F8               	movwf	?___lwtoft
  6056  0C6F  0871               	movf	?___ftpack+1,w
  6057  0C70  00F9               	movwf	?___lwtoft+1
  6058  0C71  0872               	movf	?___ftpack+2,w
  6059  0C72  00FA               	movwf	?___lwtoft+2
  6060  0C73  0008               	return
  6061  0C74                     __end_of___lwtoft:	
  6062                           
  6063                           	psect	text9
  6064  00C2                     __ptext9:	
  6065 ;; *************** function ___fttol *****************
  6066 ;; Defined at:
  6067 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  f1              3    0[COMMON] float 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  lval            4    9[COMMON] unsigned long 
  6072 ;;  exp1            1   13[COMMON] unsigned char 
  6073 ;;  sign1           1    8[COMMON] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  4    0[COMMON] long 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;Total ram usage:       14 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_main
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function ___fttol
  6098  00C2                     ___fttol:	
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6102  00C2  0870               	movf	___fttol@f1,w
  6103  00C3  00F4               	movwf	??___fttol
  6104  00C4  0871               	movf	___fttol@f1+1,w
  6105  00C5  00F5               	movwf	??___fttol+1
  6106  00C6  0872               	movf	___fttol@f1+2,w
  6107  00C7  00F6               	movwf	??___fttol+2
  6108  00C8  1003               	clrc
  6109  00C9  0D75               	rlf	??___fttol+1,w
  6110  00CA  0D76               	rlf	??___fttol+2,w
  6111  00CB  00F7               	movwf	??___fttol+3
  6112  00CC  0877               	movf	??___fttol+3,w
  6113  00CD  00FD               	movwf	___fttol@exp1
  6114  00CE  087D               	movf	___fttol@exp1,w
  6115  00CF  1D03               	btfss	3,2
  6116  00D0  28DA               	goto	l2336
  6117  00D1  3000               	movlw	0
  6118  00D2  00F3               	movwf	?___fttol+3
  6119  00D3  3000               	movlw	0
  6120  00D4  00F2               	movwf	?___fttol+2
  6121  00D5  3000               	movlw	0
  6122  00D6  00F1               	movwf	?___fttol+1
  6123  00D7  3000               	movlw	0
  6124  00D8  00F0               	movwf	?___fttol
  6125  00D9  0008               	return
  6126  00DA                     l2336:	
  6127  00DA  0870               	movf	___fttol@f1,w
  6128  00DB  00F4               	movwf	??___fttol
  6129  00DC  0871               	movf	___fttol@f1+1,w
  6130  00DD  00F5               	movwf	??___fttol+1
  6131  00DE  0872               	movf	___fttol@f1+2,w
  6132  00DF  00F6               	movwf	??___fttol+2
  6133  00E0  3017               	movlw	23
  6134  00E1                     u2715:	
  6135  00E1  36F6               	lsrf	??___fttol+2,f
  6136  00E2  0CF5               	rrf	??___fttol+1,f
  6137  00E3  0CF4               	rrf	??___fttol,f
  6138  00E4  0B89               	decfsz	9,f
  6139  00E5  28E1               	goto	u2715
  6140  00E6  0874               	movf	??___fttol,w
  6141  00E7  00F7               	movwf	??___fttol+3
  6142  00E8  0877               	movf	??___fttol+3,w
  6143  00E9  00F8               	movwf	___fttol@sign1
  6144  00EA  17F1               	bsf	___fttol@f1+1,7
  6145  00EB  30FF               	movlw	255
  6146  00EC  05F0               	andwf	___fttol@f1,f
  6147  00ED  30FF               	movlw	255
  6148  00EE  05F1               	andwf	___fttol@f1+1,f
  6149  00EF  3000               	movlw	0
  6150  00F0  05F2               	andwf	___fttol@f1+2,f
  6151  00F1  0870               	movf	___fttol@f1,w
  6152  00F2  00F9               	movwf	___fttol@lval
  6153  00F3  0871               	movf	___fttol@f1+1,w
  6154  00F4  00FA               	movwf	___fttol@lval+1
  6155  00F5  0872               	movf	___fttol@f1+2,w
  6156  00F6  00FB               	movwf	___fttol@lval+2
  6157  00F7  01FC               	clrf	___fttol@lval+3
  6158  00F8  308E               	movlw	142
  6159  00F9  02FD               	subwf	___fttol@exp1,f
  6160  00FA  1FFD               	btfss	___fttol@exp1,7
  6161  00FB  2918               	goto	l2356
  6162  00FC  087D               	movf	___fttol@exp1,w
  6163  00FD  3A80               	xorlw	128
  6164  00FE  3E8F               	addlw	143
  6165  00FF  1803               	skipnc
  6166  0100  290A               	goto	l2354
  6167  0101  3000               	movlw	0
  6168  0102  00F3               	movwf	?___fttol+3
  6169  0103  3000               	movlw	0
  6170  0104  00F2               	movwf	?___fttol+2
  6171  0105  3000               	movlw	0
  6172  0106  00F1               	movwf	?___fttol+1
  6173  0107  3000               	movlw	0
  6174  0108  00F0               	movwf	?___fttol
  6175  0109  0008               	return
  6176  010A                     l2354:	
  6177  010A  3001               	movlw	1
  6178  010B                     u2745:	
  6179  010B  36FC               	lsrf	___fttol@lval+3,f
  6180  010C  0CFB               	rrf	___fttol@lval+2,f
  6181  010D  0CFA               	rrf	___fttol@lval+1,f
  6182  010E  0CF9               	rrf	___fttol@lval,f
  6183  010F  0B89               	decfsz	9,f
  6184  0110  290B               	goto	u2745
  6185  0111  3001               	movlw	1
  6186  0112  00F4               	movwf	??___fttol
  6187  0113  0874               	movf	??___fttol,w
  6188  0114  07FD               	addwf	___fttol@exp1,f
  6189  0115  1903               	btfsc	3,2
  6190  0116  2931               	goto	l2364
  6191  0117  290A               	goto	l2354
  6192  0118                     l2356:	
  6193  0118  3018               	movlw	24
  6194  0119  027D               	subwf	___fttol@exp1,w
  6195  011A  1C03               	skipc
  6196  011B  292E               	goto	l592
  6197  011C  3000               	movlw	0
  6198  011D  00F3               	movwf	?___fttol+3
  6199  011E  3000               	movlw	0
  6200  011F  00F2               	movwf	?___fttol+2
  6201  0120  3000               	movlw	0
  6202  0121  00F1               	movwf	?___fttol+1
  6203  0122  3000               	movlw	0
  6204  0123  00F0               	movwf	?___fttol
  6205  0124  0008               	return
  6206  0125                     l2362:	
  6207  0125  3001               	movlw	1
  6208  0126                     u2775:	
  6209  0126  35F9               	lslf	___fttol@lval,f
  6210  0127  0DFA               	rlf	___fttol@lval+1,f
  6211  0128  0DFB               	rlf	___fttol@lval+2,f
  6212  0129  0DFC               	rlf	___fttol@lval+3,f
  6213  012A  0B89               	decfsz	9,f
  6214  012B  2926               	goto	u2775
  6215  012C  3001               	movlw	1
  6216  012D  02FD               	subwf	___fttol@exp1,f
  6217  012E                     l592:	
  6218  012E  087D               	movf	___fttol@exp1,w
  6219  012F  1D03               	btfss	3,2
  6220  0130  2925               	goto	l2362
  6221  0131                     l2364:	
  6222  0131  0878               	movf	___fttol@sign1,w
  6223  0132  1903               	btfsc	3,2
  6224  0133  293F               	goto	l2368
  6225  0134  09F9               	comf	___fttol@lval,f
  6226  0135  09FA               	comf	___fttol@lval+1,f
  6227  0136  09FB               	comf	___fttol@lval+2,f
  6228  0137  09FC               	comf	___fttol@lval+3,f
  6229  0138  0AF9               	incf	___fttol@lval,f
  6230  0139  1903               	skipnz
  6231  013A  0AFA               	incf	___fttol@lval+1,f
  6232  013B  1903               	skipnz
  6233  013C  0AFB               	incf	___fttol@lval+2,f
  6234  013D  1903               	skipnz
  6235  013E  0AFC               	incf	___fttol@lval+3,f
  6236  013F                     l2368:	
  6237  013F  087C               	movf	___fttol@lval+3,w
  6238  0140  00F3               	movwf	?___fttol+3
  6239  0141  087B               	movf	___fttol@lval+2,w
  6240  0142  00F2               	movwf	?___fttol+2
  6241  0143  087A               	movf	___fttol@lval+1,w
  6242  0144  00F1               	movwf	?___fttol+1
  6243  0145  0879               	movf	___fttol@lval,w
  6244  0146  00F0               	movwf	?___fttol
  6245  0147  0008               	return
  6246  0148                     __end_of___fttol:	
  6247                           
  6248                           	psect	text10
  6249  0CA8                     __ptext10:	
  6250 ;; *************** function ___ftsub *****************
  6251 ;; Defined at:
  6252 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  f2              3   45[BANK0 ] float 
  6255 ;;  f1              3   48[BANK0 ] float 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  3   45[BANK0 ] float 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0, pclath, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:        6 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    2
  6274 ;; This function calls:
  6275 ;;		___ftadd
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function ___ftsub
  6283  0CA8                     ___ftsub:	
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6287  0CA8  0020               	movlb	0	; select bank0
  6288  0CA9  084F               	movf	___ftsub@f2+2,w
  6289  0CAA  044E               	iorwf	___ftsub@f2+1,w
  6290  0CAB  044D               	iorwf	___ftsub@f2,w
  6291  0CAC  1903               	skipnz
  6292  0CAD  2CB0               	goto	l2326
  6293  0CAE  3080               	movlw	128
  6294  0CAF  06CF               	xorwf	___ftsub@f2+2,f
  6295  0CB0                     l2326:	
  6296  0CB0  0850               	movf	___ftsub@f1,w
  6297  0CB1  00C0               	movwf	___ftadd@f1
  6298  0CB2  0851               	movf	___ftsub@f1+1,w
  6299  0CB3  00C1               	movwf	___ftadd@f1+1
  6300  0CB4  0852               	movf	___ftsub@f1+2,w
  6301  0CB5  00C2               	movwf	___ftadd@f1+2
  6302  0CB6  084D               	movf	___ftsub@f2,w
  6303  0CB7  00C3               	movwf	___ftadd@f2
  6304  0CB8  084E               	movf	___ftsub@f2+1,w
  6305  0CB9  00C4               	movwf	___ftadd@f2+1
  6306  0CBA  084F               	movf	___ftsub@f2+2,w
  6307  0CBB  00C5               	movwf	___ftadd@f2+2
  6308  0CBC  3184  2420         	fcall	___ftadd
  6309  0CBE  0020               	movlb	0	; select bank0
  6310  0CBF  0840               	movf	?___ftadd,w
  6311  0CC0  00CD               	movwf	?___ftsub
  6312  0CC1  0841               	movf	?___ftadd+1,w
  6313  0CC2  00CE               	movwf	?___ftsub+1
  6314  0CC3  0842               	movf	?___ftadd+2,w
  6315  0CC4  00CF               	movwf	?___ftsub+2
  6316  0CC5  0008               	return
  6317  0CC6                     __end_of___ftsub:	
  6318                           
  6319                           	psect	text11
  6320  0420                     __ptext11:	
  6321 ;; *************** function ___ftadd *****************
  6322 ;; Defined at:
  6323 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  f1              3   32[BANK0 ] float 
  6326 ;;  f2              3   35[BANK0 ] float 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  exp1            1   44[BANK0 ] unsigned char 
  6329 ;;  exp2            1   43[BANK0 ] unsigned char 
  6330 ;;  sign            1   42[BANK0 ] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  3   32[BANK0 ] float 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0, pclath, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6340 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;Total ram usage:       13 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    1
  6347 ;; This function calls:
  6348 ;;		___ftpack
  6349 ;; This function is called by:
  6350 ;;		_main
  6351 ;;		___ftsub
  6352 ;;		_log
  6353 ;;		_eval_poly
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           
  6358                           ;psect for function ___ftadd
  6359  0420                     ___ftadd:	
  6360                           
  6361                           ;incstack = 0
  6362                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6363  0420  0020               	movlb	0	; select bank0
  6364  0421  0840               	movf	___ftadd@f1,w
  6365  0422  00C6               	movwf	??___ftadd
  6366  0423  0841               	movf	___ftadd@f1+1,w
  6367  0424  00C7               	movwf	??___ftadd+1
  6368  0425  0842               	movf	___ftadd@f1+2,w
  6369  0426  00C8               	movwf	??___ftadd+2
  6370  0427  1003               	clrc
  6371  0428  0D47               	rlf	??___ftadd+1,w
  6372  0429  0D48               	rlf	??___ftadd+2,w
  6373  042A  00C9               	movwf	??___ftadd+3
  6374  042B  0849               	movf	??___ftadd+3,w
  6375  042C  00CC               	movwf	___ftadd@exp1
  6376  042D  0843               	movf	___ftadd@f2,w
  6377  042E  00C6               	movwf	??___ftadd
  6378  042F  0844               	movf	___ftadd@f2+1,w
  6379  0430  00C7               	movwf	??___ftadd+1
  6380  0431  0845               	movf	___ftadd@f2+2,w
  6381  0432  00C8               	movwf	??___ftadd+2
  6382  0433  1003               	clrc
  6383  0434  0D47               	rlf	??___ftadd+1,w
  6384  0435  0D48               	rlf	??___ftadd+2,w
  6385  0436  00C9               	movwf	??___ftadd+3
  6386  0437  0849               	movf	??___ftadd+3,w
  6387  0438  00CB               	movwf	___ftadd@exp2
  6388  0439  084C               	movf	___ftadd@exp1,w
  6389  043A  1903               	btfsc	3,2
  6390  043B  2C48               	goto	l1726
  6391  043C  084B               	movf	___ftadd@exp2,w
  6392  043D  024C               	subwf	___ftadd@exp1,w
  6393  043E  1803               	skipnc
  6394  043F  2C4F               	goto	l1730
  6395  0440  034C               	decf	___ftadd@exp1,w
  6396  0441  3AFF               	xorlw	255
  6397  0442  074B               	addwf	___ftadd@exp2,w
  6398  0443  00C6               	movwf	??___ftadd
  6399  0444  3019               	movlw	25
  6400  0445  0246               	subwf	??___ftadd,w
  6401  0446  1C03               	skipc
  6402  0447  2C4F               	goto	l1730
  6403  0448                     l1726:	
  6404  0448  0843               	movf	___ftadd@f2,w
  6405  0449  00C0               	movwf	?___ftadd
  6406  044A  0844               	movf	___ftadd@f2+1,w
  6407  044B  00C1               	movwf	?___ftadd+1
  6408  044C  0845               	movf	___ftadd@f2+2,w
  6409  044D  00C2               	movwf	?___ftadd+2
  6410  044E  0008               	return
  6411  044F                     l1730:	
  6412  044F  084B               	movf	___ftadd@exp2,w
  6413  0450  1903               	btfsc	3,2
  6414  0451  0008               	return
  6415  0452  084C               	movf	___ftadd@exp1,w
  6416  0453  024B               	subwf	___ftadd@exp2,w
  6417  0454  1803               	skipnc
  6418  0455  2C5E               	goto	l1736
  6419  0456  034B               	decf	___ftadd@exp2,w
  6420  0457  3AFF               	xorlw	255
  6421  0458  074C               	addwf	___ftadd@exp1,w
  6422  0459  00C6               	movwf	??___ftadd
  6423  045A  3019               	movlw	25
  6424  045B  0246               	subwf	??___ftadd,w
  6425  045C  1803               	btfsc	3,0
  6426  045D  0008               	return
  6427  045E                     l1736:	
  6428  045E  3006               	movlw	6
  6429  045F  00C6               	movwf	??___ftadd
  6430  0460  0846               	movf	??___ftadd,w
  6431  0461  00CA               	movwf	___ftadd@sign
  6432  0462  1BC2               	btfsc	___ftadd@f1+2,7
  6433  0463  17CA               	bsf	___ftadd@sign,7
  6434  0464  1BC5               	btfsc	___ftadd@f2+2,7
  6435  0465  174A               	bsf	___ftadd@sign,6
  6436  0466  17C1               	bsf	___ftadd@f1+1,7
  6437  0467  30FF               	movlw	255
  6438  0468  05C0               	andwf	___ftadd@f1,f
  6439  0469  30FF               	movlw	255
  6440  046A  05C1               	andwf	___ftadd@f1+1,f
  6441  046B  3000               	movlw	0
  6442  046C  05C2               	andwf	___ftadd@f1+2,f
  6443  046D  17C4               	bsf	___ftadd@f2+1,7
  6444  046E  30FF               	movlw	255
  6445  046F  05C3               	andwf	___ftadd@f2,f
  6446  0470  30FF               	movlw	255
  6447  0471  05C4               	andwf	___ftadd@f2+1,f
  6448  0472  3000               	movlw	0
  6449  0473  05C5               	andwf	___ftadd@f2+2,f
  6450  0474  084B               	movf	___ftadd@exp2,w
  6451  0475  024C               	subwf	___ftadd@exp1,w
  6452  0476  1803               	skipnc
  6453  0477  2C9A               	goto	l1758
  6454  0478                     l1748:	
  6455  0478  3001               	movlw	1
  6456  0479                     u1765:	
  6457  0479  35C3               	lslf	___ftadd@f2,f
  6458  047A  0DC4               	rlf	___ftadd@f2+1,f
  6459  047B  0DC5               	rlf	___ftadd@f2+2,f
  6460  047C  0B89               	decfsz	9,f
  6461  047D  2C79               	goto	u1765
  6462  047E  3001               	movlw	1
  6463  047F  02CB               	subwf	___ftadd@exp2,f
  6464  0480  084B               	movf	___ftadd@exp2,w
  6465  0481  064C               	xorwf	___ftadd@exp1,w
  6466  0482  1903               	skipnz
  6467  0483  2C95               	goto	l1756
  6468  0484  3001               	movlw	1
  6469  0485  02CA               	subwf	___ftadd@sign,f
  6470  0486  084A               	movf	___ftadd@sign,w
  6471  0487  3907               	andlw	7
  6472  0488  1903               	btfsc	3,2
  6473  0489  2C95               	goto	l1756
  6474  048A  2C78               	goto	l1748
  6475  048B                     l1754:	
  6476  048B  3001               	movlw	1
  6477  048C                     u1795:	
  6478  048C  36C2               	lsrf	___ftadd@f1+2,f
  6479  048D  0CC1               	rrf	___ftadd@f1+1,f
  6480  048E  0CC0               	rrf	___ftadd@f1,f
  6481  048F  0B89               	decfsz	9,f
  6482  0490  2C8C               	goto	u1795
  6483  0491  3001               	movlw	1
  6484  0492  00C6               	movwf	??___ftadd
  6485  0493  0846               	movf	??___ftadd,w
  6486  0494  07CC               	addwf	___ftadd@exp1,f
  6487  0495                     l1756:	
  6488  0495  084C               	movf	___ftadd@exp1,w
  6489  0496  064B               	xorwf	___ftadd@exp2,w
  6490  0497  1903               	btfsc	3,2
  6491  0498  2CBF               	goto	l532
  6492  0499  2C8B               	goto	l1754
  6493  049A                     l1758:	
  6494  049A  084C               	movf	___ftadd@exp1,w
  6495  049B  024B               	subwf	___ftadd@exp2,w
  6496  049C  1803               	skipnc
  6497  049D  2CBF               	goto	l532
  6498  049E                     l1760:	
  6499  049E  3001               	movlw	1
  6500  049F                     u1825:	
  6501  049F  35C0               	lslf	___ftadd@f1,f
  6502  04A0  0DC1               	rlf	___ftadd@f1+1,f
  6503  04A1  0DC2               	rlf	___ftadd@f1+2,f
  6504  04A2  0B89               	decfsz	9,f
  6505  04A3  2C9F               	goto	u1825
  6506  04A4  3001               	movlw	1
  6507  04A5  02CC               	subwf	___ftadd@exp1,f
  6508  04A6  084B               	movf	___ftadd@exp2,w
  6509  04A7  064C               	xorwf	___ftadd@exp1,w
  6510  04A8  1903               	skipnz
  6511  04A9  2CBB               	goto	l1768
  6512  04AA  3001               	movlw	1
  6513  04AB  02CA               	subwf	___ftadd@sign,f
  6514  04AC  084A               	movf	___ftadd@sign,w
  6515  04AD  3907               	andlw	7
  6516  04AE  1903               	btfsc	3,2
  6517  04AF  2CBB               	goto	l1768
  6518  04B0  2C9E               	goto	l1760
  6519  04B1                     l1766:	
  6520  04B1  3001               	movlw	1
  6521  04B2                     u1855:	
  6522  04B2  36C5               	lsrf	___ftadd@f2+2,f
  6523  04B3  0CC4               	rrf	___ftadd@f2+1,f
  6524  04B4  0CC3               	rrf	___ftadd@f2,f
  6525  04B5  0B89               	decfsz	9,f
  6526  04B6  2CB2               	goto	u1855
  6527  04B7  3001               	movlw	1
  6528  04B8  00C6               	movwf	??___ftadd
  6529  04B9  0846               	movf	??___ftadd,w
  6530  04BA  07CB               	addwf	___ftadd@exp2,f
  6531  04BB                     l1768:	
  6532  04BB  084C               	movf	___ftadd@exp1,w
  6533  04BC  064B               	xorwf	___ftadd@exp2,w
  6534  04BD  1D03               	skipz
  6535  04BE  2CB1               	goto	l1766
  6536  04BF                     l532:	
  6537  04BF  1FCA               	btfss	___ftadd@sign,7
  6538  04C0  2CD1               	goto	l1772
  6539  04C1  30FF               	movlw	255
  6540  04C2  06C0               	xorwf	___ftadd@f1,f
  6541  04C3  30FF               	movlw	255
  6542  04C4  06C1               	xorwf	___ftadd@f1+1,f
  6543  04C5  30FF               	movlw	255
  6544  04C6  06C2               	xorwf	___ftadd@f1+2,f
  6545  04C7  3001               	movlw	1
  6546  04C8  07C0               	addwf	___ftadd@f1,f
  6547  04C9  3000               	movlw	0
  6548  04CA  1803               	skipnc
  6549  04CB  3001               	movlw	1
  6550  04CC  07C1               	addwf	___ftadd@f1+1,f
  6551  04CD  3000               	movlw	0
  6552  04CE  1803               	skipnc
  6553  04CF  3001               	movlw	1
  6554  04D0  07C2               	addwf	___ftadd@f1+2,f
  6555  04D1                     l1772:	
  6556  04D1  1F4A               	btfss	___ftadd@sign,6
  6557  04D2  2CE3               	goto	l1776
  6558  04D3  30FF               	movlw	255
  6559  04D4  06C3               	xorwf	___ftadd@f2,f
  6560  04D5  30FF               	movlw	255
  6561  04D6  06C4               	xorwf	___ftadd@f2+1,f
  6562  04D7  30FF               	movlw	255
  6563  04D8  06C5               	xorwf	___ftadd@f2+2,f
  6564  04D9  3001               	movlw	1
  6565  04DA  07C3               	addwf	___ftadd@f2,f
  6566  04DB  3000               	movlw	0
  6567  04DC  1803               	skipnc
  6568  04DD  3001               	movlw	1
  6569  04DE  07C4               	addwf	___ftadd@f2+1,f
  6570  04DF  3000               	movlw	0
  6571  04E0  1803               	skipnc
  6572  04E1  3001               	movlw	1
  6573  04E2  07C5               	addwf	___ftadd@f2+2,f
  6574  04E3                     l1776:	
  6575  04E3  01CA               	clrf	___ftadd@sign
  6576  04E4  0840               	movf	___ftadd@f1,w
  6577  04E5  07C3               	addwf	___ftadd@f2,f
  6578  04E6  0841               	movf	___ftadd@f1+1,w
  6579  04E7  3DC4               	addwfc	___ftadd@f2+1,f
  6580  04E8  0842               	movf	___ftadd@f1+2,w
  6581  04E9  3DC5               	addwfc	___ftadd@f2+2,f
  6582  04EA  1FC5               	btfss	___ftadd@f2+2,7
  6583  04EB  2CFE               	goto	l1786
  6584  04EC  30FF               	movlw	255
  6585  04ED  06C3               	xorwf	___ftadd@f2,f
  6586  04EE  30FF               	movlw	255
  6587  04EF  06C4               	xorwf	___ftadd@f2+1,f
  6588  04F0  30FF               	movlw	255
  6589  04F1  06C5               	xorwf	___ftadd@f2+2,f
  6590  04F2  3001               	movlw	1
  6591  04F3  07C3               	addwf	___ftadd@f2,f
  6592  04F4  3000               	movlw	0
  6593  04F5  1803               	skipnc
  6594  04F6  3001               	movlw	1
  6595  04F7  07C4               	addwf	___ftadd@f2+1,f
  6596  04F8  3000               	movlw	0
  6597  04F9  1803               	skipnc
  6598  04FA  3001               	movlw	1
  6599  04FB  07C5               	addwf	___ftadd@f2+2,f
  6600  04FC  01CA               	clrf	___ftadd@sign
  6601  04FD  0ACA               	incf	___ftadd@sign,f
  6602  04FE                     l1786:	
  6603  04FE  0843               	movf	___ftadd@f2,w
  6604  04FF  00F0               	movwf	___ftpack@arg
  6605  0500  0844               	movf	___ftadd@f2+1,w
  6606  0501  00F1               	movwf	___ftpack@arg+1
  6607  0502  0845               	movf	___ftadd@f2+2,w
  6608  0503  00F2               	movwf	___ftpack@arg+2
  6609  0504  084C               	movf	___ftadd@exp1,w
  6610  0505  00C6               	movwf	??___ftadd
  6611  0506  0846               	movf	??___ftadd,w
  6612  0507  00F3               	movwf	___ftpack@exp
  6613  0508  084A               	movf	___ftadd@sign,w
  6614  0509  00C7               	movwf	??___ftadd+1
  6615  050A  0847               	movf	??___ftadd+1,w
  6616  050B  00F4               	movwf	___ftpack@sign
  6617  050C  318F  279C         	fcall	___ftpack
  6618  050E  0870               	movf	?___ftpack,w
  6619  050F  0020               	movlb	0	; select bank0
  6620  0510  00C0               	movwf	?___ftadd
  6621  0511  0871               	movf	?___ftpack+1,w
  6622  0512  00C1               	movwf	?___ftadd+1
  6623  0513  0872               	movf	?___ftpack+2,w
  6624  0514  00C2               	movwf	?___ftadd+2
  6625  0515  0008               	return
  6626  0516                     __end_of___ftadd:	
  6627                           
  6628                           	psect	text12
  6629  0148                     __ptext12:	
  6630 ;; *************** function ___ftdiv *****************
  6631 ;; Defined at:
  6632 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  f2              3   16[BANK0 ] float 
  6635 ;;  f1              3   19[BANK0 ] float 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  f3              3   27[BANK0 ] float 
  6638 ;;  sign            1   31[BANK0 ] unsigned char 
  6639 ;;  exp             1   30[BANK0 ] unsigned char 
  6640 ;;  cntr            1   26[BANK0 ] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  3   16[BANK0 ] float 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, pclath, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6650 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6653 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;Total ram usage:       16 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; Hardware stack levels required when called:    1
  6657 ;; This function calls:
  6658 ;;		___ftpack
  6659 ;; This function is called by:
  6660 ;;		_main
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           
  6665                           ;psect for function ___ftdiv
  6666  0148                     ___ftdiv:	
  6667                           
  6668                           ;incstack = 0
  6669                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6670  0148  0020               	movlb	0	; select bank0
  6671  0149  0833               	movf	___ftdiv@f1,w
  6672  014A  00B6               	movwf	??___ftdiv
  6673  014B  0834               	movf	___ftdiv@f1+1,w
  6674  014C  00B7               	movwf	??___ftdiv+1
  6675  014D  0835               	movf	___ftdiv@f1+2,w
  6676  014E  00B8               	movwf	??___ftdiv+2
  6677  014F  1003               	clrc
  6678  0150  0D37               	rlf	??___ftdiv+1,w
  6679  0151  0D38               	rlf	??___ftdiv+2,w
  6680  0152  00B9               	movwf	??___ftdiv+3
  6681  0153  0839               	movf	??___ftdiv+3,w
  6682  0154  00BE               	movwf	___ftdiv@exp
  6683  0155  083E               	movf	___ftdiv@exp,w
  6684  0156  1D03               	btfss	3,2
  6685  0157  295F               	goto	l2286
  6686  0158  3000               	movlw	0
  6687  0159  00B0               	movwf	?___ftdiv
  6688  015A  3000               	movlw	0
  6689  015B  00B1               	movwf	?___ftdiv+1
  6690  015C  3000               	movlw	0
  6691  015D  00B2               	movwf	?___ftdiv+2
  6692  015E  0008               	return
  6693  015F                     l2286:	
  6694  015F  0830               	movf	___ftdiv@f2,w
  6695  0160  00B6               	movwf	??___ftdiv
  6696  0161  0831               	movf	___ftdiv@f2+1,w
  6697  0162  00B7               	movwf	??___ftdiv+1
  6698  0163  0832               	movf	___ftdiv@f2+2,w
  6699  0164  00B8               	movwf	??___ftdiv+2
  6700  0165  1003               	clrc
  6701  0166  0D37               	rlf	??___ftdiv+1,w
  6702  0167  0D38               	rlf	??___ftdiv+2,w
  6703  0168  00B9               	movwf	??___ftdiv+3
  6704  0169  0839               	movf	??___ftdiv+3,w
  6705  016A  00BF               	movwf	___ftdiv@sign
  6706  016B  083F               	movf	___ftdiv@sign,w
  6707  016C  1D03               	btfss	3,2
  6708  016D  2975               	goto	l2292
  6709  016E  3000               	movlw	0
  6710  016F  00B0               	movwf	?___ftdiv
  6711  0170  3000               	movlw	0
  6712  0171  00B1               	movwf	?___ftdiv+1
  6713  0172  3000               	movlw	0
  6714  0173  00B2               	movwf	?___ftdiv+2
  6715  0174  0008               	return
  6716  0175                     l2292:	
  6717  0175  3000               	movlw	0
  6718  0176  00BB               	movwf	___ftdiv@f3
  6719  0177  3000               	movlw	0
  6720  0178  00BC               	movwf	___ftdiv@f3+1
  6721  0179  3000               	movlw	0
  6722  017A  00BD               	movwf	___ftdiv@f3+2
  6723  017B  3089               	movlw	137
  6724  017C  073F               	addwf	___ftdiv@sign,w
  6725  017D  00B6               	movwf	??___ftdiv
  6726  017E  0836               	movf	??___ftdiv,w
  6727  017F  02BE               	subwf	___ftdiv@exp,f
  6728  0180  0833               	movf	___ftdiv@f1,w
  6729  0181  00B6               	movwf	??___ftdiv
  6730  0182  0834               	movf	___ftdiv@f1+1,w
  6731  0183  00B7               	movwf	??___ftdiv+1
  6732  0184  0835               	movf	___ftdiv@f1+2,w
  6733  0185  00B8               	movwf	??___ftdiv+2
  6734  0186  3010               	movlw	16
  6735  0187                     u2635:	
  6736  0187  36B8               	lsrf	??___ftdiv+2,f
  6737  0188  0CB7               	rrf	??___ftdiv+1,f
  6738  0189  0CB6               	rrf	??___ftdiv,f
  6739  018A  0B89               	decfsz	9,f
  6740  018B  2987               	goto	u2635
  6741  018C  0836               	movf	??___ftdiv,w
  6742  018D  00B9               	movwf	??___ftdiv+3
  6743  018E  0839               	movf	??___ftdiv+3,w
  6744  018F  00BF               	movwf	___ftdiv@sign
  6745  0190  0830               	movf	___ftdiv@f2,w
  6746  0191  00B6               	movwf	??___ftdiv
  6747  0192  0831               	movf	___ftdiv@f2+1,w
  6748  0193  00B7               	movwf	??___ftdiv+1
  6749  0194  0832               	movf	___ftdiv@f2+2,w
  6750  0195  00B8               	movwf	??___ftdiv+2
  6751  0196  3010               	movlw	16
  6752  0197                     u2645:	
  6753  0197  36B8               	lsrf	??___ftdiv+2,f
  6754  0198  0CB7               	rrf	??___ftdiv+1,f
  6755  0199  0CB6               	rrf	??___ftdiv,f
  6756  019A  0B89               	decfsz	9,f
  6757  019B  2997               	goto	u2645
  6758  019C  0836               	movf	??___ftdiv,w
  6759  019D  00B9               	movwf	??___ftdiv+3
  6760  019E  0839               	movf	??___ftdiv+3,w
  6761  019F  06BF               	xorwf	___ftdiv@sign,f
  6762  01A0  3080               	movlw	128
  6763  01A1  00B6               	movwf	??___ftdiv
  6764  01A2  0836               	movf	??___ftdiv,w
  6765  01A3  05BF               	andwf	___ftdiv@sign,f
  6766  01A4  17B4               	bsf	___ftdiv@f1+1,7
  6767  01A5  30FF               	movlw	255
  6768  01A6  05B3               	andwf	___ftdiv@f1,f
  6769  01A7  30FF               	movlw	255
  6770  01A8  05B4               	andwf	___ftdiv@f1+1,f
  6771  01A9  3000               	movlw	0
  6772  01AA  05B5               	andwf	___ftdiv@f1+2,f
  6773  01AB  17B1               	bsf	___ftdiv@f2+1,7
  6774  01AC  30FF               	movlw	255
  6775  01AD  05B0               	andwf	___ftdiv@f2,f
  6776  01AE  30FF               	movlw	255
  6777  01AF  05B1               	andwf	___ftdiv@f2+1,f
  6778  01B0  3000               	movlw	0
  6779  01B1  05B2               	andwf	___ftdiv@f2+2,f
  6780  01B2  3018               	movlw	24
  6781  01B3  00B6               	movwf	??___ftdiv
  6782  01B4  0836               	movf	??___ftdiv,w
  6783  01B5  00BA               	movwf	___ftdiv@cntr
  6784  01B6                     l2306:	
  6785  01B6  3001               	movlw	1
  6786  01B7                     u2655:	
  6787  01B7  35BB               	lslf	___ftdiv@f3,f
  6788  01B8  0DBC               	rlf	___ftdiv@f3+1,f
  6789  01B9  0DBD               	rlf	___ftdiv@f3+2,f
  6790  01BA  0B89               	decfsz	9,f
  6791  01BB  29B7               	goto	u2655
  6792  01BC  0832               	movf	___ftdiv@f2+2,w
  6793  01BD  0235               	subwf	___ftdiv@f1+2,w
  6794  01BE  1D03               	skipz
  6795  01BF  29C6               	goto	u2665
  6796  01C0  0831               	movf	___ftdiv@f2+1,w
  6797  01C1  0234               	subwf	___ftdiv@f1+1,w
  6798  01C2  1D03               	skipz
  6799  01C3  29C6               	goto	u2665
  6800  01C4  0830               	movf	___ftdiv@f2,w
  6801  01C5  0233               	subwf	___ftdiv@f1,w
  6802  01C6                     u2665:	
  6803  01C6  1C03               	skipc
  6804  01C7  29CF               	goto	l2314
  6805  01C8  0830               	movf	___ftdiv@f2,w
  6806  01C9  02B3               	subwf	___ftdiv@f1,f
  6807  01CA  0831               	movf	___ftdiv@f2+1,w
  6808  01CB  3BB4               	subwfb	___ftdiv@f1+1,f
  6809  01CC  0832               	movf	___ftdiv@f2+2,w
  6810  01CD  3BB5               	subwfb	___ftdiv@f1+2,f
  6811  01CE  143B               	bsf	___ftdiv@f3,0
  6812  01CF                     l2314:	
  6813  01CF  3001               	movlw	1
  6814  01D0                     u2675:	
  6815  01D0  35B3               	lslf	___ftdiv@f1,f
  6816  01D1  0DB4               	rlf	___ftdiv@f1+1,f
  6817  01D2  0DB5               	rlf	___ftdiv@f1+2,f
  6818  01D3  0B89               	decfsz	9,f
  6819  01D4  29D0               	goto	u2675
  6820  01D5  3001               	movlw	1
  6821  01D6  02BA               	subwf	___ftdiv@cntr,f
  6822  01D7  1D03               	btfss	3,2
  6823  01D8  29B6               	goto	l2306
  6824  01D9  083B               	movf	___ftdiv@f3,w
  6825  01DA  00F0               	movwf	___ftpack@arg
  6826  01DB  083C               	movf	___ftdiv@f3+1,w
  6827  01DC  00F1               	movwf	___ftpack@arg+1
  6828  01DD  083D               	movf	___ftdiv@f3+2,w
  6829  01DE  00F2               	movwf	___ftpack@arg+2
  6830  01DF  083E               	movf	___ftdiv@exp,w
  6831  01E0  00B6               	movwf	??___ftdiv
  6832  01E1  0836               	movf	??___ftdiv,w
  6833  01E2  00F3               	movwf	___ftpack@exp
  6834  01E3  083F               	movf	___ftdiv@sign,w
  6835  01E4  00B7               	movwf	??___ftdiv+1
  6836  01E5  0837               	movf	??___ftdiv+1,w
  6837  01E6  00F4               	movwf	___ftpack@sign
  6838  01E7  318F  279C         	fcall	___ftpack
  6839  01E9  0870               	movf	?___ftpack,w
  6840  01EA  0020               	movlb	0	; select bank0
  6841  01EB  00B0               	movwf	?___ftdiv
  6842  01EC  0871               	movf	?___ftpack+1,w
  6843  01ED  00B1               	movwf	?___ftdiv+1
  6844  01EE  0872               	movf	?___ftpack+2,w
  6845  01EF  00B2               	movwf	?___ftdiv+2
  6846  01F0  0008               	return
  6847  01F1                     __end_of___ftdiv:	
  6848                           
  6849                           	psect	text13
  6850  0F9C                     __ptext13:	
  6851 ;; *************** function ___ftpack *****************
  6852 ;; Defined at:
  6853 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  arg             3    0[COMMON] unsigned um
  6856 ;;  exp             1    3[COMMON] unsigned char 
  6857 ;;  sign            1    4[COMMON] unsigned char 
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  3    0[COMMON] float 
  6862 ;; Registers used:
  6863 ;;		wreg, status,2, status,0
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:        8 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		___awtoft
  6879 ;;		___ftadd
  6880 ;;		___ftdiv
  6881 ;;		___ftmul
  6882 ;;		___lwtoft
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           
  6887                           ;psect for function ___ftpack
  6888  0F9C                     ___ftpack:	
  6889                           
  6890                           ;incstack = 0
  6891                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6892  0F9C  0873               	movf	___ftpack@exp,w
  6893  0F9D  1903               	btfsc	3,2
  6894  0F9E  2FA4               	goto	l1676
  6895  0F9F  0872               	movf	___ftpack@arg+2,w
  6896  0FA0  0471               	iorwf	___ftpack@arg+1,w
  6897  0FA1  0470               	iorwf	___ftpack@arg,w
  6898  0FA2  1D03               	skipz
  6899  0FA3  2FB5               	goto	l1682
  6900  0FA4                     l1676:	
  6901  0FA4  3000               	movlw	0
  6902  0FA5  00F0               	movwf	?___ftpack
  6903  0FA6  3000               	movlw	0
  6904  0FA7  00F1               	movwf	?___ftpack+1
  6905  0FA8  3000               	movlw	0
  6906  0FA9  00F2               	movwf	?___ftpack+2
  6907  0FAA  0008               	return
  6908  0FAB                     l1680:	
  6909  0FAB  3001               	movlw	1
  6910  0FAC  00F5               	movwf	??___ftpack
  6911  0FAD  0875               	movf	??___ftpack,w
  6912  0FAE  07F3               	addwf	___ftpack@exp,f
  6913  0FAF  3001               	movlw	1
  6914  0FB0                     u1535:	
  6915  0FB0  36F2               	lsrf	___ftpack@arg+2,f
  6916  0FB1  0CF1               	rrf	___ftpack@arg+1,f
  6917  0FB2  0CF0               	rrf	___ftpack@arg,f
  6918  0FB3  0B89               	decfsz	9,f
  6919  0FB4  2FB0               	goto	u1535
  6920  0FB5                     l1682:	
  6921  0FB5  30FE               	movlw	254
  6922  0FB6  0572               	andwf	___ftpack@arg+2,w
  6923  0FB7  1903               	btfsc	3,2
  6924  0FB8  2FCE               	goto	l501
  6925  0FB9  2FAB               	goto	l1680
  6926  0FBA                     l1684:	
  6927  0FBA  3001               	movlw	1
  6928  0FBB  00F5               	movwf	??___ftpack
  6929  0FBC  0875               	movf	??___ftpack,w
  6930  0FBD  07F3               	addwf	___ftpack@exp,f
  6931  0FBE  3001               	movlw	1
  6932  0FBF  07F0               	addwf	___ftpack@arg,f
  6933  0FC0  3000               	movlw	0
  6934  0FC1  1803               	skipnc
  6935  0FC2  3001               	movlw	1
  6936  0FC3  07F1               	addwf	___ftpack@arg+1,f
  6937  0FC4  3000               	movlw	0
  6938  0FC5  1803               	skipnc
  6939  0FC6  3001               	movlw	1
  6940  0FC7  07F2               	addwf	___ftpack@arg+2,f
  6941  0FC8  3001               	movlw	1
  6942  0FC9                     u1555:	
  6943  0FC9  36F2               	lsrf	___ftpack@arg+2,f
  6944  0FCA  0CF1               	rrf	___ftpack@arg+1,f
  6945  0FCB  0CF0               	rrf	___ftpack@arg,f
  6946  0FCC  0B89               	decfsz	9,f
  6947  0FCD  2FC9               	goto	u1555
  6948  0FCE                     l501:	
  6949  0FCE  30FF               	movlw	255
  6950  0FCF  0572               	andwf	___ftpack@arg+2,w
  6951  0FD0  1903               	btfsc	3,2
  6952  0FD1  2FDB               	goto	l1692
  6953  0FD2  2FBA               	goto	l1684
  6954  0FD3                     l1690:	
  6955  0FD3  3001               	movlw	1
  6956  0FD4  02F3               	subwf	___ftpack@exp,f
  6957  0FD5  3001               	movlw	1
  6958  0FD6                     u1575:	
  6959  0FD6  35F0               	lslf	___ftpack@arg,f
  6960  0FD7  0DF1               	rlf	___ftpack@arg+1,f
  6961  0FD8  0DF2               	rlf	___ftpack@arg+2,f
  6962  0FD9  0B89               	decfsz	9,f
  6963  0FDA  2FD6               	goto	u1575
  6964  0FDB                     l1692:	
  6965  0FDB  1BF1               	btfsc	___ftpack@arg+1,7
  6966  0FDC  2FE1               	goto	l508
  6967  0FDD  3002               	movlw	2
  6968  0FDE  0273               	subwf	___ftpack@exp,w
  6969  0FDF  1803               	skipnc
  6970  0FE0  2FD3               	goto	l1690
  6971  0FE1                     l508:	
  6972  0FE1  1873               	btfsc	___ftpack@exp,0
  6973  0FE2  2FE9               	goto	l509
  6974  0FE3  30FF               	movlw	255
  6975  0FE4  05F0               	andwf	___ftpack@arg,f
  6976  0FE5  307F               	movlw	127
  6977  0FE6  05F1               	andwf	___ftpack@arg+1,f
  6978  0FE7  30FF               	movlw	255
  6979  0FE8  05F2               	andwf	___ftpack@arg+2,f
  6980  0FE9                     l509:	
  6981  0FE9  1003               	clrc
  6982  0FEA  0CF3               	rrf	___ftpack@exp,f
  6983  0FEB  0873               	movf	___ftpack@exp,w
  6984  0FEC  00F5               	movwf	??___ftpack
  6985  0FED  01F6               	clrf	??___ftpack+1
  6986  0FEE  01F7               	clrf	??___ftpack+2
  6987  0FEF  3010               	movlw	16
  6988  0FF0                     u1615:	
  6989  0FF0  35F5               	lslf	??___ftpack,f
  6990  0FF1  0DF6               	rlf	??___ftpack+1,f
  6991  0FF2  0DF7               	rlf	??___ftpack+2,f
  6992  0FF3  0B89               	decfsz	9,f
  6993  0FF4  2FF0               	goto	u1615
  6994  0FF5  0875               	movf	??___ftpack,w
  6995  0FF6  04F0               	iorwf	___ftpack@arg,f
  6996  0FF7  0876               	movf	??___ftpack+1,w
  6997  0FF8  04F1               	iorwf	___ftpack@arg+1,f
  6998  0FF9  0877               	movf	??___ftpack+2,w
  6999  0FFA  04F2               	iorwf	___ftpack@arg+2,f
  7000  0FFB  0874               	movf	___ftpack@sign,w
  7001  0FFC  1903               	btfsc	3,2
  7002  0FFD  0008               	return
  7003  0FFE  17F2               	bsf	___ftpack@arg+2,7
  7004  0FFF  0008               	return
  7005  1000                     __end_of___ftpack:	
  7006                           
  7007                           	psect	text14
  7008  0040                     __ptext14:	
  7009 ;; *************** function ___aldiv *****************
  7010 ;; Defined at:
  7011 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  divisor         4    0[COMMON] long 
  7014 ;;  dividend        4    4[COMMON] long 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  quotient        4    2[BANK0 ] long 
  7017 ;;  sign            1    1[BANK0 ] unsigned char 
  7018 ;;  counter         1    0[BANK0 ] unsigned char 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  4    0[COMMON] long 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7028 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7030 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;Total ram usage:       15 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           
  7042                           ;psect for function ___aldiv
  7043  0040                     ___aldiv:	
  7044                           
  7045                           ;incstack = 0
  7046                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  7047  0040  0020               	movlb	0	; select bank0
  7048  0041  01A1               	clrf	___aldiv@sign
  7049  0042  1FF3               	btfss	___aldiv@divisor+3,7
  7050  0043  2851               	goto	l395
  7051  0044  09F0               	comf	___aldiv@divisor,f
  7052  0045  09F1               	comf	___aldiv@divisor+1,f
  7053  0046  09F2               	comf	___aldiv@divisor+2,f
  7054  0047  09F3               	comf	___aldiv@divisor+3,f
  7055  0048  0AF0               	incf	___aldiv@divisor,f
  7056  0049  1903               	skipnz
  7057  004A  0AF1               	incf	___aldiv@divisor+1,f
  7058  004B  1903               	skipnz
  7059  004C  0AF2               	incf	___aldiv@divisor+2,f
  7060  004D  1903               	skipnz
  7061  004E  0AF3               	incf	___aldiv@divisor+3,f
  7062  004F  01A1               	clrf	___aldiv@sign
  7063  0050  0AA1               	incf	___aldiv@sign,f
  7064  0051                     l395:	
  7065  0051  1FF7               	btfss	___aldiv@dividend+3,7
  7066  0052  2862               	goto	l2250
  7067  0053  09F4               	comf	___aldiv@dividend,f
  7068  0054  09F5               	comf	___aldiv@dividend+1,f
  7069  0055  09F6               	comf	___aldiv@dividend+2,f
  7070  0056  09F7               	comf	___aldiv@dividend+3,f
  7071  0057  0AF4               	incf	___aldiv@dividend,f
  7072  0058  1903               	skipnz
  7073  0059  0AF5               	incf	___aldiv@dividend+1,f
  7074  005A  1903               	skipnz
  7075  005B  0AF6               	incf	___aldiv@dividend+2,f
  7076  005C  1903               	skipnz
  7077  005D  0AF7               	incf	___aldiv@dividend+3,f
  7078  005E  3001               	movlw	1
  7079  005F  00F8               	movwf	??___aldiv
  7080  0060  0878               	movf	??___aldiv,w
  7081  0061  06A1               	xorwf	___aldiv@sign,f
  7082  0062                     l2250:	
  7083  0062  3000               	movlw	0
  7084  0063  00A5               	movwf	___aldiv@quotient+3
  7085  0064  3000               	movlw	0
  7086  0065  00A4               	movwf	___aldiv@quotient+2
  7087  0066  3000               	movlw	0
  7088  0067  00A3               	movwf	___aldiv@quotient+1
  7089  0068  3000               	movlw	0
  7090  0069  00A2               	movwf	___aldiv@quotient
  7091  006A  0873               	movf	___aldiv@divisor+3,w
  7092  006B  0472               	iorwf	___aldiv@divisor+2,w
  7093  006C  0471               	iorwf	___aldiv@divisor+1,w
  7094  006D  0470               	iorwf	___aldiv@divisor,w
  7095  006E  1903               	skipnz
  7096  006F  28AB               	goto	l2272
  7097  0070  01A0               	clrf	___aldiv@counter
  7098  0071  0AA0               	incf	___aldiv@counter,f
  7099  0072                     l2258:	
  7100  0072  1BF3               	btfsc	___aldiv@divisor+3,7
  7101  0073  2880               	goto	l2260
  7102  0074  3001               	movlw	1
  7103  0075                     u2545:	
  7104  0075  35F0               	lslf	___aldiv@divisor,f
  7105  0076  0DF1               	rlf	___aldiv@divisor+1,f
  7106  0077  0DF2               	rlf	___aldiv@divisor+2,f
  7107  0078  0DF3               	rlf	___aldiv@divisor+3,f
  7108  0079  0B89               	decfsz	9,f
  7109  007A  2875               	goto	u2545
  7110  007B  3001               	movlw	1
  7111  007C  00F8               	movwf	??___aldiv
  7112  007D  0878               	movf	??___aldiv,w
  7113  007E  07A0               	addwf	___aldiv@counter,f
  7114  007F  2872               	goto	l2258
  7115  0080                     l2260:	
  7116  0080  3001               	movlw	1
  7117  0081                     u2565:	
  7118  0081  35A2               	lslf	___aldiv@quotient,f
  7119  0082  0DA3               	rlf	___aldiv@quotient+1,f
  7120  0083  0DA4               	rlf	___aldiv@quotient+2,f
  7121  0084  0DA5               	rlf	___aldiv@quotient+3,f
  7122  0085  0B89               	decfsz	9,f
  7123  0086  2881               	goto	u2565
  7124  0087  0873               	movf	___aldiv@divisor+3,w
  7125  0088  0277               	subwf	___aldiv@dividend+3,w
  7126  0089  1D03               	skipz
  7127  008A  2895               	goto	u2575
  7128  008B  0872               	movf	___aldiv@divisor+2,w
  7129  008C  0276               	subwf	___aldiv@dividend+2,w
  7130  008D  1D03               	skipz
  7131  008E  2895               	goto	u2575
  7132  008F  0871               	movf	___aldiv@divisor+1,w
  7133  0090  0275               	subwf	___aldiv@dividend+1,w
  7134  0091  1D03               	skipz
  7135  0092  2895               	goto	u2575
  7136  0093  0870               	movf	___aldiv@divisor,w
  7137  0094  0274               	subwf	___aldiv@dividend,w
  7138  0095                     u2575:	
  7139  0095  1C03               	skipc
  7140  0096  28A0               	goto	l2268
  7141  0097  0870               	movf	___aldiv@divisor,w
  7142  0098  02F4               	subwf	___aldiv@dividend,f
  7143  0099  0871               	movf	___aldiv@divisor+1,w
  7144  009A  3BF5               	subwfb	___aldiv@dividend+1,f
  7145  009B  0872               	movf	___aldiv@divisor+2,w
  7146  009C  3BF6               	subwfb	___aldiv@dividend+2,f
  7147  009D  0873               	movf	___aldiv@divisor+3,w
  7148  009E  3BF7               	subwfb	___aldiv@dividend+3,f
  7149  009F  1422               	bsf	___aldiv@quotient,0
  7150  00A0                     l2268:	
  7151  00A0  3001               	movlw	1
  7152  00A1                     u2585:	
  7153  00A1  36F3               	lsrf	___aldiv@divisor+3,f
  7154  00A2  0CF2               	rrf	___aldiv@divisor+2,f
  7155  00A3  0CF1               	rrf	___aldiv@divisor+1,f
  7156  00A4  0CF0               	rrf	___aldiv@divisor,f
  7157  00A5  0B89               	decfsz	9,f
  7158  00A6  28A1               	goto	u2585
  7159  00A7  3001               	movlw	1
  7160  00A8  02A0               	subwf	___aldiv@counter,f
  7161  00A9  1D03               	btfss	3,2
  7162  00AA  2880               	goto	l2260
  7163  00AB                     l2272:	
  7164  00AB  0821               	movf	___aldiv@sign,w
  7165  00AC  1903               	btfsc	3,2
  7166  00AD  28B9               	goto	l2276
  7167  00AE  09A2               	comf	___aldiv@quotient,f
  7168  00AF  09A3               	comf	___aldiv@quotient+1,f
  7169  00B0  09A4               	comf	___aldiv@quotient+2,f
  7170  00B1  09A5               	comf	___aldiv@quotient+3,f
  7171  00B2  0AA2               	incf	___aldiv@quotient,f
  7172  00B3  1903               	skipnz
  7173  00B4  0AA3               	incf	___aldiv@quotient+1,f
  7174  00B5  1903               	skipnz
  7175  00B6  0AA4               	incf	___aldiv@quotient+2,f
  7176  00B7  1903               	skipnz
  7177  00B8  0AA5               	incf	___aldiv@quotient+3,f
  7178  00B9                     l2276:	
  7179  00B9  0825               	movf	___aldiv@quotient+3,w
  7180  00BA  00F3               	movwf	?___aldiv+3
  7181  00BB  0824               	movf	___aldiv@quotient+2,w
  7182  00BC  00F2               	movwf	?___aldiv+2
  7183  00BD  0823               	movf	___aldiv@quotient+1,w
  7184  00BE  00F1               	movwf	?___aldiv+1
  7185  00BF  0822               	movf	___aldiv@quotient,w
  7186  00C0  00F0               	movwf	?___aldiv
  7187  00C1  0008               	return
  7188  00C2                     __end_of___aldiv:	
  7189                           
  7190                           	psect	text15
  7191  0CE6                     __ptext15:	
  7192 ;; *************** function _SYSTEM_Initialize *****************
  7193 ;; Defined at:
  7194 ;;		line 37 in file "system.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;Total ram usage:        1 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    3
  7215 ;; This function calls:
  7216 ;;		_ADCC_Initialize
  7217 ;;		_LCDClear
  7218 ;;		_LCDInit
  7219 ;;		_OSCILLATOR_Initialize
  7220 ;;		_PIN_MANAGER_Initialize
  7221 ;; This function is called by:
  7222 ;;		_main
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           
  7227                           ;psect for function _SYSTEM_Initialize
  7228  0CE6                     _SYSTEM_Initialize:	
  7229                           
  7230                           ;system.c: 39: PIN_MANAGER_Initialize();
  7231                           
  7232                           ;incstack = 0
  7233                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7234  0CE6  318D  2553  318C   	fcall	_PIN_MANAGER_Initialize
  7235                           
  7236                           ;system.c: 40: OSCILLATOR_Initialize();
  7237  0CE9  318C  242C  318C   	fcall	_OSCILLATOR_Initialize
  7238                           
  7239                           ;system.c: 41: FVRCON = 0x00;
  7240  0CEC  0032               	movlb	18	; select bank18
  7241  0CED  018C               	clrf	12	;volatile
  7242                           
  7243                           ;system.c: 42: ADCC_Initialize();
  7244  0CEE  318C  2474  318C   	fcall	_ADCC_Initialize
  7245                           
  7246                           ;system.c: 43: LCDInit();
  7247  0CF1  318D  2585  318C   	fcall	_LCDInit
  7248                           
  7249                           ;system.c: 44: _delay((unsigned long)((200)*(1000000/4000.0)));
  7250  0CF4  3041               	movlw	65
  7251  0CF5  00FB               	movwf	??_SYSTEM_Initialize
  7252  0CF6  30EE               	movlw	238
  7253  0CF7                     u2947:	
  7254  0CF7  0B89               	decfsz	9,f
  7255  0CF8  2CF7               	goto	u2947
  7256  0CF9  0BFB               	decfsz	??_SYSTEM_Initialize,f
  7257  0CFA  2CF7               	goto	u2947
  7258  0CFB  3200               	nop2
  7259                           
  7260                           ;system.c: 45: LCDClear();
  7261  0CFC  318D  252D  318C   	fcall	_LCDClear
  7262                           
  7263                           ;system.c: 46: _delay((unsigned long)((100)*(1000000/4000.0)));
  7264  0CFF  3021               	movlw	33
  7265  0D00  00FB               	movwf	??_SYSTEM_Initialize
  7266  0D01  3076               	movlw	118
  7267  0D02                     u2957:	
  7268  0D02  0B89               	decfsz	9,f
  7269  0D03  2D02               	goto	u2957
  7270  0D04  0BFB               	decfsz	??_SYSTEM_Initialize,f
  7271  0D05  2D02               	goto	u2957
  7272  0D06  3200               	nop2
  7273  0D07  0008               	return
  7274  0D08                     __end_of_SYSTEM_Initialize:	
  7275                           
  7276                           	psect	text16
  7277  0D53                     __ptext16:	
  7278 ;; *************** function _PIN_MANAGER_Initialize *****************
  7279 ;; Defined at:
  7280 ;;		line 5 in file "pin_manager.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  state           1    0[COMMON] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;Total ram usage:        1 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_SYSTEM_Initialize
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           
  7308                           ;psect for function _PIN_MANAGER_Initialize
  7309  0D53                     _PIN_MANAGER_Initialize:	
  7310                           
  7311                           ;pin_manager.c: 7: LATA = 0x00;
  7312                           
  7313                           ;incstack = 0
  7314                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7315  0D53  0020               	movlb	0	; select bank0
  7316  0D54  0196               	clrf	22	;volatile
  7317                           
  7318                           ;pin_manager.c: 8: LATB = 0x0;
  7319  0D55  0197               	clrf	23	;volatile
  7320                           
  7321                           ;pin_manager.c: 9: LATC = 0x0;
  7322  0D56  0198               	clrf	24	;volatile
  7323                           
  7324                           ;pin_manager.c: 11: WPUA = 0x18;
  7325  0D57  3018               	movlw	24
  7326  0D58  003E               	movlb	30	; select bank30
  7327  0D59  00B9               	movwf	57	;volatile
  7328                           
  7329                           ;pin_manager.c: 12: WPUB = 0x00;
  7330  0D5A  01C4               	clrf	68	;volatile
  7331                           
  7332                           ;pin_manager.c: 13: WPUC = 0x00;
  7333  0D5B  01CF               	clrf	79	;volatile
  7334                           
  7335                           ;pin_manager.c: 14: WPUE = 0x8;
  7336  0D5C  3008               	movlw	8
  7337  0D5D  00E5               	movwf	101	;volatile
  7338                           
  7339                           ;pin_manager.c: 16: TRISA = 0x1C;
  7340  0D5E  301C               	movlw	28
  7341  0D5F  0020               	movlb	0	; select bank0
  7342  0D60  0091               	movwf	17	;volatile
  7343                           
  7344                           ;pin_manager.c: 17: TRISB = 0x00;
  7345  0D61  0192               	clrf	18	;volatile
  7346                           
  7347                           ;pin_manager.c: 18: TRISC = 0x10;
  7348  0D62  3010               	movlw	16
  7349  0D63  0093               	movwf	19	;volatile
  7350                           
  7351                           ;pin_manager.c: 20: ANSELA = 0x04;
  7352  0D64  3004               	movlw	4
  7353  0D65  003E               	movlb	30	; select bank30
  7354  0D66  00B8               	movwf	56	;volatile
  7355                           
  7356                           ;pin_manager.c: 21: ANSELB = 0x00;
  7357  0D67  01C3               	clrf	67	;volatile
  7358                           
  7359                           ;pin_manager.c: 22: ANSELC = 0x00;
  7360  0D68  01CE               	clrf	78	;volatile
  7361                           
  7362                           ;pin_manager.c: 24: PIE0bits.IOCIE = 0;
  7363  0D69  002E               	movlb	14	; select bank14
  7364  0D6A  1216               	bcf	22,4	;volatile
  7365                           
  7366                           ;pin_manager.c: 25: bool state = GIE;
  7367  0D6B  3000               	movlw	0
  7368  0D6C  1B8B               	btfsc	11,7	;volatile
  7369  0D6D  3001               	movlw	1
  7370  0D6E  00F0               	movwf	PIN_MANAGER_Initialize@state
  7371                           
  7372                           ;pin_manager.c: 26: GIE = 0;
  7373  0D6F  138B               	bcf	11,7	;volatile
  7374                           
  7375                           ;pin_manager.c: 27: PPSLOCK = 0x55;
  7376  0D70  3055               	movlw	85
  7377  0D71  003D               	movlb	29	; select bank29
  7378  0D72  008F               	movwf	15	;volatile
  7379                           
  7380                           ;pin_manager.c: 28: PPSLOCK = 0xAA;
  7381  0D73  30AA               	movlw	170
  7382  0D74  008F               	movwf	15	;volatile
  7383                           
  7384                           ;pin_manager.c: 29: PPSLOCKbits.PPSLOCKED = 0x00;
  7385  0D75  100F               	bcf	15,0	;volatile
  7386                           
  7387                           ;pin_manager.c: 32: RA1PPS = 0x000E;
  7388  0D76  300E               	movlw	14
  7389  0D77  003E               	movlb	30	; select bank30
  7390  0D78  0091               	movwf	17	;volatile
  7391                           
  7392                           ;pin_manager.c: 36: PPSLOCK = 0x55;
  7393  0D79  3055               	movlw	85
  7394  0D7A  003D               	movlb	29	; select bank29
  7395  0D7B  008F               	movwf	15	;volatile
  7396                           
  7397                           ;pin_manager.c: 37: PPSLOCK = 0xAA;
  7398  0D7C  30AA               	movlw	170
  7399  0D7D  008F               	movwf	15	;volatile
  7400                           
  7401                           ;pin_manager.c: 38: PPSLOCKbits.PPSLOCKED = 0x01;
  7402  0D7E  140F               	bsf	15,0	;volatile
  7403                           
  7404                           ;pin_manager.c: 39: GIE = state;
  7405  0D7F  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  7406  0D80  2D83               	goto	u2040
  7407  0D81  178B               	bsf	11,7	;volatile
  7408  0D82  0008               	return
  7409  0D83                     u2040:	
  7410  0D83  138B               	bcf	11,7	;volatile
  7411  0D84  0008               	return
  7412  0D85                     __end_of_PIN_MANAGER_Initialize:	
  7413                           
  7414                           	psect	text17
  7415  0C2C                     __ptext17:	
  7416 ;; *************** function _OSCILLATOR_Initialize *****************
  7417 ;; Defined at:
  7418 ;;		line 49 in file "system.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;		None
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;		None
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      void 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;Total ram usage:        0 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_SYSTEM_Initialize
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           
  7446                           ;psect for function _OSCILLATOR_Initialize
  7447  0C2C                     _OSCILLATOR_Initialize:	
  7448                           
  7449                           ;system.c: 51: OSCCON1 = 0x60;
  7450                           
  7451                           ;incstack = 0
  7452                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7453  0C2C  3060               	movlw	96
  7454  0C2D  0031               	movlb	17	; select bank17
  7455  0C2E  008D               	movwf	13	;volatile
  7456                           
  7457                           ;system.c: 52: OSCCON3 = 0x00;
  7458  0C2F  018F               	clrf	15	;volatile
  7459                           
  7460                           ;system.c: 53: OSCEN = 0x00;
  7461  0C30  0191               	clrf	17	;volatile
  7462                           
  7463                           ;system.c: 54: OSCFRQ = 0x00;
  7464  0C31  0193               	clrf	19	;volatile
  7465                           
  7466                           ;system.c: 55: OSCTUNE = 0x00;
  7467  0C32  0192               	clrf	18	;volatile
  7468  0C33  0008               	return
  7469  0C34                     __end_of_OSCILLATOR_Initialize:	
  7470                           
  7471                           	psect	text18
  7472  0D85                     __ptext18:	
  7473 ;; *************** function _LCDInit *****************
  7474 ;; Defined at:
  7475 ;;		line 247 in file "lcd.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;		None
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;		None
  7480 ;; Return value:  Size  Location     Type
  7481 ;;                  1    wreg      void 
  7482 ;; Registers used:
  7483 ;;		wreg, status,2, status,0, pclath, cstack
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;Total ram usage:        1 bytes
  7494 ;; Hardware stack levels used:    1
  7495 ;; Hardware stack levels required when called:    1
  7496 ;; This function calls:
  7497 ;;		_LCDWrite
  7498 ;; This function is called by:
  7499 ;;		_SYSTEM_Initialize
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           
  7504                           ;psect for function _LCDInit
  7505  0D85                     _LCDInit:	
  7506                           
  7507                           ;lcd.c: 249: TRISCbits.TRISC5 = 0;
  7508                           
  7509                           ;incstack = 0
  7510                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  7511  0D85  0020               	movlb	0	; select bank0
  7512  0D86  1293               	bcf	19,5	;volatile
  7513                           
  7514                           ;lcd.c: 250: TRISCbits.TRISC4 = 0;
  7515  0D87  1213               	bcf	19,4	;volatile
  7516                           
  7517                           ;lcd.c: 251: TRISCbits.TRISC3 = 0;
  7518  0D88  1193               	bcf	19,3	;volatile
  7519                           
  7520                           ;lcd.c: 252: TRISCbits.TRISC7 = 0;
  7521  0D89  1393               	bcf	19,7	;volatile
  7522                           
  7523                           ;lcd.c: 253: TRISCbits.TRISC6 = 0;
  7524  0D8A  1313               	bcf	19,6	;volatile
  7525                           
  7526                           ;lcd.c: 254: LATCbits.LATC4 = 0;
  7527  0D8B  1218               	bcf	24,4	;volatile
  7528                           
  7529                           ;lcd.c: 255: LATCbits.LATC5 = 0;
  7530  0D8C  1298               	bcf	24,5	;volatile
  7531                           
  7532                           ;lcd.c: 256: LATCbits.LATC3 = 0;
  7533  0D8D  1198               	bcf	24,3	;volatile
  7534                           
  7535                           ;lcd.c: 257: LATCbits.LATC6 = 0;
  7536  0D8E  1318               	bcf	24,6	;volatile
  7537                           
  7538                           ;lcd.c: 259: LATCbits.LATC6 = 1;
  7539  0D8F  1718               	bsf	24,6	;volatile
  7540                           
  7541                           ;lcd.c: 261: LCDWrite(0, 0x21);
  7542  0D90  3021               	movlw	33
  7543  0D91  00F5               	movwf	??_LCDInit
  7544  0D92  0875               	movf	??_LCDInit,w
  7545  0D93  00F0               	movwf	LCDWrite@data
  7546  0D94  3000               	movlw	0
  7547  0D95  318D  2508  318D   	fcall	_LCDWrite
  7548                           
  7549                           ;lcd.c: 268: LCDWrite(0, 0xBB);
  7550  0D98  30BB               	movlw	187
  7551  0D99  00F5               	movwf	??_LCDInit
  7552  0D9A  0875               	movf	??_LCDInit,w
  7553  0D9B  00F0               	movwf	LCDWrite@data
  7554  0D9C  3000               	movlw	0
  7555  0D9D  318D  2508  318D   	fcall	_LCDWrite
  7556                           
  7557                           ;lcd.c: 270: LCDWrite(0, 0x04);
  7558  0DA0  3004               	movlw	4
  7559  0DA1  00F5               	movwf	??_LCDInit
  7560  0DA2  0875               	movf	??_LCDInit,w
  7561  0DA3  00F0               	movwf	LCDWrite@data
  7562  0DA4  3000               	movlw	0
  7563  0DA5  318D  2508  318D   	fcall	_LCDWrite
  7564                           
  7565                           ;lcd.c: 272: LCDWrite(0, 0x14);
  7566  0DA8  3014               	movlw	20
  7567  0DA9  00F5               	movwf	??_LCDInit
  7568  0DAA  0875               	movf	??_LCDInit,w
  7569  0DAB  00F0               	movwf	LCDWrite@data
  7570  0DAC  3000               	movlw	0
  7571  0DAD  318D  2508  318D   	fcall	_LCDWrite
  7572                           
  7573                           ;lcd.c: 274: LCDWrite(0, 0x20);
  7574  0DB0  3020               	movlw	32
  7575  0DB1  00F5               	movwf	??_LCDInit
  7576  0DB2  0875               	movf	??_LCDInit,w
  7577  0DB3  00F0               	movwf	LCDWrite@data
  7578  0DB4  3000               	movlw	0
  7579  0DB5  318D  2508  318D   	fcall	_LCDWrite
  7580                           
  7581                           ;lcd.c: 276: LCDWrite(0, 0x0C);
  7582  0DB8  300C               	movlw	12
  7583  0DB9  00F5               	movwf	??_LCDInit
  7584  0DBA  0875               	movf	??_LCDInit,w
  7585  0DBB  00F0               	movwf	LCDWrite@data
  7586  0DBC  3000               	movlw	0
  7587  0DBD  318D  2508         	fcall	_LCDWrite
  7588  0DBF  0008               	return
  7589  0DC0                     __end_of_LCDInit:	
  7590                           
  7591                           	psect	text19
  7592  0D2D                     __ptext19:	
  7593 ;; *************** function _LCDClear *****************
  7594 ;; Defined at:
  7595 ;;		line 182 in file "lcd.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  index           2    9[COMMON] int 
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  1    wreg      void 
  7602 ;; Registers used:
  7603 ;;		wreg, status,2, status,0, pclath, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7613 ;;Total ram usage:        3 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:    2
  7616 ;; This function calls:
  7617 ;;		_LCDWrite
  7618 ;;		_gotoXY
  7619 ;; This function is called by:
  7620 ;;		_readButtons
  7621 ;;		_SYSTEM_Initialize
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           
  7626                           ;psect for function _LCDClear
  7627  0D2D                     _LCDClear:	
  7628                           
  7629                           ;lcd.c: 184: int index;
  7630                           ;lcd.c: 185: for (index = 0 ; index < (84 * 48 / 8) ; index++)
  7631                           
  7632                           ;incstack = 0
  7633                           ; Regs used in _LCDClear: [wreg+status,2+status,0+pclath+cstack]
  7634  0D2D  01F9               	clrf	LCDClear@index
  7635  0D2E  01FA               	clrf	LCDClear@index+1
  7636  0D2F  087A               	movf	LCDClear@index+1,w
  7637  0D30  3A80               	xorlw	128
  7638  0D31  00F8               	movwf	??_LCDClear
  7639  0D32  3081               	movlw	129
  7640  0D33  0278               	subwf	??_LCDClear,w
  7641  0D34  1D03               	skipz
  7642  0D35  2D38               	goto	u2025
  7643  0D36  30F8               	movlw	248
  7644  0D37  0279               	subwf	LCDClear@index,w
  7645  0D38                     u2025:	
  7646  0D38  1803               	btfsc	3,0
  7647  0D39  2D4E               	goto	l1894
  7648  0D3A                     l1888:	
  7649                           
  7650                           ;lcd.c: 186: LCDWrite(1, 0x00);
  7651  0D3A  01F0               	clrf	LCDWrite@data
  7652  0D3B  3001               	movlw	1
  7653  0D3C  318D  2508  318D   	fcall	_LCDWrite
  7654  0D3F  3001               	movlw	1
  7655  0D40  07F9               	addwf	LCDClear@index,f
  7656  0D41  3000               	movlw	0
  7657  0D42  3DFA               	addwfc	LCDClear@index+1,f
  7658  0D43  087A               	movf	LCDClear@index+1,w
  7659  0D44  3A80               	xorlw	128
  7660  0D45  00F8               	movwf	??_LCDClear
  7661  0D46  3081               	movlw	129
  7662  0D47  0278               	subwf	??_LCDClear,w
  7663  0D48  1D03               	skipz
  7664  0D49  2D4C               	goto	u2035
  7665  0D4A  30F8               	movlw	248
  7666  0D4B  0279               	subwf	LCDClear@index,w
  7667  0D4C                     u2035:	
  7668  0D4C  1C03               	skipc
  7669  0D4D  2D3A               	goto	l1888
  7670  0D4E                     l1894:	
  7671                           
  7672                           ;lcd.c: 187: gotoXY(0, 0);
  7673  0D4E  01F5               	clrf	gotoXY@y
  7674  0D4F  3000               	movlw	0
  7675  0D50  318C  244E         	fcall	_gotoXY
  7676  0D52  0008               	return
  7677  0D53                     __end_of_LCDClear:	
  7678                           
  7679                           	psect	text20
  7680  0C4E                     __ptext20:	
  7681 ;; *************** function _gotoXY *****************
  7682 ;; Defined at:
  7683 ;;		line 124 in file "lcd.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  x               1    wreg     unsigned char 
  7686 ;;  y               1    5[COMMON] unsigned char 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  x               1    7[COMMON] unsigned char 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0, pclath, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7698 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7701 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7702 ;;Total ram usage:        3 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; Hardware stack levels required when called:    1
  7705 ;; This function calls:
  7706 ;;		_LCDWrite
  7707 ;; This function is called by:
  7708 ;;		_main
  7709 ;;		_LCDClear
  7710 ;;		_LCDBitmap
  7711 ;;		_LCDDrawBox
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           
  7716                           ;psect for function _gotoXY
  7717  0C4E                     _gotoXY:	
  7718                           
  7719                           ;incstack = 0
  7720                           ; Regs used in _gotoXY: [wreg+status,2+status,0+pclath+cstack]
  7721                           ;gotoXY@x stored from wreg
  7722  0C4E  00F7               	movwf	gotoXY@x
  7723                           
  7724                           ;lcd.c: 126: LCDWrite(0, 0x80 | x);
  7725  0C4F  0877               	movf	gotoXY@x,w
  7726  0C50  3880               	iorlw	128
  7727  0C51  00F6               	movwf	??_gotoXY
  7728  0C52  0876               	movf	??_gotoXY,w
  7729  0C53  00F0               	movwf	LCDWrite@data
  7730  0C54  3000               	movlw	0
  7731  0C55  318D  2508  318C   	fcall	_LCDWrite
  7732                           
  7733                           ;lcd.c: 127: LCDWrite(0, 0x40 | y);
  7734  0C58  0875               	movf	gotoXY@y,w
  7735  0C59  3840               	iorlw	64
  7736  0C5A  00F6               	movwf	??_gotoXY
  7737  0C5B  0876               	movf	??_gotoXY,w
  7738  0C5C  00F0               	movwf	LCDWrite@data
  7739  0C5D  3000               	movlw	0
  7740  0C5E  318D  2508         	fcall	_LCDWrite
  7741  0C60  0008               	return
  7742  0C61                     __end_of_gotoXY:	
  7743                           
  7744                           	psect	text21
  7745  0C74                     __ptext21:	
  7746 ;; *************** function _ADCC_Initialize *****************
  7747 ;; Defined at:
  7748 ;;		line 5 in file "adcc.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;		None
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;Total ram usage:        0 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_SYSTEM_Initialize
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           
  7776                           ;psect for function _ADCC_Initialize
  7777  0C74                     _ADCC_Initialize:	
  7778                           
  7779                           ;adcc.c: 8: ADCON1 = 0x00;
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7783  0C74  0021               	movlb	1	; select bank1
  7784  0C75  0194               	clrf	20	;volatile
  7785                           
  7786                           ;adcc.c: 10: ADCON2 = 0x00;
  7787  0C76  0195               	clrf	21	;volatile
  7788                           
  7789                           ;adcc.c: 12: ADCON3 = 0x00;
  7790  0C77  0196               	clrf	22	;volatile
  7791                           
  7792                           ;adcc.c: 14: ADACT = 0x00;
  7793  0C78  0199               	clrf	25	;volatile
  7794                           
  7795                           ;adcc.c: 16: ADSTAT = 0x00;
  7796  0C79  0197               	clrf	23	;volatile
  7797                           
  7798                           ;adcc.c: 18: ADCLK = 0x0F;
  7799  0C7A  300F               	movlw	15
  7800  0C7B  0098               	movwf	24	;volatile
  7801                           
  7802                           ;adcc.c: 21: ADREF = 0x00;
  7803  0C7C  019A               	clrf	26	;volatile
  7804                           
  7805                           ;adcc.c: 23: ADCAP = 0x00;
  7806  0C7D  019B               	clrf	27	;volatile
  7807                           
  7808                           ;adcc.c: 25: ADPRE = 0x00;
  7809  0C7E  019C               	clrf	28	;volatile
  7810                           
  7811                           ;adcc.c: 27: ADACQ = 0x00;
  7812  0C7F  019D               	clrf	29	;volatile
  7813                           
  7814                           ;adcc.c: 29: ADPCH = 0x00;
  7815  0C80  019E               	clrf	30	;volatile
  7816                           
  7817                           ;adcc.c: 31: ADRPT = 0x00;
  7818  0C81  0022               	movlb	2	; select bank2
  7819  0C82  018D               	clrf	13	;volatile
  7820                           
  7821                           ;adcc.c: 33: ADLTHL = 0x00;
  7822  0C83  018E               	clrf	14	;volatile
  7823                           
  7824                           ;adcc.c: 35: ADLTHH = 0x00;
  7825  0C84  018F               	clrf	15	;volatile
  7826                           
  7827                           ;adcc.c: 37: ADUTHL = 0x00;
  7828  0C85  0190               	clrf	16	;volatile
  7829                           
  7830                           ;adcc.c: 39: ADUTHH = 0x00;
  7831  0C86  0191               	clrf	17	;volatile
  7832                           
  7833                           ;adcc.c: 41: ADSTPTL = 0x00;
  7834  0C87  0192               	clrf	18	;volatile
  7835                           
  7836                           ;adcc.c: 43: ADSTPTH = 0x00;
  7837  0C88  0193               	clrf	19	;volatile
  7838                           
  7839                           ;adcc.c: 46: ADCON0 = 0x84;
  7840  0C89  3084               	movlw	132
  7841  0C8A  0021               	movlb	1	; select bank1
  7842  0C8B  0093               	movwf	19	;volatile
  7843  0C8C  0008               	return
  7844  0C8D                     __end_of_ADCC_Initialize:	
  7845                           
  7846                           	psect	text22
  7847  0355                     __ptext22:	
  7848 ;; *************** function _LCDWriteInt *****************
  7849 ;; Defined at:
  7850 ;;		line 190 in file "lcd.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  value           2    0[BANK0 ] int 
  7853 ;;  fieldLength     1    2[BANK0 ] char 
  7854 ;;  numPlaces       1    3[BANK0 ] char 
  7855 ;;  sign            1    4[BANK0 ] char 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  str             5   10[BANK0 ] unsigned char [5]
  7858 ;;  i               2   17[BANK0 ] int 
  7859 ;;  j               2   15[BANK0 ] int 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      void 
  7862 ;; Registers used:
  7863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7869 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;Total ram usage:       19 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:    2
  7876 ;; This function calls:
  7877 ;;		_LCDWriteCharacter
  7878 ;;		___awdiv
  7879 ;;		___awmod
  7880 ;; This function is called by:
  7881 ;;		_main
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           
  7886                           ;psect for function _LCDWriteInt
  7887  0355                     _LCDWriteInt:	
  7888                           
  7889                           ;lcd.c: 192: char str[5]={0,0,0,0,0};
  7890                           
  7891                           ;incstack = 0
  7892                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7893  0355  30B9               	movlw	low LCDWriteInt@F14368
  7894  0356  0086               	movwf	6
  7895  0357  3000               	movlw	high LCDWriteInt@F14368
  7896  0358  0087               	movwf	7
  7897  0359  302A               	movlw	low LCDWriteInt@str
  7898  035A  0084               	movwf	4
  7899  035B  3000               	movlw	high LCDWriteInt@str
  7900  035C  0085               	movwf	5
  7901  035D  3005               	movlw	5
  7902  035E  0020               	movlb	0	; select bank0
  7903  035F  00A5               	movwf	??_LCDWriteInt
  7904  0360                     u2420:	
  7905  0360  0016               	moviw fsr1++
  7906  0361  001A               	movwi fsr0++
  7907  0362  0BA5               	decfsz	??_LCDWriteInt,f
  7908  0363  2B60               	goto	u2420
  7909                           
  7910                           ;lcd.c: 193: int i=4,j=0;
  7911  0364  3004               	movlw	4
  7912  0365  00B1               	movwf	LCDWriteInt@i
  7913  0366  3000               	movlw	0
  7914  0367  00B2               	movwf	LCDWriteInt@i+1
  7915  0368  01AF               	clrf	LCDWriteInt@j
  7916  0369  01B0               	clrf	LCDWriteInt@j+1
  7917                           
  7918                           ;lcd.c: 195: if(value<0)
  7919  036A  1FA1               	btfss	LCDWriteInt@value+1,7
  7920  036B  2B77               	goto	l2202
  7921                           
  7922                           ;lcd.c: 196: {
  7923                           ;lcd.c: 197: LCDWriteCharacter('-');
  7924  036C  302D               	movlw	45
  7925  036D  318E  2691  3183   	fcall	_LCDWriteCharacter
  7926                           
  7927                           ;lcd.c: 198: value=value*-1;
  7928  0370  0020               	movlb	0	; select bank0
  7929  0371  09A0               	comf	LCDWriteInt@value,f
  7930  0372  09A1               	comf	LCDWriteInt@value+1,f
  7931  0373  0AA0               	incf	LCDWriteInt@value,f
  7932  0374  1903               	skipnz
  7933  0375  0AA1               	incf	LCDWriteInt@value+1,f
  7934                           
  7935                           ;lcd.c: 199: }
  7936  0376  2B7E               	goto	l2212
  7937  0377                     l2202:	
  7938                           
  7939                           ;lcd.c: 201: else
  7940                           ;lcd.c: 202: {
  7941                           ;lcd.c: 203: if(sign == 1)
  7942  0377  0324               	decf	LCDWriteInt@sign,w
  7943  0378  1D03               	btfss	3,2
  7944  0379  2B7E               	goto	l2212
  7945                           
  7946                           ;lcd.c: 204: {
  7947                           ;lcd.c: 205: LCDWriteCharacter('+');
  7948  037A  302B               	movlw	43
  7949  037B  318E  2691  3183   	fcall	_LCDWriteCharacter
  7950  037E                     l2212:	
  7951                           ;lcd.c: 206: }
  7952                           ;lcd.c: 207: }
  7953                           ;lcd.c: 209: while(value)
  7954                           
  7955  037E  0020               	movlb	0	; select bank0
  7956  037F  0820               	movf	LCDWriteInt@value,w
  7957  0380  0421               	iorwf	LCDWriteInt@value+1,w
  7958  0381  1903               	btfsc	3,2
  7959  0382  2BAD               	goto	l2214
  7960                           
  7961                           ;lcd.c: 210: {
  7962                           ;lcd.c: 211: str[i]=value%10;
  7963  0383  300A               	movlw	10
  7964  0384  00F0               	movwf	___awmod@divisor
  7965  0385  3000               	movlw	0
  7966  0386  00F1               	movwf	___awmod@divisor+1
  7967  0387  0020               	movlb	0	; select bank0
  7968  0388  0821               	movf	LCDWriteInt@value+1,w
  7969  0389  00F3               	movwf	___awmod@dividend+1
  7970  038A  0820               	movf	LCDWriteInt@value,w
  7971  038B  00F2               	movwf	___awmod@dividend
  7972  038C  318D  25FB  3183   	fcall	___awmod
  7973  038F  0870               	movf	?___awmod,w
  7974  0390  0020               	movlb	0	; select bank0
  7975  0391  00A5               	movwf	??_LCDWriteInt
  7976  0392  0831               	movf	LCDWriteInt@i,w
  7977  0393  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  7978  0394  0086               	movwf	6
  7979  0395  0187               	clrf	7
  7980  0396  0825               	movf	??_LCDWriteInt,w
  7981  0397  0081               	movwf	1
  7982                           
  7983                           ;lcd.c: 212: value=value/10;
  7984  0398  300A               	movlw	10
  7985  0399  00F0               	movwf	___awdiv@divisor
  7986  039A  3000               	movlw	0
  7987  039B  00F1               	movwf	___awdiv@divisor+1
  7988  039C  0821               	movf	LCDWriteInt@value+1,w
  7989  039D  00F3               	movwf	___awdiv@dividend+1
  7990  039E  0820               	movf	LCDWriteInt@value,w
  7991  039F  00F2               	movwf	___awdiv@dividend
  7992  03A0  318E  2640  3183   	fcall	___awdiv
  7993  03A3  0871               	movf	?___awdiv+1,w
  7994  03A4  0020               	movlb	0	; select bank0
  7995  03A5  00A1               	movwf	LCDWriteInt@value+1
  7996  03A6  0870               	movf	?___awdiv,w
  7997  03A7  00A0               	movwf	LCDWriteInt@value
  7998                           
  7999                           ;lcd.c: 213: i--;
  8000  03A8  30FF               	movlw	255
  8001  03A9  07B1               	addwf	LCDWriteInt@i,f
  8002  03AA  30FF               	movlw	255
  8003  03AB  3DB2               	addwfc	LCDWriteInt@i+1,f
  8004  03AC  2B7E               	goto	l2212
  8005  03AD                     l2214:	
  8006                           
  8007                           ;lcd.c: 214: }
  8008                           ;lcd.c: 215: if(fieldLength==-1)
  8009  03AD  0A22               	incf	LCDWriteInt@fieldLength,w
  8010  03AE  1903               	btfsc	3,2
  8011  03AF  2BB5               	goto	l2220
  8012  03B0  2BBD               	goto	l2222
  8013  03B1                     l2218:	
  8014                           ;lcd.c: 216: {
  8015                           ;lcd.c: 217: while(str[j]==0)
  8016                           
  8017                           
  8018                           ;lcd.c: 218: {
  8019                           ;lcd.c: 219: j++;
  8020  03B1  3001               	movlw	1
  8021  03B2  07AF               	addwf	LCDWriteInt@j,f
  8022  03B3  3000               	movlw	0
  8023  03B4  3DB0               	addwfc	LCDWriteInt@j+1,f
  8024  03B5                     l2220:	
  8025  03B5  082F               	movf	LCDWriteInt@j,w
  8026  03B6  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  8027  03B7  0086               	movwf	6
  8028  03B8  0187               	clrf	7
  8029  03B9  0801               	movf	1,w
  8030  03BA  1D03               	btfss	3,2
  8031  03BB  2BCD               	goto	l2224
  8032  03BC  2BB1               	goto	l2218
  8033  03BD                     l2222:	
  8034                           ;lcd.c: 220: }
  8035                           ;lcd.c: 221: }
  8036                           
  8037                           
  8038                           ;lcd.c: 222: else
  8039                           ;lcd.c: 223: {
  8040                           ;lcd.c: 224: j=5-fieldLength;
  8041  03BD  0822               	movf	LCDWriteInt@fieldLength,w
  8042  03BE  00A5               	movwf	??_LCDWriteInt
  8043  03BF  01A6               	clrf	??_LCDWriteInt+1
  8044  03C0  1BA5               	btfsc	??_LCDWriteInt,7
  8045  03C1  03A6               	decf	??_LCDWriteInt+1,f
  8046  03C2  09A5               	comf	??_LCDWriteInt,f
  8047  03C3  09A6               	comf	??_LCDWriteInt+1,f
  8048  03C4  0AA5               	incf	??_LCDWriteInt,f
  8049  03C5  1903               	skipnz
  8050  03C6  0AA6               	incf	??_LCDWriteInt+1,f
  8051  03C7  0825               	movf	??_LCDWriteInt,w
  8052  03C8  3E05               	addlw	5
  8053  03C9  00AF               	movwf	LCDWriteInt@j
  8054  03CA  3000               	movlw	0
  8055  03CB  3D26               	addwfc	??_LCDWriteInt+1,w
  8056  03CC  00B0               	movwf	LCDWriteInt@j+1
  8057  03CD                     l2224:	
  8058                           
  8059                           ;lcd.c: 225: }
  8060                           ;lcd.c: 227: for(i=j;i<(5-numPlaces);i++)
  8061  03CD  0830               	movf	LCDWriteInt@j+1,w
  8062  03CE  00B2               	movwf	LCDWriteInt@i+1
  8063  03CF  082F               	movf	LCDWriteInt@j,w
  8064  03D0  00B1               	movwf	LCDWriteInt@i
  8065  03D1                     l2230:	
  8066  03D1  0823               	movf	LCDWriteInt@numPlaces,w
  8067  03D2  00A5               	movwf	??_LCDWriteInt
  8068  03D3  01A6               	clrf	??_LCDWriteInt+1
  8069  03D4  1BA5               	btfsc	??_LCDWriteInt,7
  8070  03D5  03A6               	decf	??_LCDWriteInt+1,f
  8071  03D6  09A5               	comf	??_LCDWriteInt,f
  8072  03D7  09A6               	comf	??_LCDWriteInt+1,f
  8073  03D8  0AA5               	incf	??_LCDWriteInt,f
  8074  03D9  1903               	skipnz
  8075  03DA  0AA6               	incf	??_LCDWriteInt+1,f
  8076  03DB  0825               	movf	??_LCDWriteInt,w
  8077  03DC  3E05               	addlw	5
  8078  03DD  00A7               	movwf	??_LCDWriteInt+2
  8079  03DE  3000               	movlw	0
  8080  03DF  3D26               	addwfc	??_LCDWriteInt+1,w
  8081  03E0  00A8               	movwf	??_LCDWriteInt+3
  8082  03E1  0832               	movf	LCDWriteInt@i+1,w
  8083  03E2  3A80               	xorlw	128
  8084  03E3  00A9               	movwf	??_LCDWriteInt+4
  8085  03E4  0828               	movf	??_LCDWriteInt+3,w
  8086  03E5  3A80               	xorlw	128
  8087  03E6  0229               	subwf	??_LCDWriteInt+4,w
  8088  03E7  1D03               	skipz
  8089  03E8  2BEB               	goto	u2485
  8090  03E9  0827               	movf	??_LCDWriteInt+2,w
  8091  03EA  0231               	subwf	LCDWriteInt@i,w
  8092  03EB                     u2485:	
  8093  03EB  1803               	btfsc	3,0
  8094  03EC  2BFD               	goto	l2232
  8095                           
  8096                           ;lcd.c: 228: {
  8097                           ;lcd.c: 229: LCDWriteCharacter(48+str[i]);
  8098  03ED  0020               	movlb	0	; select bank0
  8099  03EE  0831               	movf	LCDWriteInt@i,w
  8100  03EF  3E2A               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  8101  03F0  0086               	movwf	6
  8102  03F1  0187               	clrf	7
  8103  03F2  0801               	movf	1,w
  8104  03F3  3E30               	addlw	48
  8105  03F4  318E  2691  3183   	fcall	_LCDWriteCharacter
  8106  03F7  3001               	movlw	1
  8107  03F8  0020               	movlb	0	; select bank0
  8108  03F9  07B1               	addwf	LCDWriteInt@i,f
  8109  03FA  3000               	movlw	0
  8110  03FB  3DB2               	addwfc	LCDWriteInt@i+1,f
  8111  03FC  2BD1               	goto	l2230
  8112  03FD                     l2232:	
  8113                           
  8114                           ;lcd.c: 230: }
  8115                           ;lcd.c: 232: if(numPlaces == 1)
  8116  03FD  0020               	movlb	0	; select bank0
  8117  03FE  0323               	decf	LCDWriteInt@numPlaces,w
  8118  03FF  1D03               	btfss	3,2
  8119  0400  2C0B               	goto	l2236
  8120                           
  8121                           ;lcd.c: 233: {
  8122                           ;lcd.c: 234: LCDWriteCharacter(46);
  8123  0401  302E               	movlw	46
  8124  0402  318E  2691  3183   	fcall	_LCDWriteCharacter
  8125                           
  8126                           ;lcd.c: 235: LCDWriteCharacter(48+str[4]);
  8127  0405  0020               	movlb	0	; select bank0
  8128  0406  082E               	movf	LCDWriteInt@str+4,w
  8129  0407  3E30               	addlw	48
  8130  0408  318E  2691  3183   	fcall	_LCDWriteCharacter
  8131  040B                     l2236:	
  8132                           
  8133                           ;lcd.c: 236: }
  8134                           ;lcd.c: 238: if(numPlaces == 2)
  8135  040B  3002               	movlw	2
  8136  040C  0020               	movlb	0	; select bank0
  8137  040D  0623               	xorwf	LCDWriteInt@numPlaces,w
  8138  040E  1D03               	btfss	3,2
  8139  040F  0008               	return
  8140                           
  8141                           ;lcd.c: 239: {
  8142                           ;lcd.c: 240: LCDWriteCharacter(46);
  8143  0410  302E               	movlw	46
  8144  0411  318E  2691  3183   	fcall	_LCDWriteCharacter
  8145                           
  8146                           ;lcd.c: 241: LCDWriteCharacter(48+str[3]);
  8147  0414  0020               	movlb	0	; select bank0
  8148  0415  082D               	movf	LCDWriteInt@str+3,w
  8149  0416  3E30               	addlw	48
  8150  0417  318E  2691  3183   	fcall	_LCDWriteCharacter
  8151                           
  8152                           ;lcd.c: 242: LCDWriteCharacter(48+str[4]);
  8153  041A  0020               	movlb	0	; select bank0
  8154  041B  082E               	movf	LCDWriteInt@str+4,w
  8155  041C  3E30               	addlw	48
  8156  041D  318E  2691         	fcall	_LCDWriteCharacter
  8157  041F  0008               	return
  8158  0420                     __end_of_LCDWriteInt:	
  8159                           
  8160                           	psect	text23
  8161  0DFB                     __ptext23:	
  8162 ;; *************** function ___awmod *****************
  8163 ;; Defined at:
  8164 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  divisor         2    0[COMMON] int 
  8167 ;;  dividend        2    2[COMMON] int 
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;  sign            1    6[COMMON] unsigned char 
  8170 ;;  counter         1    5[COMMON] unsigned char 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  2    0[COMMON] int 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;Total ram usage:        7 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_LCDWriteInt
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           
  8194                           ;psect for function ___awmod
  8195  0DFB                     ___awmod:	
  8196                           
  8197                           ;incstack = 0
  8198                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8199  0DFB  01F6               	clrf	___awmod@sign
  8200  0DFC  1FF3               	btfss	___awmod@dividend+1,7
  8201  0DFD  2E05               	goto	l2002
  8202  0DFE  09F2               	comf	___awmod@dividend,f
  8203  0DFF  09F3               	comf	___awmod@dividend+1,f
  8204  0E00  0AF2               	incf	___awmod@dividend,f
  8205  0E01  1903               	skipnz
  8206  0E02  0AF3               	incf	___awmod@dividend+1,f
  8207  0E03  01F6               	clrf	___awmod@sign
  8208  0E04  0AF6               	incf	___awmod@sign,f
  8209  0E05                     l2002:	
  8210  0E05  1FF1               	btfss	___awmod@divisor+1,7
  8211  0E06  2E0C               	goto	l2006
  8212  0E07  09F0               	comf	___awmod@divisor,f
  8213  0E08  09F1               	comf	___awmod@divisor+1,f
  8214  0E09  0AF0               	incf	___awmod@divisor,f
  8215  0E0A  1903               	skipnz
  8216  0E0B  0AF1               	incf	___awmod@divisor+1,f
  8217  0E0C                     l2006:	
  8218  0E0C  0870               	movf	___awmod@divisor,w
  8219  0E0D  0471               	iorwf	___awmod@divisor+1,w
  8220  0E0E  1903               	btfsc	3,2
  8221  0E0F  2E33               	goto	l2024
  8222  0E10  01F5               	clrf	___awmod@counter
  8223  0E11  0AF5               	incf	___awmod@counter,f
  8224  0E12                     l2014:	
  8225  0E12  1BF1               	btfsc	___awmod@divisor+1,7
  8226  0E13  2E1E               	goto	l2016
  8227  0E14  3001               	movlw	1
  8228  0E15                     u2195:	
  8229  0E15  35F0               	lslf	___awmod@divisor,f
  8230  0E16  0DF1               	rlf	___awmod@divisor+1,f
  8231  0E17  0B89               	decfsz	9,f
  8232  0E18  2E15               	goto	u2195
  8233  0E19  3001               	movlw	1
  8234  0E1A  00F4               	movwf	??___awmod
  8235  0E1B  0874               	movf	??___awmod,w
  8236  0E1C  07F5               	addwf	___awmod@counter,f
  8237  0E1D  2E12               	goto	l2014
  8238  0E1E                     l2016:	
  8239  0E1E  0871               	movf	___awmod@divisor+1,w
  8240  0E1F  0273               	subwf	___awmod@dividend+1,w
  8241  0E20  1D03               	skipz
  8242  0E21  2E24               	goto	u2215
  8243  0E22  0870               	movf	___awmod@divisor,w
  8244  0E23  0272               	subwf	___awmod@dividend,w
  8245  0E24                     u2215:	
  8246  0E24  1C03               	skipc
  8247  0E25  2E2A               	goto	l2020
  8248  0E26  0870               	movf	___awmod@divisor,w
  8249  0E27  02F2               	subwf	___awmod@dividend,f
  8250  0E28  0871               	movf	___awmod@divisor+1,w
  8251  0E29  3BF3               	subwfb	___awmod@dividend+1,f
  8252  0E2A                     l2020:	
  8253  0E2A  3001               	movlw	1
  8254  0E2B                     u2225:	
  8255  0E2B  36F1               	lsrf	___awmod@divisor+1,f
  8256  0E2C  0CF0               	rrf	___awmod@divisor,f
  8257  0E2D  0B89               	decfsz	9,f
  8258  0E2E  2E2B               	goto	u2225
  8259  0E2F  3001               	movlw	1
  8260  0E30  02F5               	subwf	___awmod@counter,f
  8261  0E31  1D03               	btfss	3,2
  8262  0E32  2E1E               	goto	l2016
  8263  0E33                     l2024:	
  8264  0E33  0876               	movf	___awmod@sign,w
  8265  0E34  1903               	btfsc	3,2
  8266  0E35  2E3B               	goto	l2028
  8267  0E36  09F2               	comf	___awmod@dividend,f
  8268  0E37  09F3               	comf	___awmod@dividend+1,f
  8269  0E38  0AF2               	incf	___awmod@dividend,f
  8270  0E39  1903               	skipnz
  8271  0E3A  0AF3               	incf	___awmod@dividend+1,f
  8272  0E3B                     l2028:	
  8273  0E3B  0873               	movf	___awmod@dividend+1,w
  8274  0E3C  00F1               	movwf	?___awmod+1
  8275  0E3D  0872               	movf	___awmod@dividend,w
  8276  0E3E  00F0               	movwf	?___awmod
  8277  0E3F  0008               	return
  8278  0E40                     __end_of___awmod:	
  8279                           
  8280                           	psect	text24
  8281  0E40                     __ptext24:	
  8282 ;; *************** function ___awdiv *****************
  8283 ;; Defined at:
  8284 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  divisor         2    0[COMMON] int 
  8287 ;;  dividend        2    2[COMMON] int 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;  quotient        2    7[COMMON] int 
  8290 ;;  sign            1    6[COMMON] unsigned char 
  8291 ;;  counter         1    5[COMMON] unsigned char 
  8292 ;; Return value:  Size  Location     Type
  8293 ;;                  2    0[COMMON] int 
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;Total ram usage:        9 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; This function calls:
  8308 ;;		Nothing
  8309 ;; This function is called by:
  8310 ;;		_LCDWriteInt
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           
  8315                           ;psect for function ___awdiv
  8316  0E40                     ___awdiv:	
  8317                           
  8318                           ;incstack = 0
  8319                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8320  0E40  01F6               	clrf	___awdiv@sign
  8321  0E41  1FF1               	btfss	___awdiv@divisor+1,7
  8322  0E42  2E4A               	goto	l1958
  8323  0E43  09F0               	comf	___awdiv@divisor,f
  8324  0E44  09F1               	comf	___awdiv@divisor+1,f
  8325  0E45  0AF0               	incf	___awdiv@divisor,f
  8326  0E46  1903               	skipnz
  8327  0E47  0AF1               	incf	___awdiv@divisor+1,f
  8328  0E48  01F6               	clrf	___awdiv@sign
  8329  0E49  0AF6               	incf	___awdiv@sign,f
  8330  0E4A                     l1958:	
  8331  0E4A  1FF3               	btfss	___awdiv@dividend+1,7
  8332  0E4B  2E55               	goto	l1964
  8333  0E4C  09F2               	comf	___awdiv@dividend,f
  8334  0E4D  09F3               	comf	___awdiv@dividend+1,f
  8335  0E4E  0AF2               	incf	___awdiv@dividend,f
  8336  0E4F  1903               	skipnz
  8337  0E50  0AF3               	incf	___awdiv@dividend+1,f
  8338  0E51  3001               	movlw	1
  8339  0E52  00F4               	movwf	??___awdiv
  8340  0E53  0874               	movf	??___awdiv,w
  8341  0E54  06F6               	xorwf	___awdiv@sign,f
  8342  0E55                     l1964:	
  8343  0E55  01F7               	clrf	___awdiv@quotient
  8344  0E56  01F8               	clrf	___awdiv@quotient+1
  8345  0E57  0870               	movf	___awdiv@divisor,w
  8346  0E58  0471               	iorwf	___awdiv@divisor+1,w
  8347  0E59  1903               	btfsc	3,2
  8348  0E5A  2E84               	goto	l1986
  8349  0E5B  01F5               	clrf	___awdiv@counter
  8350  0E5C  0AF5               	incf	___awdiv@counter,f
  8351  0E5D                     l1974:	
  8352  0E5D  1BF1               	btfsc	___awdiv@divisor+1,7
  8353  0E5E  2E69               	goto	l1976
  8354  0E5F  3001               	movlw	1
  8355  0E60                     u2095:	
  8356  0E60  35F0               	lslf	___awdiv@divisor,f
  8357  0E61  0DF1               	rlf	___awdiv@divisor+1,f
  8358  0E62  0B89               	decfsz	9,f
  8359  0E63  2E60               	goto	u2095
  8360  0E64  3001               	movlw	1
  8361  0E65  00F4               	movwf	??___awdiv
  8362  0E66  0874               	movf	??___awdiv,w
  8363  0E67  07F5               	addwf	___awdiv@counter,f
  8364  0E68  2E5D               	goto	l1974
  8365  0E69                     l1976:	
  8366  0E69  3001               	movlw	1
  8367  0E6A                     u2115:	
  8368  0E6A  35F7               	lslf	___awdiv@quotient,f
  8369  0E6B  0DF8               	rlf	___awdiv@quotient+1,f
  8370  0E6C  0B89               	decfsz	9,f
  8371  0E6D  2E6A               	goto	u2115
  8372  0E6E  0871               	movf	___awdiv@divisor+1,w
  8373  0E6F  0273               	subwf	___awdiv@dividend+1,w
  8374  0E70  1D03               	skipz
  8375  0E71  2E74               	goto	u2125
  8376  0E72  0870               	movf	___awdiv@divisor,w
  8377  0E73  0272               	subwf	___awdiv@dividend,w
  8378  0E74                     u2125:	
  8379  0E74  1C03               	skipc
  8380  0E75  2E7B               	goto	l1982
  8381  0E76  0870               	movf	___awdiv@divisor,w
  8382  0E77  02F2               	subwf	___awdiv@dividend,f
  8383  0E78  0871               	movf	___awdiv@divisor+1,w
  8384  0E79  3BF3               	subwfb	___awdiv@dividend+1,f
  8385  0E7A  1477               	bsf	___awdiv@quotient,0
  8386  0E7B                     l1982:	
  8387  0E7B  3001               	movlw	1
  8388  0E7C                     u2135:	
  8389  0E7C  36F1               	lsrf	___awdiv@divisor+1,f
  8390  0E7D  0CF0               	rrf	___awdiv@divisor,f
  8391  0E7E  0B89               	decfsz	9,f
  8392  0E7F  2E7C               	goto	u2135
  8393  0E80  3001               	movlw	1
  8394  0E81  02F5               	subwf	___awdiv@counter,f
  8395  0E82  1D03               	btfss	3,2
  8396  0E83  2E69               	goto	l1976
  8397  0E84                     l1986:	
  8398  0E84  0876               	movf	___awdiv@sign,w
  8399  0E85  1903               	btfsc	3,2
  8400  0E86  2E8C               	goto	l1990
  8401  0E87  09F7               	comf	___awdiv@quotient,f
  8402  0E88  09F8               	comf	___awdiv@quotient+1,f
  8403  0E89  0AF7               	incf	___awdiv@quotient,f
  8404  0E8A  1903               	skipnz
  8405  0E8B  0AF8               	incf	___awdiv@quotient+1,f
  8406  0E8C                     l1990:	
  8407  0E8C  0878               	movf	___awdiv@quotient+1,w
  8408  0E8D  00F1               	movwf	?___awdiv+1
  8409  0E8E  0877               	movf	___awdiv@quotient,w
  8410  0E8F  00F0               	movwf	?___awdiv
  8411  0E90  0008               	return
  8412  0E91                     __end_of___awdiv:	
  8413                           
  8414                           	psect	text25
  8415  0E91                     __ptext25:	
  8416 ;; *************** function _LCDWriteCharacter *****************
  8417 ;; Defined at:
  8418 ;;		line 140 in file "lcd.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  character       1    wreg     const unsigned char 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  character       1    9[COMMON] const unsigned char 
  8423 ;;  base            2   10[COMMON] unsigned int 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;Total ram usage:        6 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    1
  8440 ;; This function calls:
  8441 ;;		_LCDWrite
  8442 ;;		___wmul
  8443 ;; This function is called by:
  8444 ;;		_readButtons
  8445 ;;		_main
  8446 ;;		_LCDWriteInt
  8447 ;;		_LCDWriteString
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           
  8452                           ;psect for function _LCDWriteCharacter
  8453  0E91                     _LCDWriteCharacter:	
  8454                           
  8455                           ;incstack = 0
  8456                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8457                           ;LCDWriteCharacter@character stored from wreg
  8458  0E91  00F9               	movwf	LCDWriteCharacter@character
  8459                           
  8460                           ;lcd.c: 142: uint16_t base;
  8461                           ;lcd.c: 143: base = character - 32;
  8462  0E92  0879               	movf	LCDWriteCharacter@character,w
  8463  0E93  3EE0               	addlw	224
  8464  0E94  00FA               	movwf	LCDWriteCharacter@base
  8465  0E95  30FF               	movlw	255
  8466  0E96  1803               	skipnc
  8467  0E97  3000               	movlw	0
  8468  0E98  00FB               	movwf	LCDWriteCharacter@base+1
  8469                           
  8470                           ;lcd.c: 144: base *= 3;
  8471  0E99  3003               	movlw	3
  8472  0E9A  00F0               	movwf	___wmul@multiplier
  8473  0E9B  3000               	movlw	0
  8474  0E9C  00F1               	movwf	___wmul@multiplier+1
  8475  0E9D  087B               	movf	LCDWriteCharacter@base+1,w
  8476  0E9E  00F3               	movwf	___wmul@multiplicand+1
  8477  0E9F  087A               	movf	LCDWriteCharacter@base,w
  8478  0EA0  00F2               	movwf	___wmul@multiplicand
  8479  0EA1  318C  248D  318E   	fcall	___wmul
  8480  0EA4  0871               	movf	?___wmul+1,w
  8481  0EA5  00FB               	movwf	LCDWriteCharacter@base+1
  8482  0EA6  0870               	movf	?___wmul,w
  8483  0EA7  00FA               	movwf	LCDWriteCharacter@base
  8484                           
  8485                           ;lcd.c: 145: LCDWrite(1,fonts[base]);
  8486  0EA8  087B               	movf	LCDWriteCharacter@base+1,w
  8487  0EA9  0085               	movwf	5
  8488  0EAA  087A               	movf	LCDWriteCharacter@base,w
  8489  0EAB  0084               	movwf	4
  8490  0EAC  3000               	movlw	low (_fonts| (0+32768))
  8491  0EAD  0784               	addwf	4,f
  8492  0EAE  3088               	movlw	high (_fonts| (0+32768))
  8493  0EAF  3D85               	addwfc	5,f
  8494  0EB0  0800               	movf	0,w	;code access
  8495  0EB1  00F6               	movwf	??_LCDWriteCharacter
  8496  0EB2  0876               	movf	??_LCDWriteCharacter,w
  8497  0EB3  00F0               	movwf	LCDWrite@data
  8498  0EB4  3001               	movlw	1
  8499  0EB5  318D  2508  318E   	fcall	_LCDWrite
  8500                           
  8501                           ;lcd.c: 146: LCDWrite(1,fonts[base + 1]);
  8502  0EB8  087A               	movf	LCDWriteCharacter@base,w
  8503  0EB9  3E01               	addlw	1
  8504  0EBA  00F6               	movwf	??_LCDWriteCharacter
  8505  0EBB  3000               	movlw	0
  8506  0EBC  3D7B               	addwfc	LCDWriteCharacter@base+1,w
  8507  0EBD  00F7               	movwf	??_LCDWriteCharacter+1
  8508  0EBE  3000               	movlw	low (_fonts| (0+32768))
  8509  0EBF  0776               	addwf	??_LCDWriteCharacter,w
  8510  0EC0  0084               	movwf	4
  8511  0EC1  3088               	movlw	high (_fonts| (0+32768))
  8512  0EC2  3D77               	addwfc	??_LCDWriteCharacter+1,w
  8513  0EC3  0085               	movwf	5
  8514  0EC4  0800               	movf	0,w	;code access
  8515  0EC5  00F8               	movwf	??_LCDWriteCharacter+2
  8516  0EC6  0878               	movf	??_LCDWriteCharacter+2,w
  8517  0EC7  00F0               	movwf	LCDWrite@data
  8518  0EC8  3001               	movlw	1
  8519  0EC9  318D  2508  318E   	fcall	_LCDWrite
  8520                           
  8521                           ;lcd.c: 147: LCDWrite(1,fonts[base + 2]);
  8522  0ECC  087A               	movf	LCDWriteCharacter@base,w
  8523  0ECD  3E02               	addlw	2
  8524  0ECE  00F6               	movwf	??_LCDWriteCharacter
  8525  0ECF  3000               	movlw	0
  8526  0ED0  3D7B               	addwfc	LCDWriteCharacter@base+1,w
  8527  0ED1  00F7               	movwf	??_LCDWriteCharacter+1
  8528  0ED2  3000               	movlw	low (_fonts| (0+32768))
  8529  0ED3  0776               	addwf	??_LCDWriteCharacter,w
  8530  0ED4  0084               	movwf	4
  8531  0ED5  3088               	movlw	high (_fonts| (0+32768))
  8532  0ED6  3D77               	addwfc	??_LCDWriteCharacter+1,w
  8533  0ED7  0085               	movwf	5
  8534  0ED8  0800               	movf	0,w	;code access
  8535  0ED9  00F8               	movwf	??_LCDWriteCharacter+2
  8536  0EDA  0878               	movf	??_LCDWriteCharacter+2,w
  8537  0EDB  00F0               	movwf	LCDWrite@data
  8538  0EDC  3001               	movlw	1
  8539  0EDD  318D  2508  318E   	fcall	_LCDWrite
  8540                           
  8541                           ;lcd.c: 148: LCDWrite(1, 0x00);
  8542  0EE0  01F0               	clrf	LCDWrite@data
  8543  0EE1  3001               	movlw	1
  8544  0EE2  318D  2508         	fcall	_LCDWrite
  8545  0EE4  0008               	return
  8546  0EE5                     __end_of_LCDWriteCharacter:	
  8547                           
  8548                           	psect	text26
  8549  0C8D                     __ptext26:	
  8550 ;; *************** function ___wmul *****************
  8551 ;; Defined at:
  8552 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;  multiplier      2    0[COMMON] unsigned int 
  8555 ;;  multiplicand    2    2[COMMON] unsigned int 
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  product         2    4[COMMON] unsigned int 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  2    0[COMMON] unsigned int 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8571 ;;Total ram usage:        6 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; This function calls:
  8574 ;;		Nothing
  8575 ;; This function is called by:
  8576 ;;		_LCDWriteCharacter
  8577 ;;		_eval_poly
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           
  8582                           ;psect for function ___wmul
  8583  0C8D                     ___wmul:	
  8584                           
  8585                           ;incstack = 0
  8586                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8587  0C8D  01F4               	clrf	___wmul@product
  8588  0C8E  01F5               	clrf	___wmul@product+1
  8589  0C8F                     l1708:	
  8590  0C8F  1C70               	btfss	___wmul@multiplier,0
  8591  0C90  2C95               	goto	l340
  8592  0C91  0872               	movf	___wmul@multiplicand,w
  8593  0C92  07F4               	addwf	___wmul@product,f
  8594  0C93  0873               	movf	___wmul@multiplicand+1,w
  8595  0C94  3DF5               	addwfc	___wmul@product+1,f
  8596  0C95                     l340:	
  8597  0C95  3001               	movlw	1
  8598  0C96                     u1645:	
  8599  0C96  35F2               	lslf	___wmul@multiplicand,f
  8600  0C97  0DF3               	rlf	___wmul@multiplicand+1,f
  8601  0C98  0B89               	decfsz	9,f
  8602  0C99  2C96               	goto	u1645
  8603  0C9A  3001               	movlw	1
  8604  0C9B                     u1655:	
  8605  0C9B  36F1               	lsrf	___wmul@multiplier+1,f
  8606  0C9C  0CF0               	rrf	___wmul@multiplier,f
  8607  0C9D  0B89               	decfsz	9,f
  8608  0C9E  2C9B               	goto	u1655
  8609  0C9F  0870               	movf	___wmul@multiplier,w
  8610  0CA0  0471               	iorwf	___wmul@multiplier+1,w
  8611  0CA1  1D03               	btfss	3,2
  8612  0CA2  2C8F               	goto	l1708
  8613  0CA3  0875               	movf	___wmul@product+1,w
  8614  0CA4  00F1               	movwf	?___wmul+1
  8615  0CA5  0874               	movf	___wmul@product,w
  8616  0CA6  00F0               	movwf	?___wmul
  8617  0CA7  0008               	return
  8618  0CA8                     __end_of___wmul:	
  8619                           
  8620                           	psect	text27
  8621  0D08                     __ptext27:	
  8622 ;; *************** function _LCDWrite *****************
  8623 ;; Defined at:
  8624 ;;		line 280 in file "lcd.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  data_or_comm    1    wreg     unsigned char 
  8627 ;;  data            1    0[COMMON] unsigned char 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  data_or_comm    1    2[COMMON] unsigned char 
  8630 ;;  i               1    4[COMMON] unsigned char 
  8631 ;;  d               1    3[COMMON] unsigned char 
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, status,2, status,0
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8641 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8642 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8644 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;Total ram usage:        5 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; This function calls:
  8648 ;;		Nothing
  8649 ;; This function is called by:
  8650 ;;		_gotoXY
  8651 ;;		_LCDWriteCharacter
  8652 ;;		_LCDClear
  8653 ;;		_LCDInit
  8654 ;;		_LCDBitmap
  8655 ;;		_LCDDrawBox
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           
  8660                           ;psect for function _LCDWrite
  8661  0D08                     _LCDWrite:	
  8662                           
  8663                           ;incstack = 0
  8664                           ; Regs used in _LCDWrite: [wreg+status,2+status,0]
  8665                           ;LCDWrite@data_or_command stored from wreg
  8666  0D08  00F2               	movwf	LCDWrite@data_or_command
  8667                           
  8668                           ;lcd.c: 282: uint8_t i,d;
  8669                           ;lcd.c: 284: d=data;
  8670  0D09  0870               	movf	LCDWrite@data,w
  8671  0D0A  00F1               	movwf	??_LCDWrite
  8672  0D0B  0871               	movf	??_LCDWrite,w
  8673  0D0C  00F3               	movwf	LCDWrite@d
  8674                           
  8675                           ;lcd.c: 286: if(data_or_command == 0)
  8676  0D0D  0872               	movf	LCDWrite@data_or_command,w
  8677  0D0E  1D03               	btfss	3,2
  8678  0D0F  2D13               	goto	l242
  8679                           
  8680                           ;lcd.c: 287: {
  8681                           ;lcd.c: 288: LATCbits.LATC3 = 0;
  8682  0D10  0020               	movlb	0	; select bank0
  8683  0D11  1198               	bcf	24,3	;volatile
  8684                           
  8685                           ;lcd.c: 289: }
  8686  0D12  2D15               	goto	l243
  8687  0D13                     l242:	
  8688                           
  8689                           ;lcd.c: 290: else
  8690                           ;lcd.c: 291: {
  8691                           ;lcd.c: 292: LATCbits.LATC3 = 1;
  8692  0D13  0020               	movlb	0	; select bank0
  8693  0D14  1598               	bsf	24,3	;volatile
  8694  0D15                     l243:	
  8695                           
  8696                           ;lcd.c: 293: }
  8697                           ;lcd.c: 295: LATCbits.LATC7 = 0;
  8698  0D15  1398               	bcf	24,7	;volatile
  8699                           
  8700                           ;lcd.c: 297: for(i=0;i<8;i++)
  8701  0D16  01F4               	clrf	LCDWrite@i
  8702  0D17  3008               	movlw	8
  8703  0D18  0274               	subwf	LCDWrite@i,w
  8704  0D19  1803               	btfsc	3,0
  8705  0D1A  2D2B               	goto	l245
  8706  0D1B                     l244:	
  8707                           
  8708                           ;lcd.c: 298: {
  8709                           ;lcd.c: 299: LATCbits.LATC4 = 0;
  8710  0D1B  1218               	bcf	24,4	;volatile
  8711                           
  8712                           ;lcd.c: 301: if(d&0x80)
  8713  0D1C  1FF3               	btfss	LCDWrite@d,7
  8714  0D1D  2D1F               	goto	l246
  8715                           
  8716                           ;lcd.c: 302: {
  8717                           ;lcd.c: 303: LATCbits.LATC4 = 1;
  8718  0D1E  1618               	bsf	24,4	;volatile
  8719  0D1F                     l246:	
  8720                           
  8721                           ;lcd.c: 304: }
  8722                           ;lcd.c: 306: LATCbits.LATC5 = 1;
  8723  0D1F  1698               	bsf	24,5	;volatile
  8724                           
  8725                           ;lcd.c: 308: d<<=1;
  8726  0D20  1003               	clrc
  8727  0D21  0DF3               	rlf	LCDWrite@d,f
  8728                           
  8729                           ;lcd.c: 310: LATCbits.LATC5=0;
  8730  0D22  1298               	bcf	24,5	;volatile
  8731  0D23  3001               	movlw	1
  8732  0D24  00F1               	movwf	??_LCDWrite
  8733  0D25  0871               	movf	??_LCDWrite,w
  8734  0D26  07F4               	addwf	LCDWrite@i,f
  8735  0D27  3008               	movlw	8
  8736  0D28  0274               	subwf	LCDWrite@i,w
  8737  0D29  1C03               	skipc
  8738  0D2A  2D1B               	goto	l244
  8739  0D2B                     l245:	
  8740                           
  8741                           ;lcd.c: 311: }
  8742                           ;lcd.c: 313: LATCbits.LATC7 = 1;
  8743  0D2B  1798               	bsf	24,7	;volatile
  8744  0D2C  0008               	return
  8745  0D2D                     __end_of_LCDWrite:	
  8746                           
  8747                           	psect	text28
  8748  0C40                     __ptext28:	
  8749 ;; *************** function _ADCC_GetSingleConversion *****************
  8750 ;; Defined at:
  8751 ;;		line 52 in file "adcc.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  channel         1    wreg     enum E14259
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  channel         1    3[COMMON] enum E14259
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  2    0[COMMON] unsigned int 
  8758 ;; Registers used:
  8759 ;;		wreg
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8765 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;Total ram usage:        4 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_main
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           
  8779                           ;psect for function _ADCC_GetSingleConversion
  8780  0C40                     _ADCC_GetSingleConversion:	
  8781                           
  8782                           ;incstack = 0
  8783                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  8784                           ;ADCC_GetSingleConversion@channel stored from wreg
  8785  0C40  00F3               	movwf	ADCC_GetSingleConversion@channel
  8786                           
  8787                           ;adcc.c: 55: ADPCH = channel;
  8788  0C41  0873               	movf	ADCC_GetSingleConversion@channel,w
  8789  0C42  0021               	movlb	1	; select bank1
  8790  0C43  009E               	movwf	30	;volatile
  8791                           
  8792                           ;adcc.c: 58: ADCON0bits.ADON = 1;
  8793  0C44  1793               	bsf	19,7	;volatile
  8794                           
  8795                           ;adcc.c: 61: ADCON0bits.ADCONT = 0;
  8796  0C45  1313               	bcf	19,6	;volatile
  8797                           
  8798                           ;adcc.c: 64: ADCON0bits.ADGO = 1;
  8799  0C46  1413               	bsf	19,0	;volatile
  8800  0C47                     l50:	
  8801                           ;adcc.c: 68: {
  8802                           
  8803                           ;adcc.c: 67: while (ADCON0bits.ADGO)
  8804                           
  8805  0C47  1813               	btfsc	19,0	;volatile
  8806  0C48  2C47               	goto	l50
  8807                           
  8808                           ;adcc.c: 69: }
  8809                           ;adcc.c: 72: return ((ADRESH << 8) + ADRESL);
  8810  0C49  080D               	movf	13,w	;volatile
  8811  0C4A  00F1               	movwf	?_ADCC_GetSingleConversion+1
  8812  0C4B  080C               	movf	12,w	;volatile
  8813  0C4C  00F0               	movwf	?_ADCC_GetSingleConversion
  8814  0C4D  0008               	return
  8815  0C4E                     __end_of_ADCC_GetSingleConversion:	
  8816  007E                     btemp	set	126	;btemp
  8817  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    330
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      79
    BANK1            80     25      34
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           28      0       0
    BANK12            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 27
		 -> log@coeff(CODE[27]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _main->_readButtons
    _readButtons->_LCDWriteCharacter
    _log->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___lwtoft->___ftpack
    ___ftadd->___awtoft
    _SYSTEM_Initialize->_LCDClear
    _LCDInit->_LCDWrite
    _LCDClear->_gotoXY
    _gotoXY->_LCDWrite
    _LCDWriteInt->___fttol
    _LCDWriteCharacter->___wmul

Critical Paths under _main in BANK0

    _main->_log
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   45217
                                             61 BANK0     14    14      0
                                              0 BANK1     25    25      0
           _ADCC_GetSingleConversion
                  _LCDWriteCharacter
                        _LCDWriteInt
                  _SYSTEM_Initialize
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
                           ___lwtoft
                             _gotoXY
                                _log
                        _readButtons
 ---------------------------------------------------------------------------------
 (1) _readButtons                                          2     2      0    4240
                                             12 COMMON     2     2      0
                           _LCDClear
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (1) _log                                                  6     3      3   15567
                                             55 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _frexp                                                6     2      4     330
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _eval_poly                                           10     3      7    6757
                                             45 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2682
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     322
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1890
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1821
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     358
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___ftsub                                              6     0      6    3501
                                             45 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3328
                                             32 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2662
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0    3741
                                             11 COMMON     1     1      0
                    _ADCC_Initialize
                           _LCDClear
                            _LCDInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCDInit                                              1     1      0    1068
                                              5 COMMON     1     1      0
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _LCDClear                                             3     3      0    2650
                                              8 COMMON     3     3      0
                           _LCDWrite
                             _gotoXY
 ---------------------------------------------------------------------------------
 (3) _gotoXY                                               3     2      1    1536
                                              5 COMMON     3     2      1
                           _LCDWrite
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         19    14      5    3323
                                              0 BANK0     19    14      5
                  _LCDWriteCharacter
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCDWriteCharacter                                    6     6      0    1590
                                              6 COMMON     6     6      0
                           _LCDWrite
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     410
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _LCDWrite                                             5     4      1    1068
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LCDWriteCharacter
     _LCDWrite
     ___wmul
   _LCDWriteInt
     _LCDWriteCharacter
       _LCDWrite
       ___wmul
     ___awdiv
     ___awmod
     ___fttol (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDInit
       _LCDWrite
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___aldiv
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     ___wmul (ARG)
     _frexp (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     _frexp (ARG)
   ___ftsub
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
   ___fttol
   ___lwtoft
     ___ftpack
   _gotoXY
     _LCDWrite
   _log
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       ___wmul (ARG)
       _frexp (ARG)
     ___ftge
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     _eval_poly
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___wmul
     _frexp
   _readButtons
     _LCDClear
       _LCDWrite
       _gotoXY
         _LCDWrite
     _LCDWriteCharacter
       _LCDWrite
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      22       7       42.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              1C      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Nov 03 13:58:17 2017

                                _x 006B             LCDWriteInt@fieldLength 0022  
                      __CFG_CP$OFF 0000                                 l50 0C47  
                               l80 0F1B                       ___awdiv@sign 0076  
              ___wmul@multiplicand 0072                       ___ftadd@exp1 004C  
                     ___ftadd@exp2 004B                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 004A                                l242 0D13  
                              l243 0D15                                l244 0D1B  
                              l340 0C95                                l245 0D2B  
                              l501 0FCE                                l246 0D1F  
                              l508 0FE1                                l532 04BF  
                              l509 0FE9                      LCDClear@index 0079  
                              l395 0051                                l592 012E  
                              _GIE 005F                                _RA3 0063  
                              _RA4 0064                       __CFG_CPD$OFF 0000  
                              _log 01F1                       ___awmod@sign 0076  
                     __CFG_BORV$LO 0000                                wreg 0009  
                  __end_of_LCDInit 0DC0                       ?_LCDWriteInt 0020  
                     __CFG_ZCD$OFF 0000                       ___ftdiv@cntr 003A  
                     ___ftdiv@sign 003F                               l2002 0E05  
                             l2020 0E2A                               l2014 0E12  
                             l2006 0E0C                               l2016 0E1E  
                             l2024 0E33                               l2040 0CD0  
                             l2202 0377                               l2028 0E3B  
                             l2220 03B5                               l2212 037E  
                             l2052 0DEC                               l2108 0EE6  
                             l2132 0F16                               l2230 03D1  
                             l2222 03BD                               l2214 03AD  
                             l2142 0F2A                               l2232 03FD  
                             l2224 03CD                               l2048 0DD6  
                             l2072 0017                               l2152 0F3A  
                             l2144 0F2B                               l2218 03B1  
                             l2250 0062                               l2314 01CF  
                             l2306 01B6                               l2090 0F95  
                             l2402 05EA                               l2236 040B  
                             l2260 0080                               l2180 0223  
                             l2326 0CB0                               l2174 0210  
                             l2272 00AB                               l2336 00DA  
                             l2258 0072                               l1730 044F  
                             l2362 0125                               l2354 010A  
                             l1802 02CE                               l2434 07A2  
                             l1708 0C8F                               l2276 00B9  
                             l2268 00A0                               l2292 0175  
                             l2364 0131                               l2356 0118  
                             l2452 07E0                               l2286 015F  
                             l1726 0448                               l1830 032D  
                             l1814 0309                               l1680 0FAB  
                             l1760 049E                               l1736 045E  
                             l2368 013F                               l1690 0FD3  
                             l1682 0FB5                               l1754 048B  
                             l1826 0325                               l1818 0311  
                             l1692 0FDB                               l1684 0FBA  
                             l1676 0FA4                               l1772 04D1  
                             l1756 0495                               l1748 0478  
                             l2388 0529                               l1766 04B1  
                             l1758 049A                               l1776 04E3  
                             l1768 04BB                               l1786 04FE  
                             l1964 0E55                               l1796 02B8  
                             l1990 0E8C                               l1982 0E7B  
                             l1974 0E5D                               l1958 0E4A  
                             l1894 0D4E                               l1976 0E69  
                             l1888 0D3A                               l1986 0E84  
                             ?_log 0057                               u2005 0334  
                             u2040 0D83                               u2025 0D38  
                             u2115 0E6A                               u2035 0D4C  
                             u2125 0E74                               _LATA 0016  
                             _LATB 0017                               u2135 0E7C  
                             u2215 0E24                               _LATC 0018  
                             u2225 0E2B                               u2420 0360  
                             u2095 0E60                               u1615 0FF0  
                             u1535 0FB0                               u2195 0E15  
                             u1555 0FC9                               u1645 0C96  
                             u1655 0C9B                               u1575 0FD6  
                             u2545 0075                               u1825 049F  
                      main@counter 00AA                               u2635 0187  
                             u2715 00E1                               u2485 03EB  
                             u2565 0081                               u2645 0197  
                             u1765 0479                               u1925 02DA  
                             u2575 0095                               u2655 01B7  
                             u1855 04B2                               u1935 02EA  
                             u2585 00A1                               u2665 01C6  
                             u2745 010B                               u2675 01D0  
                             u1795 048C                               u1955 0312  
                             u1965 0318                               u2775 0126  
                             u2937 0F0A                               u2947 0CF7  
                             u1995 032E                               u2957 0D02  
                             _WPUA 0F39                               _WPUB 0F44  
                             _WPUC 0F4F                               _WPUE 0F65  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                      main@minutes 00A2                        main@seconds 00A0  
                             _main 0516                       ___ftpack@arg 0070  
                     ___ftpack@exp 0073                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             log@x 0057                               start 0002  
                    __CFG_CSWEN$ON 0000                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                       ___ftmul@sign 002F  
                 __end_of_LCDClear 0D53                       ___fttol@exp1 007D  
                            ??_log 005A                       ___fttol@lval 0079  
                     ?_readButtons 0070     __size_of_OSCILLATOR_Initialize 0008  
                 __end_of_LCDWrite 0D2D      __end_of_OSCILLATOR_Initialize 0C34  
                  __end_of___aldiv 00C2                              _ADACQ 009D  
                            _ADACT 0099                              _ADCAP 009B  
                            ?_main 0070                              _ADCLK 0098  
                            _ADPCH 009E                              _ADREF 009A  
                  __end_of___awdiv 0E91                              _ADPRE 009C  
                  __end_of___ftadd 0516                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0E40                              _ADRPT 010D  
                  __end_of___ftdiv 01F1                    __end_of___ftmul 0355  
                  ___awdiv@divisor 0070                    __end_of___ftsub 0CC6  
                  __end_of___fttol 0148                main@readTemperature 00AC  
                  ___awdiv@counter 0075                              _OSCEN 0891  
                            _TRISA 0011                              _TRISB 0012  
                            _TRISC 0013                      ___awtoft@sign 007D  
                            _frexp 0005                              _fonts 0800  
                            _errno 00BE                      ___ftpack@sign 0074  
                            main@R 00A4                     __CFG_BOREN$OFF 0000  
                            status 0003                              wtemp0 007E  
                  __initialization 07E4                        log@exponent 005B  
                     __end_of_main 07E4                             ??_main 005D  
                    ___fttol@sign1 0078                          ??_LCDInit 0075  
          LCDWrite@data_or_command 0072                             _ADCON0 0093  
                           _ADCON1 0094                             _ADCON2 0095  
                           _ADCON3 0096                             ?_frexp 0070  
                           _ADLTHH 010F                             _ADLTHL 010E  
                           _ADRESH 008D                             _ADRESL 008C  
                           _ADSTAT 0097                             _ADUTHH 0111  
                 ___awdiv@dividend 0072                             _ADUTHL 0110  
                 __end_of___awtoft 0CE6                             _ANSELA 0F38  
                           _ANSELB 0F43                             _ANSELC 0F4E  
                 __end_of___ftpack 1000                 __CFG_RSTOSC$HFINT1 0000  
                           _RA1PPS 0F11                     __CFG_WDTCCS$SC 0000  
                           _FVRCON 090C                   __end_of___lwtoft 0C74  
                           _OSCFRQ 0893                     __CFG_PWRTE$OFF 0000  
                           ___ftge 0DC0                          ??___aldiv 0078  
                           ___wmul 0C8D                          ??___awdiv 0074  
                        ??___ftadd 0046                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___ftdiv 0036  
                        ??___ftmul 0026                          ??___ftsub 007E  
                        ??___fttol 0074                             _gotoXY 0C4E  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  ___awmod@counter 0075              ___ftmul@f3_as_product 002B  
                  _ADCC_Initialize 0C74                       LCDWrite@data 0070  
                     LCDWriteInt@i 0031                       LCDWriteInt@j 002F  
__size_of_ADCC_GetSingleConversion 000E          ?_ADCC_GetSingleConversion 0070  
                    main@steinhart 00B6                          ?_LCDClear 0070  
                _SYSTEM_Initialize 0CE6               __size_of_LCDWriteInt 00CB  
                 __end_oflog@coeff 094A            __end_of__initialization 07FD  
                       ___ftadd@f1 0040                         ___ftadd@f2 0043  
                       ___ftge@ff1 0070                         ___ftge@ff2 0073  
                        ?_LCDWrite 0070                 ?_SYSTEM_Initialize 0070  
                     eval_poly@res 0054                         ___ftdiv@f1 0033  
                       ___ftdiv@f2 0030                         ___ftdiv@f3 003B  
                       ___awtoft@c 0078                         ___ftmul@f1 0020  
                       ___ftmul@f2 0023                         ___ftsub@f1 0050  
                       ___ftsub@f2 004D                         ___fttol@f1 0070  
                   __pcstackCOMMON 0070                ??_SYSTEM_Initialize 007B  
                    __end_of_frexp 0040                      __end_of_fonts 092F  
                        LCDWrite@d 0073                          LCDWrite@i 0074  
                       ___lwtoft@c 0078               __size_of_readButtons 0057  
                LCDWriteInt@F14368 00B9                            ??_frexp 0074  
        __end_of_SYSTEM_Initialize 0D08                         __pbssBANK0 006B  
                       __pbssBANK1 00B9                 __size_of_eval_poly 0060  
                       ??_LCDClear 0078                         ??_LCDWrite 0071  
                       __pmaintext 0516                            ?___ftge 0070  
                          ?___wmul 0070                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 0C8D                            ?_gotoXY 0075  
                        ?___awtoft 0078                          ?___ftpack 0070  
                          _ADSTPTH 0113                            _ADSTPTL 0112  
                        ?___lwtoft 0078                            _LCDInit 0D85  
                          _OSCCON1 088D                            _OSCCON3 088F  
                          _OSCTUNE 0892                            _PPSLOCK 0E8F  
             __CFG_SCANE$available 0000                            ___aldiv 0040  
                  __size_of___ftge 003B                            ___awdiv 0E40  
                          ___ftadd 0420                            ___awmod 0DFB  
                          ___ftdiv 0148                    __size_of___wmul 001B  
                          ___ftmul 02A1                            ___ftsub 0CA8  
                          ___fttol 00C2                    __size_of_gotoXY 0013  
                       ??___awtoft 007B                         ??___ftpack 0075  
                __end_of_eval_poly 0F9C                            __ptext1 0EE5  
                          __ptext2 01F1                            __ptext3 0005  
                          __ptext4 0F3C                            __ptext5 02A1  
                          __ptext6 0DC0                            __ptext7 0CC6  
                          __ptext8 0C61                            __ptext9 00C2  
                       ??___lwtoft 007B              _OSCILLATOR_Initialize 0C2C  
                     __size_of_log 00B0                   ___awmod@dividend 0072  
                 ___aldiv@dividend 0074           ??_PIN_MANAGER_Initialize 0070  
                          _upCount 006D                            _samples 238C  
       __size_of_SYSTEM_Initialize 0022                            clrloop0 0C35  
             end_of_initialization 07FD              LCDWriteCharacter@base 007A  
                          gotoXY@x 0077                            gotoXY@y 0075  
                 ___aldiv@quotient 0022                       __pstringtext 0800  
                 ?_ADCC_Initialize 0070   __end_of_ADCC_GetSingleConversion 0C4E  
                _LCDWriteCharacter 0E91              __CFG_WDTCPS$WDTCPS_31 0000  
               ?_LCDWriteCharacter 0070                          _TRISCbits 0013  
              ??_LCDWriteCharacter 0076                   __CFG_FEXTOSC$OFF 0000  
                      ___ftdiv@exp 003E                  __size_of_LCDClear 0026  
       LCDWriteCharacter@character 0079                         main@toggle 00AE  
                       main@totals 00B2                  __size_of_LCDWrite 0025  
                      ___ftmul@exp 002A          __end_of_LCDWriteCharacter 0EE5  
                   __end_of___ftge 0DFB                     __end_of___wmul 0CA8  
                   __end_of_gotoXY 0C61             ?_OSCILLATOR_Initialize 0070  
              start_initialization 07E4                         eval_poly@d 0050  
                       eval_poly@n 0052                         eval_poly@x 004D  
  __size_of_PIN_MANAGER_Initialize 0032                        __end_of_log 02A1  
                    ??_LCDWriteInt 0025                         frexp@value 0070  
                 __CFG_LPBOREN$OFF 0000                           ??___ftge 0076  
                         ??___wmul 0074                      ??_readButtons 007C  
                         ??_gotoXY 0076                  __size_of___awtoft 0020  
                         ?_LCDInit 0070           _ADCC_GetSingleConversion 0C40  
                __size_of___ftpack 0064                        __pbssBIGRAM 238C  
                        ___latbits 0002                  __size_of___lwtoft 0013  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
              __end_of_LCDWriteInt 0420             _PIN_MANAGER_Initialize 0D53  
       __size_of_LCDWriteCharacter 0054                           ?___aldiv 0070  
  ADCC_GetSingleConversion@channel 0073                           ?___awdiv 0070  
                         ?___ftadd 0040                           ?___awmod 0070  
                         ?___ftdiv 0030                           ?___ftmul 0020  
                         ?___ftsub 004D                           ?___fttol 0070  
                 LCDWriteInt@value 0020                    main@displayTemp 00AF  
                        _downCount 006E                          _eval_poly 0F3C  
              __end_of_readButtons 0F3C                     __size_of_frexp 003B  
                         _LCDClear 0D2D                    ___aldiv@divisor 0070  
                  ___aldiv@counter 0020                     ___wmul@product 0074  
                         _LATCbits 0018                           _LCDWrite 0D08  
                        clear_ram0 0C34                           _PIE0bits 0716  
                       _ADCON0bits 0093                  ___wmul@multiplier 0070  
                       ?_eval_poly 004D                   __size_of_LCDInit 003B  
                      _LCDWriteInt 0355                          frexp@eptr 0073  
          ??_OSCILLATOR_Initialize 0070               LCDWriteInt@numPlaces 0023  
                 __size_of___aldiv 0082                   __size_of___awdiv 0051  
                 __size_of___ftadd 00F6                   __size_of___awmod 0045  
                 __size_of___ftdiv 00A9                   __size_of___ftmul 00B4  
                 __size_of___ftsub 001E                   __size_of___fttol 0086  
                      _readButtons 0EE5                           ___awtoft 0CC6  
                         ___ftpack 0F9C                           ___lwtoft 0C61  
         __size_of_ADCC_Initialize 0019                    main@sampleIndex 00C0  
                         _main$863 00A7                           __ptext10 0CA8  
                         __ptext11 0420                           __ptext20 0C4E  
                         __ptext12 0148                           __ptext21 0C74  
                         __ptext13 0F9C                           __ptext22 0355  
                         __ptext14 0040                           __ptext23 0DFB  
                         __ptext15 0CE6                           __ptext24 0E40  
                         __ptext16 0D53                           __ptext25 0E91  
                         __ptext17 0C2C                           __ptext26 0C8D  
                         __ptext18 0D85                           __ptext27 0D08  
                         __ptext19 0D2D                           __ptext28 0C40  
                  LCDWriteInt@sign 0024                      __size_of_main 02CE  
             __CFG_WDTCWS$WDTCWS_7 0000         ??_ADCC_GetSingleConversion 0073  
      PIN_MANAGER_Initialize@state 0070                           log@coeff 092F  
                      ??_eval_poly 007E                     LCDWriteInt@str 002A  
          ?_PIN_MANAGER_Initialize 0070                  __CFG_CLKOUTEN$OFF 0000  
                      _PPSLOCKbits 0E8F                       ___aldiv@sign 0021  
   __end_of_PIN_MANAGER_Initialize 0D85                  ??_ADCC_Initialize 0070  
                      _toggleCount 006C  
