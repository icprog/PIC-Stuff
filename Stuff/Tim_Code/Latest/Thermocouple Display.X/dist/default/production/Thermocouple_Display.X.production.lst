

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Mar 14 09:58:44 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F726
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0089                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0096                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009F                     	;# 
   100  0108                     	;# 
   101  0109                     	;# 
   102  010C                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  0185                     	;# 
   109  0186                     	;# 
   110  018C                     	;# 
   111                           
   112                           	psect	idataBANK0
   113  0003                     __pidataBANK0:	
   114                           
   115                           ;initializer for display_temps_to_screen@F1446
   116  0003  3453               	retlw	83
   117  0004  3431               	retlw	49
   118  0005  3420               	retlw	32
   119  0006  343D               	retlw	61
   120  0007  3420               	retlw	32
   121  0008  3400               	retlw	0
   122                           
   123                           	psect	idataBANK1
   124  086B                     __pidataBANK1:	
   125                           
   126                           ;initializer for display_temps_to_screen@F1449
   127  086B  3453               	retlw	83
   128  086C  3432               	retlw	50
   129  086D  3420               	retlw	32
   130  086E  343D               	retlw	61
   131  086F  3420               	retlw	32
   132  0870  3400               	retlw	0
   133                           
   134                           	psect	idataBANK2
   135  0A3D                     __pidataBANK2:	
   136                           
   137                           ;initializer for display_temps_to_screen@F1467
   138  0A3D  3446               	retlw	70
   139  0A3E  3441               	retlw	65
   140  0A3F  3455               	retlw	85
   141  0A40  344C               	retlw	76
   142  0A41  3454               	retlw	84
   143  0A42  3420               	retlw	32
   144  0A43  3420               	retlw	32
   145  0A44  3420               	retlw	32
   146  0A45  3420               	retlw	32
   147  0A46  3420               	retlw	32
   148  0A47  3420               	retlw	32
   149  0A48  3420               	retlw	32
   150  0A49  3420               	retlw	32
   151  0A4A  3420               	retlw	32
   152  0A4B  3400               	retlw	0
   153                           
   154                           ;initializer for String_test@F1406
   155  0A4C  3454               	retlw	84
   156  0A4D  3469               	retlw	105
   157  0A4E  346D               	retlw	109
   158  0A4F  3427               	retlw	39
   159  0A50  3473               	retlw	115
   160  0A51  3420               	retlw	32
   161  0A52  3453               	retlw	83
   162  0A53  3474               	retlw	116
   163  0A54  3472               	retlw	114
   164  0A55  3469               	retlw	105
   165  0A56  346E               	retlw	110
   166  0A57  3467               	retlw	103
   167  0A58  3400               	retlw	0
   168                           
   169                           ;initializer for display_temps_to_screen@F1458
   170  0A59  344F               	retlw	79
   171  0A5A  3450               	retlw	80
   172  0A5B  3445               	retlw	69
   173  0A5C  344E               	retlw	78
   174  0A5D  3420               	retlw	32
   175  0A5E  3420               	retlw	32
   176  0A5F  3420               	retlw	32
   177  0A60  3420               	retlw	32
   178  0A61  3420               	retlw	32
   179  0A62  3420               	retlw	32
   180  0A63  3420               	retlw	32
   181  0A64  3420               	retlw	32
   182  0A65  3400               	retlw	0
   183                           
   184                           ;initializer for display_temps_to_screen@F1455
   185  0A66  3420               	retlw	32
   186  0A67  3443               	retlw	67
   187  0A68  3465               	retlw	101
   188  0A69  346C               	retlw	108
   189  0A6A  3473               	retlw	115
   190  0A6B  3469               	retlw	105
   191  0A6C  3475               	retlw	117
   192  0A6D  3473               	retlw	115
   193  0A6E  3420               	retlw	32
   194  0A6F  3420               	retlw	32
   195  0A70  3420               	retlw	32
   196  0A71  3400               	retlw	0
   197                           
   198                           ;initializer for display_temps_to_screen@F1461
   199  0A72  3453               	retlw	83
   200  0A73  3448               	retlw	72
   201  0A74  344F               	retlw	79
   202  0A75  3452               	retlw	82
   203  0A76  3454               	retlw	84
   204  0A77  3420               	retlw	32
   205  0A78  3456               	retlw	86
   206  0A79  3443               	retlw	67
   207  0A7A  3443               	retlw	67
   208  0A7B  3420               	retlw	32
   209  0A7C  3400               	retlw	0
   210                           
   211                           ;initializer for display_temps_to_screen@F1464
   212  0A7D  3453               	retlw	83
   213  0A7E  3448               	retlw	72
   214  0A7F  344F               	retlw	79
   215  0A80  3452               	retlw	82
   216  0A81  3454               	retlw	84
   217  0A82  3420               	retlw	32
   218  0A83  3447               	retlw	71
   219  0A84  344E               	retlw	78
   220  0A85  3444               	retlw	68
   221  0A86  3420               	retlw	32
   222  0A87  3400               	retlw	0
   223                           
   224                           ;initializer for display_temps_to_screen@F1452
   225  0A88  3453               	retlw	83
   226  0A89  3433               	retlw	51
   227  0A8A  3420               	retlw	32
   228  0A8B  343D               	retlw	61
   229  0A8C  3420               	retlw	32
   230  0A8D  3400               	retlw	0
   231                           
   232                           	psect	stringtext
   233  1000                     __pstringtext:	
   234  1000                     stringtab:	
   235  1000                     __stringtab:	
   236                           
   237                           ;	String table - string pointers are 2 bytes each
   238  1000  1BFF               	btfsc	btemp+1,7
   239  1001  280A               	ljmp	stringcode
   240  1002  1383               	bcf	3,7
   241  1003  187F               	btfsc	btemp+1,0
   242  1004  1783               	bsf	3,7
   243  1005  0800               	movf	0,w
   244  1006  0A84               	incf	4,f
   245  1007  1903               	skipnz
   246  1008  0AFF               	incf	btemp+1,f
   247  1009  0008               	return
   248  100A                     stringcode:	
   249  100A  087F               	movf	btemp+1,w
   250  100B  397F               	andlw	127
   251  100C  008A               	movwf	10
   252  100D  0804               	movf	4,w
   253  100E  0A84               	incf	4,f
   254  100F  1903               	skipnz
   255  1010  0AFF               	incf	btemp+1,f
   256  1011  0082               	movwf	2
   257  1012                     __stringbase:	
   258  1012                     __end_of__stringtab:	
   259  1012                     _fonts:	
   260  1012  3400               	retlw	0
   261  1013  3400               	retlw	0
   262  1014  3400               	retlw	0
   263  1015  3400               	retlw	0
   264  1016  344E               	retlw	78
   265  1017  3400               	retlw	0
   266  1018  3406               	retlw	6
   267  1019  3400               	retlw	0
   268  101A  3406               	retlw	6
   269  101B  34FF               	retlw	255
   270  101C  34FF               	retlw	255
   271  101D  34FF               	retlw	255
   272  101E  3448               	retlw	72
   273  101F  34D6               	retlw	214
   274  1020  3424               	retlw	36
   275  1021  3412               	retlw	18
   276  1022  3408               	retlw	8
   277  1023  3424               	retlw	36
   278  1024  34FF               	retlw	255
   279  1025  34FF               	retlw	255
   280  1026  34FF               	retlw	255
   281  1027  3400               	retlw	0
   282  1028  3406               	retlw	6
   283  1029  3400               	retlw	0
   284  102A  3438               	retlw	56
   285  102B  3444               	retlw	68
   286  102C  3482               	retlw	130
   287  102D  3482               	retlw	130
   288  102E  3444               	retlw	68
   289  102F  3438               	retlw	56
   290  1030  3414               	retlw	20
   291  1031  3408               	retlw	8
   292  1032  343E               	retlw	62
   293  1033  3410               	retlw	16
   294  1034  3438               	retlw	56
   295  1035  3410               	retlw	16
   296  1036  34A0               	retlw	160
   297  1037  3460               	retlw	96
   298  1038  3400               	retlw	0
   299  1039  3410               	retlw	16
   300  103A  3410               	retlw	16
   301  103B  3410               	retlw	16
   302  103C  3460               	retlw	96
   303  103D  3460               	retlw	96
   304  103E  3400               	retlw	0
   305  103F  3460               	retlw	96
   306  1040  3418               	retlw	24
   307  1041  3406               	retlw	6
   308  1042  347C               	retlw	124
   309  1043  3442               	retlw	66
   310  1044  347C               	retlw	124
   311  1045  3444               	retlw	68
   312  1046  347E               	retlw	126
   313  1047  3440               	retlw	64
   314  1048  3464               	retlw	100
   315  1049  3452               	retlw	82
   316  104A  344C               	retlw	76
   317  104B  344A               	retlw	74
   318  104C  344A               	retlw	74
   319  104D  3434               	retlw	52
   320  104E  3438               	retlw	56
   321  104F  3424               	retlw	36
   322  1050  347E               	retlw	126
   323  1051  344E               	retlw	78
   324  1052  344A               	retlw	74
   325  1053  3432               	retlw	50
   326  1054  343C               	retlw	60
   327  1055  344A               	retlw	74
   328  1056  3432               	retlw	50
   329  1057  3462               	retlw	98
   330  1058  341A               	retlw	26
   331  1059  3406               	retlw	6
   332  105A  3476               	retlw	118
   333  105B  344A               	retlw	74
   334  105C  3476               	retlw	118
   335  105D  344C               	retlw	76
   336  105E  3452               	retlw	82
   337  105F  343C               	retlw	60
   338  1060  346C               	retlw	108
   339  1061  346C               	retlw	108
   340  1062  3400               	retlw	0
   341  1063  34AC               	retlw	172
   342  1064  346C               	retlw	108
   343  1065  3400               	retlw	0
   344  1066  3410               	retlw	16
   345  1067  3428               	retlw	40
   346  1068  3444               	retlw	68
   347  1069  3428               	retlw	40
   348  106A  3428               	retlw	40
   349  106B  3428               	retlw	40
   350  106C  3444               	retlw	68
   351  106D  3428               	retlw	40
   352  106E  3410               	retlw	16
   353  106F  3402               	retlw	2
   354  1070  3459               	retlw	89
   355  1071  3406               	retlw	6
   356  1072  34FF               	retlw	255
   357  1073  34FF               	retlw	255
   358  1074  34FF               	retlw	255
   359  1075  347C               	retlw	124
   360  1076  3412               	retlw	18
   361  1077  347C               	retlw	124
   362  1078  347E               	retlw	126
   363  1079  345A               	retlw	90
   364  107A  3434               	retlw	52
   365  107B  343C               	retlw	60
   366  107C  3442               	retlw	66
   367  107D  3442               	retlw	66
   368  107E  347E               	retlw	126
   369  107F  3442               	retlw	66
   370  1080  343C               	retlw	60
   371  1081  347E               	retlw	126
   372  1082  344A               	retlw	74
   373  1083  3442               	retlw	66
   374  1084  347E               	retlw	126
   375  1085  340A               	retlw	10
   376  1086  340A               	retlw	10
   377  1087  343C               	retlw	60
   378  1088  3452               	retlw	82
   379  1089  3434               	retlw	52
   380  108A  347E               	retlw	126
   381  108B  3408               	retlw	8
   382  108C  347E               	retlw	126
   383  108D  3442               	retlw	66
   384  108E  347E               	retlw	126
   385  108F  3442               	retlw	66
   386  1090  3430               	retlw	48
   387  1091  3440               	retlw	64
   388  1092  343E               	retlw	62
   389  1093  347E               	retlw	126
   390  1094  3418               	retlw	24
   391  1095  3466               	retlw	102
   392  1096  347E               	retlw	126
   393  1097  3440               	retlw	64
   394  1098  3440               	retlw	64
   395  1099  347E               	retlw	126
   396  109A  341C               	retlw	28
   397  109B  347E               	retlw	126
   398  109C  347E               	retlw	126
   399  109D  3402               	retlw	2
   400  109E  347E               	retlw	126
   401  109F  343C               	retlw	60
   402  10A0  3442               	retlw	66
   403  10A1  343C               	retlw	60
   404  10A2  347E               	retlw	126
   405  10A3  3412               	retlw	18
   406  10A4  340C               	retlw	12
   407  10A5  347E               	retlw	126
   408  10A6  3462               	retlw	98
   409  10A7  34FE               	retlw	254
   410  10A8  347E               	retlw	126
   411  10A9  3432               	retlw	50
   412  10AA  344E               	retlw	78
   413  10AB  3444               	retlw	68
   414  10AC  344A               	retlw	74
   415  10AD  3432               	retlw	50
   416  10AE  3402               	retlw	2
   417  10AF  347E               	retlw	126
   418  10B0  3402               	retlw	2
   419  10B1  347E               	retlw	126
   420  10B2  3440               	retlw	64
   421  10B3  347E               	retlw	126
   422  10B4  343E               	retlw	62
   423  10B5  3440               	retlw	64
   424  10B6  343E               	retlw	62
   425  10B7  347E               	retlw	126
   426  10B8  3438               	retlw	56
   427  10B9  347E               	retlw	126
   428  10BA  3466               	retlw	102
   429  10BB  3418               	retlw	24
   430  10BC  3466               	retlw	102
   431  10BD  340E               	retlw	14
   432  10BE  3470               	retlw	112
   433  10BF  340E               	retlw	14
   434  10C0  3462               	retlw	98
   435  10C1  345A               	retlw	90
   436  10C2  3446               	retlw	70
   437  10C3  3400               	retlw	0
   438  10C4  347E               	retlw	126
   439  10C5  3442               	retlw	66
   440  10C6  3406               	retlw	6
   441  10C7  3418               	retlw	24
   442  10C8  3460               	retlw	96
   443  10C9  3442               	retlw	66
   444  10CA  347E               	retlw	126
   445  10CB  3400               	retlw	0
   446  10CC  3404               	retlw	4
   447  10CD  3402               	retlw	2
   448  10CE  3404               	retlw	4
   449  10CF  3440               	retlw	64
   450  10D0  3440               	retlw	64
   451  10D1  3440               	retlw	64
   452  10D2  3400               	retlw	0
   453  10D3  3402               	retlw	2
   454  10D4  3404               	retlw	4
   455  10D5  3474               	retlw	116
   456  10D6  3454               	retlw	84
   457  10D7  3478               	retlw	120
   458  10D8  347E               	retlw	126
   459  10D9  3448               	retlw	72
   460  10DA  3430               	retlw	48
   461  10DB  3430               	retlw	48
   462  10DC  3448               	retlw	72
   463  10DD  3448               	retlw	72
   464  10DE  3430               	retlw	48
   465  10DF  3448               	retlw	72
   466  10E0  347E               	retlw	126
   467  10E1  3438               	retlw	56
   468  10E2  3454               	retlw	84
   469  10E3  3458               	retlw	88
   470  10E4  347C               	retlw	124
   471  10E5  340A               	retlw	10
   472  10E6  3402               	retlw	2
   473  10E7  3498               	retlw	152
   474  10E8  34A4               	retlw	164
   475  10E9  347C               	retlw	124
   476  10EA  347E               	retlw	126
   477  10EB  3408               	retlw	8
   478  10EC  3470               	retlw	112
   479  10ED  3448               	retlw	72
   480  10EE  347A               	retlw	122
   481  10EF  3440               	retlw	64
   482  10F0  3488               	retlw	136
   483  10F1  34FA               	retlw	250
   484  10F2  3400               	retlw	0
   485  10F3  347E               	retlw	126
   486  10F4  3418               	retlw	24
   487  10F5  3464               	retlw	100
   488  10F6  3442               	retlw	66
   489  10F7  347E               	retlw	126
   490  10F8  3440               	retlw	64
   491  10F9  347C               	retlw	124
   492  10FA  3438               	retlw	56
   493  10FB  347C               	retlw	124
   494  10FC  347C               	retlw	124
   495  10FD  3404               	retlw	4
   496  10FE  3478               	retlw	120
   497  10FF  3438               	retlw	56
   498  1100  3444               	retlw	68
   499  1101  3438               	retlw	56
   500  1102  34FC               	retlw	252
   501  1103  3424               	retlw	36
   502  1104  3418               	retlw	24
   503  1105  3418               	retlw	24
   504  1106  3424               	retlw	36
   505  1107  34FC               	retlw	252
   506  1108  3478               	retlw	120
   507  1109  3404               	retlw	4
   508  110A  3404               	retlw	4
   509  110B  3448               	retlw	72
   510  110C  3454               	retlw	84
   511  110D  3424               	retlw	36
   512  110E  3404               	retlw	4
   513  110F  343E               	retlw	62
   514  1110  3444               	retlw	68
   515  1111  347C               	retlw	124
   516  1112  3440               	retlw	64
   517  1113  347C               	retlw	124
   518  1114  343C               	retlw	60
   519  1115  3440               	retlw	64
   520  1116  343C               	retlw	60
   521  1117  347C               	retlw	124
   522  1118  3430               	retlw	48
   523  1119  347C               	retlw	124
   524  111A  346C               	retlw	108
   525  111B  3410               	retlw	16
   526  111C  346C               	retlw	108
   527  111D  349C               	retlw	156
   528  111E  34A0               	retlw	160
   529  111F  347C               	retlw	124
   530  1120  3464               	retlw	100
   531  1121  3454               	retlw	84
   532  1122  344C               	retlw	76
   533  1123  340C               	retlw	12
   534  1124  3412               	retlw	18
   535  1125  340C               	retlw	12
   536  1126  34FF               	retlw	255
   537  1127  34FF               	retlw	255
   538  1128  34FF               	retlw	255
   539  1129  34FF               	retlw	255
   540  112A  34FF               	retlw	255
   541  112B  34FF               	retlw	255
   542  112C  34FF               	retlw	255
   543  112D  34FF               	retlw	255
   544  112E  34FF               	retlw	255
   545  112F  34FF               	retlw	255
   546  1130  34FF               	retlw	255
   547  1131  34FF               	retlw	255
   548  1132  34FF               	retlw	255
   549  1133  34FF               	retlw	255
   550  1134  34FF               	retlw	255
   551  1135  34FF               	retlw	255
   552  1136  34FF               	retlw	255
   553  1137  34FF               	retlw	255
   554  1138  34FC               	retlw	252
   555  1139  3440               	retlw	64
   556  113A  347C               	retlw	124
   557  113B  34FF               	retlw	255
   558  113C  34FF               	retlw	255
   559  113D  34FF               	retlw	255
   560  113E  34FF               	retlw	255
   561  113F  34FF               	retlw	255
   562  1140  34FF               	retlw	255
   563  1141                     __end_of_fonts:	
   564  0005                     _PORTA	set	5
   565  0006                     _PORTB	set	6
   566  0007                     _PORTC	set	7
   567  0013                     _SSPBUF	set	19
   568  00A4                     _CKP	set	164
   569  0029                     _RA1	set	41
   570  002A                     _RA2	set	42
   571  0035                     _RB5	set	53
   572  0038                     _RC0	set	56
   573  0039                     _RC1	set	57
   574  003A                     _RC2	set	58
   575  003B                     _RC3	set	59
   576  003E                     _RC6	set	62
   577  003F                     _RC7	set	63
   578  00A5                     _SSPEN	set	165
   579  00A0                     _SSPM0	set	160
   580  00A1                     _SSPM1	set	161
   581  00A2                     _SSPM2	set	162
   582  00A3                     _SSPM3	set	163
   583  00A7                     _WCOL	set	167
   584  0085                     _TRISA	set	133
   585  0086                     _TRISB	set	134
   586  0087                     _TRISC	set	135
   587  04A0                     _BF	set	1184
   588  04A6                     _CKE	set	1190
   589  0484                     _IRCF0	set	1156
   590  0485                     _IRCF1	set	1157
   591  042B                     _TRISA3	set	1067
   592  042C                     _TRISA4	set	1068
   593  043C                     _TRISC4	set	1084
   594  0185                     _ANSELA	set	389
   595  0186                     _ANSELB	set	390
   596                           
   597                           ; #config settings
   598  0000                     
   599                           	psect	cinit
   600  07CC                     start_initialization:	
   601  07CC                     __initialization:	
   602                           
   603                           ; Clear objects allocated to BANK1
   604  07CC  1383               	bcf	3,7	;select IRP bank0
   605  07CD  30A0               	movlw	low __pbssBANK1
   606  07CE  0084               	movwf	4
   607  07CF  30E8               	movlw	low (__pbssBANK1+72)
   608  07D0  120A  158A  2071  120A  118A  	fcall	clear_ram0
   609                           
   610                           ; Initialize objects allocated to BANK2
   611  07D5  1783               	bsf	3,7	;select IRP bank2
   612  07D6  3061               	movlw	low (__pdataBANK2+81)
   613  07D7  00FD               	movwf	btemp+-1
   614  07D8  300A               	movlw	high __pidataBANK2
   615  07D9  00FE               	movwf	btemp
   616  07DA  303D               	movlw	low __pidataBANK2
   617  07DB  00FF               	movwf	btemp+1
   618  07DC  3010               	movlw	low __pdataBANK2
   619  07DD  0084               	movwf	4
   620  07DE  120A  158A  20A8  120A  118A  	fcall	init_ram0
   621                           
   622                           ; Initialize objects allocated to BANK1
   623  07E3  1383               	bcf	3,7	;select IRP bank0
   624  07E4  30EE               	movlw	low (__pdataBANK1+6)
   625  07E5  00FD               	movwf	btemp+-1
   626  07E6  3008               	movlw	high __pidataBANK1
   627  07E7  00FE               	movwf	btemp
   628  07E8  306B               	movlw	low __pidataBANK1
   629  07E9  00FF               	movwf	btemp+1
   630  07EA  30E8               	movlw	low __pdataBANK1
   631  07EB  0084               	movwf	4
   632  07EC  120A  158A  20A8  120A  118A  	fcall	init_ram0
   633                           
   634                           ; Initialize objects allocated to BANK0
   635  07F1  306D               	movlw	low (__pdataBANK0+6)
   636  07F2  00FD               	movwf	btemp+-1
   637  07F3  3000               	movlw	high __pidataBANK0
   638  07F4  00FE               	movwf	btemp
   639  07F5  3003               	movlw	low __pidataBANK0
   640  07F6  00FF               	movwf	btemp+1
   641  07F7  3067               	movlw	low __pdataBANK0
   642  07F8  0084               	movwf	4
   643  07F9  120A  158A  20A8   	fcall	init_ram0
   644  07FC                     end_of_initialization:	
   645                           ;End of C runtime variable initialization code
   646                           
   647  07FC                     __end_of__initialization:	
   648  07FC  0183               	clrf	3
   649  07FD  120A  158A  2E8E   	ljmp	_main	;jump to C main() function
   650                           
   651                           	psect	dataBANK0
   652  0067                     __pdataBANK0:	
   653  0067                     display_temps_to_screen@F1446:	
   654  0067                     	ds	6
   655                           
   656                           	psect	bssBANK1
   657  00A0                     __pbssBANK1:	
   658  00A0                     _thermocouple_temp:	
   659  00A0                     	ds	72
   660                           
   661                           	psect	dataBANK1
   662  00E8                     __pdataBANK1:	
   663  00E8                     display_temps_to_screen@F1449:	
   664  00E8                     	ds	6
   665                           
   666                           	psect	dataBANK2
   667  0110                     __pdataBANK2:	
   668  0110                     display_temps_to_screen@F1467:	
   669  0110                     	ds	15
   670  011F                     String_test@F1406:	
   671  011F                     	ds	13
   672  012C                     display_temps_to_screen@F1458:	
   673  012C                     	ds	13
   674  0139                     display_temps_to_screen@F1455:	
   675  0139                     	ds	12
   676  0145                     display_temps_to_screen@F1461:	
   677  0145                     	ds	11
   678  0150                     display_temps_to_screen@F1464:	
   679  0150                     	ds	11
   680  015B                     display_temps_to_screen@F1452:	
   681  015B                     	ds	6
   682                           
   683                           	psect	clrtext
   684  0871                     clear_ram0:	
   685                           ;	Called with FSR containing the base address, and
   686                           ;	W with the last address+1
   687                           
   688  0871  0064               	clrwdt	;clear the watchdog before getting into this loop
   689  0872                     clrloop0:	
   690  0872  0180               	clrf	0	;clear RAM location pointed to by FSR
   691  0873  0A84               	incf	4,f	;increment pointer
   692  0874  0604               	xorwf	4,w	;XOR with final address
   693  0875  1903               	btfsc	3,2	;have we reached the end yet?
   694  0876  3400               	retlw	0	;all done for this memory range, return
   695  0877  0604               	xorwf	4,w	;XOR again to restore value
   696  0878  2872               	goto	clrloop0	;do the next byte
   697                           
   698                           	psect	inittext
   699  08A4                     init_fetch0:	
   700                           ;	Called with low address in FSR and high address in W
   701                           
   702  08A4  087E               	movf	126,w
   703  08A5  008A               	movwf	10
   704  08A6  087F               	movf	127,w
   705  08A7  0082               	movwf	2
   706  08A8                     init_ram0:	
   707                           ;Called with:
   708                           ;	high address of idata address in btemp 
   709                           ;	low address of idata address in btemp+1 
   710                           ;	low address of data in FSR
   711                           ;	high address + 1 of data in btemp-1
   712                           
   713  08A8  20A4  120A  158A   	fcall	init_fetch0
   714  08AB  0080               	movwf	0
   715  08AC  0A84               	incf	4,f
   716  08AD  0804               	movf	4,w
   717  08AE  067D               	xorwf	125,w
   718  08AF  1903               	btfsc	3,2
   719  08B0  3400               	retlw	0
   720  08B1  0AFF               	incf	127,f
   721  08B2  1903               	btfsc	3,2
   722  08B3  0AFE               	incf	126,f
   723  08B4  28A8               	goto	init_ram0
   724                           
   725                           	psect	cstackBANK3
   726  0190                     __pcstackBANK3:	
   727  0190                     display_temps_to_screen@sensor_one_string:	
   728                           
   729                           ; 6 bytes @ 0x0
   730  0190                     	ds	6
   731  0196                     display_temps_to_screen@sensor_two_string:	
   732                           
   733                           ; 6 bytes @ 0x6
   734  0196                     	ds	6
   735  019C                     display_temps_to_screen@sensor_three_string:	
   736                           
   737                           ; 6 bytes @ 0xC
   738  019C                     	ds	6
   739  01A2                     display_temps_to_screen@fault_string:	
   740                           
   741                           ; 15 bytes @ 0x12
   742  01A2                     	ds	15
   743  01B1                     display_temps_to_screen@open_string:	
   744                           
   745                           ; 13 bytes @ 0x21
   746  01B1                     	ds	13
   747  01BE                     display_temps_to_screen@celsius_string:	
   748                           
   749                           ; 12 bytes @ 0x2E
   750  01BE                     	ds	12
   751  01CA                     display_temps_to_screen@shortvcc_string:	
   752                           
   753                           ; 11 bytes @ 0x3A
   754  01CA                     	ds	11
   755  01D5                     display_temps_to_screen@shortgnd_string:	
   756                           
   757                           ; 11 bytes @ 0x45
   758  01D5                     	ds	11
   759  01E0                     display_temps_to_screen@sensor_one_string_pointer:	
   760                           
   761                           ; 1 bytes @ 0x50
   762  01E0                     	ds	1
   763  01E1                     display_temps_to_screen@sensor_two_string_pointer:	
   764                           
   765                           ; 1 bytes @ 0x51
   766  01E1                     	ds	1
   767  01E2                     display_temps_to_screen@sensor_three_string_pointer:	
   768                           
   769                           ; 1 bytes @ 0x52
   770  01E2                     	ds	1
   771  01E3                     display_temps_to_screen@position:	
   772                           
   773                           ; 4 bytes @ 0x53
   774  01E3                     	ds	4
   775  01E7                     display_temps_to_screen@celsius_string_pointer:	
   776                           
   777                           ; 1 bytes @ 0x57
   778  01E7                     	ds	1
   779  01E8                     display_temps_to_screen@open_string_pointer:	
   780                           
   781                           ; 1 bytes @ 0x58
   782  01E8                     	ds	1
   783  01E9                     display_temps_to_screen@shortvcc_string_pointer:	
   784                           
   785                           ; 1 bytes @ 0x59
   786  01E9                     	ds	1
   787  01EA                     display_temps_to_screen@shortgnd_string_pointer:	
   788                           
   789                           ; 1 bytes @ 0x5A
   790  01EA                     	ds	1
   791  01EB                     display_temps_to_screen@fault_string_pointer:	
   792                           
   793                           ; 1 bytes @ 0x5B
   794  01EB                     	ds	1
   795  01EC                     display_temps_to_screen@working_register:	
   796                           
   797                           ; 4 bytes @ 0x5C
   798  01EC                     	ds	4
   799                           
   800                           	psect	cstackCOMMON
   801  0070                     __pcstackCOMMON:	
   802  0070                     ?_Init:	
   803  0070                     ??_Init:	
   804                           ; 0 bytes @ 0x0
   805                           
   806  0070                     ?_spi_init:	
   807                           ; 0 bytes @ 0x0
   808                           
   809  0070                     ??_spi_init:	
   810                           ; 0 bytes @ 0x0
   811                           
   812  0070                     ?_data_out:	
   813                           ; 0 bytes @ 0x0
   814                           
   815  0070                     ??_data_out:	
   816                           ; 0 bytes @ 0x0
   817                           
   818  0070                     ?_comm_out:	
   819                           ; 0 bytes @ 0x0
   820                           
   821  0070                     ??_comm_out:	
   822                           ; 0 bytes @ 0x0
   823                           
   824  0070                     ?_blank_image:	
   825                           ; 0 bytes @ 0x0
   826                           
   827  0070                     ?_LCDWriteCharacter:	
   828                           ; 0 bytes @ 0x0
   829                           
   830  0070                     ?_String_test:	
   831                           ; 0 bytes @ 0x0
   832                           
   833  0070                     ??_SPI_TRANSFER:	
   834                           ; 0 bytes @ 0x0
   835                           
   836  0070                     ?_SPI_DATA_HANDLING:	
   837                           ; 0 bytes @ 0x0
   838                           
   839  0070                     ?_chip_select:	
   840                           ; 0 bytes @ 0x0
   841                           
   842  0070                     ?_get_temp_from_right_tcs:	
   843                           ; 0 bytes @ 0x0
   844                           
   845  0070                     ?_display_temps_to_screen:	
   846                           ; 0 bytes @ 0x0
   847                           
   848  0070                     ?_move_temp_to_send:	
   849                           ; 0 bytes @ 0x0
   850                           
   851  0070                     ?_SPI_TRANSFER:	
   852                           ; 0 bytes @ 0x0
   853                           
   854  0070                     ?___bmul:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_main:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?___wmul:	
   861                           ; 2 bytes @ 0x0
   862                           
   863  0070                     ?___ftpack:	
   864                           ; 2 bytes @ 0x0
   865                           
   866  0070                     ___bmul@multiplicand:	
   867                           ; 3 bytes @ 0x0
   868                           
   869  0070                     chip_select@chip:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ___wmul@multiplier:	
   873                           ; 2 bytes @ 0x0
   874                           
   875  0070                     ___ftpack@arg:	
   876                           ; 2 bytes @ 0x0
   877                           
   878                           
   879                           ; 3 bytes @ 0x0
   880  0070                     	ds	1
   881  0071                     ??___bmul:	
   882  0071                     SPI_TRANSFER@byte_recieved:	
   883                           ; 0 bytes @ 0x1
   884                           
   885                           
   886                           ; 1 bytes @ 0x1
   887  0071                     	ds	1
   888  0072                     ??_chip_select:	
   889  0072                     data_out@i:	
   890                           ; 0 bytes @ 0x2
   891                           
   892  0072                     comm_out@j:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  0072                     SPI_TRANSFER@byte_to_send:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0072                     ___bmul@product:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0072                     ___wmul@multiplicand:	
   902                           ; 1 bytes @ 0x2
   903                           
   904                           
   905                           ; 2 bytes @ 0x2
   906  0072                     	ds	1
   907  0073                     ??_blank_image:	
   908  0073                     ?_location:	
   909                           ; 0 bytes @ 0x3
   910                           
   911  0073                     ??_SPI_DATA_HANDLING:	
   912                           ; 0 bytes @ 0x3
   913                           
   914  0073                     ___bmul@multiplier:	
   915                           ; 0 bytes @ 0x3
   916                           
   917  0073                     ___ftpack@exp:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     location@position:	
   921                           ; 1 bytes @ 0x3
   922                           
   923                           
   924                           ; 2 bytes @ 0x3
   925  0073                     	ds	1
   926  0074                     ??_get_temp_from_right_tcs:	
   927  0074                     ??_move_temp_to_send:	
   928                           ; 0 bytes @ 0x4
   929                           
   930  0074                     ??___wmul:	
   931                           ; 0 bytes @ 0x4
   932                           
   933  0074                     blank_image@page:	
   934                           ; 0 bytes @ 0x4
   935                           
   936  0074                     ___ftpack@sign:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0074                     ___wmul@product:	
   940                           ; 1 bytes @ 0x4
   941                           
   942                           
   943                           ; 2 bytes @ 0x4
   944  0074                     	ds	1
   945  0075                     ??___ftpack:	
   946  0075                     ??_location:	
   947                           ; 0 bytes @ 0x5
   948                           
   949  0075                     SPI_DATA_HANDLING@byte_to_send:	
   950                           ; 0 bytes @ 0x5
   951                           
   952  0075                     blank_image@i:	
   953                           ; 1 bytes @ 0x5
   954                           
   955                           
   956                           ; 2 bytes @ 0x5
   957  0075                     	ds	1
   958  0076                     ??_LCDWriteCharacter:	
   959  0076                     SPI_DATA_HANDLING@byte_received:	
   960                           ; 0 bytes @ 0x6
   961                           
   962  0076                     move_temp_to_send@working_register:	
   963                           ; 1 bytes @ 0x6
   964                           
   965                           
   966                           ; 2 bytes @ 0x6
   967  0076                     	ds	1
   968  0077                     SPI_DATA_HANDLING@offset:	
   969  0077                     blank_image@j:	
   970                           ; 1 bytes @ 0x7
   971                           
   972                           
   973                           ; 2 bytes @ 0x7
   974  0077                     	ds	1
   975  0078                     ??_String_test:	
   976  0078                     ?_char_to_decimal_print:	
   977                           ; 0 bytes @ 0x8
   978                           
   979  0078                     ?___altoft:	
   980                           ; 0 bytes @ 0x8
   981                           
   982  0078                     ?___awtoft:	
   983                           ; 3 bytes @ 0x8
   984                           
   985  0078                     SPI_DATA_HANDLING@address:	
   986                           ; 3 bytes @ 0x8
   987                           
   988  0078                     move_temp_to_send@byte_to_send:	
   989                           ; 1 bytes @ 0x8
   990                           
   991  0078                     char_to_decimal_print@value:	
   992                           ; 1 bytes @ 0x8
   993                           
   994  0078                     ___awtoft@c:	
   995                           ; 2 bytes @ 0x8
   996                           
   997  0078                     ___altoft@c:	
   998                           ; 2 bytes @ 0x8
   999                           
  1000                           
  1001                           ; 4 bytes @ 0x8
  1002  0078                     	ds	1
  1003  0079                     SPI_DATA_HANDLING@offset_pointer:	
  1004  0079                     move_temp_to_send@x:	
  1005                           ; 2 bytes @ 0x9
  1006                           
  1007                           
  1008                           ; 2 bytes @ 0x9
  1009  0079                     	ds	1
  1010  007A                     ??_char_to_decimal_print:	
  1011                           
  1012                           ; 0 bytes @ 0xA
  1013  007A                     	ds	1
  1014  007B                     ??___awtoft:	
  1015  007B                     SPI_DATA_HANDLING@data_pointer:	
  1016                           ; 0 bytes @ 0xB
  1017                           
  1018  007B                     char_to_decimal_print@x:	
  1019                           ; 1 bytes @ 0xB
  1020                           
  1021  007B                     move_temp_to_send@reg:	
  1022                           ; 1 bytes @ 0xB
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0xB
  1026  007B                     	ds	1
  1027  007C                     ??___altoft:	
  1028  007C                     move_temp_to_send@data_pointer:	
  1029                           ; 0 bytes @ 0xC
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0xC
  1033  007C                     	ds	1
  1034  007D                     ___awtoft@sign:	
  1035                           
  1036                           ; 1 bytes @ 0xD
  1037  007D                     	ds	1
  1038                           
  1039                           	psect	cstackBANK0
  1040  0020                     __pcstackBANK0:	
  1041  0020                     LCDWriteCharacter@character:	
  1042  0020                     get_temp_from_right_tcs@byte_received:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0020                     ___altoft@exp:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0020                     location@j:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051                           
  1052                           ; 2 bytes @ 0x0
  1053  0020                     	ds	1
  1054  0021                     ___altoft@sign:	
  1055  0021                     LCDWriteCharacter@before_swap:	
  1056                           ; 1 bytes @ 0x1
  1057                           
  1058  0021                     get_temp_from_right_tcs@position:	
  1059                           ; 2 bytes @ 0x1
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x1
  1063  0021                     	ds	1
  1064  0022                     ?___ftmul:	
  1065  0022                     location@lownib:	
  1066                           ; 3 bytes @ 0x2
  1067                           
  1068  0022                     ___ftmul@f1:	
  1069                           ; 1 bytes @ 0x2
  1070                           
  1071                           
  1072                           ; 3 bytes @ 0x2
  1073  0022                     	ds	1
  1074  0023                     location@upnib:	
  1075  0023                     LCDWriteCharacter@i:	
  1076                           ; 1 bytes @ 0x3
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x3
  1080  0023                     	ds	1
  1081  0024                     location@page:	
  1082                           
  1083                           ; 1 bytes @ 0x4
  1084  0024                     	ds	1
  1085  0025                     get_temp_from_right_tcs@byte1:	
  1086  0025                     location@q:	
  1087                           ; 1 bytes @ 0x5
  1088                           
  1089  0025                     LCDWriteCharacter@j:	
  1090                           ; 2 bytes @ 0x5
  1091                           
  1092  0025                     ___ftmul@f2:	
  1093                           ; 2 bytes @ 0x5
  1094                           
  1095                           
  1096                           ; 3 bytes @ 0x5
  1097  0025                     	ds	1
  1098  0026                     get_temp_from_right_tcs@byte2:	
  1099                           
  1100                           ; 1 bytes @ 0x6
  1101  0026                     	ds	1
  1102  0027                     get_temp_from_right_tcs@byte3:	
  1103  0027                     location@k:	
  1104                           ; 1 bytes @ 0x7
  1105                           
  1106  0027                     LCDWriteCharacter@base:	
  1107                           ; 2 bytes @ 0x7
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x7
  1111  0027                     	ds	1
  1112  0028                     ??___ftmul:	
  1113  0028                     get_temp_from_right_tcs@byte4:	
  1114                           ; 0 bytes @ 0x8
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0x8
  1118  0028                     	ds	1
  1119  0029                     get_temp_from_right_tcs@byte_to_send:	
  1120  0029                     location@i:	
  1121                           ; 1 bytes @ 0x9
  1122                           
  1123  0029                     LCDWriteCharacter@after_swap:	
  1124                           ; 2 bytes @ 0x9
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x9
  1128  0029                     	ds	1
  1129  002A                     get_temp_from_right_tcs@x:	
  1130                           
  1131                           ; 2 bytes @ 0xA
  1132  002A                     	ds	1
  1133  002B                     String_test@test_string:	
  1134                           
  1135                           ; 13 bytes @ 0xB
  1136  002B                     	ds	1
  1137  002C                     ___ftmul@exp:	
  1138                           
  1139                           ; 1 bytes @ 0xC
  1140  002C                     	ds	1
  1141  002D                     ___ftmul@f3_as_product:	
  1142                           
  1143                           ; 3 bytes @ 0xD
  1144  002D                     	ds	3
  1145  0030                     ___ftmul@cntr:	
  1146                           
  1147                           ; 1 bytes @ 0x10
  1148  0030                     	ds	1
  1149  0031                     ___ftmul@sign:	
  1150                           
  1151                           ; 1 bytes @ 0x11
  1152  0031                     	ds	1
  1153  0032                     ?___fttol:	
  1154  0032                     ___fttol@f1:	
  1155                           ; 4 bytes @ 0x12
  1156                           
  1157                           
  1158                           ; 3 bytes @ 0x12
  1159  0032                     	ds	4
  1160  0036                     ??___fttol:	
  1161                           
  1162                           ; 0 bytes @ 0x16
  1163  0036                     	ds	2
  1164  0038                     String_test@test_pointer:	
  1165                           
  1166                           ; 1 bytes @ 0x18
  1167  0038                     	ds	2
  1168  003A                     ___fttol@sign1:	
  1169                           
  1170                           ; 1 bytes @ 0x1A
  1171  003A                     	ds	1
  1172  003B                     ___fttol@lval:	
  1173                           
  1174                           ; 4 bytes @ 0x1B
  1175  003B                     	ds	4
  1176  003F                     ___fttol@exp1:	
  1177                           
  1178                           ; 1 bytes @ 0x1F
  1179  003F                     	ds	1
  1180  0040                     ??_display_temps_to_screen:	
  1181                           
  1182                           ; 0 bytes @ 0x20
  1183  0040                     	ds	4
  1184  0044                     ??_main:	
  1185                           
  1186                           ; 0 bytes @ 0x24
  1187  0044                     	ds	2
  1188  0046                     main@x:	
  1189                           
  1190                           ; 2 bytes @ 0x26
  1191  0046                     	ds	2
  1192  0048                     main@spi_data:	
  1193                           
  1194                           ; 22 bytes @ 0x28
  1195  0048                     	ds	22
  1196  005E                     main@position:	
  1197                           
  1198                           ; 4 bytes @ 0x3E
  1199  005E                     	ds	4
  1200  0062                     main@data_pointer:	
  1201                           
  1202                           ; 1 bytes @ 0x42
  1203  0062                     	ds	1
  1204  0063                     main@count:	
  1205                           
  1206                           ; 4 bytes @ 0x43
  1207  0063                     	ds	4
  1208                           
  1209                           	psect	maintext
  1210  0E8E                     __pmaintext:	
  1211 ;;
  1212 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1213 ;;
  1214 ;; *************** function _main *****************
  1215 ;; Defined at:
  1216 ;;		line 973 in file "Main V4.1.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  spi_data       22   40[BANK0 ] unsigned char [22]
  1221 ;;  display_matr   10    0        unsigned char [10]
  1222 ;;  position        4   62[BANK0 ] int [2]
  1223 ;;  count           4   67[BANK0 ] long 
  1224 ;;  x               2   38[BANK0 ] int 
  1225 ;;  data_pointer    1   66[BANK0 ] PTR unsigned char 
  1226 ;;		 -> main@spi_data(22), 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2  318[COMMON] int 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 17F/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         0       0       0       0       0
  1237 ;;      Locals:         0      33       0       0       0
  1238 ;;      Temps:          0       2       0       0       0
  1239 ;;      Totals:         0      35       0       0       0
  1240 ;;Total ram usage:       35 bytes
  1241 ;; Hardware stack levels required when called:    4
  1242 ;; This function calls:
  1243 ;;		_Init
  1244 ;;		_SPI_DATA_HANDLING
  1245 ;;		_String_test
  1246 ;;		_blank_image
  1247 ;;		_chip_select
  1248 ;;		_comm_out
  1249 ;;		_display_temps_to_screen
  1250 ;;		_get_temp_from_right_tcs
  1251 ;;		_location
  1252 ;;		_move_temp_to_send
  1253 ;;		_spi_init
  1254 ;; This function is called by:
  1255 ;;		Startup code after reset
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _main
  1261  0E8E                     _main:	
  1262                           
  1263                           ;Main V4.1.c: 974: Init();
  1264                           
  1265                           ;incstack = 0
  1266                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1267  0E8E  120A  158A  2121  120A  158A  	fcall	_Init
  1268                           
  1269                           ;Main V4.1.c: 975: spi_init();
  1270  0E93  120A  158A  2085  120A  158A  	fcall	_spi_init
  1271                           
  1272                           ;Main V4.1.c: 977: char spi_data[22];
  1273                           ;Main V4.1.c: 978: spi_data[0] = 1;
  1274  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0E9A  01C8               	clrf	main@spi_data
  1277  0E9B  0AC8               	incf	main@spi_data,f
  1278                           
  1279                           ;Main V4.1.c: 979: char *data_pointer;
  1280                           ;Main V4.1.c: 980: data_pointer = &spi_data[0];
  1281  0E9C  3048               	movlw	main@spi_data& (0+255)
  1282  0E9D  00C4               	movwf	??_main
  1283  0E9E  0844               	movf	??_main,w
  1284  0E9F  00E2               	movwf	main@data_pointer
  1285                           
  1286                           ;Main V4.1.c: 981: spi_data[1] = 0x81;
  1287  0EA0  3081               	movlw	129
  1288  0EA1  00C4               	movwf	??_main
  1289  0EA2  0844               	movf	??_main,w
  1290  0EA3  00C9               	movwf	main@spi_data+1
  1291                           
  1292                           ;Main V4.1.c: 982: spi_data[2] = 0x01;
  1293  0EA4  01CA               	clrf	main@spi_data+2
  1294  0EA5  0ACA               	incf	main@spi_data+2,f
  1295                           
  1296                           ;Main V4.1.c: 983: spi_data[3] = 0x13;
  1297  0EA6  3013               	movlw	19
  1298  0EA7  00C4               	movwf	??_main
  1299  0EA8  0844               	movf	??_main,w
  1300  0EA9  00CB               	movwf	main@spi_data+3
  1301                           
  1302                           ;Main V4.1.c: 984: spi_data[4] = 0x48;
  1303  0EAA  3048               	movlw	72
  1304  0EAB  00C4               	movwf	??_main
  1305  0EAC  0844               	movf	??_main,w
  1306  0EAD  00CC               	movwf	main@spi_data+4
  1307                           
  1308                           ;Main V4.1.c: 985: spi_data[5] = 0xaa;
  1309  0EAE  30AA               	movlw	170
  1310  0EAF  00C4               	movwf	??_main
  1311  0EB0  0844               	movf	??_main,w
  1312  0EB1  00CD               	movwf	main@spi_data+5
  1313                           
  1314                           ;Main V4.1.c: 986: spi_data[6] = 0x48;
  1315  0EB2  3048               	movlw	72
  1316  0EB3  00C4               	movwf	??_main
  1317  0EB4  0844               	movf	??_main,w
  1318  0EB5  00CE               	movwf	main@spi_data+6
  1319                           
  1320                           ;Main V4.1.c: 987: spi_data[7] = 0x48;
  1321  0EB6  3048               	movlw	72
  1322  0EB7  00C4               	movwf	??_main
  1323  0EB8  0844               	movf	??_main,w
  1324  0EB9  00CF               	movwf	main@spi_data+7
  1325                           
  1326                           ;Main V4.1.c: 988: spi_data[8] = 0x48;
  1327  0EBA  3048               	movlw	72
  1328  0EBB  00C4               	movwf	??_main
  1329  0EBC  0844               	movf	??_main,w
  1330  0EBD  00D0               	movwf	main@spi_data+8
  1331                           
  1332                           ;Main V4.1.c: 989: spi_data[9] = 0x48;
  1333  0EBE  3048               	movlw	72
  1334  0EBF  00C4               	movwf	??_main
  1335  0EC0  0844               	movf	??_main,w
  1336  0EC1  00D1               	movwf	main@spi_data+9
  1337                           
  1338                           ;Main V4.1.c: 990: spi_data[10] = 0xaa;
  1339  0EC2  30AA               	movlw	170
  1340  0EC3  00C4               	movwf	??_main
  1341  0EC4  0844               	movf	??_main,w
  1342  0EC5  00D2               	movwf	main@spi_data+10
  1343                           
  1344                           ;Main V4.1.c: 994: int position[2];
  1345                           ;Main V4.1.c: 995: position[0] = 00;
  1346  0EC6  01DE               	clrf	main@position
  1347  0EC7  01DF               	clrf	main@position+1
  1348                           
  1349                           ;Main V4.1.c: 996: position[1] = 24;
  1350  0EC8  3018               	movlw	24
  1351  0EC9  00E0               	movwf	main@position+2
  1352  0ECA  3000               	movlw	0
  1353  0ECB  00E1               	movwf	main@position+3
  1354                           
  1355                           ;Main V4.1.c: 997: char display_matrix[10];
  1356                           ;Main V4.1.c: 998: int x;
  1357                           ;Main V4.1.c: 999: long int count = 0;
  1358  0ECC  3000               	movlw	0
  1359  0ECD  00E6               	movwf	main@count+3
  1360  0ECE  3000               	movlw	0
  1361  0ECF  00E5               	movwf	main@count+2
  1362  0ED0  3000               	movlw	0
  1363  0ED1  00E4               	movwf	main@count+1
  1364  0ED2  3000               	movlw	0
  1365  0ED3  00E3               	movwf	main@count
  1366                           
  1367                           ;Main V4.1.c: 1001: RC1 = 0;
  1368  0ED4  1087               	bcf	7,1	;volatile
  1369                           
  1370                           ;Main V4.1.c: 1002: _delay(100000);
  1371  0ED5  3082               	movlw	130
  1372  0ED6  00C5               	movwf	??_main+1
  1373  0ED7  30DD               	movlw	221
  1374  0ED8  00C4               	movwf	??_main
  1375  0ED9                     u2697:	
  1376  0ED9  0BC4               	decfsz	??_main,f
  1377  0EDA  2ED9               	goto	u2697
  1378  0EDB  0BC5               	decfsz	??_main+1,f
  1379  0EDC  2ED9               	goto	u2697
  1380  0EDD  2EDE               	nop2
  1381                           
  1382                           ;Main V4.1.c: 1003: RC1 = 1;
  1383  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0EE0  1487               	bsf	7,1	;volatile
  1386                           
  1387                           ;Main V4.1.c: 1004: _delay(100000);
  1388  0EE1  3082               	movlw	130
  1389  0EE2  00C5               	movwf	??_main+1
  1390  0EE3  30DD               	movlw	221
  1391  0EE4  00C4               	movwf	??_main
  1392  0EE5                     u2707:	
  1393  0EE5  0BC4               	decfsz	??_main,f
  1394  0EE6  2EE5               	goto	u2707
  1395  0EE7  0BC5               	decfsz	??_main+1,f
  1396  0EE8  2EE5               	goto	u2707
  1397  0EE9  2EEA               	nop2
  1398                           
  1399                           ;Main V4.1.c: 1006: comm_out (0xE3);
  1400  0EEA  30E3               	movlw	227
  1401  0EEB  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1402                           
  1403                           ;Main V4.1.c: 1007: comm_out (0xA0);
  1404  0EF0  30A0               	movlw	160
  1405  0EF1  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1406                           
  1407                           ;Main V4.1.c: 1008: comm_out (0xAE);
  1408  0EF6  30AE               	movlw	174
  1409  0EF7  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1410                           
  1411                           ;Main V4.1.c: 1009: comm_out (0xC0);
  1412  0EFC  30C0               	movlw	192
  1413  0EFD  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1414                           
  1415                           ;Main V4.1.c: 1010: comm_out (0xA2);
  1416  0F02  30A2               	movlw	162
  1417  0F03  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1418                           
  1419                           ;Main V4.1.c: 1011: comm_out (0x2F);
  1420  0F08  302F               	movlw	47
  1421  0F09  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1422                           
  1423                           ;Main V4.1.c: 1012: comm_out (0x21);
  1424  0F0E  3021               	movlw	33
  1425  0F0F  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1426                           
  1427                           ;Main V4.1.c: 1013: comm_out (0x81);
  1428  0F14  3081               	movlw	129
  1429  0F15  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1430                           
  1431                           ;Main V4.1.c: 1014: comm_out (0x2F);
  1432  0F1A  302F               	movlw	47
  1433  0F1B  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1434                           
  1435                           ;Main V4.1.c: 1015: comm_out (0xA6);
  1436  0F20  30A6               	movlw	166
  1437  0F21  120A  158A  20C9  120A  158A  	fcall	_comm_out
  1438                           
  1439                           ;Main V4.1.c: 1018: _delay(100000);
  1440  0F26  3082               	movlw	130
  1441  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0F29  00C5               	movwf	??_main+1
  1444  0F2A  30DD               	movlw	221
  1445  0F2B  00C4               	movwf	??_main
  1446  0F2C                     u2717:	
  1447  0F2C  0BC4               	decfsz	??_main,f
  1448  0F2D  2F2C               	goto	u2717
  1449  0F2E  0BC5               	decfsz	??_main+1,f
  1450  0F2F  2F2C               	goto	u2717
  1451  0F30  2F31               	nop2
  1452                           
  1453                           ;Main V4.1.c: 1019: _delay(100000);
  1454  0F31  3082               	movlw	130
  1455  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0F34  00C5               	movwf	??_main+1
  1458  0F35  30DD               	movlw	221
  1459  0F36  00C4               	movwf	??_main
  1460  0F37                     u2727:	
  1461  0F37  0BC4               	decfsz	??_main,f
  1462  0F38  2F37               	goto	u2727
  1463  0F39  0BC5               	decfsz	??_main+1,f
  1464  0F3A  2F37               	goto	u2727
  1465  0F3B  2F3C               	nop2
  1466                           
  1467                           ;Main V4.1.c: 1020: count = 0;
  1468  0F3C  3000               	movlw	0
  1469  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0F3F  00E6               	movwf	main@count+3
  1472  0F40  3000               	movlw	0
  1473  0F41  00E5               	movwf	main@count+2
  1474  0F42  3000               	movlw	0
  1475  0F43  00E4               	movwf	main@count+1
  1476  0F44  3000               	movlw	0
  1477  0F45  00E3               	movwf	main@count
  1478                           
  1479                           ;Main V4.1.c: 1022: RB5 = 1;
  1480                           
  1481                           ;Main V4.1.c: 1021: while(1){
  1482  0F46  1686               	bsf	6,5	;volatile
  1483                           
  1484                           ;Main V4.1.c: 1023: RC7 = 1;
  1485  0F47  1787               	bsf	7,7	;volatile
  1486                           
  1487                           ;Main V4.1.c: 1024: _delay(100000);
  1488  0F48  3082               	movlw	130
  1489  0F49  00C5               	movwf	??_main+1
  1490  0F4A  30DD               	movlw	221
  1491  0F4B  00C4               	movwf	??_main
  1492  0F4C                     u2737:	
  1493  0F4C  0BC4               	decfsz	??_main,f
  1494  0F4D  2F4C               	goto	u2737
  1495  0F4E  0BC5               	decfsz	??_main+1,f
  1496  0F4F  2F4C               	goto	u2737
  1497  0F50  2F51               	nop2
  1498                           
  1499                           ;Main V4.1.c: 1025: RB5 = 0;
  1500  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0F53  1286               	bcf	6,5	;volatile
  1503                           
  1504                           ;Main V4.1.c: 1026: _delay(100000);
  1505  0F54  3082               	movlw	130
  1506  0F55  00C5               	movwf	??_main+1
  1507  0F56  30DD               	movlw	221
  1508  0F57  00C4               	movwf	??_main
  1509  0F58                     u2747:	
  1510  0F58  0BC4               	decfsz	??_main,f
  1511  0F59  2F58               	goto	u2747
  1512  0F5A  0BC5               	decfsz	??_main+1,f
  1513  0F5B  2F58               	goto	u2747
  1514  0F5C  2F5D               	nop2
  1515                           
  1516                           ;Main V4.1.c: 1029: blank_image();
  1517  0F5D  120A  118A  2009  120A  158A  	fcall	_blank_image
  1518                           
  1519                           ;Main V4.1.c: 1036: location(position);
  1520  0F62  305E               	movlw	main@position& (0+255)
  1521  0F63  00F3               	movwf	location@position
  1522  0F64  3000               	movlw	0
  1523  0F65  00F4               	movwf	location@position+1
  1524  0F66  120A  158A  2510  120A  158A  	fcall	_location
  1525                           
  1526                           ;Main V4.1.c: 1038: x = 48;
  1527  0F6B  3030               	movlw	48
  1528  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0F6E  00C6               	movwf	main@x
  1531  0F6F  3000               	movlw	0
  1532  0F70  00C7               	movwf	main@x+1
  1533                           
  1534                           ;Main V4.1.c: 1043: String_test();
  1535  0F71  120A  158A  217E  120A  158A  	fcall	_String_test
  1536  0F76                     l2882:	
  1537                           ;Main V4.1.c: 1045: while (1){
  1538                           
  1539                           
  1540                           ;Main V4.1.c: 1047: RB5 = 1;
  1541  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0F78  1686               	bsf	6,5	;volatile
  1544                           
  1545                           ;Main V4.1.c: 1076: if (count < 20){
  1546  0F79  0866               	movf	main@count+3,w
  1547  0F7A  3A80               	xorlw	128
  1548  0F7B  00FF               	movwf	127
  1549  0F7C  3000               	movlw	0
  1550  0F7D  3A80               	xorlw	128
  1551  0F7E  027F               	subwf	127,w
  1552  0F7F  1D03               	skipz
  1553  0F80  2F8B               	goto	u2673
  1554  0F81  3000               	movlw	0
  1555  0F82  0265               	subwf	main@count+2,w
  1556  0F83  1D03               	skipz
  1557  0F84  2F8B               	goto	u2673
  1558  0F85  3000               	movlw	0
  1559  0F86  0264               	subwf	main@count+1,w
  1560  0F87  1D03               	skipz
  1561  0F88  2F8B               	goto	u2673
  1562  0F89  3014               	movlw	20
  1563  0F8A  0263               	subwf	main@count,w
  1564  0F8B                     u2673:	
  1565  0F8B  1803               	skipnc
  1566  0F8C  2FB3               	goto	l321
  1567                           
  1568                           ;Main V4.1.c: 1077: chip_select(1);
  1569  0F8D  3001               	movlw	1
  1570  0F8E  00F0               	movwf	chip_select@chip
  1571  0F8F  3000               	movlw	0
  1572  0F90  00F1               	movwf	chip_select@chip+1
  1573  0F91  120A  158A  2079  120A  158A  	fcall	_chip_select
  1574                           
  1575                           ;Main V4.1.c: 1078: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1576  0F96  300D               	movlw	13
  1577  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0F99  00C4               	movwf	??_main
  1580  0F9A                     u2757:	
  1581  0F9A  0BC4               	decfsz	??_main,f
  1582  0F9B  2F9A               	goto	u2757
  1583                           
  1584                           ;Main V4.1.c: 1080: SPI_DATA_HANDLING(data_pointer);
  1585  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0F9E  0862               	movf	main@data_pointer,w
  1588  0F9F  120A  158A  21EF  120A  158A  	fcall	_SPI_DATA_HANDLING
  1589                           
  1590                           ;Main V4.1.c: 1081: _delay((unsigned long)((10)*(16000000/4000000.0)));
  1591  0FA4  300D               	movlw	13
  1592  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0FA7  00C4               	movwf	??_main
  1595  0FA8                     u2767:	
  1596  0FA8  0BC4               	decfsz	??_main,f
  1597  0FA9  2FA8               	goto	u2767
  1598                           
  1599                           ;Main V4.1.c: 1082: chip_select(0);
  1600  0FAA  3000               	movlw	0
  1601  0FAB  00F0               	movwf	chip_select@chip
  1602  0FAC  3000               	movlw	0
  1603  0FAD  00F1               	movwf	chip_select@chip+1
  1604  0FAE  120A  158A  2079  120A  158A  	fcall	_chip_select
  1605  0FB3                     l321:	
  1606                           
  1607                           ;Main V4.1.c: 1084: }
  1608                           ;Main V4.1.c: 1085: location(position);
  1609  0FB3  305E               	movlw	main@position& (0+255)
  1610  0FB4  00F3               	movwf	location@position
  1611  0FB5  3000               	movlw	0
  1612  0FB6  00F4               	movwf	location@position+1
  1613  0FB7  120A  158A  2510  120A  158A  	fcall	_location
  1614                           
  1615                           ;Main V4.1.c: 1086: if (count >= 100){
  1616  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0FBE  0866               	movf	main@count+3,w
  1619  0FBF  3A80               	xorlw	128
  1620  0FC0  00FF               	movwf	127
  1621  0FC1  3000               	movlw	0
  1622  0FC2  3A80               	xorlw	128
  1623  0FC3  027F               	subwf	127,w
  1624  0FC4  1D03               	skipz
  1625  0FC5  2FD0               	goto	u2683
  1626  0FC6  3000               	movlw	0
  1627  0FC7  0265               	subwf	main@count+2,w
  1628  0FC8  1D03               	skipz
  1629  0FC9  2FD0               	goto	u2683
  1630  0FCA  3000               	movlw	0
  1631  0FCB  0264               	subwf	main@count+1,w
  1632  0FCC  1D03               	skipz
  1633  0FCD  2FD0               	goto	u2683
  1634  0FCE  3064               	movlw	100
  1635  0FCF  0263               	subwf	main@count,w
  1636  0FD0                     u2683:	
  1637  0FD0  1C03               	skipc
  1638  0FD1  2FE9               	goto	l2904
  1639                           
  1640                           ;Main V4.1.c: 1087: get_temp_from_right_tcs();
  1641  0FD2  120A  118A  2066  120A  158A  	fcall	_get_temp_from_right_tcs
  1642                           
  1643                           ;Main V4.1.c: 1088: RB5 = 0;
  1644  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0FD9  1286               	bcf	6,5	;volatile
  1647                           
  1648                           ;Main V4.1.c: 1090: display_temps_to_screen();
  1649  0FDA  120A  118A  2235  120A  158A  	fcall	_display_temps_to_screen
  1650                           
  1651                           ;Main V4.1.c: 1091: count = 0;
  1652  0FDF  3000               	movlw	0
  1653  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0FE2  00E6               	movwf	main@count+3
  1656  0FE3  3000               	movlw	0
  1657  0FE4  00E5               	movwf	main@count+2
  1658  0FE5  3000               	movlw	0
  1659  0FE6  00E4               	movwf	main@count+1
  1660  0FE7  3000               	movlw	0
  1661  0FE8  00E3               	movwf	main@count
  1662  0FE9                     l2904:	
  1663                           
  1664                           ;Main V4.1.c: 1092: }
  1665                           ;Main V4.1.c: 1093: move_temp_to_send (data_pointer);
  1666  0FE9  0862               	movf	main@data_pointer,w
  1667  0FEA  120A  158A  247D  120A  158A  	fcall	_move_temp_to_send
  1668                           
  1669                           ;Main V4.1.c: 1096: count++;
  1670  0FEF  3001               	movlw	1
  1671  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0FF2  07E3               	addwf	main@count,f
  1674  0FF3  3000               	movlw	0
  1675  0FF4  1803               	skipnc
  1676  0FF5  3001               	movlw	1
  1677  0FF6  07E4               	addwf	main@count+1,f
  1678  0FF7  3000               	movlw	0
  1679  0FF8  1803               	skipnc
  1680  0FF9  3001               	movlw	1
  1681  0FFA  07E5               	addwf	main@count+2,f
  1682  0FFB  3000               	movlw	0
  1683  0FFC  1803               	skipnc
  1684  0FFD  3001               	movlw	1
  1685  0FFE  07E6               	addwf	main@count+3,f
  1686  0FFF  2F76               	goto	l2882
  1687  1000                     __end_of_main:	
  1688                           
  1689                           	psect	text1
  1690  0885                     __ptext1:	
  1691 ;; *************** function _spi_init *****************
  1692 ;; Defined at:
  1693 ;;		line 64 in file "Main V4.1.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;		None               void
  1700 ;; Registers used:
  1701 ;;		None
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function _spi_init
  1722  0885                     _spi_init:	
  1723                           
  1724                           ;Main V4.1.c: 65: SSPEN = 1;
  1725                           
  1726                           ;incstack = 0
  1727                           ; Regs used in _spi_init: []
  1728  0885  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0886  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0887  1694               	bsf	20,5	;volatile
  1731                           
  1732                           ;Main V4.1.c: 66: SSPM0 = 0;
  1733  0888  1014               	bcf	20,0	;volatile
  1734                           
  1735                           ;Main V4.1.c: 67: SSPM1 = 1;
  1736  0889  1494               	bsf	20,1	;volatile
  1737                           
  1738                           ;Main V4.1.c: 68: SSPM2 = 0;
  1739  088A  1114               	bcf	20,2	;volatile
  1740                           
  1741                           ;Main V4.1.c: 69: SSPM3 = 0;
  1742  088B  1194               	bcf	20,3	;volatile
  1743                           
  1744                           ;Main V4.1.c: 70: CKE = 1;
  1745  088C  1683               	bsf	3,5	;RP0=1, select bank1
  1746  088D  1303               	bcf	3,6	;RP1=0, select bank1
  1747  088E  1714               	bsf	20,6	;volatile
  1748                           
  1749                           ;Main V4.1.c: 71: CKP = 0;
  1750  088F  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0890  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0891  1214               	bcf	20,4	;volatile
  1753  0892  0008               	return
  1754  0893                     __end_of_spi_init:	
  1755                           
  1756                           	psect	text2
  1757  0C7D                     __ptext2:	
  1758 ;; *************** function _move_temp_to_send *****************
  1759 ;; Defined at:
  1760 ;;		line 944 in file "Main V4.1.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  data_pointer    1    wreg     PTR unsigned char 
  1763 ;;		 -> main@spi_data(22), 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  data_pointer    1   12[COMMON] PTR unsigned char 
  1766 ;;		 -> main@spi_data(22), 
  1767 ;;  x               2    9[COMMON] int 
  1768 ;;  working_regi    2    6[COMMON] int 
  1769 ;;  reg             1   11[COMMON] PTR unsigned char 
  1770 ;;		 -> main@spi_data(22), NULL(0), 
  1771 ;;  byte_to_send    1    8[COMMON] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         7       0       0       0       0
  1783 ;;      Temps:          2       0       0       0       0
  1784 ;;      Totals:         9       0       0       0       0
  1785 ;;Total ram usage:        9 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    1
  1788 ;; This function calls:
  1789 ;;		___bmul
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           
  1796                           ;psect for function _move_temp_to_send
  1797  0C7D                     _move_temp_to_send:	
  1798                           
  1799                           ;incstack = 0
  1800                           ; Regs used in _move_temp_to_send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1801                           ;move_temp_to_send@data_pointer stored from wreg
  1802  0C7D  00FC               	movwf	move_temp_to_send@data_pointer
  1803                           
  1804                           ;Main V4.1.c: 945: int x = 0;
  1805  0C7E  01F9               	clrf	move_temp_to_send@x
  1806  0C7F  01FA               	clrf	move_temp_to_send@x+1
  1807                           
  1808                           ;Main V4.1.c: 946: char *reg = 0;
  1809  0C80  01FB               	clrf	move_temp_to_send@reg
  1810                           
  1811                           ;Main V4.1.c: 947: int working_register = 0;
  1812  0C81  01F6               	clrf	move_temp_to_send@working_register
  1813  0C82  01F7               	clrf	move_temp_to_send@working_register+1
  1814                           
  1815                           ;Main V4.1.c: 948: char byte_to_send = 0;
  1816  0C83  01F8               	clrf	move_temp_to_send@byte_to_send
  1817                           
  1818                           ;Main V4.1.c: 949: if (*data_pointer == 0){
  1819  0C84  087C               	movf	move_temp_to_send@data_pointer,w
  1820  0C85  0084               	movwf	4
  1821  0C86  1383               	bcf	3,7	;select IRP bank0
  1822  0C87  0880               	movf	0,f
  1823  0C88  1D03               	skipz
  1824  0C89  0008               	return
  1825                           
  1826                           ;Main V4.1.c: 950: *data_pointer = 1;
  1827  0C8A  087C               	movf	move_temp_to_send@data_pointer,w
  1828  0C8B  0084               	movwf	4
  1829  0C8C  0180               	clrf	0
  1830  0C8D  0A80               	incf	0,f
  1831                           
  1832                           ;Main V4.1.c: 951: reg = data_pointer + 1;
  1833  0C8E  087C               	movf	move_temp_to_send@data_pointer,w
  1834  0C8F  3E01               	addlw	1
  1835  0C90  00F4               	movwf	??_move_temp_to_send
  1836  0C91  0874               	movf	??_move_temp_to_send,w
  1837  0C92  00FB               	movwf	move_temp_to_send@reg
  1838                           
  1839                           ;Main V4.1.c: 952: *reg = 0x81;
  1840  0C93  3081               	movlw	129
  1841  0C94  00F4               	movwf	??_move_temp_to_send
  1842  0C95  087B               	movf	move_temp_to_send@reg,w
  1843  0C96  0084               	movwf	4
  1844  0C97  0874               	movf	??_move_temp_to_send,w
  1845  0C98  0080               	movwf	0
  1846                           
  1847                           ;Main V4.1.c: 953: reg = data_pointer + 2;
  1848  0C99  087C               	movf	move_temp_to_send@data_pointer,w
  1849  0C9A  3E02               	addlw	2
  1850  0C9B  00F4               	movwf	??_move_temp_to_send
  1851  0C9C  0874               	movf	??_move_temp_to_send,w
  1852  0C9D  00FB               	movwf	move_temp_to_send@reg
  1853                           
  1854                           ;Main V4.1.c: 954: x = *reg;
  1855  0C9E  087B               	movf	move_temp_to_send@reg,w
  1856  0C9F  0084               	movwf	4
  1857  0CA0  0800               	movf	0,w
  1858  0CA1  00F4               	movwf	??_move_temp_to_send
  1859  0CA2  01F5               	clrf	??_move_temp_to_send+1
  1860  0CA3  0874               	movf	??_move_temp_to_send,w
  1861  0CA4  00F9               	movwf	move_temp_to_send@x
  1862  0CA5  0875               	movf	??_move_temp_to_send+1,w
  1863  0CA6  00FA               	movwf	move_temp_to_send@x+1
  1864                           
  1865                           ;Main V4.1.c: 955: x++;
  1866  0CA7  3001               	movlw	1
  1867  0CA8  07F9               	addwf	move_temp_to_send@x,f
  1868  0CA9  1803               	skipnc
  1869  0CAA  0AFA               	incf	move_temp_to_send@x+1,f
  1870  0CAB  3000               	movlw	0
  1871  0CAC  07FA               	addwf	move_temp_to_send@x+1,f
  1872                           
  1873                           ;Main V4.1.c: 956: if (x > 3){
  1874  0CAD  087A               	movf	move_temp_to_send@x+1,w
  1875  0CAE  3A80               	xorlw	128
  1876  0CAF  00FF               	movwf	127
  1877  0CB0  3080               	movlw	128
  1878  0CB1  027F               	subwf	127,w
  1879  0CB2  1D03               	skipz
  1880  0CB3  2CB6               	goto	u2435
  1881  0CB4  3004               	movlw	4
  1882  0CB5  0279               	subwf	move_temp_to_send@x,w
  1883  0CB6                     u2435:	
  1884  0CB6  1C03               	skipc
  1885  0CB7  2CBC               	goto	l2542
  1886                           
  1887                           ;Main V4.1.c: 957: x = 1;
  1888  0CB8  3001               	movlw	1
  1889  0CB9  00F9               	movwf	move_temp_to_send@x
  1890  0CBA  3000               	movlw	0
  1891  0CBB  00FA               	movwf	move_temp_to_send@x+1
  1892  0CBC                     l2542:	
  1893                           
  1894                           ;Main V4.1.c: 959: }
  1895                           ;Main V4.1.c: 960: *reg = x;
  1896  0CBC  0879               	movf	move_temp_to_send@x,w
  1897  0CBD  00F4               	movwf	??_move_temp_to_send
  1898  0CBE  087B               	movf	move_temp_to_send@reg,w
  1899  0CBF  0084               	movwf	4
  1900  0CC0  0874               	movf	??_move_temp_to_send,w
  1901  0CC1  1383               	bcf	3,7	;select IRP bank0
  1902  0CC2  0080               	movwf	0
  1903                           
  1904                           ;Main V4.1.c: 961: reg = data_pointer + 4;
  1905  0CC3  087C               	movf	move_temp_to_send@data_pointer,w
  1906  0CC4  3E04               	addlw	4
  1907  0CC5  00F4               	movwf	??_move_temp_to_send
  1908  0CC6  0874               	movf	??_move_temp_to_send,w
  1909  0CC7  00FB               	movwf	move_temp_to_send@reg
  1910                           
  1911                           ;Main V4.1.c: 962: byte_to_send = thermocouple_temp[x][0] & 0xff;
  1912  0CC8  3006               	movlw	6
  1913  0CC9  00F4               	movwf	??_move_temp_to_send
  1914  0CCA  0874               	movf	??_move_temp_to_send,w
  1915  0CCB  00F0               	movwf	___bmul@multiplicand
  1916  0CCC  0879               	movf	move_temp_to_send@x,w
  1917  0CCD  120A  158A  2093  120A  158A  	fcall	___bmul
  1918  0CD2  3EA0               	addlw	_thermocouple_temp& (0+255)
  1919  0CD3  0084               	movwf	4
  1920  0CD4  1383               	bcf	3,7	;select IRP bank1
  1921  0CD5  0800               	movf	0,w
  1922  0CD6  00F5               	movwf	??_move_temp_to_send+1
  1923  0CD7  0875               	movf	??_move_temp_to_send+1,w
  1924  0CD8  00F8               	movwf	move_temp_to_send@byte_to_send
  1925                           
  1926                           ;Main V4.1.c: 963: *reg = byte_to_send;
  1927  0CD9  0878               	movf	move_temp_to_send@byte_to_send,w
  1928  0CDA  00F4               	movwf	??_move_temp_to_send
  1929  0CDB  087B               	movf	move_temp_to_send@reg,w
  1930  0CDC  0084               	movwf	4
  1931  0CDD  0874               	movf	??_move_temp_to_send,w
  1932  0CDE  0080               	movwf	0
  1933                           
  1934                           ;Main V4.1.c: 964: reg = data_pointer + 3;
  1935  0CDF  087C               	movf	move_temp_to_send@data_pointer,w
  1936  0CE0  3E03               	addlw	3
  1937  0CE1  00F4               	movwf	??_move_temp_to_send
  1938  0CE2  0874               	movf	??_move_temp_to_send,w
  1939  0CE3  00FB               	movwf	move_temp_to_send@reg
  1940                           
  1941                           ;Main V4.1.c: 965: working_register = thermocouple_temp[x][0];
  1942  0CE4  3006               	movlw	6
  1943  0CE5  00F4               	movwf	??_move_temp_to_send
  1944  0CE6  0874               	movf	??_move_temp_to_send,w
  1945  0CE7  00F0               	movwf	___bmul@multiplicand
  1946  0CE8  0879               	movf	move_temp_to_send@x,w
  1947  0CE9  120A  158A  2093  120A  158A  	fcall	___bmul
  1948  0CEE  3EA0               	addlw	_thermocouple_temp& (0+255)
  1949  0CEF  0084               	movwf	4
  1950  0CF0  1383               	bcf	3,7	;select IRP bank1
  1951  0CF1  0800               	movf	0,w
  1952  0CF2  00F6               	movwf	move_temp_to_send@working_register
  1953  0CF3  0A84               	incf	4,f
  1954  0CF4  0800               	movf	0,w
  1955  0CF5  00F7               	movwf	move_temp_to_send@working_register+1
  1956                           
  1957                           ;Main V4.1.c: 966: working_register = working_register >> 8;
  1958  0CF6  0877               	movf	move_temp_to_send@working_register+1,w
  1959  0CF7  00F5               	movwf	??_move_temp_to_send+1
  1960  0CF8  0876               	movf	move_temp_to_send@working_register,w
  1961  0CF9  00F4               	movwf	??_move_temp_to_send
  1962  0CFA  3008               	movlw	8
  1963  0CFB  00FF               	movwf	127
  1964  0CFC                     u2445:	
  1965  0CFC  0D75               	rlf	??_move_temp_to_send+1,w
  1966  0CFD  0CF5               	rrf	??_move_temp_to_send+1,f
  1967  0CFE  0CF4               	rrf	??_move_temp_to_send,f
  1968  0CFF  0BFF               	decfsz	127,f
  1969  0D00  2CFC               	goto	u2445
  1970  0D01  0874               	movf	??_move_temp_to_send,w
  1971  0D02  00F6               	movwf	move_temp_to_send@working_register
  1972  0D03  0875               	movf	??_move_temp_to_send+1,w
  1973  0D04  00F7               	movwf	move_temp_to_send@working_register+1
  1974                           
  1975                           ;Main V4.1.c: 967: byte_to_send = working_register & 0xff;
  1976  0D05  0876               	movf	move_temp_to_send@working_register,w
  1977  0D06  00F4               	movwf	??_move_temp_to_send
  1978  0D07  0874               	movf	??_move_temp_to_send,w
  1979  0D08  00F8               	movwf	move_temp_to_send@byte_to_send
  1980                           
  1981                           ;Main V4.1.c: 968: *reg = byte_to_send;
  1982  0D09  0878               	movf	move_temp_to_send@byte_to_send,w
  1983  0D0A  00F4               	movwf	??_move_temp_to_send
  1984  0D0B  087B               	movf	move_temp_to_send@reg,w
  1985  0D0C  0084               	movwf	4
  1986  0D0D  0874               	movf	??_move_temp_to_send,w
  1987  0D0E  0080               	movwf	0
  1988  0D0F  0008               	return
  1989  0D10                     __end_of_move_temp_to_send:	
  1990                           
  1991                           	psect	text3
  1992  0066                     __ptext3:	
  1993 ;; *************** function _get_temp_from_right_tcs *****************
  1994 ;; Defined at:
  1995 ;;		line 659 in file "Main V4.1.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  position        4    1[BANK0 ] int [2]
  2000 ;;  x               2   10[BANK0 ] int 
  2001 ;;  byte_to_send    1    9[BANK0 ] unsigned char 
  2002 ;;  byte4           1    8[BANK0 ] unsigned char 
  2003 ;;  byte3           1    7[BANK0 ] unsigned char 
  2004 ;;  byte2           1    6[BANK0 ] unsigned char 
  2005 ;;  byte1           1    5[BANK0 ] unsigned char 
  2006 ;;  byte_receive    1    0[BANK0 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;		None               void
  2009 ;; Registers used:
  2010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         0      12       0       0       0
  2018 ;;      Temps:          6       0       0       0       0
  2019 ;;      Totals:         6      12       0       0       0
  2020 ;;Total ram usage:       18 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    1
  2023 ;; This function calls:
  2024 ;;		_SPI_TRANSFER
  2025 ;;		___bmul
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _get_temp_from_right_tcs
  2033  0066                     _get_temp_from_right_tcs:	
  2034                           
  2035                           ;Main V4.1.c: 660: char byte_to_send = 0;
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _get_temp_from_right_tcs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2039  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0067  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0068  01A9               	clrf	get_temp_from_right_tcs@byte_to_send
  2042                           
  2043                           ;Main V4.1.c: 661: char byte_received = 0;
  2044  0069  01A0               	clrf	get_temp_from_right_tcs@byte_received
  2045                           
  2046                           ;Main V4.1.c: 662: char byte1 = 0;
  2047  006A  01A5               	clrf	get_temp_from_right_tcs@byte1
  2048                           
  2049                           ;Main V4.1.c: 663: char byte2 = 0;
  2050  006B  01A6               	clrf	get_temp_from_right_tcs@byte2
  2051                           
  2052                           ;Main V4.1.c: 664: char byte3 = 0;
  2053  006C  01A7               	clrf	get_temp_from_right_tcs@byte3
  2054                           
  2055                           ;Main V4.1.c: 665: char byte4 = 0;
  2056  006D  01A8               	clrf	get_temp_from_right_tcs@byte4
  2057                           
  2058                           ;Main V4.1.c: 666: int x = 1;
  2059  006E  3001               	movlw	1
  2060  006F  00AA               	movwf	get_temp_from_right_tcs@x
  2061  0070  3000               	movlw	0
  2062  0071  00AB               	movwf	get_temp_from_right_tcs@x+1
  2063                           
  2064                           ;Main V4.1.c: 667: int position[2];
  2065                           ;Main V4.1.c: 669: position[0] = 00;
  2066  0072  01A1               	clrf	get_temp_from_right_tcs@position
  2067  0073  01A2               	clrf	get_temp_from_right_tcs@position+1
  2068                           
  2069                           ;Main V4.1.c: 670: position[1] = 16;
  2070  0074  3010               	movlw	16
  2071  0075  00A3               	movwf	get_temp_from_right_tcs@position+2
  2072  0076  3000               	movlw	0
  2073  0077  00A4               	movwf	get_temp_from_right_tcs@position+3
  2074                           
  2075                           ;Main V4.1.c: 671: RA1 = 0;
  2076  0078  1085               	bcf	5,1	;volatile
  2077                           
  2078                           ;Main V4.1.c: 672: _delay((unsigned long)((30)*(16000000/4000000.0)));
  2079  0079  3027               	movlw	39
  2080  007A  00F4               	movwf	??_get_temp_from_right_tcs
  2081  007B                     u2777:	
  2082  007B  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2083  007C  287B               	goto	u2777
  2084  007D  287E               	nop2	;nop
  2085                           
  2086                           ;Main V4.1.c: 673: RA1 = 1;
  2087  007E  1283               	bcf	3,5	;RP0=0, select bank0
  2088  007F  1303               	bcf	3,6	;RP1=0, select bank0
  2089  0080  1485               	bsf	5,1	;volatile
  2090  0081                     l2266:	
  2091                           ;Main V4.1.c: 674: while (x <= 3){
  2092                           
  2093  0081  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0082  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0083  082B               	movf	get_temp_from_right_tcs@x+1,w
  2096  0084  3A80               	xorlw	128
  2097  0085  00FF               	movwf	127
  2098  0086  3080               	movlw	128
  2099  0087  027F               	subwf	127,w
  2100  0088  1D03               	skipz
  2101  0089  288C               	goto	u2055
  2102  008A  3004               	movlw	4
  2103  008B  022A               	subwf	get_temp_from_right_tcs@x,w
  2104  008C                     u2055:	
  2105  008C  1803               	btfsc	3,0
  2106  008D  2A2A               	goto	l211
  2107                           
  2108                           ;Main V4.1.c: 675: RA2 = 0;
  2109  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2110  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0090  1105               	bcf	5,2	;volatile
  2112                           
  2113                           ;Main V4.1.c: 676: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2114  0091  3085               	movlw	133
  2115  0092  00F4               	movwf	??_get_temp_from_right_tcs
  2116  0093                     u2787:	
  2117  0093  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2118  0094  2893               	goto	u2787
  2119                           
  2120                           ;Main V4.1.c: 678: byte1= SPI_TRANSFER(byte_to_send);
  2121  0095  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0096  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0097  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2124  0098  120A  158A  214E  120A  118A  	fcall	_SPI_TRANSFER
  2125  009D  00F4               	movwf	??_get_temp_from_right_tcs
  2126  009E  0874               	movf	??_get_temp_from_right_tcs,w
  2127  009F  1283               	bcf	3,5	;RP0=0, select bank0
  2128  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2129  00A1  00A5               	movwf	get_temp_from_right_tcs@byte1
  2130                           
  2131                           ;Main V4.1.c: 679: byte2 = SPI_TRANSFER(byte_to_send);
  2132  00A2  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2133  00A3  120A  158A  214E  120A  118A  	fcall	_SPI_TRANSFER
  2134  00A8  00F4               	movwf	??_get_temp_from_right_tcs
  2135  00A9  0874               	movf	??_get_temp_from_right_tcs,w
  2136  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  2137  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  2138  00AC  00A6               	movwf	get_temp_from_right_tcs@byte2
  2139                           
  2140                           ;Main V4.1.c: 680: byte3 = SPI_TRANSFER(byte_to_send);
  2141  00AD  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2142  00AE  120A  158A  214E  120A  118A  	fcall	_SPI_TRANSFER
  2143  00B3  00F4               	movwf	??_get_temp_from_right_tcs
  2144  00B4  0874               	movf	??_get_temp_from_right_tcs,w
  2145  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  2146  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  2147  00B7  00A7               	movwf	get_temp_from_right_tcs@byte3
  2148                           
  2149                           ;Main V4.1.c: 681: byte4 = SPI_TRANSFER(byte_to_send);
  2150  00B8  0829               	movf	get_temp_from_right_tcs@byte_to_send,w
  2151  00B9  120A  158A  214E  120A  118A  	fcall	_SPI_TRANSFER
  2152  00BE  00F4               	movwf	??_get_temp_from_right_tcs
  2153  00BF  0874               	movf	??_get_temp_from_right_tcs,w
  2154  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2155  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2156  00C2  00A8               	movwf	get_temp_from_right_tcs@byte4
  2157                           
  2158                           ;Main V4.1.c: 682: thermocouple_temp[x][0] = (byte1 & 0x00FF);
  2159  00C3  0825               	movf	get_temp_from_right_tcs@byte1,w
  2160  00C4  00F4               	movwf	??_get_temp_from_right_tcs
  2161  00C5  01F5               	clrf	??_get_temp_from_right_tcs+1
  2162  00C6  3006               	movlw	6
  2163  00C7  00F6               	movwf	??_get_temp_from_right_tcs+2
  2164  00C8  0876               	movf	??_get_temp_from_right_tcs+2,w
  2165  00C9  00F0               	movwf	___bmul@multiplicand
  2166  00CA  082A               	movf	get_temp_from_right_tcs@x,w
  2167  00CB  120A  158A  2093  120A  118A  	fcall	___bmul
  2168  00D0  3EA0               	addlw	_thermocouple_temp& (0+255)
  2169  00D1  0084               	movwf	4
  2170  00D2  0874               	movf	??_get_temp_from_right_tcs,w
  2171  00D3  1383               	bcf	3,7	;select IRP bank1
  2172  00D4  0080               	movwf	0
  2173  00D5  0A84               	incf	4,f
  2174  00D6  0875               	movf	??_get_temp_from_right_tcs+1,w
  2175  00D7  0080               	movwf	0
  2176                           
  2177                           ;Main V4.1.c: 683: thermocouple_temp[x][0] = thermocouple_temp[x][0] << 8;
  2178  00D8  3006               	movlw	6
  2179  00D9  00F4               	movwf	??_get_temp_from_right_tcs
  2180  00DA  0874               	movf	??_get_temp_from_right_tcs,w
  2181  00DB  00F0               	movwf	___bmul@multiplicand
  2182  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  2183  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  2184  00DE  082A               	movf	get_temp_from_right_tcs@x,w
  2185  00DF  120A  158A  2093  120A  118A  	fcall	___bmul
  2186  00E4  3EA0               	addlw	_thermocouple_temp& (0+255)
  2187  00E5  0084               	movwf	4
  2188  00E6  1383               	bcf	3,7	;select IRP bank1
  2189  00E7  0800               	movf	0,w
  2190  00E8  00F5               	movwf	??_get_temp_from_right_tcs+1
  2191  00E9  0A84               	incf	4,f
  2192  00EA  0800               	movf	0,w
  2193  00EB  00F6               	movwf	??_get_temp_from_right_tcs+2
  2194  00EC  0875               	movf	??_get_temp_from_right_tcs+1,w
  2195  00ED  00F6               	movwf	??_get_temp_from_right_tcs+2
  2196  00EE  01F5               	clrf	??_get_temp_from_right_tcs+1
  2197  00EF  3006               	movlw	6
  2198  00F0  00F7               	movwf	??_get_temp_from_right_tcs+3
  2199  00F1  0877               	movf	??_get_temp_from_right_tcs+3,w
  2200  00F2  00F0               	movwf	___bmul@multiplicand
  2201  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2202  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2203  00F5  082A               	movf	get_temp_from_right_tcs@x,w
  2204  00F6  120A  158A  2093  120A  118A  	fcall	___bmul
  2205  00FB  3EA0               	addlw	_thermocouple_temp& (0+255)
  2206  00FC  0084               	movwf	4
  2207  00FD  0875               	movf	??_get_temp_from_right_tcs+1,w
  2208  00FE  1383               	bcf	3,7	;select IRP bank1
  2209  00FF  0080               	movwf	0
  2210  0100  0A84               	incf	4,f
  2211  0101  0876               	movf	??_get_temp_from_right_tcs+2,w
  2212  0102  0080               	movwf	0
  2213                           
  2214                           ;Main V4.1.c: 684: thermocouple_temp[x][0] = (thermocouple_temp[x][0] | byte2);
  2215  0103  3006               	movlw	6
  2216  0104  00F4               	movwf	??_get_temp_from_right_tcs
  2217  0105  0874               	movf	??_get_temp_from_right_tcs,w
  2218  0106  00F0               	movwf	___bmul@multiplicand
  2219  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0109  082A               	movf	get_temp_from_right_tcs@x,w
  2222  010A  120A  158A  2093  120A  118A  	fcall	___bmul
  2223  010F  3EA0               	addlw	_thermocouple_temp& (0+255)
  2224  0110  0084               	movwf	4
  2225  0111  1383               	bcf	3,7	;select IRP bank1
  2226  0112  0800               	movf	0,w
  2227  0113  00F5               	movwf	??_get_temp_from_right_tcs+1
  2228  0114  0A84               	incf	4,f
  2229  0115  0800               	movf	0,w
  2230  0116  00F6               	movwf	??_get_temp_from_right_tcs+2
  2231  0117  0875               	movf	??_get_temp_from_right_tcs+1,w
  2232  0118  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0119  1303               	bcf	3,6	;RP1=0, select bank0
  2234  011A  0426               	iorwf	get_temp_from_right_tcs@byte2,w
  2235  011B  00F7               	movwf	??_get_temp_from_right_tcs+3
  2236  011C  0876               	movf	??_get_temp_from_right_tcs+2,w
  2237  011D  00F8               	movwf	??_get_temp_from_right_tcs+4
  2238  011E  3006               	movlw	6
  2239  011F  00F9               	movwf	??_get_temp_from_right_tcs+5
  2240  0120  0879               	movf	??_get_temp_from_right_tcs+5,w
  2241  0121  00F0               	movwf	___bmul@multiplicand
  2242  0122  082A               	movf	get_temp_from_right_tcs@x,w
  2243  0123  120A  158A  2093  120A  118A  	fcall	___bmul
  2244  0128  3EA0               	addlw	_thermocouple_temp& (0+255)
  2245  0129  0084               	movwf	4
  2246  012A  0877               	movf	??_get_temp_from_right_tcs+3,w
  2247  012B  1383               	bcf	3,7	;select IRP bank1
  2248  012C  0080               	movwf	0
  2249  012D  0A84               	incf	4,f
  2250  012E  0878               	movf	??_get_temp_from_right_tcs+4,w
  2251  012F  0080               	movwf	0
  2252                           
  2253                           ;Main V4.1.c: 685: thermocouple_temp[x][0] = thermocouple_temp[x][0] >> 2;
  2254  0130  3006               	movlw	6
  2255  0131  00F4               	movwf	??_get_temp_from_right_tcs
  2256  0132  0874               	movf	??_get_temp_from_right_tcs,w
  2257  0133  00F0               	movwf	___bmul@multiplicand
  2258  0134  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0135  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0136  082A               	movf	get_temp_from_right_tcs@x,w
  2261  0137  120A  158A  2093  120A  118A  	fcall	___bmul
  2262  013C  3EA0               	addlw	_thermocouple_temp& (0+255)
  2263  013D  0084               	movwf	4
  2264  013E  1383               	bcf	3,7	;select IRP bank1
  2265  013F  0800               	movf	0,w
  2266  0140  00F5               	movwf	??_get_temp_from_right_tcs+1
  2267  0141  0A84               	incf	4,f
  2268  0142  0800               	movf	0,w
  2269  0143  00F6               	movwf	??_get_temp_from_right_tcs+2
  2270  0144  0D76               	rlf	??_get_temp_from_right_tcs+2,w
  2271  0145  0CF6               	rrf	??_get_temp_from_right_tcs+2,f
  2272  0146  0CF5               	rrf	??_get_temp_from_right_tcs+1,f
  2273  0147  0D76               	rlf	??_get_temp_from_right_tcs+2,w
  2274  0148  0CF6               	rrf	??_get_temp_from_right_tcs+2,f
  2275  0149  0CF5               	rrf	??_get_temp_from_right_tcs+1,f
  2276  014A  3006               	movlw	6
  2277  014B  00F7               	movwf	??_get_temp_from_right_tcs+3
  2278  014C  0877               	movf	??_get_temp_from_right_tcs+3,w
  2279  014D  00F0               	movwf	___bmul@multiplicand
  2280  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2281  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0150  082A               	movf	get_temp_from_right_tcs@x,w
  2283  0151  120A  158A  2093  120A  118A  	fcall	___bmul
  2284  0156  3EA0               	addlw	_thermocouple_temp& (0+255)
  2285  0157  0084               	movwf	4
  2286  0158  0875               	movf	??_get_temp_from_right_tcs+1,w
  2287  0159  1383               	bcf	3,7	;select IRP bank1
  2288  015A  0080               	movwf	0
  2289  015B  0A84               	incf	4,f
  2290  015C  0876               	movf	??_get_temp_from_right_tcs+2,w
  2291  015D  0080               	movwf	0
  2292                           
  2293                           ;Main V4.1.c: 687: thermocouple_temp[x][1] = (byte3 & 0x00FF);
  2294  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2295  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0160  0827               	movf	get_temp_from_right_tcs@byte3,w
  2297  0161  00F4               	movwf	??_get_temp_from_right_tcs
  2298  0162  01F5               	clrf	??_get_temp_from_right_tcs+1
  2299  0163  3006               	movlw	6
  2300  0164  00F6               	movwf	??_get_temp_from_right_tcs+2
  2301  0165  0876               	movf	??_get_temp_from_right_tcs+2,w
  2302  0166  00F0               	movwf	___bmul@multiplicand
  2303  0167  082A               	movf	get_temp_from_right_tcs@x,w
  2304  0168  120A  158A  2093  120A  118A  	fcall	___bmul
  2305  016D  3E02               	addlw	2
  2306  016E  3EA0               	addlw	_thermocouple_temp& (0+255)
  2307  016F  0084               	movwf	4
  2308  0170  0874               	movf	??_get_temp_from_right_tcs,w
  2309  0171  1383               	bcf	3,7	;select IRP bank1
  2310  0172  0080               	movwf	0
  2311  0173  0A84               	incf	4,f
  2312  0174  0875               	movf	??_get_temp_from_right_tcs+1,w
  2313  0175  0080               	movwf	0
  2314                           
  2315                           ;Main V4.1.c: 688: thermocouple_temp[x][1] = thermocouple_temp[x][1] << 8;
  2316  0176  3006               	movlw	6
  2317  0177  00F4               	movwf	??_get_temp_from_right_tcs
  2318  0178  0874               	movf	??_get_temp_from_right_tcs,w
  2319  0179  00F0               	movwf	___bmul@multiplicand
  2320  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2321  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2322  017C  082A               	movf	get_temp_from_right_tcs@x,w
  2323  017D  120A  158A  2093  120A  118A  	fcall	___bmul
  2324  0182  3E02               	addlw	2
  2325  0183  3EA0               	addlw	_thermocouple_temp& (0+255)
  2326  0184  0084               	movwf	4
  2327  0185  1383               	bcf	3,7	;select IRP bank1
  2328  0186  0800               	movf	0,w
  2329  0187  00F5               	movwf	??_get_temp_from_right_tcs+1
  2330  0188  0A84               	incf	4,f
  2331  0189  0800               	movf	0,w
  2332  018A  00F6               	movwf	??_get_temp_from_right_tcs+2
  2333  018B  0875               	movf	??_get_temp_from_right_tcs+1,w
  2334  018C  00F6               	movwf	??_get_temp_from_right_tcs+2
  2335  018D  01F5               	clrf	??_get_temp_from_right_tcs+1
  2336  018E  3006               	movlw	6
  2337  018F  00F7               	movwf	??_get_temp_from_right_tcs+3
  2338  0190  0877               	movf	??_get_temp_from_right_tcs+3,w
  2339  0191  00F0               	movwf	___bmul@multiplicand
  2340  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0194  082A               	movf	get_temp_from_right_tcs@x,w
  2343  0195  120A  158A  2093  120A  118A  	fcall	___bmul
  2344  019A  3E02               	addlw	2
  2345  019B  3EA0               	addlw	_thermocouple_temp& (0+255)
  2346  019C  0084               	movwf	4
  2347  019D  0875               	movf	??_get_temp_from_right_tcs+1,w
  2348  019E  1383               	bcf	3,7	;select IRP bank1
  2349  019F  0080               	movwf	0
  2350  01A0  0A84               	incf	4,f
  2351  01A1  0876               	movf	??_get_temp_from_right_tcs+2,w
  2352  01A2  0080               	movwf	0
  2353                           
  2354                           ;Main V4.1.c: 689: thermocouple_temp[x][1] = (thermocouple_temp[x][1] | byte4);
  2355  01A3  3006               	movlw	6
  2356  01A4  00F4               	movwf	??_get_temp_from_right_tcs
  2357  01A5  0874               	movf	??_get_temp_from_right_tcs,w
  2358  01A6  00F0               	movwf	___bmul@multiplicand
  2359  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2360  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2361  01A9  082A               	movf	get_temp_from_right_tcs@x,w
  2362  01AA  120A  158A  2093  120A  118A  	fcall	___bmul
  2363  01AF  3E02               	addlw	2
  2364  01B0  3EA0               	addlw	_thermocouple_temp& (0+255)
  2365  01B1  0084               	movwf	4
  2366  01B2  1383               	bcf	3,7	;select IRP bank1
  2367  01B3  0800               	movf	0,w
  2368  01B4  00F5               	movwf	??_get_temp_from_right_tcs+1
  2369  01B5  0A84               	incf	4,f
  2370  01B6  0800               	movf	0,w
  2371  01B7  00F6               	movwf	??_get_temp_from_right_tcs+2
  2372  01B8  0875               	movf	??_get_temp_from_right_tcs+1,w
  2373  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2374  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2375  01BB  0428               	iorwf	get_temp_from_right_tcs@byte4,w
  2376  01BC  00F7               	movwf	??_get_temp_from_right_tcs+3
  2377  01BD  0876               	movf	??_get_temp_from_right_tcs+2,w
  2378  01BE  00F8               	movwf	??_get_temp_from_right_tcs+4
  2379  01BF  3006               	movlw	6
  2380  01C0  00F9               	movwf	??_get_temp_from_right_tcs+5
  2381  01C1  0879               	movf	??_get_temp_from_right_tcs+5,w
  2382  01C2  00F0               	movwf	___bmul@multiplicand
  2383  01C3  082A               	movf	get_temp_from_right_tcs@x,w
  2384  01C4  120A  158A  2093  120A  118A  	fcall	___bmul
  2385  01C9  3E02               	addlw	2
  2386  01CA  3EA0               	addlw	_thermocouple_temp& (0+255)
  2387  01CB  0084               	movwf	4
  2388  01CC  0877               	movf	??_get_temp_from_right_tcs+3,w
  2389  01CD  1383               	bcf	3,7	;select IRP bank1
  2390  01CE  0080               	movwf	0
  2391  01CF  0A84               	incf	4,f
  2392  01D0  0878               	movf	??_get_temp_from_right_tcs+4,w
  2393  01D1  0080               	movwf	0
  2394                           
  2395                           ;Main V4.1.c: 690: thermocouple_temp[x][1] = thermocouple_temp[x][1] >> 4;
  2396  01D2  3006               	movlw	6
  2397  01D3  00F4               	movwf	??_get_temp_from_right_tcs
  2398  01D4  0874               	movf	??_get_temp_from_right_tcs,w
  2399  01D5  00F0               	movwf	___bmul@multiplicand
  2400  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2401  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2402  01D8  082A               	movf	get_temp_from_right_tcs@x,w
  2403  01D9  120A  158A  2093  120A  118A  	fcall	___bmul
  2404  01DE  3E02               	addlw	2
  2405  01DF  3EA0               	addlw	_thermocouple_temp& (0+255)
  2406  01E0  0084               	movwf	4
  2407  01E1  1383               	bcf	3,7	;select IRP bank1
  2408  01E2  0800               	movf	0,w
  2409  01E3  00F5               	movwf	??_get_temp_from_right_tcs+1
  2410  01E4  0A84               	incf	4,f
  2411  01E5  0800               	movf	0,w
  2412  01E6  00F6               	movwf	??_get_temp_from_right_tcs+2
  2413  01E7  3004               	movlw	4
  2414  01E8  00FF               	movwf	127
  2415  01E9                     u2045:	
  2416  01E9  0D76               	rlf	??_get_temp_from_right_tcs+2,w
  2417  01EA  0CF6               	rrf	??_get_temp_from_right_tcs+2,f
  2418  01EB  0CF5               	rrf	??_get_temp_from_right_tcs+1,f
  2419  01EC  0BFF               	decfsz	127,f
  2420  01ED  29E9               	goto	u2045
  2421  01EE  3006               	movlw	6
  2422  01EF  00F7               	movwf	??_get_temp_from_right_tcs+3
  2423  01F0  0877               	movf	??_get_temp_from_right_tcs+3,w
  2424  01F1  00F0               	movwf	___bmul@multiplicand
  2425  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2426  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2427  01F4  082A               	movf	get_temp_from_right_tcs@x,w
  2428  01F5  120A  158A  2093  120A  118A  	fcall	___bmul
  2429  01FA  3E02               	addlw	2
  2430  01FB  3EA0               	addlw	_thermocouple_temp& (0+255)
  2431  01FC  0084               	movwf	4
  2432  01FD  0875               	movf	??_get_temp_from_right_tcs+1,w
  2433  01FE  1383               	bcf	3,7	;select IRP bank1
  2434  01FF  0080               	movwf	0
  2435  0200  0A84               	incf	4,f
  2436  0201  0876               	movf	??_get_temp_from_right_tcs+2,w
  2437  0202  0080               	movwf	0
  2438                           
  2439                           ;Main V4.1.c: 692: thermocouple_temp[x][2] = (byte4 & 0x000F);
  2440  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0205  0828               	movf	get_temp_from_right_tcs@byte4,w
  2443  0206  390F               	andlw	15
  2444  0207  00F4               	movwf	??_get_temp_from_right_tcs
  2445  0208  01F5               	clrf	??_get_temp_from_right_tcs+1
  2446  0209  3006               	movlw	6
  2447  020A  00F6               	movwf	??_get_temp_from_right_tcs+2
  2448  020B  0876               	movf	??_get_temp_from_right_tcs+2,w
  2449  020C  00F0               	movwf	___bmul@multiplicand
  2450  020D  082A               	movf	get_temp_from_right_tcs@x,w
  2451  020E  120A  158A  2093  120A  118A  	fcall	___bmul
  2452  0213  3E04               	addlw	4
  2453  0214  3EA0               	addlw	_thermocouple_temp& (0+255)
  2454  0215  0084               	movwf	4
  2455  0216  0874               	movf	??_get_temp_from_right_tcs,w
  2456  0217  1383               	bcf	3,7	;select IRP bank1
  2457  0218  0080               	movwf	0
  2458  0219  0A84               	incf	4,f
  2459  021A  0875               	movf	??_get_temp_from_right_tcs+1,w
  2460  021B  0080               	movwf	0
  2461                           
  2462                           ;Main V4.1.c: 694: x++;
  2463  021C  3001               	movlw	1
  2464  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2465  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2466  021F  07AA               	addwf	get_temp_from_right_tcs@x,f
  2467  0220  1803               	skipnc
  2468  0221  0AAB               	incf	get_temp_from_right_tcs@x+1,f
  2469  0222  3000               	movlw	0
  2470  0223  07AB               	addwf	get_temp_from_right_tcs@x+1,f
  2471                           
  2472                           ;Main V4.1.c: 695: RA2 = 1;
  2473  0224  1505               	bsf	5,2	;volatile
  2474                           
  2475                           ;Main V4.1.c: 696: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2476  0225  3085               	movlw	133
  2477  0226  00F4               	movwf	??_get_temp_from_right_tcs
  2478  0227                     u2797:	
  2479  0227  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2480  0228  2A27               	goto	u2797
  2481  0229  2881               	goto	l2266
  2482  022A                     l211:	
  2483                           
  2484                           ;Main V4.1.c: 697: }
  2485                           ;Main V4.1.c: 739: RA1 = 0;
  2486  022A  1283               	bcf	3,5	;RP0=0, select bank0
  2487  022B  1303               	bcf	3,6	;RP1=0, select bank0
  2488  022C  1085               	bcf	5,1	;volatile
  2489                           
  2490                           ;Main V4.1.c: 740: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2491  022D  3085               	movlw	133
  2492  022E  00F4               	movwf	??_get_temp_from_right_tcs
  2493  022F                     u2807:	
  2494  022F  0BF4               	decfsz	??_get_temp_from_right_tcs,f
  2495  0230  2A2F               	goto	u2807
  2496                           
  2497                           ;Main V4.1.c: 741: RA1 = 1;
  2498  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0233  1485               	bsf	5,1	;volatile
  2501  0234  0008               	return
  2502  0235                     __end_of_get_temp_from_right_tcs:	
  2503                           
  2504                           	psect	text4
  2505  0893                     __ptext4:	
  2506 ;; *************** function ___bmul *****************
  2507 ;; Defined at:
  2508 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  multiplier      1    wreg     unsigned char 
  2511 ;;  multiplicand    1    0[COMMON] unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  multiplier      1    3[COMMON] unsigned char 
  2514 ;;  product         1    2[COMMON] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      unsigned char 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         1       0       0       0       0
  2525 ;;      Locals:         2       0       0       0       0
  2526 ;;      Temps:          1       0       0       0       0
  2527 ;;      Totals:         4       0       0       0       0
  2528 ;;Total ram usage:        4 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_get_temp_from_right_tcs
  2534 ;;		_move_temp_to_send
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function ___bmul
  2540  0893                     ___bmul:	
  2541                           
  2542                           ;incstack = 0
  2543                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2544                           ;___bmul@multiplier stored from wreg
  2545  0893  00F3               	movwf	___bmul@multiplier
  2546  0894  01F2               	clrf	___bmul@product
  2547  0895                     l1986:	
  2548  0895  1C73               	btfss	___bmul@multiplier,0
  2549  0896  289B               	goto	l1990
  2550  0897  0870               	movf	___bmul@multiplicand,w
  2551  0898  00F1               	movwf	??___bmul
  2552  0899  0871               	movf	??___bmul,w
  2553  089A  07F2               	addwf	___bmul@product,f
  2554  089B                     l1990:	
  2555  089B  1003               	clrc
  2556  089C  0DF0               	rlf	___bmul@multiplicand,f
  2557  089D  1003               	clrc
  2558  089E  0CF3               	rrf	___bmul@multiplier,f
  2559  089F  08F3               	movf	___bmul@multiplier,f
  2560  08A0  1D03               	skipz
  2561  08A1  2895               	goto	l1986
  2562  08A2  0872               	movf	___bmul@product,w
  2563  08A3  0008               	return
  2564  08A4                     __end_of___bmul:	
  2565                           
  2566                           	psect	text5
  2567  0235                     __ptext5:	
  2568 ;; *************** function _display_temps_to_screen *****************
  2569 ;; Defined at:
  2570 ;;		line 746 in file "Main V4.1.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  fault_string   15   18[BANK3 ] unsigned char [15]
  2575 ;;  open_string    13   33[BANK3 ] unsigned char [13]
  2576 ;;  celsius_stri   12   46[BANK3 ] unsigned char [12]
  2577 ;;  shortgnd_str   11   69[BANK3 ] unsigned char [11]
  2578 ;;  shortvcc_str   11   58[BANK3 ] unsigned char [11]
  2579 ;;  sensor_three    6   12[BANK3 ] unsigned char [6]
  2580 ;;  sensor_two_s    6    6[BANK3 ] unsigned char [6]
  2581 ;;  sensor_one_s    6    0[BANK3 ] unsigned char [6]
  2582 ;;  working_regi    4   92[BANK3 ] long 
  2583 ;;  position        4   83[BANK3 ] int [2]
  2584 ;;  fault_string    1   91[BANK3 ] PTR unsigned char 
  2585 ;;		 -> display_temps_to_screen@fault_string(15), 
  2586 ;;  shortgnd_str    1   90[BANK3 ] PTR unsigned char 
  2587 ;;		 -> display_temps_to_screen@shortgnd_string(11), 
  2588 ;;  shortvcc_str    1   89[BANK3 ] PTR unsigned char 
  2589 ;;		 -> display_temps_to_screen@shortvcc_string(11), 
  2590 ;;  open_string_    1   88[BANK3 ] PTR unsigned char 
  2591 ;;		 -> display_temps_to_screen@open_string(13), 
  2592 ;;  celsius_stri    1   87[BANK3 ] PTR unsigned char 
  2593 ;;		 -> display_temps_to_screen@celsius_string(12), 
  2594 ;;  sensor_three    1   82[BANK3 ] PTR unsigned char 
  2595 ;;		 -> display_temps_to_screen@sensor_three_string(6), 
  2596 ;;  sensor_two_s    1   81[BANK3 ] PTR unsigned char 
  2597 ;;		 -> display_temps_to_screen@sensor_two_string(6), 
  2598 ;;  sensor_one_s    1   80[BANK3 ] PTR unsigned char 
  2599 ;;		 -> display_temps_to_screen@sensor_one_string(6), 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         0       0       0       0       0
  2610 ;;      Locals:         0       0       0      96       0
  2611 ;;      Temps:          0       4       0       0       0
  2612 ;;      Totals:         0       4       0      96       0
  2613 ;;Total ram usage:      100 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    3
  2616 ;; This function calls:
  2617 ;;		_LCDWriteCharacter
  2618 ;;		___altoft
  2619 ;;		___awtoft
  2620 ;;		___ftmul
  2621 ;;		___fttol
  2622 ;;		_char_to_decimal_print
  2623 ;;		_location
  2624 ;; This function is called by:
  2625 ;;		_main
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _display_temps_to_screen
  2631  0235                     _display_temps_to_screen:	
  2632                           
  2633                           ;Main V4.1.c: 747: int position[2];
  2634                           ;Main V4.1.c: 748: long int working_register = 0;
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _display_temps_to_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cs
      +                          tack]
  2638  0235  3000               	movlw	0
  2639  0236  1683               	bsf	3,5	;RP0=1, select bank3
  2640  0237  1703               	bsf	3,6	;RP1=1, select bank3
  2641  0238  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  2642  0239  3000               	movlw	0
  2643  023A  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  2644  023B  3000               	movlw	0
  2645  023C  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  2646  023D  3000               	movlw	0
  2647  023E  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  2648                           
  2649                           ;Main V4.1.c: 749: char sensor_one_string [] = "S1 = ";
  2650  023F  3090               	movlw	display_temps_to_screen@sensor_one_string& (0+255)
  2651  0240  0084               	movwf	4
  2652  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0243  0867               	movf	display_temps_to_screen@F1446,w
  2655  0244  1783               	bsf	3,7	;select IRP bank3
  2656  0245  0080               	movwf	0
  2657  0246  0A84               	incf	4,f
  2658  0247  0868               	movf	display_temps_to_screen@F1446+1,w
  2659  0248  0080               	movwf	0
  2660  0249  0A84               	incf	4,f
  2661  024A  0869               	movf	display_temps_to_screen@F1446+2,w
  2662  024B  0080               	movwf	0
  2663  024C  0A84               	incf	4,f
  2664  024D  086A               	movf	display_temps_to_screen@F1446+3,w
  2665  024E  0080               	movwf	0
  2666  024F  0A84               	incf	4,f
  2667  0250  086B               	movf	display_temps_to_screen@F1446+4,w
  2668  0251  0080               	movwf	0
  2669  0252  0A84               	incf	4,f
  2670  0253  086C               	movf	display_temps_to_screen@F1446+5,w
  2671  0254  0080               	movwf	0
  2672                           
  2673                           ;Main V4.1.c: 750: char *sensor_one_string_pointer;
  2674                           ;Main V4.1.c: 751: sensor_one_string_pointer = &sensor_one_string;
  2675  0255  3090               	movlw	display_temps_to_screen@sensor_one_string& (0+255)
  2676  0256  00C0               	movwf	??_display_temps_to_screen
  2677  0257  0840               	movf	??_display_temps_to_screen,w
  2678  0258  1683               	bsf	3,5	;RP0=1, select bank3
  2679  0259  1703               	bsf	3,6	;RP1=1, select bank3
  2680  025A  00E0               	movwf	display_temps_to_screen@sensor_one_string_pointer^(0+384)
  2681                           
  2682                           ;Main V4.1.c: 752: char sensor_two_string [] = "S2 = ";
  2683  025B  3096               	movlw	display_temps_to_screen@sensor_two_string& (0+255)
  2684  025C  0084               	movwf	4
  2685  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2686  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2687  025F  0868               	movf	display_temps_to_screen@F1449^(0+128),w
  2688  0260  0080               	movwf	0
  2689  0261  0A84               	incf	4,f
  2690  0262  0869               	movf	(display_temps_to_screen@F1449^(0+128)+1),w
  2691  0263  0080               	movwf	0
  2692  0264  0A84               	incf	4,f
  2693  0265  086A               	movf	(display_temps_to_screen@F1449^(0+128)+2),w
  2694  0266  0080               	movwf	0
  2695  0267  0A84               	incf	4,f
  2696  0268  086B               	movf	(display_temps_to_screen@F1449^(0+128)+3),w
  2697  0269  0080               	movwf	0
  2698  026A  0A84               	incf	4,f
  2699  026B  086C               	movf	(display_temps_to_screen@F1449^(0+128)+4),w
  2700  026C  0080               	movwf	0
  2701  026D  0A84               	incf	4,f
  2702  026E  086D               	movf	(display_temps_to_screen@F1449^(0+128)+5),w
  2703  026F  0080               	movwf	0
  2704                           
  2705                           ;Main V4.1.c: 753: char *sensor_two_string_pointer;
  2706                           ;Main V4.1.c: 754: sensor_two_string_pointer = &sensor_two_string;
  2707  0270  3096               	movlw	display_temps_to_screen@sensor_two_string& (0+255)
  2708  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0273  00C0               	movwf	??_display_temps_to_screen
  2711  0274  0840               	movf	??_display_temps_to_screen,w
  2712  0275  1683               	bsf	3,5	;RP0=1, select bank3
  2713  0276  1703               	bsf	3,6	;RP1=1, select bank3
  2714  0277  00E1               	movwf	display_temps_to_screen@sensor_two_string_pointer^(0+384)
  2715                           
  2716                           ;Main V4.1.c: 755: char sensor_three_string [] = "S3 = ";
  2717  0278  309C               	movlw	display_temps_to_screen@sensor_three_string& (0+255)
  2718  0279  0084               	movwf	4
  2719  027A  1283               	bcf	3,5	;RP0=0, select bank2
  2720  027B  1703               	bsf	3,6	;RP1=1, select bank2
  2721  027C  085B               	movf	display_temps_to_screen@F1452^(0+256),w
  2722  027D  0080               	movwf	0
  2723  027E  0A84               	incf	4,f
  2724  027F  085C               	movf	(display_temps_to_screen@F1452^(0+256)+1),w
  2725  0280  0080               	movwf	0
  2726  0281  0A84               	incf	4,f
  2727  0282  085D               	movf	(display_temps_to_screen@F1452^(0+256)+2),w
  2728  0283  0080               	movwf	0
  2729  0284  0A84               	incf	4,f
  2730  0285  085E               	movf	(display_temps_to_screen@F1452^(0+256)+3),w
  2731  0286  0080               	movwf	0
  2732  0287  0A84               	incf	4,f
  2733  0288  085F               	movf	(display_temps_to_screen@F1452^(0+256)+4),w
  2734  0289  0080               	movwf	0
  2735  028A  0A84               	incf	4,f
  2736  028B  0860               	movf	(display_temps_to_screen@F1452^(0+256)+5),w
  2737  028C  0080               	movwf	0
  2738                           
  2739                           ;Main V4.1.c: 756: char *sensor_three_string_pointer;
  2740                           ;Main V4.1.c: 757: sensor_three_string_pointer = &sensor_three_string;
  2741  028D  309C               	movlw	display_temps_to_screen@sensor_three_string& (0+255)
  2742  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2743  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0290  00C0               	movwf	??_display_temps_to_screen
  2745  0291  0840               	movf	??_display_temps_to_screen,w
  2746  0292  1683               	bsf	3,5	;RP0=1, select bank3
  2747  0293  1703               	bsf	3,6	;RP1=1, select bank3
  2748  0294  00E2               	movwf	display_temps_to_screen@sensor_three_string_pointer^(0+384)
  2749                           
  2750                           ;Main V4.1.c: 758: char celsius_string [] = " Celsius   ";
  2751  0295  30BE               	movlw	display_temps_to_screen@celsius_string& (0+255)
  2752  0296  0084               	movwf	4
  2753  0297  3039               	movlw	low display_temps_to_screen@F1455
  2754  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2756  029A  00C0               	movwf	??_display_temps_to_screen
  2757  029B  0804               	movf	4,w
  2758  029C  00C1               	movwf	??_display_temps_to_screen+1
  2759  029D  300C               	movlw	12
  2760  029E  00C2               	movwf	??_display_temps_to_screen+2
  2761  029F                     u2060:	
  2762  029F  0840               	movf	??_display_temps_to_screen,w
  2763  02A0  0084               	movwf	4
  2764  02A1  1783               	bsf	3,7	;select IRP bank2
  2765  02A2  0800               	movf	0,w
  2766  02A3  00C3               	movwf	??_display_temps_to_screen+3
  2767  02A4  0AC0               	incf	??_display_temps_to_screen,f
  2768  02A5  0841               	movf	??_display_temps_to_screen+1,w
  2769  02A6  0084               	movwf	4
  2770  02A7  0843               	movf	??_display_temps_to_screen+3,w
  2771  02A8  0080               	movwf	0
  2772  02A9  0AC1               	incf	??_display_temps_to_screen+1,f
  2773  02AA  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2774  02AB  2A9F               	goto	u2060
  2775                           
  2776                           ;Main V4.1.c: 759: char *celsius_string_pointer;
  2777                           ;Main V4.1.c: 760: celsius_string_pointer = &celsius_string;
  2778  02AC  30BE               	movlw	display_temps_to_screen@celsius_string& (0+255)
  2779  02AD  00C0               	movwf	??_display_temps_to_screen
  2780  02AE  0840               	movf	??_display_temps_to_screen,w
  2781  02AF  1683               	bsf	3,5	;RP0=1, select bank3
  2782  02B0  1703               	bsf	3,6	;RP1=1, select bank3
  2783  02B1  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  2784                           
  2785                           ;Main V4.1.c: 761: char open_string [] = "OPEN        ";
  2786  02B2  30B1               	movlw	display_temps_to_screen@open_string& (0+255)
  2787  02B3  0084               	movwf	4
  2788  02B4  302C               	movlw	low display_temps_to_screen@F1458
  2789  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2790  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2791  02B7  00C0               	movwf	??_display_temps_to_screen
  2792  02B8  0804               	movf	4,w
  2793  02B9  00C1               	movwf	??_display_temps_to_screen+1
  2794  02BA  300D               	movlw	13
  2795  02BB  00C2               	movwf	??_display_temps_to_screen+2
  2796  02BC                     u2070:	
  2797  02BC  0840               	movf	??_display_temps_to_screen,w
  2798  02BD  0084               	movwf	4
  2799  02BE  1783               	bsf	3,7	;select IRP bank2
  2800  02BF  0800               	movf	0,w
  2801  02C0  00C3               	movwf	??_display_temps_to_screen+3
  2802  02C1  0AC0               	incf	??_display_temps_to_screen,f
  2803  02C2  0841               	movf	??_display_temps_to_screen+1,w
  2804  02C3  0084               	movwf	4
  2805  02C4  0843               	movf	??_display_temps_to_screen+3,w
  2806  02C5  0080               	movwf	0
  2807  02C6  0AC1               	incf	??_display_temps_to_screen+1,f
  2808  02C7  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2809  02C8  2ABC               	goto	u2070
  2810                           
  2811                           ;Main V4.1.c: 762: char *open_string_pointer;
  2812                           ;Main V4.1.c: 763: open_string_pointer = &open_string;
  2813  02C9  30B1               	movlw	display_temps_to_screen@open_string& (0+255)
  2814  02CA  00C0               	movwf	??_display_temps_to_screen
  2815  02CB  0840               	movf	??_display_temps_to_screen,w
  2816  02CC  1683               	bsf	3,5	;RP0=1, select bank3
  2817  02CD  1703               	bsf	3,6	;RP1=1, select bank3
  2818  02CE  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  2819                           
  2820                           ;Main V4.1.c: 764: char shortvcc_string [] = "SHORT VCC ";
  2821  02CF  30CA               	movlw	display_temps_to_screen@shortvcc_string& (0+255)
  2822  02D0  0084               	movwf	4
  2823  02D1  3045               	movlw	low display_temps_to_screen@F1461
  2824  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2825  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2826  02D4  00C0               	movwf	??_display_temps_to_screen
  2827  02D5  0804               	movf	4,w
  2828  02D6  00C1               	movwf	??_display_temps_to_screen+1
  2829  02D7  300B               	movlw	11
  2830  02D8  00C2               	movwf	??_display_temps_to_screen+2
  2831  02D9                     u2080:	
  2832  02D9  0840               	movf	??_display_temps_to_screen,w
  2833  02DA  0084               	movwf	4
  2834  02DB  1783               	bsf	3,7	;select IRP bank2
  2835  02DC  0800               	movf	0,w
  2836  02DD  00C3               	movwf	??_display_temps_to_screen+3
  2837  02DE  0AC0               	incf	??_display_temps_to_screen,f
  2838  02DF  0841               	movf	??_display_temps_to_screen+1,w
  2839  02E0  0084               	movwf	4
  2840  02E1  0843               	movf	??_display_temps_to_screen+3,w
  2841  02E2  0080               	movwf	0
  2842  02E3  0AC1               	incf	??_display_temps_to_screen+1,f
  2843  02E4  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2844  02E5  2AD9               	goto	u2080
  2845                           
  2846                           ;Main V4.1.c: 765: char *shortvcc_string_pointer;
  2847                           ;Main V4.1.c: 766: shortvcc_string_pointer = &shortvcc_string;
  2848  02E6  30CA               	movlw	display_temps_to_screen@shortvcc_string& (0+255)
  2849  02E7  00C0               	movwf	??_display_temps_to_screen
  2850  02E8  0840               	movf	??_display_temps_to_screen,w
  2851  02E9  1683               	bsf	3,5	;RP0=1, select bank3
  2852  02EA  1703               	bsf	3,6	;RP1=1, select bank3
  2853  02EB  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  2854                           
  2855                           ;Main V4.1.c: 767: char shortgnd_string [] = "SHORT GND ";
  2856  02EC  30D5               	movlw	display_temps_to_screen@shortgnd_string& (0+255)
  2857  02ED  0084               	movwf	4
  2858  02EE  3050               	movlw	low display_temps_to_screen@F1464
  2859  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2860  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2861  02F1  00C0               	movwf	??_display_temps_to_screen
  2862  02F2  0804               	movf	4,w
  2863  02F3  00C1               	movwf	??_display_temps_to_screen+1
  2864  02F4  300B               	movlw	11
  2865  02F5  00C2               	movwf	??_display_temps_to_screen+2
  2866  02F6                     u2090:	
  2867  02F6  0840               	movf	??_display_temps_to_screen,w
  2868  02F7  0084               	movwf	4
  2869  02F8  1783               	bsf	3,7	;select IRP bank2
  2870  02F9  0800               	movf	0,w
  2871  02FA  00C3               	movwf	??_display_temps_to_screen+3
  2872  02FB  0AC0               	incf	??_display_temps_to_screen,f
  2873  02FC  0841               	movf	??_display_temps_to_screen+1,w
  2874  02FD  0084               	movwf	4
  2875  02FE  0843               	movf	??_display_temps_to_screen+3,w
  2876  02FF  0080               	movwf	0
  2877  0300  0AC1               	incf	??_display_temps_to_screen+1,f
  2878  0301  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2879  0302  2AF6               	goto	u2090
  2880                           
  2881                           ;Main V4.1.c: 768: char *shortgnd_string_pointer;
  2882                           ;Main V4.1.c: 769: shortgnd_string_pointer = &shortgnd_string;
  2883  0303  30D5               	movlw	display_temps_to_screen@shortgnd_string& (0+255)
  2884  0304  00C0               	movwf	??_display_temps_to_screen
  2885  0305  0840               	movf	??_display_temps_to_screen,w
  2886  0306  1683               	bsf	3,5	;RP0=1, select bank3
  2887  0307  1703               	bsf	3,6	;RP1=1, select bank3
  2888  0308  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  2889                           
  2890                           ;Main V4.1.c: 770: char fault_string [] = "FAULT         ";
  2891  0309  30A2               	movlw	display_temps_to_screen@fault_string& (0+255)
  2892  030A  0084               	movwf	4
  2893  030B  3010               	movlw	low display_temps_to_screen@F1467
  2894  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2895  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2896  030E  00C0               	movwf	??_display_temps_to_screen
  2897  030F  0804               	movf	4,w
  2898  0310  00C1               	movwf	??_display_temps_to_screen+1
  2899  0311  300F               	movlw	15
  2900  0312  00C2               	movwf	??_display_temps_to_screen+2
  2901  0313                     u2100:	
  2902  0313  0840               	movf	??_display_temps_to_screen,w
  2903  0314  0084               	movwf	4
  2904  0315  1783               	bsf	3,7	;select IRP bank2
  2905  0316  0800               	movf	0,w
  2906  0317  00C3               	movwf	??_display_temps_to_screen+3
  2907  0318  0AC0               	incf	??_display_temps_to_screen,f
  2908  0319  0841               	movf	??_display_temps_to_screen+1,w
  2909  031A  0084               	movwf	4
  2910  031B  0843               	movf	??_display_temps_to_screen+3,w
  2911  031C  0080               	movwf	0
  2912  031D  0AC1               	incf	??_display_temps_to_screen+1,f
  2913  031E  0BC2               	decfsz	??_display_temps_to_screen+2,f
  2914  031F  2B13               	goto	u2100
  2915                           
  2916                           ;Main V4.1.c: 771: char *fault_string_pointer;
  2917                           ;Main V4.1.c: 772: fault_string_pointer = &fault_string;
  2918  0320  30A2               	movlw	display_temps_to_screen@fault_string& (0+255)
  2919  0321  00C0               	movwf	??_display_temps_to_screen
  2920  0322  0840               	movf	??_display_temps_to_screen,w
  2921  0323  1683               	bsf	3,5	;RP0=1, select bank3
  2922  0324  1703               	bsf	3,6	;RP1=1, select bank3
  2923  0325  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  2924                           
  2925                           ;Main V4.1.c: 775: position[0] = 0;
  2926  0326  01E3               	clrf	display_temps_to_screen@position^(0+384)
  2927  0327  01E4               	clrf	(display_temps_to_screen@position+1)^(0+384)
  2928                           
  2929                           ;Main V4.1.c: 776: position[1] = 24;
  2930  0328  3018               	movlw	24
  2931  0329  00E5               	movwf	(display_temps_to_screen@position^(0+384)+2)
  2932  032A  3000               	movlw	0
  2933  032B  00E6               	movwf	(display_temps_to_screen@position^(0+384)+3)
  2934                           
  2935                           ;Main V4.1.c: 777: location(position);
  2936  032C  30E3               	movlw	display_temps_to_screen@position& (0+255)
  2937  032D  00F3               	movwf	location@position
  2938  032E  3001               	movlw	1
  2939  032F  00F4               	movwf	location@position+1
  2940  0330  120A  158A  2510  120A  118A  	fcall	_location
  2941  0335                     l2306:	
  2942                           ;Main V4.1.c: 778: while (*sensor_one_string_pointer != 0){
  2943                           
  2944  0335  1683               	bsf	3,5	;RP0=1, select bank3
  2945  0336  1703               	bsf	3,6	;RP1=1, select bank3
  2946  0337  0860               	movf	display_temps_to_screen@sensor_one_string_pointer^(0+384),w
  2947  0338  0084               	movwf	4
  2948  0339  1783               	bsf	3,7	;select IRP bank2
  2949  033A  0880               	movf	0,f
  2950  033B  1903               	btfsc	3,2
  2951  033C  2B51               	goto	l2308
  2952                           
  2953                           ;Main V4.1.c: 779: LCDWriteCharacter(*sensor_one_string_pointer);
  2954  033D  1683               	bsf	3,5	;RP0=1, select bank3
  2955  033E  1703               	bsf	3,6	;RP1=1, select bank3
  2956  033F  0860               	movf	display_temps_to_screen@sensor_one_string_pointer^(0+384),w
  2957  0340  0084               	movwf	4
  2958  0341  1783               	bsf	3,7	;select IRP bank2
  2959  0342  0800               	movf	0,w
  2960  0343  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  2961                           
  2962                           ;Main V4.1.c: 780: sensor_one_string_pointer++;
  2963  0348  3001               	movlw	1
  2964  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2965  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2966  034B  00C0               	movwf	??_display_temps_to_screen
  2967  034C  0840               	movf	??_display_temps_to_screen,w
  2968  034D  1683               	bsf	3,5	;RP0=1, select bank3
  2969  034E  1703               	bsf	3,6	;RP1=1, select bank3
  2970  034F  07E0               	addwf	display_temps_to_screen@sensor_one_string_pointer^(0+384),f
  2971  0350  2B35               	goto	l2306
  2972  0351                     l2308:	
  2973                           
  2974                           ;Main V4.1.c: 781: }
  2975                           ;Main V4.1.c: 782: if (thermocouple_temp[1][2] == 1){
  2976  0351  3001               	movlw	1
  2977  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2978  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2979  0354  062A               	xorwf	(_thermocouple_temp^(0+128)+10),w
  2980  0355  042B               	iorwf	((_thermocouple_temp+1)^(0+128)+10),w
  2981  0356  1903               	btfsc	3,2
  2982  0357  2B6B               	goto	l2316
  2983  0358  2B7C               	goto	l2320
  2984  0359                     l2312:	
  2985                           ;Main V4.1.c: 783: while (*open_string_pointer != 0){
  2986                           
  2987                           
  2988                           ;Main V4.1.c: 784: LCDWriteCharacter(*open_string_pointer);
  2989  0359  1683               	bsf	3,5	;RP0=1, select bank3
  2990  035A  1703               	bsf	3,6	;RP1=1, select bank3
  2991  035B  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  2992  035C  0084               	movwf	4
  2993  035D  0800               	movf	0,w
  2994  035E  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  2995                           
  2996                           ;Main V4.1.c: 785: open_string_pointer++;
  2997  0363  3001               	movlw	1
  2998  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0365  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0366  00C0               	movwf	??_display_temps_to_screen
  3001  0367  0840               	movf	??_display_temps_to_screen,w
  3002  0368  1683               	bsf	3,5	;RP0=1, select bank3
  3003  0369  1703               	bsf	3,6	;RP1=1, select bank3
  3004  036A  07E8               	addwf	display_temps_to_screen@open_string_pointer^(0+384),f
  3005  036B                     l2316:	
  3006  036B  1683               	bsf	3,5	;RP0=1, select bank3
  3007  036C  1703               	bsf	3,6	;RP1=1, select bank3
  3008  036D  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3009  036E  0084               	movwf	4
  3010  036F  1783               	bsf	3,7	;select IRP bank2
  3011  0370  0880               	movf	0,f
  3012  0371  1D03               	skipz
  3013  0372  2B59               	goto	l2312
  3014                           
  3015                           ;Main V4.1.c: 786: }
  3016                           ;Main V4.1.c: 787: open_string_pointer = &open_string;
  3017  0373  30B1               	movlw	display_temps_to_screen@open_string& (0+255)
  3018  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0375  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0376  00C0               	movwf	??_display_temps_to_screen
  3021  0377  0840               	movf	??_display_temps_to_screen,w
  3022  0378  1683               	bsf	3,5	;RP0=1, select bank3
  3023  0379  1703               	bsf	3,6	;RP1=1, select bank3
  3024  037A  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  3025                           
  3026                           ;Main V4.1.c: 788: }
  3027  037B  2D2D               	goto	l2380
  3028  037C                     l2320:	
  3029                           
  3030                           ;Main V4.1.c: 789: else if (thermocouple_temp[1][2] == 4){
  3031  037C  3004               	movlw	4
  3032  037D  1303               	bcf	3,6	;RP1=0, select bank1
  3033  037E  062A               	xorwf	(_thermocouple_temp^(0+128)+10),w
  3034  037F  042B               	iorwf	((_thermocouple_temp+1)^(0+128)+10),w
  3035  0380  1903               	btfsc	3,2
  3036  0381  2B95               	goto	l2328
  3037  0382  2BA6               	goto	l2332
  3038  0383                     l2324:	
  3039                           ;Main V4.1.c: 790: while (*shortvcc_string_pointer != 0){
  3040                           
  3041                           
  3042                           ;Main V4.1.c: 791: LCDWriteCharacter(*shortvcc_string_pointer);
  3043  0383  1683               	bsf	3,5	;RP0=1, select bank3
  3044  0384  1703               	bsf	3,6	;RP1=1, select bank3
  3045  0385  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3046  0386  0084               	movwf	4
  3047  0387  0800               	movf	0,w
  3048  0388  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3049                           
  3050                           ;Main V4.1.c: 792: shortvcc_string_pointer++;
  3051  038D  3001               	movlw	1
  3052  038E  1283               	bcf	3,5	;RP0=0, select bank0
  3053  038F  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0390  00C0               	movwf	??_display_temps_to_screen
  3055  0391  0840               	movf	??_display_temps_to_screen,w
  3056  0392  1683               	bsf	3,5	;RP0=1, select bank3
  3057  0393  1703               	bsf	3,6	;RP1=1, select bank3
  3058  0394  07E9               	addwf	display_temps_to_screen@shortvcc_string_pointer^(0+384),f
  3059  0395                     l2328:	
  3060  0395  1683               	bsf	3,5	;RP0=1, select bank3
  3061  0396  1703               	bsf	3,6	;RP1=1, select bank3
  3062  0397  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3063  0398  0084               	movwf	4
  3064  0399  1783               	bsf	3,7	;select IRP bank2
  3065  039A  0880               	movf	0,f
  3066  039B  1D03               	skipz
  3067  039C  2B83               	goto	l2324
  3068                           
  3069                           ;Main V4.1.c: 793: }
  3070                           ;Main V4.1.c: 794: shortvcc_string_pointer = &shortvcc_string;
  3071  039D  30CA               	movlw	display_temps_to_screen@shortvcc_string& (0+255)
  3072  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3073  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3074  03A0  00C0               	movwf	??_display_temps_to_screen
  3075  03A1  0840               	movf	??_display_temps_to_screen,w
  3076  03A2  1683               	bsf	3,5	;RP0=1, select bank3
  3077  03A3  1703               	bsf	3,6	;RP1=1, select bank3
  3078  03A4  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  3079                           
  3080                           ;Main V4.1.c: 795: }
  3081  03A5  2D2D               	goto	l2380
  3082  03A6                     l2332:	
  3083                           
  3084                           ;Main V4.1.c: 796: else if (thermocouple_temp[1][2] == 2){
  3085  03A6  3002               	movlw	2
  3086  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  3087  03A8  062A               	xorwf	(_thermocouple_temp^(0+128)+10),w
  3088  03A9  042B               	iorwf	((_thermocouple_temp+1)^(0+128)+10),w
  3089  03AA  1903               	btfsc	3,2
  3090  03AB  2BBF               	goto	l2340
  3091  03AC  2BD0               	goto	l2344
  3092  03AD                     l2336:	
  3093                           ;Main V4.1.c: 797: while (*shortgnd_string_pointer != 0){
  3094                           
  3095                           
  3096                           ;Main V4.1.c: 798: LCDWriteCharacter(*shortgnd_string_pointer);
  3097  03AD  1683               	bsf	3,5	;RP0=1, select bank3
  3098  03AE  1703               	bsf	3,6	;RP1=1, select bank3
  3099  03AF  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3100  03B0  0084               	movwf	4
  3101  03B1  0800               	movf	0,w
  3102  03B2  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3103                           
  3104                           ;Main V4.1.c: 799: shortgnd_string_pointer++;
  3105  03B7  3001               	movlw	1
  3106  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3107  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3108  03BA  00C0               	movwf	??_display_temps_to_screen
  3109  03BB  0840               	movf	??_display_temps_to_screen,w
  3110  03BC  1683               	bsf	3,5	;RP0=1, select bank3
  3111  03BD  1703               	bsf	3,6	;RP1=1, select bank3
  3112  03BE  07EA               	addwf	display_temps_to_screen@shortgnd_string_pointer^(0+384),f
  3113  03BF                     l2340:	
  3114  03BF  1683               	bsf	3,5	;RP0=1, select bank3
  3115  03C0  1703               	bsf	3,6	;RP1=1, select bank3
  3116  03C1  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3117  03C2  0084               	movwf	4
  3118  03C3  1783               	bsf	3,7	;select IRP bank2
  3119  03C4  0880               	movf	0,f
  3120  03C5  1D03               	skipz
  3121  03C6  2BAD               	goto	l2336
  3122                           
  3123                           ;Main V4.1.c: 800: }
  3124                           ;Main V4.1.c: 801: shortgnd_string_pointer = &shortgnd_string;
  3125  03C7  30D5               	movlw	display_temps_to_screen@shortgnd_string& (0+255)
  3126  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3127  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3128  03CA  00C0               	movwf	??_display_temps_to_screen
  3129  03CB  0840               	movf	??_display_temps_to_screen,w
  3130  03CC  1683               	bsf	3,5	;RP0=1, select bank3
  3131  03CD  1703               	bsf	3,6	;RP1=1, select bank3
  3132  03CE  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  3133                           
  3134                           ;Main V4.1.c: 802: }
  3135  03CF  2D2D               	goto	l2380
  3136  03D0                     l2344:	
  3137                           
  3138                           ;Main V4.1.c: 803: else if (thermocouple_temp[1][2] > 4){
  3139  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  3140  03D1  082B               	movf	((_thermocouple_temp+1)^(0+128)+10),w
  3141  03D2  3A80               	xorlw	128
  3142  03D3  00FF               	movwf	127
  3143  03D4  3080               	movlw	128
  3144  03D5  027F               	subwf	127,w
  3145  03D6  1D03               	skipz
  3146  03D7  2BDA               	goto	u2185
  3147  03D8  3005               	movlw	5
  3148  03D9  022A               	subwf	(_thermocouple_temp^(0+128)+10),w
  3149  03DA                     u2185:	
  3150  03DA  1803               	btfsc	3,0
  3151  03DB  2BF0               	goto	l2352
  3152  03DC  2C01               	goto	l2356
  3153  03DD                     l2348:	
  3154                           ;Main V4.1.c: 804: while (*fault_string_pointer != 0){
  3155                           
  3156                           
  3157                           ;Main V4.1.c: 805: LCDWriteCharacter(*fault_string_pointer);
  3158  03DD  1683               	bsf	3,5	;RP0=1, select bank3
  3159  03DE  1703               	bsf	3,6	;RP1=1, select bank3
  3160  03DF  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3161  03E0  0084               	movwf	4
  3162  03E1  1783               	bsf	3,7	;select IRP bank2
  3163  03E2  0800               	movf	0,w
  3164  03E3  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3165                           
  3166                           ;Main V4.1.c: 806: fault_string_pointer++;
  3167  03E8  3001               	movlw	1
  3168  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3169  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3170  03EB  00C0               	movwf	??_display_temps_to_screen
  3171  03EC  0840               	movf	??_display_temps_to_screen,w
  3172  03ED  1683               	bsf	3,5	;RP0=1, select bank3
  3173  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  3174  03EF  07EB               	addwf	display_temps_to_screen@fault_string_pointer^(0+384),f
  3175  03F0                     l2352:	
  3176  03F0  1683               	bsf	3,5	;RP0=1, select bank3
  3177  03F1  1703               	bsf	3,6	;RP1=1, select bank3
  3178  03F2  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3179  03F3  0084               	movwf	4
  3180  03F4  1783               	bsf	3,7	;select IRP bank2
  3181  03F5  0880               	movf	0,f
  3182  03F6  1D03               	skipz
  3183  03F7  2BDD               	goto	l2348
  3184                           
  3185                           ;Main V4.1.c: 807: }
  3186                           ;Main V4.1.c: 808: fault_string_pointer = &fault_string;
  3187  03F8  30A2               	movlw	display_temps_to_screen@fault_string& (0+255)
  3188  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  3189  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  3190  03FB  00C0               	movwf	??_display_temps_to_screen
  3191  03FC  0840               	movf	??_display_temps_to_screen,w
  3192  03FD  1683               	bsf	3,5	;RP0=1, select bank3
  3193  03FE  1703               	bsf	3,6	;RP1=1, select bank3
  3194  03FF  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  3195                           
  3196                           ;Main V4.1.c: 809: }
  3197  0400  2D2D               	goto	l2380
  3198  0401                     l2356:	
  3199                           
  3200                           ;Main V4.1.c: 821: else{
  3201                           ;Main V4.1.c: 822: working_register = (thermocouple_temp[1][0]) & 0x2000;
  3202  0401  3000               	movlw	0
  3203  0402  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0403  1303               	bcf	3,6	;RP1=0, select bank1
  3205  0404  0526               	andwf	(_thermocouple_temp^(0+128)+6),w
  3206  0405  1683               	bsf	3,5	;RP0=1, select bank3
  3207  0406  1703               	bsf	3,6	;RP1=1, select bank3
  3208  0407  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3209  0408  3020               	movlw	32
  3210  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3211  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3212  040B  0527               	andwf	((_thermocouple_temp+1)^(0+128)+6),w
  3213  040C  1683               	bsf	3,5	;RP0=1, select bank3
  3214  040D  1703               	bsf	3,6	;RP1=1, select bank3
  3215  040E  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3216  040F  01EE               	clrf	(display_temps_to_screen@working_register^(0+384)+2)
  3217  0410  1BED               	btfsc	(display_temps_to_screen@working_register^(0+384)+1),7
  3218  0411  03EE               	decf	(display_temps_to_screen@working_register+2)^(0+384),f
  3219  0412  086E               	movf	(display_temps_to_screen@working_register^(0+384)+2),w
  3220  0413  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3221                           
  3222                           ;Main V4.1.c: 823: if ((working_register == 0x2000)){
  3223  0414  3000               	movlw	0
  3224  0415  066F               	xorwf	(display_temps_to_screen@working_register+3)^(0+384),w
  3225  0416  1D03               	skipz
  3226  0417  2C22               	goto	u2205
  3227  0418  3000               	movlw	0
  3228  0419  066E               	xorwf	(display_temps_to_screen@working_register+2)^(0+384),w
  3229  041A  1D03               	skipz
  3230  041B  2C22               	goto	u2205
  3231  041C  3020               	movlw	32
  3232  041D  066D               	xorwf	(display_temps_to_screen@working_register+1)^(0+384),w
  3233  041E  1D03               	skipz
  3234  041F  2C22               	goto	u2205
  3235  0420  3000               	movlw	0
  3236  0421  066C               	xorwf	display_temps_to_screen@working_register^(0+384),w
  3237  0422                     u2205:	
  3238  0422  1D03               	skipz
  3239  0423  2CB9               	goto	l2368
  3240                           
  3241                           ;Main V4.1.c: 824: working_register = thermocouple_temp[1][0] & 0x1FFF;
  3242  0424  30FF               	movlw	255
  3243  0425  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0426  1303               	bcf	3,6	;RP1=0, select bank1
  3245  0427  0526               	andwf	(_thermocouple_temp^(0+128)+6),w
  3246  0428  1683               	bsf	3,5	;RP0=1, select bank3
  3247  0429  1703               	bsf	3,6	;RP1=1, select bank3
  3248  042A  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3249  042B  301F               	movlw	31
  3250  042C  1683               	bsf	3,5	;RP0=1, select bank1
  3251  042D  1303               	bcf	3,6	;RP1=0, select bank1
  3252  042E  0527               	andwf	((_thermocouple_temp+1)^(0+128)+6),w
  3253  042F  1683               	bsf	3,5	;RP0=1, select bank3
  3254  0430  1703               	bsf	3,6	;RP1=1, select bank3
  3255  0431  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3256  0432  01EE               	clrf	(display_temps_to_screen@working_register^(0+384)+2)
  3257  0433  1BED               	btfsc	(display_temps_to_screen@working_register^(0+384)+1),7
  3258  0434  03EE               	decf	(display_temps_to_screen@working_register+2)^(0+384),f
  3259  0435  086E               	movf	(display_temps_to_screen@working_register^(0+384)+2),w
  3260  0436  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3261                           
  3262                           ;Main V4.1.c: 826: working_register = ~ working_register;
  3263  0437  09EC               	comf	display_temps_to_screen@working_register^(0+384),f
  3264  0438  09ED               	comf	(display_temps_to_screen@working_register+1)^(0+384),f
  3265  0439  09EE               	comf	(display_temps_to_screen@working_register+2)^(0+384),f
  3266  043A  09EF               	comf	(display_temps_to_screen@working_register+3)^(0+384),f
  3267                           
  3268                           ;Main V4.1.c: 827: working_register = working_register & 0x0FFF;
  3269  043B  30FF               	movlw	255
  3270  043C  056C               	andwf	display_temps_to_screen@working_register^(0+384),w
  3271  043D  1283               	bcf	3,5	;RP0=0, select bank0
  3272  043E  1303               	bcf	3,6	;RP1=0, select bank0
  3273  043F  00C0               	movwf	??_display_temps_to_screen
  3274  0440  300F               	movlw	15
  3275  0441  1683               	bsf	3,5	;RP0=1, select bank3
  3276  0442  1703               	bsf	3,6	;RP1=1, select bank3
  3277  0443  056D               	andwf	(display_temps_to_screen@working_register+1)^(0+384),w
  3278  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3280  0446  00C1               	movwf	??_display_temps_to_screen+1
  3281  0447  3000               	movlw	0
  3282  0448  1683               	bsf	3,5	;RP0=1, select bank3
  3283  0449  1703               	bsf	3,6	;RP1=1, select bank3
  3284  044A  056E               	andwf	(display_temps_to_screen@working_register+2)^(0+384),w
  3285  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3286  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3287  044D  00C2               	movwf	??_display_temps_to_screen+2
  3288  044E  3000               	movlw	0
  3289  044F  1683               	bsf	3,5	;RP0=1, select bank3
  3290  0450  1703               	bsf	3,6	;RP1=1, select bank3
  3291  0451  056F               	andwf	(display_temps_to_screen@working_register+3)^(0+384),w
  3292  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0454  00C3               	movwf	??_display_temps_to_screen+3
  3295  0455  0843               	movf	??_display_temps_to_screen+3,w
  3296  0456  1683               	bsf	3,5	;RP0=1, select bank3
  3297  0457  1703               	bsf	3,6	;RP1=1, select bank3
  3298  0458  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3299  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3300  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3301  045B  0842               	movf	??_display_temps_to_screen+2,w
  3302  045C  1683               	bsf	3,5	;RP0=1, select bank3
  3303  045D  1703               	bsf	3,6	;RP1=1, select bank3
  3304  045E  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3305  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0461  0841               	movf	??_display_temps_to_screen+1,w
  3308  0462  1683               	bsf	3,5	;RP0=1, select bank3
  3309  0463  1703               	bsf	3,6	;RP1=1, select bank3
  3310  0464  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3311  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0467  0840               	movf	??_display_temps_to_screen,w
  3314  0468  1683               	bsf	3,5	;RP0=1, select bank3
  3315  0469  1703               	bsf	3,6	;RP1=1, select bank3
  3316  046A  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3317                           
  3318                           ;Main V4.1.c: 828: working_register = working_register * .25;
  3319  046B  086F               	movf	(display_temps_to_screen@working_register+3)^(0+384),w
  3320  046C  00FB               	movwf	___altoft@c+3
  3321  046D  086E               	movf	(display_temps_to_screen@working_register+2)^(0+384),w
  3322  046E  00FA               	movwf	___altoft@c+2
  3323  046F  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  3324  0470  00F9               	movwf	___altoft@c+1
  3325  0471  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  3326  0472  00F8               	movwf	___altoft@c
  3327  0473  120A  158A  21AF  120A  118A  	fcall	___altoft
  3328  0478  0878               	movf	?___altoft,w
  3329  0479  1283               	bcf	3,5	;RP0=0, select bank0
  3330  047A  1303               	bcf	3,6	;RP1=0, select bank0
  3331  047B  00A5               	movwf	___ftmul@f2
  3332  047C  0879               	movf	?___altoft+1,w
  3333  047D  00A6               	movwf	___ftmul@f2+1
  3334  047E  087A               	movf	?___altoft+2,w
  3335  047F  00A7               	movwf	___ftmul@f2+2
  3336  0480  3000               	movlw	0
  3337  0481  00A2               	movwf	___ftmul@f1
  3338  0482  3080               	movlw	128
  3339  0483  00A3               	movwf	___ftmul@f1+1
  3340  0484  303E               	movlw	62
  3341  0485  00A4               	movwf	___ftmul@f1+2
  3342  0486  120A  158A  25BB  120A  118A  	fcall	___ftmul
  3343  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3344  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3345  048D  0822               	movf	?___ftmul,w
  3346  048E  00B2               	movwf	___fttol@f1
  3347  048F  0823               	movf	?___ftmul+1,w
  3348  0490  00B3               	movwf	___fttol@f1+1
  3349  0491  0824               	movf	?___ftmul+2,w
  3350  0492  00B4               	movwf	___fttol@f1+2
  3351  0493  120A  158A  23EF  120A  118A  	fcall	___fttol
  3352  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0499  1303               	bcf	3,6	;RP1=0, select bank0
  3354  049A  0835               	movf	?___fttol+3,w
  3355  049B  1683               	bsf	3,5	;RP0=1, select bank3
  3356  049C  1703               	bsf	3,6	;RP1=1, select bank3
  3357  049D  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3358  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3359  049F  1303               	bcf	3,6	;RP1=0, select bank0
  3360  04A0  0834               	movf	?___fttol+2,w
  3361  04A1  1683               	bsf	3,5	;RP0=1, select bank3
  3362  04A2  1703               	bsf	3,6	;RP1=1, select bank3
  3363  04A3  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3364  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3365  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3366  04A6  0833               	movf	?___fttol+1,w
  3367  04A7  1683               	bsf	3,5	;RP0=1, select bank3
  3368  04A8  1703               	bsf	3,6	;RP1=1, select bank3
  3369  04A9  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3370  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3371  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  3372  04AC  0832               	movf	?___fttol,w
  3373  04AD  1683               	bsf	3,5	;RP0=1, select bank3
  3374  04AE  1703               	bsf	3,6	;RP1=1, select bank3
  3375  04AF  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3376                           
  3377                           ;Main V4.1.c: 829: LCDWriteCharacter('-');
  3378  04B0  302D               	movlw	45
  3379  04B1  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3380                           
  3381                           ;Main V4.1.c: 830: char_to_decimal_print(working_register);
  3382  04B6  1683               	bsf	3,5	;RP0=1, select bank3
  3383  04B7  1703               	bsf	3,6	;RP1=1, select bank3
  3384  04B8  2CFE               	goto	L1
  3385  04B9                     l2368:	
  3386                           ;Main V4.1.c: 831: }
  3387                           
  3388                           
  3389                           ;Main V4.1.c: 832: else{
  3390                           ;Main V4.1.c: 833: working_register = (thermocouple_temp[1][0]) * .25;
  3391  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3392  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3393  04BB  0827               	movf	((_thermocouple_temp+1)^(0+128)+6),w
  3394  04BC  01F9               	clrf	___awtoft@c+1
  3395  04BD  07F9               	addwf	___awtoft@c+1,f
  3396  04BE  0826               	movf	(_thermocouple_temp^(0+128)+6),w
  3397  04BF  01F8               	clrf	___awtoft@c
  3398  04C0  07F8               	addwf	___awtoft@c,f
  3399  04C1  120A  158A  20DD  120A  118A  	fcall	___awtoft
  3400  04C6  0878               	movf	?___awtoft,w
  3401  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3402  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3403  04C9  00A5               	movwf	___ftmul@f2
  3404  04CA  0879               	movf	?___awtoft+1,w
  3405  04CB  00A6               	movwf	___ftmul@f2+1
  3406  04CC  087A               	movf	?___awtoft+2,w
  3407  04CD  00A7               	movwf	___ftmul@f2+2
  3408  04CE  3000               	movlw	0
  3409  04CF  00A2               	movwf	___ftmul@f1
  3410  04D0  3080               	movlw	128
  3411  04D1  00A3               	movwf	___ftmul@f1+1
  3412  04D2  303E               	movlw	62
  3413  04D3  00A4               	movwf	___ftmul@f1+2
  3414  04D4  120A  158A  25BB  120A  118A  	fcall	___ftmul
  3415  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3416  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3417  04DB  0822               	movf	?___ftmul,w
  3418  04DC  00B2               	movwf	___fttol@f1
  3419  04DD  0823               	movf	?___ftmul+1,w
  3420  04DE  00B3               	movwf	___fttol@f1+1
  3421  04DF  0824               	movf	?___ftmul+2,w
  3422  04E0  00B4               	movwf	___fttol@f1+2
  3423  04E1  120A  158A  23EF  120A  118A  	fcall	___fttol
  3424  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  3425  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  3426  04E8  0835               	movf	?___fttol+3,w
  3427  04E9  1683               	bsf	3,5	;RP0=1, select bank3
  3428  04EA  1703               	bsf	3,6	;RP1=1, select bank3
  3429  04EB  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3430  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  3431  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  3432  04EE  0834               	movf	?___fttol+2,w
  3433  04EF  1683               	bsf	3,5	;RP0=1, select bank3
  3434  04F0  1703               	bsf	3,6	;RP1=1, select bank3
  3435  04F1  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3436  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3437  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3438  04F4  0833               	movf	?___fttol+1,w
  3439  04F5  1683               	bsf	3,5	;RP0=1, select bank3
  3440  04F6  1703               	bsf	3,6	;RP1=1, select bank3
  3441  04F7  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3442  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  3443  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  3444  04FA  0832               	movf	?___fttol,w
  3445  04FB  1683               	bsf	3,5	;RP0=1, select bank3
  3446  04FC  1703               	bsf	3,6	;RP1=1, select bank3
  3447  04FD  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3448  04FE                     L1:	
  3449                           
  3450                           ;Main V4.1.c: 834: char_to_decimal_print(working_register);
  3451  04FE  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  3452  04FF  01F9               	clrf	char_to_decimal_print@value+1
  3453  0500  07F9               	addwf	char_to_decimal_print@value+1,f
  3454  0501  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  3455  0502  01F8               	clrf	char_to_decimal_print@value
  3456  0503  07F8               	addwf	char_to_decimal_print@value,f
  3457  0504  120A  158A  22F6  120A  118A  	fcall	_char_to_decimal_print
  3458  0509                     l2376:	
  3459                           ;Main V4.1.c: 835: }
  3460                           ;Main V4.1.c: 836: while (*celsius_string_pointer != 0){
  3461                           
  3462  0509  1683               	bsf	3,5	;RP0=1, select bank3
  3463  050A  1703               	bsf	3,6	;RP1=1, select bank3
  3464  050B  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3465  050C  0084               	movwf	4
  3466  050D  1783               	bsf	3,7	;select IRP bank2
  3467  050E  0880               	movf	0,f
  3468  050F  1903               	btfsc	3,2
  3469  0510  2D25               	goto	l2378
  3470                           
  3471                           ;Main V4.1.c: 837: LCDWriteCharacter(*celsius_string_pointer);
  3472  0511  1683               	bsf	3,5	;RP0=1, select bank3
  3473  0512  1703               	bsf	3,6	;RP1=1, select bank3
  3474  0513  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3475  0514  0084               	movwf	4
  3476  0515  1783               	bsf	3,7	;select IRP bank2
  3477  0516  0800               	movf	0,w
  3478  0517  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3479                           
  3480                           ;Main V4.1.c: 838: celsius_string_pointer++;
  3481  051C  3001               	movlw	1
  3482  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3483  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3484  051F  00C0               	movwf	??_display_temps_to_screen
  3485  0520  0840               	movf	??_display_temps_to_screen,w
  3486  0521  1683               	bsf	3,5	;RP0=1, select bank3
  3487  0522  1703               	bsf	3,6	;RP1=1, select bank3
  3488  0523  07E7               	addwf	display_temps_to_screen@celsius_string_pointer^(0+384),f
  3489  0524  2D09               	goto	l2376
  3490  0525                     l2378:	
  3491                           
  3492                           ;Main V4.1.c: 839: }
  3493                           ;Main V4.1.c: 840: celsius_string_pointer = &celsius_string;
  3494  0525  30BE               	movlw	display_temps_to_screen@celsius_string& (0+255)
  3495  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3496  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3497  0528  00C0               	movwf	??_display_temps_to_screen
  3498  0529  0840               	movf	??_display_temps_to_screen,w
  3499  052A  1683               	bsf	3,5	;RP0=1, select bank3
  3500  052B  1703               	bsf	3,6	;RP1=1, select bank3
  3501  052C  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  3502  052D                     l2380:	
  3503                           
  3504                           ;Main V4.1.c: 841: }
  3505                           ;Main V4.1.c: 846: position[0] = 0;
  3506  052D  01E3               	clrf	display_temps_to_screen@position^(0+384)
  3507  052E  01E4               	clrf	(display_temps_to_screen@position+1)^(0+384)
  3508                           
  3509                           ;Main V4.1.c: 847: position[1] = 16;
  3510  052F  3010               	movlw	16
  3511  0530  00E5               	movwf	(display_temps_to_screen@position^(0+384)+2)
  3512  0531  3000               	movlw	0
  3513  0532  00E6               	movwf	(display_temps_to_screen@position^(0+384)+3)
  3514                           
  3515                           ;Main V4.1.c: 848: location(position);
  3516  0533  30E3               	movlw	display_temps_to_screen@position& (0+255)
  3517  0534  00F3               	movwf	location@position
  3518  0535  3001               	movlw	1
  3519  0536  00F4               	movwf	location@position+1
  3520  0537  120A  158A  2510  120A  118A  	fcall	_location
  3521  053C                     l2390:	
  3522                           ;Main V4.1.c: 849: while (*sensor_two_string_pointer != 0){
  3523                           
  3524  053C  1683               	bsf	3,5	;RP0=1, select bank3
  3525  053D  1703               	bsf	3,6	;RP1=1, select bank3
  3526  053E  0861               	movf	display_temps_to_screen@sensor_two_string_pointer^(0+384),w
  3527  053F  0084               	movwf	4
  3528  0540  1783               	bsf	3,7	;select IRP bank2
  3529  0541  0880               	movf	0,f
  3530  0542  1903               	btfsc	3,2
  3531  0543  2D58               	goto	l2392
  3532                           
  3533                           ;Main V4.1.c: 850: LCDWriteCharacter(*sensor_two_string_pointer);
  3534  0544  1683               	bsf	3,5	;RP0=1, select bank3
  3535  0545  1703               	bsf	3,6	;RP1=1, select bank3
  3536  0546  0861               	movf	display_temps_to_screen@sensor_two_string_pointer^(0+384),w
  3537  0547  0084               	movwf	4
  3538  0548  1783               	bsf	3,7	;select IRP bank2
  3539  0549  0800               	movf	0,w
  3540  054A  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3541                           
  3542                           ;Main V4.1.c: 851: sensor_two_string_pointer++;
  3543  054F  3001               	movlw	1
  3544  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3546  0552  00C0               	movwf	??_display_temps_to_screen
  3547  0553  0840               	movf	??_display_temps_to_screen,w
  3548  0554  1683               	bsf	3,5	;RP0=1, select bank3
  3549  0555  1703               	bsf	3,6	;RP1=1, select bank3
  3550  0556  07E1               	addwf	display_temps_to_screen@sensor_two_string_pointer^(0+384),f
  3551  0557  2D3C               	goto	l2390
  3552  0558                     l2392:	
  3553                           
  3554                           ;Main V4.1.c: 852: }
  3555                           ;Main V4.1.c: 853: if (thermocouple_temp[2][2] == 1){
  3556  0558  3001               	movlw	1
  3557  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3558  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3559  055B  0630               	xorwf	(_thermocouple_temp^(0+128)+16),w
  3560  055C  0431               	iorwf	((_thermocouple_temp+1)^(0+128)+16),w
  3561  055D  1903               	btfsc	3,2
  3562  055E  2D72               	goto	l2400
  3563  055F  2D83               	goto	l2404
  3564  0560                     l2396:	
  3565                           ;Main V4.1.c: 854: while (*open_string_pointer != 0){
  3566                           
  3567                           
  3568                           ;Main V4.1.c: 855: LCDWriteCharacter(*open_string_pointer);
  3569  0560  1683               	bsf	3,5	;RP0=1, select bank3
  3570  0561  1703               	bsf	3,6	;RP1=1, select bank3
  3571  0562  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3572  0563  0084               	movwf	4
  3573  0564  0800               	movf	0,w
  3574  0565  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3575                           
  3576                           ;Main V4.1.c: 856: open_string_pointer++;
  3577  056A  3001               	movlw	1
  3578  056B  1283               	bcf	3,5	;RP0=0, select bank0
  3579  056C  1303               	bcf	3,6	;RP1=0, select bank0
  3580  056D  00C0               	movwf	??_display_temps_to_screen
  3581  056E  0840               	movf	??_display_temps_to_screen,w
  3582  056F  1683               	bsf	3,5	;RP0=1, select bank3
  3583  0570  1703               	bsf	3,6	;RP1=1, select bank3
  3584  0571  07E8               	addwf	display_temps_to_screen@open_string_pointer^(0+384),f
  3585  0572                     l2400:	
  3586  0572  1683               	bsf	3,5	;RP0=1, select bank3
  3587  0573  1703               	bsf	3,6	;RP1=1, select bank3
  3588  0574  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3589  0575  0084               	movwf	4
  3590  0576  1783               	bsf	3,7	;select IRP bank2
  3591  0577  0880               	movf	0,f
  3592  0578  1D03               	skipz
  3593  0579  2D60               	goto	l2396
  3594                           
  3595                           ;Main V4.1.c: 857: }
  3596                           ;Main V4.1.c: 858: open_string_pointer = &open_string;
  3597  057A  30B1               	movlw	display_temps_to_screen@open_string& (0+255)
  3598  057B  1283               	bcf	3,5	;RP0=0, select bank0
  3599  057C  1303               	bcf	3,6	;RP1=0, select bank0
  3600  057D  00C0               	movwf	??_display_temps_to_screen
  3601  057E  0840               	movf	??_display_temps_to_screen,w
  3602  057F  1683               	bsf	3,5	;RP0=1, select bank3
  3603  0580  1703               	bsf	3,6	;RP1=1, select bank3
  3604  0581  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  3605                           
  3606                           ;Main V4.1.c: 859: }
  3607  0582  2E7C               	goto	l2452
  3608  0583                     l2404:	
  3609                           
  3610                           ;Main V4.1.c: 860: else if (thermocouple_temp[2][2] == 4){
  3611  0583  3004               	movlw	4
  3612  0584  1303               	bcf	3,6	;RP1=0, select bank1
  3613  0585  0630               	xorwf	(_thermocouple_temp^(0+128)+16),w
  3614  0586  0431               	iorwf	((_thermocouple_temp+1)^(0+128)+16),w
  3615  0587  1903               	btfsc	3,2
  3616  0588  2D9C               	goto	l2412
  3617  0589  2DAD               	goto	l2416
  3618  058A                     l2408:	
  3619                           ;Main V4.1.c: 861: while (*shortvcc_string_pointer != 0){
  3620                           
  3621                           
  3622                           ;Main V4.1.c: 862: LCDWriteCharacter(*shortvcc_string_pointer);
  3623  058A  1683               	bsf	3,5	;RP0=1, select bank3
  3624  058B  1703               	bsf	3,6	;RP1=1, select bank3
  3625  058C  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3626  058D  0084               	movwf	4
  3627  058E  0800               	movf	0,w
  3628  058F  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3629                           
  3630                           ;Main V4.1.c: 863: shortvcc_string_pointer++;
  3631  0594  3001               	movlw	1
  3632  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0596  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0597  00C0               	movwf	??_display_temps_to_screen
  3635  0598  0840               	movf	??_display_temps_to_screen,w
  3636  0599  1683               	bsf	3,5	;RP0=1, select bank3
  3637  059A  1703               	bsf	3,6	;RP1=1, select bank3
  3638  059B  07E9               	addwf	display_temps_to_screen@shortvcc_string_pointer^(0+384),f
  3639  059C                     l2412:	
  3640  059C  1683               	bsf	3,5	;RP0=1, select bank3
  3641  059D  1703               	bsf	3,6	;RP1=1, select bank3
  3642  059E  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  3643  059F  0084               	movwf	4
  3644  05A0  1783               	bsf	3,7	;select IRP bank2
  3645  05A1  0880               	movf	0,f
  3646  05A2  1D03               	skipz
  3647  05A3  2D8A               	goto	l2408
  3648                           
  3649                           ;Main V4.1.c: 864: }
  3650                           ;Main V4.1.c: 865: shortvcc_string_pointer = &shortvcc_string;
  3651  05A4  30CA               	movlw	display_temps_to_screen@shortvcc_string& (0+255)
  3652  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3653  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3654  05A7  00C0               	movwf	??_display_temps_to_screen
  3655  05A8  0840               	movf	??_display_temps_to_screen,w
  3656  05A9  1683               	bsf	3,5	;RP0=1, select bank3
  3657  05AA  1703               	bsf	3,6	;RP1=1, select bank3
  3658  05AB  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  3659                           
  3660                           ;Main V4.1.c: 866: }
  3661  05AC  2E7C               	goto	l2452
  3662  05AD                     l2416:	
  3663                           
  3664                           ;Main V4.1.c: 867: else if (thermocouple_temp[2][2] == 2){
  3665  05AD  3002               	movlw	2
  3666  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  3667  05AF  0630               	xorwf	(_thermocouple_temp^(0+128)+16),w
  3668  05B0  0431               	iorwf	((_thermocouple_temp+1)^(0+128)+16),w
  3669  05B1  1903               	btfsc	3,2
  3670  05B2  2DC6               	goto	l2424
  3671  05B3  2DD7               	goto	l2428
  3672  05B4                     l2420:	
  3673                           ;Main V4.1.c: 868: while (*shortgnd_string_pointer != 0){
  3674                           
  3675                           
  3676                           ;Main V4.1.c: 869: LCDWriteCharacter(*shortgnd_string_pointer);
  3677  05B4  1683               	bsf	3,5	;RP0=1, select bank3
  3678  05B5  1703               	bsf	3,6	;RP1=1, select bank3
  3679  05B6  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3680  05B7  0084               	movwf	4
  3681  05B8  0800               	movf	0,w
  3682  05B9  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3683                           
  3684                           ;Main V4.1.c: 870: shortgnd_string_pointer++;
  3685  05BE  3001               	movlw	1
  3686  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3687  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3688  05C1  00C0               	movwf	??_display_temps_to_screen
  3689  05C2  0840               	movf	??_display_temps_to_screen,w
  3690  05C3  1683               	bsf	3,5	;RP0=1, select bank3
  3691  05C4  1703               	bsf	3,6	;RP1=1, select bank3
  3692  05C5  07EA               	addwf	display_temps_to_screen@shortgnd_string_pointer^(0+384),f
  3693  05C6                     l2424:	
  3694  05C6  1683               	bsf	3,5	;RP0=1, select bank3
  3695  05C7  1703               	bsf	3,6	;RP1=1, select bank3
  3696  05C8  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  3697  05C9  0084               	movwf	4
  3698  05CA  1783               	bsf	3,7	;select IRP bank2
  3699  05CB  0880               	movf	0,f
  3700  05CC  1D03               	skipz
  3701  05CD  2DB4               	goto	l2420
  3702                           
  3703                           ;Main V4.1.c: 871: }
  3704                           ;Main V4.1.c: 872: shortgnd_string_pointer = &shortgnd_string;
  3705  05CE  30D5               	movlw	display_temps_to_screen@shortgnd_string& (0+255)
  3706  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3707  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3708  05D1  00C0               	movwf	??_display_temps_to_screen
  3709  05D2  0840               	movf	??_display_temps_to_screen,w
  3710  05D3  1683               	bsf	3,5	;RP0=1, select bank3
  3711  05D4  1703               	bsf	3,6	;RP1=1, select bank3
  3712  05D5  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  3713                           
  3714                           ;Main V4.1.c: 873: }
  3715  05D6  2E7C               	goto	l2452
  3716  05D7                     l2428:	
  3717                           
  3718                           ;Main V4.1.c: 874: else if (thermocouple_temp[2][2] > 4){
  3719  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  3720  05D8  0831               	movf	((_thermocouple_temp+1)^(0+128)+16),w
  3721  05D9  3A80               	xorlw	128
  3722  05DA  00FF               	movwf	127
  3723  05DB  3080               	movlw	128
  3724  05DC  027F               	subwf	127,w
  3725  05DD  1D03               	skipz
  3726  05DE  2DE1               	goto	u2295
  3727  05DF  3005               	movlw	5
  3728  05E0  0230               	subwf	(_thermocouple_temp^(0+128)+16),w
  3729  05E1                     u2295:	
  3730  05E1  1803               	btfsc	3,0
  3731  05E2  2DF7               	goto	l2436
  3732  05E3  2E08               	goto	l2440
  3733  05E4                     l2432:	
  3734                           ;Main V4.1.c: 875: while (*fault_string_pointer != 0){
  3735                           
  3736                           
  3737                           ;Main V4.1.c: 876: LCDWriteCharacter(*fault_string_pointer);
  3738  05E4  1683               	bsf	3,5	;RP0=1, select bank3
  3739  05E5  1703               	bsf	3,6	;RP1=1, select bank3
  3740  05E6  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3741  05E7  0084               	movwf	4
  3742  05E8  1783               	bsf	3,7	;select IRP bank2
  3743  05E9  0800               	movf	0,w
  3744  05EA  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3745                           
  3746                           ;Main V4.1.c: 877: fault_string_pointer++;
  3747  05EF  3001               	movlw	1
  3748  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3749  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  3750  05F2  00C0               	movwf	??_display_temps_to_screen
  3751  05F3  0840               	movf	??_display_temps_to_screen,w
  3752  05F4  1683               	bsf	3,5	;RP0=1, select bank3
  3753  05F5  1703               	bsf	3,6	;RP1=1, select bank3
  3754  05F6  07EB               	addwf	display_temps_to_screen@fault_string_pointer^(0+384),f
  3755  05F7                     l2436:	
  3756  05F7  1683               	bsf	3,5	;RP0=1, select bank3
  3757  05F8  1703               	bsf	3,6	;RP1=1, select bank3
  3758  05F9  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  3759  05FA  0084               	movwf	4
  3760  05FB  1783               	bsf	3,7	;select IRP bank2
  3761  05FC  0880               	movf	0,f
  3762  05FD  1D03               	skipz
  3763  05FE  2DE4               	goto	l2432
  3764                           
  3765                           ;Main V4.1.c: 878: }
  3766                           ;Main V4.1.c: 879: fault_string_pointer = &fault_string;
  3767  05FF  30A2               	movlw	display_temps_to_screen@fault_string& (0+255)
  3768  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0602  00C0               	movwf	??_display_temps_to_screen
  3771  0603  0840               	movf	??_display_temps_to_screen,w
  3772  0604  1683               	bsf	3,5	;RP0=1, select bank3
  3773  0605  1703               	bsf	3,6	;RP1=1, select bank3
  3774  0606  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  3775                           
  3776                           ;Main V4.1.c: 880: }
  3777  0607  2E7C               	goto	l2452
  3778  0608                     l2440:	
  3779                           
  3780                           ;Main V4.1.c: 881: else{
  3781                           ;Main V4.1.c: 882: working_register = (thermocouple_temp[2][0]) * .25;
  3782  0608  1683               	bsf	3,5	;RP0=1, select bank1
  3783  0609  1303               	bcf	3,6	;RP1=0, select bank1
  3784  060A  082D               	movf	((_thermocouple_temp+1)^(0+128)+12),w
  3785  060B  01F9               	clrf	___awtoft@c+1
  3786  060C  07F9               	addwf	___awtoft@c+1,f
  3787  060D  082C               	movf	(_thermocouple_temp^(0+128)+12),w
  3788  060E  01F8               	clrf	___awtoft@c
  3789  060F  07F8               	addwf	___awtoft@c,f
  3790  0610  120A  158A  20DD  120A  118A  	fcall	___awtoft
  3791  0615  0878               	movf	?___awtoft,w
  3792  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0618  00A5               	movwf	___ftmul@f2
  3795  0619  0879               	movf	?___awtoft+1,w
  3796  061A  00A6               	movwf	___ftmul@f2+1
  3797  061B  087A               	movf	?___awtoft+2,w
  3798  061C  00A7               	movwf	___ftmul@f2+2
  3799  061D  3000               	movlw	0
  3800  061E  00A2               	movwf	___ftmul@f1
  3801  061F  3080               	movlw	128
  3802  0620  00A3               	movwf	___ftmul@f1+1
  3803  0621  303E               	movlw	62
  3804  0622  00A4               	movwf	___ftmul@f1+2
  3805  0623  120A  158A  25BB  120A  118A  	fcall	___ftmul
  3806  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3808  062A  0822               	movf	?___ftmul,w
  3809  062B  00B2               	movwf	___fttol@f1
  3810  062C  0823               	movf	?___ftmul+1,w
  3811  062D  00B3               	movwf	___fttol@f1+1
  3812  062E  0824               	movf	?___ftmul+2,w
  3813  062F  00B4               	movwf	___fttol@f1+2
  3814  0630  120A  158A  23EF  120A  118A  	fcall	___fttol
  3815  0635  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0636  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0637  0835               	movf	?___fttol+3,w
  3818  0638  1683               	bsf	3,5	;RP0=1, select bank3
  3819  0639  1703               	bsf	3,6	;RP1=1, select bank3
  3820  063A  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  3821  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3822  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3823  063D  0834               	movf	?___fttol+2,w
  3824  063E  1683               	bsf	3,5	;RP0=1, select bank3
  3825  063F  1703               	bsf	3,6	;RP1=1, select bank3
  3826  0640  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  3827  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0643  0833               	movf	?___fttol+1,w
  3830  0644  1683               	bsf	3,5	;RP0=1, select bank3
  3831  0645  1703               	bsf	3,6	;RP1=1, select bank3
  3832  0646  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  3833  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3835  0649  0832               	movf	?___fttol,w
  3836  064A  1683               	bsf	3,5	;RP0=1, select bank3
  3837  064B  1703               	bsf	3,6	;RP1=1, select bank3
  3838  064C  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  3839                           
  3840                           ;Main V4.1.c: 885: char_to_decimal_print(working_register);
  3841  064D  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  3842  064E  01F9               	clrf	char_to_decimal_print@value+1
  3843  064F  07F9               	addwf	char_to_decimal_print@value+1,f
  3844  0650  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  3845  0651  01F8               	clrf	char_to_decimal_print@value
  3846  0652  07F8               	addwf	char_to_decimal_print@value,f
  3847  0653  120A  158A  22F6  120A  118A  	fcall	_char_to_decimal_print
  3848  0658                     l2448:	
  3849                           ;Main V4.1.c: 886: while (*celsius_string_pointer != 0){
  3850                           
  3851  0658  1683               	bsf	3,5	;RP0=1, select bank3
  3852  0659  1703               	bsf	3,6	;RP1=1, select bank3
  3853  065A  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3854  065B  0084               	movwf	4
  3855  065C  1783               	bsf	3,7	;select IRP bank2
  3856  065D  0880               	movf	0,f
  3857  065E  1903               	btfsc	3,2
  3858  065F  2E74               	goto	l2450
  3859                           
  3860                           ;Main V4.1.c: 887: LCDWriteCharacter(*celsius_string_pointer);
  3861  0660  1683               	bsf	3,5	;RP0=1, select bank3
  3862  0661  1703               	bsf	3,6	;RP1=1, select bank3
  3863  0662  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  3864  0663  0084               	movwf	4
  3865  0664  1783               	bsf	3,7	;select IRP bank2
  3866  0665  0800               	movf	0,w
  3867  0666  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3868                           
  3869                           ;Main V4.1.c: 888: celsius_string_pointer++;
  3870  066B  3001               	movlw	1
  3871  066C  1283               	bcf	3,5	;RP0=0, select bank0
  3872  066D  1303               	bcf	3,6	;RP1=0, select bank0
  3873  066E  00C0               	movwf	??_display_temps_to_screen
  3874  066F  0840               	movf	??_display_temps_to_screen,w
  3875  0670  1683               	bsf	3,5	;RP0=1, select bank3
  3876  0671  1703               	bsf	3,6	;RP1=1, select bank3
  3877  0672  07E7               	addwf	display_temps_to_screen@celsius_string_pointer^(0+384),f
  3878  0673  2E58               	goto	l2448
  3879  0674                     l2450:	
  3880                           
  3881                           ;Main V4.1.c: 889: }
  3882                           ;Main V4.1.c: 890: celsius_string_pointer = &celsius_string;
  3883  0674  30BE               	movlw	display_temps_to_screen@celsius_string& (0+255)
  3884  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3885  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3886  0677  00C0               	movwf	??_display_temps_to_screen
  3887  0678  0840               	movf	??_display_temps_to_screen,w
  3888  0679  1683               	bsf	3,5	;RP0=1, select bank3
  3889  067A  1703               	bsf	3,6	;RP1=1, select bank3
  3890  067B  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  3891  067C                     l2452:	
  3892                           
  3893                           ;Main V4.1.c: 891: }
  3894                           ;Main V4.1.c: 895: position[0] = 0;
  3895  067C  01E3               	clrf	display_temps_to_screen@position^(0+384)
  3896  067D  01E4               	clrf	(display_temps_to_screen@position+1)^(0+384)
  3897                           
  3898                           ;Main V4.1.c: 896: position[1] = 8;
  3899  067E  3008               	movlw	8
  3900  067F  00E5               	movwf	(display_temps_to_screen@position^(0+384)+2)
  3901  0680  3000               	movlw	0
  3902  0681  00E6               	movwf	(display_temps_to_screen@position^(0+384)+3)
  3903                           
  3904                           ;Main V4.1.c: 897: location(position);
  3905  0682  30E3               	movlw	display_temps_to_screen@position& (0+255)
  3906  0683  00F3               	movwf	location@position
  3907  0684  3001               	movlw	1
  3908  0685  00F4               	movwf	location@position+1
  3909  0686  120A  158A  2510  120A  118A  	fcall	_location
  3910  068B                     l2462:	
  3911                           ;Main V4.1.c: 898: while (*sensor_three_string_pointer != 0){
  3912                           
  3913  068B  1683               	bsf	3,5	;RP0=1, select bank3
  3914  068C  1703               	bsf	3,6	;RP1=1, select bank3
  3915  068D  0862               	movf	display_temps_to_screen@sensor_three_string_pointer^(0+384),w
  3916  068E  0084               	movwf	4
  3917  068F  1783               	bsf	3,7	;select IRP bank2
  3918  0690  0880               	movf	0,f
  3919  0691  1903               	btfsc	3,2
  3920  0692  2EA7               	goto	l2464
  3921                           
  3922                           ;Main V4.1.c: 899: LCDWriteCharacter(*sensor_three_string_pointer);
  3923  0693  1683               	bsf	3,5	;RP0=1, select bank3
  3924  0694  1703               	bsf	3,6	;RP1=1, select bank3
  3925  0695  0862               	movf	display_temps_to_screen@sensor_three_string_pointer^(0+384),w
  3926  0696  0084               	movwf	4
  3927  0697  1783               	bsf	3,7	;select IRP bank2
  3928  0698  0800               	movf	0,w
  3929  0699  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3930                           
  3931                           ;Main V4.1.c: 900: sensor_three_string_pointer++;
  3932  069E  3001               	movlw	1
  3933  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3934  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3935  06A1  00C0               	movwf	??_display_temps_to_screen
  3936  06A2  0840               	movf	??_display_temps_to_screen,w
  3937  06A3  1683               	bsf	3,5	;RP0=1, select bank3
  3938  06A4  1703               	bsf	3,6	;RP1=1, select bank3
  3939  06A5  07E2               	addwf	display_temps_to_screen@sensor_three_string_pointer^(0+384),f
  3940  06A6  2E8B               	goto	l2462
  3941  06A7                     l2464:	
  3942                           
  3943                           ;Main V4.1.c: 901: }
  3944                           ;Main V4.1.c: 902: if (thermocouple_temp[3][2] == 1){
  3945  06A7  3001               	movlw	1
  3946  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3947  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3948  06AA  0636               	xorwf	(_thermocouple_temp^(0+128)+22),w
  3949  06AB  0437               	iorwf	((_thermocouple_temp+1)^(0+128)+22),w
  3950  06AC  1903               	btfsc	3,2
  3951  06AD  2EC1               	goto	l2472
  3952  06AE  2ED2               	goto	l2476
  3953  06AF                     l2468:	
  3954                           ;Main V4.1.c: 903: while (*open_string_pointer != 0){
  3955                           
  3956                           
  3957                           ;Main V4.1.c: 904: LCDWriteCharacter(*open_string_pointer);
  3958  06AF  1683               	bsf	3,5	;RP0=1, select bank3
  3959  06B0  1703               	bsf	3,6	;RP1=1, select bank3
  3960  06B1  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3961  06B2  0084               	movwf	4
  3962  06B3  0800               	movf	0,w
  3963  06B4  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  3964                           
  3965                           ;Main V4.1.c: 905: open_string_pointer++;
  3966  06B9  3001               	movlw	1
  3967  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3968  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3969  06BC  00C0               	movwf	??_display_temps_to_screen
  3970  06BD  0840               	movf	??_display_temps_to_screen,w
  3971  06BE  1683               	bsf	3,5	;RP0=1, select bank3
  3972  06BF  1703               	bsf	3,6	;RP1=1, select bank3
  3973  06C0  07E8               	addwf	display_temps_to_screen@open_string_pointer^(0+384),f
  3974  06C1                     l2472:	
  3975  06C1  1683               	bsf	3,5	;RP0=1, select bank3
  3976  06C2  1703               	bsf	3,6	;RP1=1, select bank3
  3977  06C3  0868               	movf	display_temps_to_screen@open_string_pointer^(0+384),w
  3978  06C4  0084               	movwf	4
  3979  06C5  1783               	bsf	3,7	;select IRP bank2
  3980  06C6  0880               	movf	0,f
  3981  06C7  1D03               	skipz
  3982  06C8  2EAF               	goto	l2468
  3983                           
  3984                           ;Main V4.1.c: 906: }
  3985                           ;Main V4.1.c: 907: open_string_pointer = &open_string;
  3986  06C9  30B1               	movlw	display_temps_to_screen@open_string& (0+255)
  3987  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3988  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3989  06CC  00C0               	movwf	??_display_temps_to_screen
  3990  06CD  0840               	movf	??_display_temps_to_screen,w
  3991  06CE  1683               	bsf	3,5	;RP0=1, select bank3
  3992  06CF  1703               	bsf	3,6	;RP1=1, select bank3
  3993  06D0  00E8               	movwf	display_temps_to_screen@open_string_pointer^(0+384)
  3994                           
  3995                           ;Main V4.1.c: 908: }
  3996  06D1  0008               	return
  3997  06D2                     l2476:	
  3998                           
  3999                           ;Main V4.1.c: 909: else if (thermocouple_temp[3][2] == 4){
  4000  06D2  3004               	movlw	4
  4001  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  4002  06D4  0636               	xorwf	(_thermocouple_temp^(0+128)+22),w
  4003  06D5  0437               	iorwf	((_thermocouple_temp+1)^(0+128)+22),w
  4004  06D6  1903               	btfsc	3,2
  4005  06D7  2EEB               	goto	l2484
  4006  06D8  2EFC               	goto	l2488
  4007  06D9                     l2480:	
  4008                           ;Main V4.1.c: 910: while (*shortvcc_string_pointer != 0){
  4009                           
  4010                           
  4011                           ;Main V4.1.c: 911: LCDWriteCharacter(*shortvcc_string_pointer);
  4012  06D9  1683               	bsf	3,5	;RP0=1, select bank3
  4013  06DA  1703               	bsf	3,6	;RP1=1, select bank3
  4014  06DB  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  4015  06DC  0084               	movwf	4
  4016  06DD  0800               	movf	0,w
  4017  06DE  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  4018                           
  4019                           ;Main V4.1.c: 912: shortvcc_string_pointer++;
  4020  06E3  3001               	movlw	1
  4021  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  4022  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  4023  06E6  00C0               	movwf	??_display_temps_to_screen
  4024  06E7  0840               	movf	??_display_temps_to_screen,w
  4025  06E8  1683               	bsf	3,5	;RP0=1, select bank3
  4026  06E9  1703               	bsf	3,6	;RP1=1, select bank3
  4027  06EA  07E9               	addwf	display_temps_to_screen@shortvcc_string_pointer^(0+384),f
  4028  06EB                     l2484:	
  4029  06EB  1683               	bsf	3,5	;RP0=1, select bank3
  4030  06EC  1703               	bsf	3,6	;RP1=1, select bank3
  4031  06ED  0869               	movf	display_temps_to_screen@shortvcc_string_pointer^(0+384),w
  4032  06EE  0084               	movwf	4
  4033  06EF  1783               	bsf	3,7	;select IRP bank2
  4034  06F0  0880               	movf	0,f
  4035  06F1  1D03               	skipz
  4036  06F2  2ED9               	goto	l2480
  4037                           
  4038                           ;Main V4.1.c: 913: }
  4039                           ;Main V4.1.c: 914: shortvcc_string_pointer = &shortvcc_string;
  4040  06F3  30CA               	movlw	display_temps_to_screen@shortvcc_string& (0+255)
  4041  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  4042  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  4043  06F6  00C0               	movwf	??_display_temps_to_screen
  4044  06F7  0840               	movf	??_display_temps_to_screen,w
  4045  06F8  1683               	bsf	3,5	;RP0=1, select bank3
  4046  06F9  1703               	bsf	3,6	;RP1=1, select bank3
  4047  06FA  00E9               	movwf	display_temps_to_screen@shortvcc_string_pointer^(0+384)
  4048                           
  4049                           ;Main V4.1.c: 915: }
  4050  06FB  0008               	return
  4051  06FC                     l2488:	
  4052                           
  4053                           ;Main V4.1.c: 916: else if (thermocouple_temp[3][2] == 2){
  4054  06FC  3002               	movlw	2
  4055  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  4056  06FE  0636               	xorwf	(_thermocouple_temp^(0+128)+22),w
  4057  06FF  0437               	iorwf	((_thermocouple_temp+1)^(0+128)+22),w
  4058  0700  1903               	btfsc	3,2
  4059  0701  2F15               	goto	l2496
  4060  0702  2F26               	goto	l2500
  4061  0703                     l2492:	
  4062                           ;Main V4.1.c: 917: while (*shortgnd_string_pointer != 0){
  4063                           
  4064                           
  4065                           ;Main V4.1.c: 918: LCDWriteCharacter(*shortgnd_string_pointer);
  4066  0703  1683               	bsf	3,5	;RP0=1, select bank3
  4067  0704  1703               	bsf	3,6	;RP1=1, select bank3
  4068  0705  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  4069  0706  0084               	movwf	4
  4070  0707  0800               	movf	0,w
  4071  0708  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  4072                           
  4073                           ;Main V4.1.c: 919: shortgnd_string_pointer++;
  4074  070D  3001               	movlw	1
  4075  070E  1283               	bcf	3,5	;RP0=0, select bank0
  4076  070F  1303               	bcf	3,6	;RP1=0, select bank0
  4077  0710  00C0               	movwf	??_display_temps_to_screen
  4078  0711  0840               	movf	??_display_temps_to_screen,w
  4079  0712  1683               	bsf	3,5	;RP0=1, select bank3
  4080  0713  1703               	bsf	3,6	;RP1=1, select bank3
  4081  0714  07EA               	addwf	display_temps_to_screen@shortgnd_string_pointer^(0+384),f
  4082  0715                     l2496:	
  4083  0715  1683               	bsf	3,5	;RP0=1, select bank3
  4084  0716  1703               	bsf	3,6	;RP1=1, select bank3
  4085  0717  086A               	movf	display_temps_to_screen@shortgnd_string_pointer^(0+384),w
  4086  0718  0084               	movwf	4
  4087  0719  1783               	bsf	3,7	;select IRP bank2
  4088  071A  0880               	movf	0,f
  4089  071B  1D03               	skipz
  4090  071C  2F03               	goto	l2492
  4091                           
  4092                           ;Main V4.1.c: 920: }
  4093                           ;Main V4.1.c: 921: shortgnd_string_pointer = &shortgnd_string;
  4094  071D  30D5               	movlw	display_temps_to_screen@shortgnd_string& (0+255)
  4095  071E  1283               	bcf	3,5	;RP0=0, select bank0
  4096  071F  1303               	bcf	3,6	;RP1=0, select bank0
  4097  0720  00C0               	movwf	??_display_temps_to_screen
  4098  0721  0840               	movf	??_display_temps_to_screen,w
  4099  0722  1683               	bsf	3,5	;RP0=1, select bank3
  4100  0723  1703               	bsf	3,6	;RP1=1, select bank3
  4101  0724  00EA               	movwf	display_temps_to_screen@shortgnd_string_pointer^(0+384)
  4102                           
  4103                           ;Main V4.1.c: 922: }
  4104  0725  0008               	return
  4105  0726                     l2500:	
  4106                           
  4107                           ;Main V4.1.c: 923: else if (thermocouple_temp[3][2] > 4){
  4108  0726  1303               	bcf	3,6	;RP1=0, select bank1
  4109  0727  0837               	movf	((_thermocouple_temp+1)^(0+128)+22),w
  4110  0728  3A80               	xorlw	128
  4111  0729  00FF               	movwf	127
  4112  072A  3080               	movlw	128
  4113  072B  027F               	subwf	127,w
  4114  072C  1D03               	skipz
  4115  072D  2F30               	goto	u2395
  4116  072E  3005               	movlw	5
  4117  072F  0236               	subwf	(_thermocouple_temp^(0+128)+22),w
  4118  0730                     u2395:	
  4119  0730  1803               	btfsc	3,0
  4120  0731  2F46               	goto	l2508
  4121  0732  2F57               	goto	l2512
  4122  0733                     l2504:	
  4123                           ;Main V4.1.c: 924: while (*fault_string_pointer != 0){
  4124                           
  4125                           
  4126                           ;Main V4.1.c: 925: LCDWriteCharacter(*fault_string_pointer);
  4127  0733  1683               	bsf	3,5	;RP0=1, select bank3
  4128  0734  1703               	bsf	3,6	;RP1=1, select bank3
  4129  0735  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  4130  0736  0084               	movwf	4
  4131  0737  1783               	bsf	3,7	;select IRP bank2
  4132  0738  0800               	movf	0,w
  4133  0739  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  4134                           
  4135                           ;Main V4.1.c: 926: fault_string_pointer++;
  4136  073E  3001               	movlw	1
  4137  073F  1283               	bcf	3,5	;RP0=0, select bank0
  4138  0740  1303               	bcf	3,6	;RP1=0, select bank0
  4139  0741  00C0               	movwf	??_display_temps_to_screen
  4140  0742  0840               	movf	??_display_temps_to_screen,w
  4141  0743  1683               	bsf	3,5	;RP0=1, select bank3
  4142  0744  1703               	bsf	3,6	;RP1=1, select bank3
  4143  0745  07EB               	addwf	display_temps_to_screen@fault_string_pointer^(0+384),f
  4144  0746                     l2508:	
  4145  0746  1683               	bsf	3,5	;RP0=1, select bank3
  4146  0747  1703               	bsf	3,6	;RP1=1, select bank3
  4147  0748  086B               	movf	display_temps_to_screen@fault_string_pointer^(0+384),w
  4148  0749  0084               	movwf	4
  4149  074A  1783               	bsf	3,7	;select IRP bank2
  4150  074B  0880               	movf	0,f
  4151  074C  1D03               	skipz
  4152  074D  2F33               	goto	l2504
  4153                           
  4154                           ;Main V4.1.c: 927: }
  4155                           ;Main V4.1.c: 928: fault_string_pointer = &fault_string;
  4156  074E  30A2               	movlw	display_temps_to_screen@fault_string& (0+255)
  4157  074F  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0750  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0751  00C0               	movwf	??_display_temps_to_screen
  4160  0752  0840               	movf	??_display_temps_to_screen,w
  4161  0753  1683               	bsf	3,5	;RP0=1, select bank3
  4162  0754  1703               	bsf	3,6	;RP1=1, select bank3
  4163  0755  00EB               	movwf	display_temps_to_screen@fault_string_pointer^(0+384)
  4164                           
  4165                           ;Main V4.1.c: 929: }
  4166  0756  0008               	return
  4167  0757                     l2512:	
  4168                           
  4169                           ;Main V4.1.c: 930: else{
  4170                           ;Main V4.1.c: 931: working_register = (thermocouple_temp[3][0]) * .25;
  4171  0757  1683               	bsf	3,5	;RP0=1, select bank1
  4172  0758  1303               	bcf	3,6	;RP1=0, select bank1
  4173  0759  0833               	movf	((_thermocouple_temp+1)^(0+128)+18),w
  4174  075A  01F9               	clrf	___awtoft@c+1
  4175  075B  07F9               	addwf	___awtoft@c+1,f
  4176  075C  0832               	movf	(_thermocouple_temp^(0+128)+18),w
  4177  075D  01F8               	clrf	___awtoft@c
  4178  075E  07F8               	addwf	___awtoft@c,f
  4179  075F  120A  158A  20DD  120A  118A  	fcall	___awtoft
  4180  0764  0878               	movf	?___awtoft,w
  4181  0765  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0766  1303               	bcf	3,6	;RP1=0, select bank0
  4183  0767  00A5               	movwf	___ftmul@f2
  4184  0768  0879               	movf	?___awtoft+1,w
  4185  0769  00A6               	movwf	___ftmul@f2+1
  4186  076A  087A               	movf	?___awtoft+2,w
  4187  076B  00A7               	movwf	___ftmul@f2+2
  4188  076C  3000               	movlw	0
  4189  076D  00A2               	movwf	___ftmul@f1
  4190  076E  3080               	movlw	128
  4191  076F  00A3               	movwf	___ftmul@f1+1
  4192  0770  303E               	movlw	62
  4193  0771  00A4               	movwf	___ftmul@f1+2
  4194  0772  120A  158A  25BB  120A  118A  	fcall	___ftmul
  4195  0777  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0778  1303               	bcf	3,6	;RP1=0, select bank0
  4197  0779  0822               	movf	?___ftmul,w
  4198  077A  00B2               	movwf	___fttol@f1
  4199  077B  0823               	movf	?___ftmul+1,w
  4200  077C  00B3               	movwf	___fttol@f1+1
  4201  077D  0824               	movf	?___ftmul+2,w
  4202  077E  00B4               	movwf	___fttol@f1+2
  4203  077F  120A  158A  23EF  120A  118A  	fcall	___fttol
  4204  0784  1283               	bcf	3,5	;RP0=0, select bank0
  4205  0785  1303               	bcf	3,6	;RP1=0, select bank0
  4206  0786  0835               	movf	?___fttol+3,w
  4207  0787  1683               	bsf	3,5	;RP0=1, select bank3
  4208  0788  1703               	bsf	3,6	;RP1=1, select bank3
  4209  0789  00EF               	movwf	(display_temps_to_screen@working_register+3)^(0+384)
  4210  078A  1283               	bcf	3,5	;RP0=0, select bank0
  4211  078B  1303               	bcf	3,6	;RP1=0, select bank0
  4212  078C  0834               	movf	?___fttol+2,w
  4213  078D  1683               	bsf	3,5	;RP0=1, select bank3
  4214  078E  1703               	bsf	3,6	;RP1=1, select bank3
  4215  078F  00EE               	movwf	(display_temps_to_screen@working_register+2)^(0+384)
  4216  0790  1283               	bcf	3,5	;RP0=0, select bank0
  4217  0791  1303               	bcf	3,6	;RP1=0, select bank0
  4218  0792  0833               	movf	?___fttol+1,w
  4219  0793  1683               	bsf	3,5	;RP0=1, select bank3
  4220  0794  1703               	bsf	3,6	;RP1=1, select bank3
  4221  0795  00ED               	movwf	(display_temps_to_screen@working_register+1)^(0+384)
  4222  0796  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0797  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0798  0832               	movf	?___fttol,w
  4225  0799  1683               	bsf	3,5	;RP0=1, select bank3
  4226  079A  1703               	bsf	3,6	;RP1=1, select bank3
  4227  079B  00EC               	movwf	display_temps_to_screen@working_register^(0+384)
  4228                           
  4229                           ;Main V4.1.c: 934: char_to_decimal_print(working_register);
  4230  079C  086D               	movf	(display_temps_to_screen@working_register+1)^(0+384),w
  4231  079D  01F9               	clrf	char_to_decimal_print@value+1
  4232  079E  07F9               	addwf	char_to_decimal_print@value+1,f
  4233  079F  086C               	movf	display_temps_to_screen@working_register^(0+384),w
  4234  07A0  01F8               	clrf	char_to_decimal_print@value
  4235  07A1  07F8               	addwf	char_to_decimal_print@value,f
  4236  07A2  120A  158A  22F6  120A  118A  	fcall	_char_to_decimal_print
  4237  07A7                     l2520:	
  4238                           ;Main V4.1.c: 935: while (*celsius_string_pointer != 0){
  4239                           
  4240  07A7  1683               	bsf	3,5	;RP0=1, select bank3
  4241  07A8  1703               	bsf	3,6	;RP1=1, select bank3
  4242  07A9  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  4243  07AA  0084               	movwf	4
  4244  07AB  1783               	bsf	3,7	;select IRP bank2
  4245  07AC  0880               	movf	0,f
  4246  07AD  1903               	btfsc	3,2
  4247  07AE  2FC3               	goto	l2522
  4248                           
  4249                           ;Main V4.1.c: 936: LCDWriteCharacter(*celsius_string_pointer);
  4250  07AF  1683               	bsf	3,5	;RP0=1, select bank3
  4251  07B0  1703               	bsf	3,6	;RP1=1, select bank3
  4252  07B1  0867               	movf	display_temps_to_screen@celsius_string_pointer^(0+384),w
  4253  07B2  0084               	movwf	4
  4254  07B3  1783               	bsf	3,7	;select IRP bank2
  4255  07B4  0800               	movf	0,w
  4256  07B5  120A  158A  2362  120A  118A  	fcall	_LCDWriteCharacter
  4257                           
  4258                           ;Main V4.1.c: 937: celsius_string_pointer++;
  4259  07BA  3001               	movlw	1
  4260  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  4261  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  4262  07BD  00C0               	movwf	??_display_temps_to_screen
  4263  07BE  0840               	movf	??_display_temps_to_screen,w
  4264  07BF  1683               	bsf	3,5	;RP0=1, select bank3
  4265  07C0  1703               	bsf	3,6	;RP1=1, select bank3
  4266  07C1  07E7               	addwf	display_temps_to_screen@celsius_string_pointer^(0+384),f
  4267  07C2  2FA7               	goto	l2520
  4268  07C3                     l2522:	
  4269                           
  4270                           ;Main V4.1.c: 938: }
  4271                           ;Main V4.1.c: 939: celsius_string_pointer = &celsius_string;
  4272  07C3  30BE               	movlw	display_temps_to_screen@celsius_string& (0+255)
  4273  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  4274  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  4275  07C6  00C0               	movwf	??_display_temps_to_screen
  4276  07C7  0840               	movf	??_display_temps_to_screen,w
  4277  07C8  1683               	bsf	3,5	;RP0=1, select bank3
  4278  07C9  1703               	bsf	3,6	;RP1=1, select bank3
  4279  07CA  00E7               	movwf	display_temps_to_screen@celsius_string_pointer^(0+384)
  4280  07CB  0008               	return
  4281  07CC                     __end_of_display_temps_to_screen:	
  4282                           
  4283                           	psect	text6
  4284  0D10                     __ptext6:	
  4285 ;; *************** function _location *****************
  4286 ;; Defined at:
  4287 ;;		line 337 in file "Main V4.1.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  position        2    3[COMMON] PTR int 
  4290 ;;		 -> main@position(4), display_temps_to_screen@position(4), 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  i               2    9[BANK0 ] unsigned int 
  4293 ;;  k               2    7[BANK0 ] unsigned int 
  4294 ;;  q               2    5[BANK0 ] unsigned int 
  4295 ;;  j               2    0[BANK0 ] unsigned int 
  4296 ;;  page            1    4[BANK0 ] unsigned char 
  4297 ;;  upnib           1    3[BANK0 ] unsigned char 
  4298 ;;  lownib          1    2[BANK0 ] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;		None               void
  4301 ;; Registers used:
  4302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4308 ;;      Params:         2       0       0       0       0
  4309 ;;      Locals:         0      11       0       0       0
  4310 ;;      Temps:          6       0       0       0       0
  4311 ;;      Totals:         8      11       0       0       0
  4312 ;;Total ram usage:       19 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    1
  4315 ;; This function calls:
  4316 ;;		_comm_out
  4317 ;; This function is called by:
  4318 ;;		_display_temps_to_screen
  4319 ;;		_main
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _location
  4325  0D10                     _location:	
  4326                           
  4327                           ;Main V4.1.c: 338: unsigned int i,k,j;
  4328                           ;Main V4.1.c: 339: unsigned int q;
  4329                           ;Main V4.1.c: 340: char lownib,upnib;
  4330                           ;Main V4.1.c: 341: unsigned char page = 0xB0;
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in _location: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4334  0D10  30B0               	movlw	176
  4335  0D11  00F5               	movwf	??_location
  4336  0D12  0875               	movf	??_location,w
  4337  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  4338  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  4339  0D15  00A4               	movwf	location@page
  4340                           
  4341                           ;Main V4.1.c: 343: comm_out (0x40);
  4342  0D16  3040               	movlw	64
  4343  0D17  120A  158A  20C9  120A  158A  	fcall	_comm_out
  4344                           
  4345                           ;Main V4.1.c: 344: upnib = 0x10;
  4346  0D1C  3010               	movlw	16
  4347  0D1D  00F5               	movwf	??_location
  4348  0D1E  0875               	movf	??_location,w
  4349  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0D21  00A3               	movwf	location@upnib
  4352                           
  4353                           ;Main V4.1.c: 345: lownib = 0x00;
  4354  0D22  01A2               	clrf	location@lownib
  4355                           
  4356                           ;Main V4.1.c: 346: for (i=0;i<128;i++){
  4357  0D23  01A9               	clrf	location@i
  4358  0D24  01AA               	clrf	location@i+1
  4359  0D25  3000               	movlw	0
  4360  0D26  022A               	subwf	location@i+1,w
  4361  0D27  3080               	movlw	128
  4362  0D28  1903               	skipnz
  4363  0D29  0229               	subwf	location@i,w
  4364  0D2A  1803               	btfsc	3,0
  4365  0D2B  2D69               	goto	l1926
  4366  0D2C                     l1916:	
  4367                           
  4368                           ;Main V4.1.c: 347: if (position[0] == i){
  4369  0D2C  0873               	movf	location@position,w
  4370  0D2D  0084               	movwf	4
  4371  0D2E  1783               	bsf	3,7
  4372  0D2F  1C74               	btfss	location@position+1,0
  4373  0D30  1383               	bcf	3,7
  4374  0D31  0800               	movf	0,w
  4375  0D32  00F5               	movwf	??_location
  4376  0D33  0A84               	incf	4,f
  4377  0D34  0800               	movf	0,w
  4378  0D35  00F6               	movwf	??_location+1
  4379  0D36  082A               	movf	location@i+1,w
  4380  0D37  0676               	xorwf	??_location+1,w
  4381  0D38  1D03               	skipz
  4382  0D39  2D3C               	goto	u1565
  4383  0D3A  0829               	movf	location@i,w
  4384  0D3B  0675               	xorwf	??_location,w
  4385  0D3C                     u1565:	
  4386  0D3C  1D03               	skipz
  4387  0D3D  2D5C               	goto	l152
  4388                           
  4389                           ;Main V4.1.c: 348: k = i;
  4390  0D3E  082A               	movf	location@i+1,w
  4391  0D3F  01A8               	clrf	location@k+1
  4392  0D40  07A8               	addwf	location@k+1,f
  4393  0D41  0829               	movf	location@i,w
  4394  0D42  01A7               	clrf	location@k
  4395  0D43  07A7               	addwf	location@k,f
  4396  0D44                     l1922:	
  4397                           ;Main V4.1.c: 349: while (k > 15){
  4398                           
  4399  0D44  3000               	movlw	0
  4400  0D45  0228               	subwf	location@k+1,w
  4401  0D46  3010               	movlw	16
  4402  0D47  1903               	skipnz
  4403  0D48  0227               	subwf	location@k,w
  4404  0D49  1C03               	btfss	3,0
  4405  0D4A  2D58               	goto	l1924
  4406                           
  4407                           ;Main V4.1.c: 350: k = k - 16;
  4408  0D4B  0827               	movf	location@k,w
  4409  0D4C  3EF0               	addlw	240
  4410  0D4D  00A7               	movwf	location@k
  4411  0D4E  0828               	movf	location@k+1,w
  4412  0D4F  1803               	skipnc
  4413  0D50  3E01               	addlw	1
  4414  0D51  3EFF               	addlw	255
  4415  0D52  00A8               	movwf	location@k+1
  4416                           
  4417                           ;Main V4.1.c: 351: upnib++;
  4418  0D53  3001               	movlw	1
  4419  0D54  00F5               	movwf	??_location
  4420  0D55  0875               	movf	??_location,w
  4421  0D56  07A3               	addwf	location@upnib,f
  4422  0D57  2D44               	goto	l1922
  4423  0D58                     l1924:	
  4424                           
  4425                           ;Main V4.1.c: 352: }
  4426                           ;Main V4.1.c: 353: lownib = k;
  4427  0D58  0827               	movf	location@k,w
  4428  0D59  00F5               	movwf	??_location
  4429  0D5A  0875               	movf	??_location,w
  4430  0D5B  00A2               	movwf	location@lownib
  4431  0D5C                     l152:	
  4432  0D5C  3001               	movlw	1
  4433  0D5D  07A9               	addwf	location@i,f
  4434  0D5E  1803               	skipnc
  4435  0D5F  0AAA               	incf	location@i+1,f
  4436  0D60  3000               	movlw	0
  4437  0D61  07AA               	addwf	location@i+1,f
  4438  0D62  3000               	movlw	0
  4439  0D63  022A               	subwf	location@i+1,w
  4440  0D64  3080               	movlw	128
  4441  0D65  1903               	skipnz
  4442  0D66  0229               	subwf	location@i,w
  4443  0D67  1C03               	skipc
  4444  0D68  2D2C               	goto	l1916
  4445  0D69                     l1926:	
  4446                           
  4447                           ;Main V4.1.c: 354: }
  4448                           ;Main V4.1.c: 355: }
  4449                           ;Main V4.1.c: 356: j = 0;
  4450  0D69  01A0               	clrf	location@j
  4451  0D6A  01A1               	clrf	location@j+1
  4452  0D6B                     l1934:	
  4453                           
  4454                           ;Main V4.1.c: 363: q = 0x01;
  4455  0D6B  3001               	movlw	1
  4456  0D6C  00A5               	movwf	location@q
  4457  0D6D  3000               	movlw	0
  4458  0D6E  00A6               	movwf	location@q+1
  4459  0D6F                     l1936:	
  4460  0D6F  3002               	movlw	2
  4461  0D70  00F5               	movwf	??_location
  4462  0D71  0875               	movf	??_location,w
  4463  0D72  0773               	addwf	location@position,w
  4464  0D73  00F7               	movwf	??_location+2
  4465  0D74  0874               	movf	location@position+1,w
  4466  0D75  00F6               	movwf	??_location+1
  4467  0D76  1803               	skipnc
  4468  0D77  0AF6               	incf	??_location+1,f
  4469  0D78  1BF5               	btfsc	??_location,7
  4470  0D79  03F6               	decf	??_location+1,f
  4471  0D7A  0876               	movf	??_location+1,w
  4472  0D7B  00F8               	movwf	??_location+3
  4473  0D7C  0877               	movf	??_location+2,w
  4474  0D7D  0084               	movwf	4
  4475  0D7E  1783               	bsf	3,7
  4476  0D7F  1C78               	btfss	??_location+3,0
  4477  0D80  1383               	bcf	3,7
  4478  0D81  0800               	movf	0,w
  4479  0D82  00F9               	movwf	??_location+4
  4480  0D83  0A84               	incf	4,f
  4481  0D84  0800               	movf	0,w
  4482  0D85  00FA               	movwf	??_location+5
  4483  0D86  0821               	movf	location@j+1,w
  4484  0D87  067A               	xorwf	??_location+5,w
  4485  0D88  1D03               	skipz
  4486  0D89  2D8C               	goto	u1605
  4487  0D8A  0820               	movf	location@j,w
  4488  0D8B  0679               	xorwf	??_location+4,w
  4489  0D8C                     u1605:	
  4490  0D8C  1903               	btfsc	3,2
  4491  0D8D  2DA6               	goto	l1938
  4492                           
  4493                           ;Main V4.1.c: 359: q = q << 1;
  4494                           
  4495                           ;Main V4.1.c: 358: while (position[1] != j){
  4496                           
  4497                           ;Main V4.1.c: 357: q = 0x0001;
  4498  0D8E  1003               	clrc
  4499  0D8F  0D25               	rlf	location@q,w
  4500  0D90  00A5               	movwf	location@q
  4501  0D91  0D26               	rlf	location@q+1,w
  4502  0D92  00A6               	movwf	location@q+1
  4503                           
  4504                           ;Main V4.1.c: 360: j++;
  4505  0D93  3001               	movlw	1
  4506  0D94  07A0               	addwf	location@j,f
  4507  0D95  1803               	skipnc
  4508  0D96  0AA1               	incf	location@j+1,f
  4509  0D97  3000               	movlw	0
  4510  0D98  07A1               	addwf	location@j+1,f
  4511                           
  4512                           ;Main V4.1.c: 361: if (q == 0x100){
  4513  0D99  3001               	movlw	1
  4514  0D9A  0626               	xorwf	location@q+1,w
  4515  0D9B  1D03               	skipz
  4516  0D9C  2D9F               	goto	u1595
  4517  0D9D  3000               	movlw	0
  4518  0D9E  0625               	xorwf	location@q,w
  4519  0D9F                     u1595:	
  4520  0D9F  1D03               	skipz
  4521  0DA0  2D6F               	goto	l1936
  4522                           
  4523                           ;Main V4.1.c: 362: page++;
  4524  0DA1  3001               	movlw	1
  4525  0DA2  00F5               	movwf	??_location
  4526  0DA3  0875               	movf	??_location,w
  4527  0DA4  07A4               	addwf	location@page,f
  4528  0DA5  2D6B               	goto	l1934
  4529  0DA6                     l1938:	
  4530                           
  4531                           ;Main V4.1.c: 364: }
  4532                           ;Main V4.1.c: 365: }
  4533                           ;Main V4.1.c: 366: comm_out (upnib);
  4534  0DA6  0823               	movf	location@upnib,w
  4535  0DA7  120A  158A  20C9  120A  158A  	fcall	_comm_out
  4536                           
  4537                           ;Main V4.1.c: 367: comm_out (lownib);
  4538  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0DAE  0822               	movf	location@lownib,w
  4541  0DAF  120A  158A  20C9  120A  158A  	fcall	_comm_out
  4542                           
  4543                           ;Main V4.1.c: 368: comm_out (page);
  4544  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  4546  0DB6  0824               	movf	location@page,w
  4547  0DB7  120A  158A  20C9   	fcall	_comm_out
  4548  0DBA  0008               	return
  4549  0DBB                     __end_of_location:	
  4550                           
  4551                           	psect	text7
  4552  0AF6                     __ptext7:	
  4553 ;; *************** function _char_to_decimal_print *****************
  4554 ;; Defined at:
  4555 ;;		line 593 in file "Main V4.1.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  value           2    8[COMMON] int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  x               1   11[COMMON] unsigned char 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;		None               void
  4562 ;; Registers used:
  4563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         2       0       0       0       0
  4570 ;;      Locals:         1       0       0       0       0
  4571 ;;      Temps:          1       0       0       0       0
  4572 ;;      Totals:         4       0       0       0       0
  4573 ;;Total ram usage:        4 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    2
  4576 ;; This function calls:
  4577 ;;		_LCDWriteCharacter
  4578 ;; This function is called by:
  4579 ;;		_display_temps_to_screen
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           
  4584                           ;psect for function _char_to_decimal_print
  4585  0AF6                     _char_to_decimal_print:	
  4586                           
  4587                           ;Main V4.1.c: 594: char x = 0;
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _char_to_decimal_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  4591  0AF6  01FB               	clrf	char_to_decimal_print@x
  4592  0AF7                     l1956:	
  4593                           ;Main V4.1.c: 595: while (value >= 100){
  4594                           
  4595  0AF7  0879               	movf	char_to_decimal_print@value+1,w
  4596  0AF8  3A80               	xorlw	128
  4597  0AF9  00FF               	movwf	127
  4598  0AFA  3080               	movlw	128
  4599  0AFB  027F               	subwf	127,w
  4600  0AFC  1D03               	skipz
  4601  0AFD  2B00               	goto	u1625
  4602  0AFE  3064               	movlw	100
  4603  0AFF  0278               	subwf	char_to_decimal_print@value,w
  4604  0B00                     u1625:	
  4605  0B00  1C03               	btfss	3,0
  4606  0B01  2B0F               	goto	l1958
  4607                           
  4608                           ;Main V4.1.c: 596: value = value - 100;
  4609  0B02  0878               	movf	char_to_decimal_print@value,w
  4610  0B03  3E9C               	addlw	156
  4611  0B04  00F8               	movwf	char_to_decimal_print@value
  4612  0B05  0879               	movf	char_to_decimal_print@value+1,w
  4613  0B06  1803               	skipnc
  4614  0B07  3E01               	addlw	1
  4615  0B08  3EFF               	addlw	255
  4616  0B09  00F9               	movwf	char_to_decimal_print@value+1
  4617                           
  4618                           ;Main V4.1.c: 597: x++;
  4619  0B0A  3001               	movlw	1
  4620  0B0B  00FA               	movwf	??_char_to_decimal_print
  4621  0B0C  087A               	movf	??_char_to_decimal_print,w
  4622  0B0D  07FB               	addwf	char_to_decimal_print@x,f
  4623  0B0E  2AF7               	goto	l1956
  4624  0B0F                     l1958:	
  4625                           
  4626                           ;Main V4.1.c: 598: }
  4627                           ;Main V4.1.c: 599: x = x + 48;
  4628  0B0F  087B               	movf	char_to_decimal_print@x,w
  4629  0B10  3E30               	addlw	48
  4630  0B11  00FA               	movwf	??_char_to_decimal_print
  4631  0B12  087A               	movf	??_char_to_decimal_print,w
  4632  0B13  00FB               	movwf	char_to_decimal_print@x
  4633                           
  4634                           ;Main V4.1.c: 600: LCDWriteCharacter(x);
  4635  0B14  087B               	movf	char_to_decimal_print@x,w
  4636  0B15  120A  158A  2362  120A  158A  	fcall	_LCDWriteCharacter
  4637                           
  4638                           ;Main V4.1.c: 601: x = 0;
  4639  0B1A  01FB               	clrf	char_to_decimal_print@x
  4640  0B1B                     l1966:	
  4641                           ;Main V4.1.c: 602: while (value >= 10){
  4642                           
  4643  0B1B  0879               	movf	char_to_decimal_print@value+1,w
  4644  0B1C  3A80               	xorlw	128
  4645  0B1D  00FF               	movwf	127
  4646  0B1E  3080               	movlw	128
  4647  0B1F  027F               	subwf	127,w
  4648  0B20  1D03               	skipz
  4649  0B21  2B24               	goto	u1635
  4650  0B22  300A               	movlw	10
  4651  0B23  0278               	subwf	char_to_decimal_print@value,w
  4652  0B24                     u1635:	
  4653  0B24  1C03               	btfss	3,0
  4654  0B25  2B33               	goto	l1968
  4655                           
  4656                           ;Main V4.1.c: 603: value = value - 10;
  4657  0B26  0878               	movf	char_to_decimal_print@value,w
  4658  0B27  3EF6               	addlw	246
  4659  0B28  00F8               	movwf	char_to_decimal_print@value
  4660  0B29  0879               	movf	char_to_decimal_print@value+1,w
  4661  0B2A  1803               	skipnc
  4662  0B2B  3E01               	addlw	1
  4663  0B2C  3EFF               	addlw	255
  4664  0B2D  00F9               	movwf	char_to_decimal_print@value+1
  4665                           
  4666                           ;Main V4.1.c: 604: x++;
  4667  0B2E  3001               	movlw	1
  4668  0B2F  00FA               	movwf	??_char_to_decimal_print
  4669  0B30  087A               	movf	??_char_to_decimal_print,w
  4670  0B31  07FB               	addwf	char_to_decimal_print@x,f
  4671  0B32  2B1B               	goto	l1966
  4672  0B33                     l1968:	
  4673                           
  4674                           ;Main V4.1.c: 605: }
  4675                           ;Main V4.1.c: 606: x = x + 48;
  4676  0B33  087B               	movf	char_to_decimal_print@x,w
  4677  0B34  3E30               	addlw	48
  4678  0B35  00FA               	movwf	??_char_to_decimal_print
  4679  0B36  087A               	movf	??_char_to_decimal_print,w
  4680  0B37  00FB               	movwf	char_to_decimal_print@x
  4681                           
  4682                           ;Main V4.1.c: 607: LCDWriteCharacter(x);
  4683  0B38  087B               	movf	char_to_decimal_print@x,w
  4684  0B39  120A  158A  2362  120A  158A  	fcall	_LCDWriteCharacter
  4685                           
  4686                           ;Main V4.1.c: 608: x = 0;
  4687  0B3E  01FB               	clrf	char_to_decimal_print@x
  4688  0B3F                     l1976:	
  4689                           ;Main V4.1.c: 609: while (value > 0){
  4690                           
  4691  0B3F  0879               	movf	char_to_decimal_print@value+1,w
  4692  0B40  3A80               	xorlw	128
  4693  0B41  00FF               	movwf	127
  4694  0B42  3080               	movlw	128
  4695  0B43  027F               	subwf	127,w
  4696  0B44  1D03               	skipz
  4697  0B45  2B48               	goto	u1645
  4698  0B46  3001               	movlw	1
  4699  0B47  0278               	subwf	char_to_decimal_print@value,w
  4700  0B48                     u1645:	
  4701  0B48  1C03               	btfss	3,0
  4702  0B49  2B57               	goto	l1978
  4703                           
  4704                           ;Main V4.1.c: 610: value = value - 1;
  4705  0B4A  0878               	movf	char_to_decimal_print@value,w
  4706  0B4B  3EFF               	addlw	255
  4707  0B4C  00F8               	movwf	char_to_decimal_print@value
  4708  0B4D  0879               	movf	char_to_decimal_print@value+1,w
  4709  0B4E  1803               	skipnc
  4710  0B4F  3E01               	addlw	1
  4711  0B50  3EFF               	addlw	255
  4712  0B51  00F9               	movwf	char_to_decimal_print@value+1
  4713                           
  4714                           ;Main V4.1.c: 611: x++;
  4715  0B52  3001               	movlw	1
  4716  0B53  00FA               	movwf	??_char_to_decimal_print
  4717  0B54  087A               	movf	??_char_to_decimal_print,w
  4718  0B55  07FB               	addwf	char_to_decimal_print@x,f
  4719  0B56  2B3F               	goto	l1976
  4720  0B57                     l1978:	
  4721                           
  4722                           ;Main V4.1.c: 612: }
  4723                           ;Main V4.1.c: 613: x = x + 48;
  4724  0B57  087B               	movf	char_to_decimal_print@x,w
  4725  0B58  3E30               	addlw	48
  4726  0B59  00FA               	movwf	??_char_to_decimal_print
  4727  0B5A  087A               	movf	??_char_to_decimal_print,w
  4728  0B5B  00FB               	movwf	char_to_decimal_print@x
  4729                           
  4730                           ;Main V4.1.c: 614: LCDWriteCharacter(x);
  4731  0B5C  087B               	movf	char_to_decimal_print@x,w
  4732  0B5D  120A  158A  2362   	fcall	_LCDWriteCharacter
  4733                           
  4734                           ;Main V4.1.c: 615: x = 0;
  4735  0B60  01FB               	clrf	char_to_decimal_print@x
  4736  0B61  0008               	return
  4737  0B62                     __end_of_char_to_decimal_print:	
  4738                           
  4739                           	psect	text8
  4740  0BEF                     __ptext8:	
  4741 ;; *************** function ___fttol *****************
  4742 ;; Defined at:
  4743 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  f1              3   18[BANK0 ] float 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  lval            4   27[BANK0 ] unsigned long 
  4748 ;;  exp1            1   31[BANK0 ] unsigned char 
  4749 ;;  sign1           1   26[BANK0 ] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  4   18[BANK0 ] long 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4759 ;;      Params:         0       4       0       0       0
  4760 ;;      Locals:         0       6       0       0       0
  4761 ;;      Temps:          0       4       0       0       0
  4762 ;;      Totals:         0      14       0       0       0
  4763 ;;Total ram usage:       14 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_display_temps_to_screen
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function ___fttol
  4774  0BEF                     ___fttol:	
  4775                           
  4776                           ;incstack = 0
  4777                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4778  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  4779  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  4780  0BF1  0832               	movf	___fttol@f1,w
  4781  0BF2  00B6               	movwf	??___fttol
  4782  0BF3  0833               	movf	___fttol@f1+1,w
  4783  0BF4  00B7               	movwf	??___fttol+1
  4784  0BF5  0834               	movf	___fttol@f1+2,w
  4785  0BF6  00B8               	movwf	??___fttol+2
  4786  0BF7  1003               	clrc
  4787  0BF8  0D37               	rlf	??___fttol+1,w
  4788  0BF9  0D38               	rlf	??___fttol+2,w
  4789  0BFA  00B9               	movwf	??___fttol+3
  4790  0BFB  0839               	movf	??___fttol+3,w
  4791  0BFC  00BF               	movwf	___fttol@exp1
  4792  0BFD  08BF               	movf	___fttol@exp1,f
  4793  0BFE  1D03               	skipz
  4794  0BFF  2C09               	goto	l2084
  4795  0C00  3000               	movlw	0
  4796  0C01  00B5               	movwf	?___fttol+3
  4797  0C02  3000               	movlw	0
  4798  0C03  00B4               	movwf	?___fttol+2
  4799  0C04  3000               	movlw	0
  4800  0C05  00B3               	movwf	?___fttol+1
  4801  0C06  3000               	movlw	0
  4802  0C07  00B2               	movwf	?___fttol
  4803  0C08  0008               	return
  4804  0C09                     l2084:	
  4805  0C09  0832               	movf	___fttol@f1,w
  4806  0C0A  00B6               	movwf	??___fttol
  4807  0C0B  0833               	movf	___fttol@f1+1,w
  4808  0C0C  00B7               	movwf	??___fttol+1
  4809  0C0D  0834               	movf	___fttol@f1+2,w
  4810  0C0E  00B8               	movwf	??___fttol+2
  4811  0C0F  3017               	movlw	23
  4812  0C10                     u1865:	
  4813  0C10  1003               	clrc
  4814  0C11  0CB8               	rrf	??___fttol+2,f
  4815  0C12  0CB7               	rrf	??___fttol+1,f
  4816  0C13  0CB6               	rrf	??___fttol,f
  4817  0C14  3EFF               	addlw	-1
  4818  0C15  1D03               	skipz
  4819  0C16  2C10               	goto	u1865
  4820  0C17  0836               	movf	??___fttol,w
  4821  0C18  00B9               	movwf	??___fttol+3
  4822  0C19  0839               	movf	??___fttol+3,w
  4823  0C1A  00BA               	movwf	___fttol@sign1
  4824  0C1B  17B3               	bsf	___fttol@f1+1,7
  4825  0C1C  30FF               	movlw	255
  4826  0C1D  05B2               	andwf	___fttol@f1,f
  4827  0C1E  30FF               	movlw	255
  4828  0C1F  05B3               	andwf	___fttol@f1+1,f
  4829  0C20  3000               	movlw	0
  4830  0C21  05B4               	andwf	___fttol@f1+2,f
  4831  0C22  0832               	movf	___fttol@f1,w
  4832  0C23  00BB               	movwf	___fttol@lval
  4833  0C24  0833               	movf	___fttol@f1+1,w
  4834  0C25  00BC               	movwf	___fttol@lval+1
  4835  0C26  0834               	movf	___fttol@f1+2,w
  4836  0C27  00BD               	movwf	___fttol@lval+2
  4837  0C28  01BE               	clrf	___fttol@lval+3
  4838  0C29  308E               	movlw	142
  4839  0C2A  02BF               	subwf	___fttol@exp1,f
  4840  0C2B  1FBF               	btfss	___fttol@exp1,7
  4841  0C2C  2C4B               	goto	l2104
  4842  0C2D  083F               	movf	___fttol@exp1,w
  4843  0C2E  3A80               	xorlw	128
  4844  0C2F  3E8F               	addlw	143
  4845  0C30  1803               	skipnc
  4846  0C31  2C3B               	goto	l2102
  4847  0C32  3000               	movlw	0
  4848  0C33  00B5               	movwf	?___fttol+3
  4849  0C34  3000               	movlw	0
  4850  0C35  00B4               	movwf	?___fttol+2
  4851  0C36  3000               	movlw	0
  4852  0C37  00B3               	movwf	?___fttol+1
  4853  0C38  3000               	movlw	0
  4854  0C39  00B2               	movwf	?___fttol
  4855  0C3A  0008               	return
  4856  0C3B                     l2102:	
  4857  0C3B  3001               	movlw	1
  4858  0C3C                     u1895:	
  4859  0C3C  1003               	clrc
  4860  0C3D  0CBE               	rrf	___fttol@lval+3,f
  4861  0C3E  0CBD               	rrf	___fttol@lval+2,f
  4862  0C3F  0CBC               	rrf	___fttol@lval+1,f
  4863  0C40  0CBB               	rrf	___fttol@lval,f
  4864  0C41  3EFF               	addlw	-1
  4865  0C42  1D03               	skipz
  4866  0C43  2C3C               	goto	u1895
  4867  0C44  3001               	movlw	1
  4868  0C45  00B6               	movwf	??___fttol
  4869  0C46  0836               	movf	??___fttol,w
  4870  0C47  07BF               	addwf	___fttol@exp1,f
  4871  0C48  1903               	btfsc	3,2
  4872  0C49  2C66               	goto	l2114
  4873  0C4A  2C3B               	goto	l2102
  4874  0C4B                     l2104:	
  4875  0C4B  3018               	movlw	24
  4876  0C4C  023F               	subwf	___fttol@exp1,w
  4877  0C4D  1C03               	skipc
  4878  0C4E  2C63               	goto	l2112
  4879  0C4F  3000               	movlw	0
  4880  0C50  00B5               	movwf	?___fttol+3
  4881  0C51  3000               	movlw	0
  4882  0C52  00B4               	movwf	?___fttol+2
  4883  0C53  3000               	movlw	0
  4884  0C54  00B3               	movwf	?___fttol+1
  4885  0C55  3000               	movlw	0
  4886  0C56  00B2               	movwf	?___fttol
  4887  0C57  0008               	return
  4888  0C58                     l2110:	
  4889  0C58  3001               	movlw	1
  4890  0C59  00B6               	movwf	??___fttol
  4891  0C5A                     u1925:	
  4892  0C5A  1003               	clrc
  4893  0C5B  0DBB               	rlf	___fttol@lval,f
  4894  0C5C  0DBC               	rlf	___fttol@lval+1,f
  4895  0C5D  0DBD               	rlf	___fttol@lval+2,f
  4896  0C5E  0DBE               	rlf	___fttol@lval+3,f
  4897  0C5F  0BB6               	decfsz	??___fttol,f
  4898  0C60  2C5A               	goto	u1925
  4899  0C61  3001               	movlw	1
  4900  0C62  02BF               	subwf	___fttol@exp1,f
  4901  0C63                     l2112:	
  4902  0C63  08BF               	movf	___fttol@exp1,f
  4903  0C64  1D03               	skipz
  4904  0C65  2C58               	goto	l2110
  4905  0C66                     l2114:	
  4906  0C66  083A               	movf	___fttol@sign1,w
  4907  0C67  1903               	btfsc	3,2
  4908  0C68  2C74               	goto	l2118
  4909  0C69  09BB               	comf	___fttol@lval,f
  4910  0C6A  09BC               	comf	___fttol@lval+1,f
  4911  0C6B  09BD               	comf	___fttol@lval+2,f
  4912  0C6C  09BE               	comf	___fttol@lval+3,f
  4913  0C6D  0ABB               	incf	___fttol@lval,f
  4914  0C6E  1903               	skipnz
  4915  0C6F  0ABC               	incf	___fttol@lval+1,f
  4916  0C70  1903               	skipnz
  4917  0C71  0ABD               	incf	___fttol@lval+2,f
  4918  0C72  1903               	skipnz
  4919  0C73  0ABE               	incf	___fttol@lval+3,f
  4920  0C74                     l2118:	
  4921  0C74  083E               	movf	___fttol@lval+3,w
  4922  0C75  00B5               	movwf	?___fttol+3
  4923  0C76  083D               	movf	___fttol@lval+2,w
  4924  0C77  00B4               	movwf	?___fttol+2
  4925  0C78  083C               	movf	___fttol@lval+1,w
  4926  0C79  00B3               	movwf	?___fttol+1
  4927  0C7A  083B               	movf	___fttol@lval,w
  4928  0C7B  00B2               	movwf	?___fttol
  4929  0C7C  0008               	return
  4930  0C7D                     __end_of___fttol:	
  4931                           
  4932                           	psect	text9
  4933  0DBB                     __ptext9:	
  4934 ;; *************** function ___ftmul *****************
  4935 ;; Defined at:
  4936 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  f1              3    2[BANK0 ] float 
  4939 ;;  f2              3    5[BANK0 ] float 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  4942 ;;  sign            1   17[BANK0 ] unsigned char 
  4943 ;;  cntr            1   16[BANK0 ] unsigned char 
  4944 ;;  exp             1   12[BANK0 ] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  3    2[BANK0 ] float 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, pclath, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4954 ;;      Params:         0       6       0       0       0
  4955 ;;      Locals:         0       6       0       0       0
  4956 ;;      Temps:          0       4       0       0       0
  4957 ;;      Totals:         0      16       0       0       0
  4958 ;;Total ram usage:       16 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    1
  4961 ;; This function calls:
  4962 ;;		___ftpack
  4963 ;; This function is called by:
  4964 ;;		_display_temps_to_screen
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function ___ftmul
  4970  0DBB                     ___ftmul:	
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4974  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  4975  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  4976  0DBD  0822               	movf	___ftmul@f1,w
  4977  0DBE  00A8               	movwf	??___ftmul
  4978  0DBF  0823               	movf	___ftmul@f1+1,w
  4979  0DC0  00A9               	movwf	??___ftmul+1
  4980  0DC1  0824               	movf	___ftmul@f1+2,w
  4981  0DC2  00AA               	movwf	??___ftmul+2
  4982  0DC3  1003               	clrc
  4983  0DC4  0D29               	rlf	??___ftmul+1,w
  4984  0DC5  0D2A               	rlf	??___ftmul+2,w
  4985  0DC6  00AB               	movwf	??___ftmul+3
  4986  0DC7  082B               	movf	??___ftmul+3,w
  4987  0DC8  00AC               	movwf	___ftmul@exp
  4988  0DC9  08AC               	movf	___ftmul@exp,f
  4989  0DCA  1D03               	skipz
  4990  0DCB  2DD3               	goto	l2034
  4991  0DCC  3000               	movlw	0
  4992  0DCD  00A2               	movwf	?___ftmul
  4993  0DCE  3000               	movlw	0
  4994  0DCF  00A3               	movwf	?___ftmul+1
  4995  0DD0  3000               	movlw	0
  4996  0DD1  00A4               	movwf	?___ftmul+2
  4997  0DD2  0008               	return
  4998  0DD3                     l2034:	
  4999  0DD3  0825               	movf	___ftmul@f2,w
  5000  0DD4  00A8               	movwf	??___ftmul
  5001  0DD5  0826               	movf	___ftmul@f2+1,w
  5002  0DD6  00A9               	movwf	??___ftmul+1
  5003  0DD7  0827               	movf	___ftmul@f2+2,w
  5004  0DD8  00AA               	movwf	??___ftmul+2
  5005  0DD9  1003               	clrc
  5006  0DDA  0D29               	rlf	??___ftmul+1,w
  5007  0DDB  0D2A               	rlf	??___ftmul+2,w
  5008  0DDC  00AB               	movwf	??___ftmul+3
  5009  0DDD  082B               	movf	??___ftmul+3,w
  5010  0DDE  00B1               	movwf	___ftmul@sign
  5011  0DDF  08B1               	movf	___ftmul@sign,f
  5012  0DE0  1D03               	skipz
  5013  0DE1  2DE9               	goto	l2040
  5014  0DE2  3000               	movlw	0
  5015  0DE3  00A2               	movwf	?___ftmul
  5016  0DE4  3000               	movlw	0
  5017  0DE5  00A3               	movwf	?___ftmul+1
  5018  0DE6  3000               	movlw	0
  5019  0DE7  00A4               	movwf	?___ftmul+2
  5020  0DE8  0008               	return
  5021  0DE9                     l2040:	
  5022  0DE9  0831               	movf	___ftmul@sign,w
  5023  0DEA  3E7B               	addlw	123
  5024  0DEB  00A8               	movwf	??___ftmul
  5025  0DEC  0828               	movf	??___ftmul,w
  5026  0DED  07AC               	addwf	___ftmul@exp,f
  5027  0DEE  0822               	movf	___ftmul@f1,w
  5028  0DEF  00A8               	movwf	??___ftmul
  5029  0DF0  0823               	movf	___ftmul@f1+1,w
  5030  0DF1  00A9               	movwf	??___ftmul+1
  5031  0DF2  0824               	movf	___ftmul@f1+2,w
  5032  0DF3  00AA               	movwf	??___ftmul+2
  5033  0DF4  3010               	movlw	16
  5034  0DF5                     u1735:	
  5035  0DF5  1003               	clrc
  5036  0DF6  0CAA               	rrf	??___ftmul+2,f
  5037  0DF7  0CA9               	rrf	??___ftmul+1,f
  5038  0DF8  0CA8               	rrf	??___ftmul,f
  5039  0DF9  3EFF               	addlw	-1
  5040  0DFA  1D03               	skipz
  5041  0DFB  2DF5               	goto	u1735
  5042  0DFC  0828               	movf	??___ftmul,w
  5043  0DFD  00AB               	movwf	??___ftmul+3
  5044  0DFE  082B               	movf	??___ftmul+3,w
  5045  0DFF  00B1               	movwf	___ftmul@sign
  5046  0E00  0825               	movf	___ftmul@f2,w
  5047  0E01  00A8               	movwf	??___ftmul
  5048  0E02  0826               	movf	___ftmul@f2+1,w
  5049  0E03  00A9               	movwf	??___ftmul+1
  5050  0E04  0827               	movf	___ftmul@f2+2,w
  5051  0E05  00AA               	movwf	??___ftmul+2
  5052  0E06  3010               	movlw	16
  5053  0E07                     u1745:	
  5054  0E07  1003               	clrc
  5055  0E08  0CAA               	rrf	??___ftmul+2,f
  5056  0E09  0CA9               	rrf	??___ftmul+1,f
  5057  0E0A  0CA8               	rrf	??___ftmul,f
  5058  0E0B  3EFF               	addlw	-1
  5059  0E0C  1D03               	skipz
  5060  0E0D  2E07               	goto	u1745
  5061  0E0E  0828               	movf	??___ftmul,w
  5062  0E0F  00AB               	movwf	??___ftmul+3
  5063  0E10  082B               	movf	??___ftmul+3,w
  5064  0E11  06B1               	xorwf	___ftmul@sign,f
  5065  0E12  3080               	movlw	128
  5066  0E13  00A8               	movwf	??___ftmul
  5067  0E14  0828               	movf	??___ftmul,w
  5068  0E15  05B1               	andwf	___ftmul@sign,f
  5069  0E16  17A3               	bsf	___ftmul@f1+1,7
  5070  0E17  17A6               	bsf	___ftmul@f2+1,7
  5071  0E18  30FF               	movlw	255
  5072  0E19  05A5               	andwf	___ftmul@f2,f
  5073  0E1A  30FF               	movlw	255
  5074  0E1B  05A6               	andwf	___ftmul@f2+1,f
  5075  0E1C  3000               	movlw	0
  5076  0E1D  05A7               	andwf	___ftmul@f2+2,f
  5077  0E1E  3000               	movlw	0
  5078  0E1F  00AD               	movwf	___ftmul@f3_as_product
  5079  0E20  3000               	movlw	0
  5080  0E21  00AE               	movwf	___ftmul@f3_as_product+1
  5081  0E22  3000               	movlw	0
  5082  0E23  00AF               	movwf	___ftmul@f3_as_product+2
  5083  0E24  3007               	movlw	7
  5084  0E25  00A8               	movwf	??___ftmul
  5085  0E26  0828               	movf	??___ftmul,w
  5086  0E27  00B0               	movwf	___ftmul@cntr
  5087  0E28                     l2052:	
  5088  0E28  1C22               	btfss	___ftmul@f1,0
  5089  0E29  2E38               	goto	l2056
  5090  0E2A  0825               	movf	___ftmul@f2,w
  5091  0E2B  07AD               	addwf	___ftmul@f3_as_product,f
  5092  0E2C  0826               	movf	___ftmul@f2+1,w
  5093  0E2D  1103               	clrz
  5094  0E2E  1803               	skipnc
  5095  0E2F  0A26               	incf	___ftmul@f2+1,w
  5096  0E30  1D03               	btfss	3,2
  5097  0E31  07AE               	addwf	___ftmul@f3_as_product+1,f
  5098  0E32  0827               	movf	___ftmul@f2+2,w
  5099  0E33  1103               	clrz
  5100  0E34  1803               	skipnc
  5101  0E35  0A27               	incf	___ftmul@f2+2,w
  5102  0E36  1D03               	btfss	3,2
  5103  0E37  07AF               	addwf	___ftmul@f3_as_product+2,f
  5104  0E38                     l2056:	
  5105  0E38  3001               	movlw	1
  5106  0E39                     u1775:	
  5107  0E39  1003               	clrc
  5108  0E3A  0CA4               	rrf	___ftmul@f1+2,f
  5109  0E3B  0CA3               	rrf	___ftmul@f1+1,f
  5110  0E3C  0CA2               	rrf	___ftmul@f1,f
  5111  0E3D  3EFF               	addlw	-1
  5112  0E3E  1D03               	skipz
  5113  0E3F  2E39               	goto	u1775
  5114  0E40  3001               	movlw	1
  5115  0E41                     u1785:	
  5116  0E41  1003               	clrc
  5117  0E42  0DA5               	rlf	___ftmul@f2,f
  5118  0E43  0DA6               	rlf	___ftmul@f2+1,f
  5119  0E44  0DA7               	rlf	___ftmul@f2+2,f
  5120  0E45  3EFF               	addlw	-1
  5121  0E46  1D03               	skipz
  5122  0E47  2E41               	goto	u1785
  5123  0E48  3001               	movlw	1
  5124  0E49  02B0               	subwf	___ftmul@cntr,f
  5125  0E4A  1D03               	btfss	3,2
  5126  0E4B  2E28               	goto	l2052
  5127  0E4C  3009               	movlw	9
  5128  0E4D  00A8               	movwf	??___ftmul
  5129  0E4E  0828               	movf	??___ftmul,w
  5130  0E4F  00B0               	movwf	___ftmul@cntr
  5131  0E50                     l2064:	
  5132  0E50  1C22               	btfss	___ftmul@f1,0
  5133  0E51  2E60               	goto	l2068
  5134  0E52  0825               	movf	___ftmul@f2,w
  5135  0E53  07AD               	addwf	___ftmul@f3_as_product,f
  5136  0E54  0826               	movf	___ftmul@f2+1,w
  5137  0E55  1103               	clrz
  5138  0E56  1803               	skipnc
  5139  0E57  0A26               	incf	___ftmul@f2+1,w
  5140  0E58  1D03               	btfss	3,2
  5141  0E59  07AE               	addwf	___ftmul@f3_as_product+1,f
  5142  0E5A  0827               	movf	___ftmul@f2+2,w
  5143  0E5B  1103               	clrz
  5144  0E5C  1803               	skipnc
  5145  0E5D  0A27               	incf	___ftmul@f2+2,w
  5146  0E5E  1D03               	btfss	3,2
  5147  0E5F  07AF               	addwf	___ftmul@f3_as_product+2,f
  5148  0E60                     l2068:	
  5149  0E60  3001               	movlw	1
  5150  0E61                     u1825:	
  5151  0E61  1003               	clrc
  5152  0E62  0CA4               	rrf	___ftmul@f1+2,f
  5153  0E63  0CA3               	rrf	___ftmul@f1+1,f
  5154  0E64  0CA2               	rrf	___ftmul@f1,f
  5155  0E65  3EFF               	addlw	-1
  5156  0E66  1D03               	skipz
  5157  0E67  2E61               	goto	u1825
  5158  0E68  3001               	movlw	1
  5159  0E69                     u1835:	
  5160  0E69  1003               	clrc
  5161  0E6A  0CAF               	rrf	___ftmul@f3_as_product+2,f
  5162  0E6B  0CAE               	rrf	___ftmul@f3_as_product+1,f
  5163  0E6C  0CAD               	rrf	___ftmul@f3_as_product,f
  5164  0E6D  3EFF               	addlw	-1
  5165  0E6E  1D03               	skipz
  5166  0E6F  2E69               	goto	u1835
  5167  0E70  3001               	movlw	1
  5168  0E71  02B0               	subwf	___ftmul@cntr,f
  5169  0E72  1D03               	btfss	3,2
  5170  0E73  2E50               	goto	l2064
  5171  0E74  082D               	movf	___ftmul@f3_as_product,w
  5172  0E75  00F0               	movwf	___ftpack@arg
  5173  0E76  082E               	movf	___ftmul@f3_as_product+1,w
  5174  0E77  00F1               	movwf	___ftpack@arg+1
  5175  0E78  082F               	movf	___ftmul@f3_as_product+2,w
  5176  0E79  00F2               	movwf	___ftpack@arg+2
  5177  0E7A  082C               	movf	___ftmul@exp,w
  5178  0E7B  00A8               	movwf	??___ftmul
  5179  0E7C  0828               	movf	??___ftmul,w
  5180  0E7D  00F3               	movwf	___ftpack@exp
  5181  0E7E  0831               	movf	___ftmul@sign,w
  5182  0E7F  00A9               	movwf	??___ftmul+1
  5183  0E80  0829               	movf	??___ftmul+1,w
  5184  0E81  00F4               	movwf	___ftpack@sign
  5185  0E82  120A  158A  228E   	fcall	___ftpack
  5186  0E85  0870               	movf	?___ftpack,w
  5187  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  5188  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0E88  00A2               	movwf	?___ftmul
  5190  0E89  0871               	movf	?___ftpack+1,w
  5191  0E8A  00A3               	movwf	?___ftmul+1
  5192  0E8B  0872               	movf	?___ftpack+2,w
  5193  0E8C  00A4               	movwf	?___ftmul+2
  5194  0E8D  0008               	return
  5195  0E8E                     __end_of___ftmul:	
  5196                           
  5197                           	psect	text10
  5198  08DD                     __ptext10:	
  5199 ;; *************** function ___awtoft *****************
  5200 ;; Defined at:
  5201 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  c               2    8[COMMON] int 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  sign            1   13[COMMON] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  3    8[COMMON] float 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0, pclath, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5215 ;;      Params:         3       0       0       0       0
  5216 ;;      Locals:         1       0       0       0       0
  5217 ;;      Temps:          2       0       0       0       0
  5218 ;;      Totals:         6       0       0       0       0
  5219 ;;Total ram usage:        6 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    1
  5222 ;; This function calls:
  5223 ;;		___ftpack
  5224 ;; This function is called by:
  5225 ;;		_display_temps_to_screen
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           
  5230                           ;psect for function ___awtoft
  5231  08DD                     ___awtoft:	
  5232                           
  5233                           ;incstack = 0
  5234                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5235  08DD  01FD               	clrf	___awtoft@sign
  5236  08DE  1FF9               	btfss	___awtoft@c+1,7
  5237  08DF  28E7               	goto	l2024
  5238  08E0  09F8               	comf	___awtoft@c,f
  5239  08E1  09F9               	comf	___awtoft@c+1,f
  5240  08E2  0AF8               	incf	___awtoft@c,f
  5241  08E3  1903               	skipnz
  5242  08E4  0AF9               	incf	___awtoft@c+1,f
  5243  08E5  01FD               	clrf	___awtoft@sign
  5244  08E6  0AFD               	incf	___awtoft@sign,f
  5245  08E7                     l2024:	
  5246  08E7  0878               	movf	___awtoft@c,w
  5247  08E8  00F0               	movwf	___ftpack@arg
  5248  08E9  0879               	movf	___awtoft@c+1,w
  5249  08EA  00F1               	movwf	___ftpack@arg+1
  5250  08EB  01F2               	clrf	___ftpack@arg+2
  5251  08EC  308E               	movlw	142
  5252  08ED  00FB               	movwf	??___awtoft
  5253  08EE  087B               	movf	??___awtoft,w
  5254  08EF  00F3               	movwf	___ftpack@exp
  5255  08F0  087D               	movf	___awtoft@sign,w
  5256  08F1  00FC               	movwf	??___awtoft+1
  5257  08F2  087C               	movf	??___awtoft+1,w
  5258  08F3  00F4               	movwf	___ftpack@sign
  5259  08F4  120A  158A  228E   	fcall	___ftpack
  5260  08F7  0870               	movf	?___ftpack,w
  5261  08F8  00F8               	movwf	?___awtoft
  5262  08F9  0871               	movf	?___ftpack+1,w
  5263  08FA  00F9               	movwf	?___awtoft+1
  5264  08FB  0872               	movf	?___ftpack+2,w
  5265  08FC  00FA               	movwf	?___awtoft+2
  5266  08FD  0008               	return
  5267  08FE                     __end_of___awtoft:	
  5268                           
  5269                           	psect	text11
  5270  09AF                     __ptext11:	
  5271 ;; *************** function ___altoft *****************
  5272 ;; Defined at:
  5273 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\altoft.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  c               4    8[COMMON] long 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  sign            1    1[BANK0 ] unsigned char 
  5278 ;;  exp             1    0[BANK0 ] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  3    8[COMMON] float 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, pclath, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5288 ;;      Params:         4       0       0       0       0
  5289 ;;      Locals:         0       2       0       0       0
  5290 ;;      Temps:          2       0       0       0       0
  5291 ;;      Totals:         6       2       0       0       0
  5292 ;;Total ram usage:        8 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    1
  5295 ;; This function calls:
  5296 ;;		___ftpack
  5297 ;; This function is called by:
  5298 ;;		_display_temps_to_screen
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function ___altoft
  5304  09AF                     ___altoft:	
  5305                           
  5306                           ;incstack = 0
  5307                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5308  09AF  1283               	bcf	3,5	;RP0=0, select bank0
  5309  09B0  1303               	bcf	3,6	;RP1=0, select bank0
  5310  09B1  01A1               	clrf	___altoft@sign
  5311  09B2  308E               	movlw	142
  5312  09B3  00FC               	movwf	??___altoft
  5313  09B4  087C               	movf	??___altoft,w
  5314  09B5  00A0               	movwf	___altoft@exp
  5315  09B6  1FFB               	btfss	___altoft@c+3,7
  5316  09B7  29C5               	goto	l2010
  5317  09B8  09F8               	comf	___altoft@c,f
  5318  09B9  09F9               	comf	___altoft@c+1,f
  5319  09BA  09FA               	comf	___altoft@c+2,f
  5320  09BB  09FB               	comf	___altoft@c+3,f
  5321  09BC  0AF8               	incf	___altoft@c,f
  5322  09BD  1903               	skipnz
  5323  09BE  0AF9               	incf	___altoft@c+1,f
  5324  09BF  1903               	skipnz
  5325  09C0  0AFA               	incf	___altoft@c+2,f
  5326  09C1  1903               	skipnz
  5327  09C2  0AFB               	incf	___altoft@c+3,f
  5328  09C3  01A1               	clrf	___altoft@sign
  5329  09C4  0AA1               	incf	___altoft@sign,f
  5330  09C5                     l2010:	
  5331  09C5  30FF               	movlw	255
  5332  09C6  057B               	andwf	___altoft@c+3,w
  5333  09C7  1903               	btfsc	3,2
  5334  09C8  29D7               	goto	l2012
  5335  09C9  3001               	movlw	1
  5336  09CA                     u1685:	
  5337  09CA  1003               	clrc
  5338  09CB  0CFB               	rrf	___altoft@c+3,f
  5339  09CC  0CFA               	rrf	___altoft@c+2,f
  5340  09CD  0CF9               	rrf	___altoft@c+1,f
  5341  09CE  0CF8               	rrf	___altoft@c,f
  5342  09CF  3EFF               	addlw	-1
  5343  09D0  1D03               	skipz
  5344  09D1  29CA               	goto	u1685
  5345  09D2  3001               	movlw	1
  5346  09D3  00FC               	movwf	??___altoft
  5347  09D4  087C               	movf	??___altoft,w
  5348  09D5  07A0               	addwf	___altoft@exp,f
  5349  09D6  29C5               	goto	l2010
  5350  09D7                     l2012:	
  5351  09D7  0878               	movf	___altoft@c,w
  5352  09D8  00F0               	movwf	___ftpack@arg
  5353  09D9  0879               	movf	___altoft@c+1,w
  5354  09DA  00F1               	movwf	___ftpack@arg+1
  5355  09DB  087A               	movf	___altoft@c+2,w
  5356  09DC  00F2               	movwf	___ftpack@arg+2
  5357  09DD  0820               	movf	___altoft@exp,w
  5358  09DE  00FC               	movwf	??___altoft
  5359  09DF  087C               	movf	??___altoft,w
  5360  09E0  00F3               	movwf	___ftpack@exp
  5361  09E1  0821               	movf	___altoft@sign,w
  5362  09E2  00FD               	movwf	??___altoft+1
  5363  09E3  087D               	movf	??___altoft+1,w
  5364  09E4  00F4               	movwf	___ftpack@sign
  5365  09E5  120A  158A  228E   	fcall	___ftpack
  5366  09E8  0870               	movf	?___ftpack,w
  5367  09E9  00F8               	movwf	?___altoft
  5368  09EA  0871               	movf	?___ftpack+1,w
  5369  09EB  00F9               	movwf	?___altoft+1
  5370  09EC  0872               	movf	?___ftpack+2,w
  5371  09ED  00FA               	movwf	?___altoft+2
  5372  09EE  0008               	return
  5373  09EF                     __end_of___altoft:	
  5374                           
  5375                           	psect	text12
  5376  0A8E                     __ptext12:	
  5377 ;; *************** function ___ftpack *****************
  5378 ;; Defined at:
  5379 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  arg             3    0[COMMON] unsigned um
  5382 ;;  exp             1    3[COMMON] unsigned char 
  5383 ;;  sign            1    4[COMMON] unsigned char 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  3    0[COMMON] float 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5395 ;;      Params:         5       0       0       0       0
  5396 ;;      Locals:         0       0       0       0       0
  5397 ;;      Temps:          3       0       0       0       0
  5398 ;;      Totals:         8       0       0       0       0
  5399 ;;Total ram usage:        8 bytes
  5400 ;; Hardware stack levels used:    1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		___altoft
  5405 ;;		___awtoft
  5406 ;;		___ftmul
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function ___ftpack
  5412  0A8E                     ___ftpack:	
  5413                           
  5414                           ;incstack = 0
  5415                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5416  0A8E  0873               	movf	___ftpack@exp,w
  5417  0A8F  1903               	btfsc	3,2
  5418  0A90  2A96               	goto	l1876
  5419  0A91  0872               	movf	___ftpack@arg+2,w
  5420  0A92  0471               	iorwf	___ftpack@arg+1,w
  5421  0A93  0470               	iorwf	___ftpack@arg,w
  5422  0A94  1D03               	skipz
  5423  0A95  2AA9               	goto	l1882
  5424  0A96                     l1876:	
  5425  0A96  3000               	movlw	0
  5426  0A97  00F0               	movwf	?___ftpack
  5427  0A98  3000               	movlw	0
  5428  0A99  00F1               	movwf	?___ftpack+1
  5429  0A9A  3000               	movlw	0
  5430  0A9B  00F2               	movwf	?___ftpack+2
  5431  0A9C  0008               	return
  5432  0A9D                     l1880:	
  5433  0A9D  3001               	movlw	1
  5434  0A9E  00F5               	movwf	??___ftpack
  5435  0A9F  0875               	movf	??___ftpack,w
  5436  0AA0  07F3               	addwf	___ftpack@exp,f
  5437  0AA1  3001               	movlw	1
  5438  0AA2                     u1465:	
  5439  0AA2  1003               	clrc
  5440  0AA3  0CF2               	rrf	___ftpack@arg+2,f
  5441  0AA4  0CF1               	rrf	___ftpack@arg+1,f
  5442  0AA5  0CF0               	rrf	___ftpack@arg,f
  5443  0AA6  3EFF               	addlw	-1
  5444  0AA7  1D03               	skipz
  5445  0AA8  2AA2               	goto	u1465
  5446  0AA9                     l1882:	
  5447  0AA9  30FE               	movlw	254
  5448  0AAA  0572               	andwf	___ftpack@arg+2,w
  5449  0AAB  1903               	btfsc	3,2
  5450  0AAC  2AC4               	goto	l492
  5451  0AAD  2A9D               	goto	l1880
  5452  0AAE                     l1884:	
  5453  0AAE  3001               	movlw	1
  5454  0AAF  00F5               	movwf	??___ftpack
  5455  0AB0  0875               	movf	??___ftpack,w
  5456  0AB1  07F3               	addwf	___ftpack@exp,f
  5457  0AB2  3001               	movlw	1
  5458  0AB3  07F0               	addwf	___ftpack@arg,f
  5459  0AB4  3000               	movlw	0
  5460  0AB5  1803               	skipnc
  5461  0AB6  3001               	movlw	1
  5462  0AB7  07F1               	addwf	___ftpack@arg+1,f
  5463  0AB8  3000               	movlw	0
  5464  0AB9  1803               	skipnc
  5465  0ABA  3001               	movlw	1
  5466  0ABB  07F2               	addwf	___ftpack@arg+2,f
  5467  0ABC  3001               	movlw	1
  5468  0ABD                     u1485:	
  5469  0ABD  1003               	clrc
  5470  0ABE  0CF2               	rrf	___ftpack@arg+2,f
  5471  0ABF  0CF1               	rrf	___ftpack@arg+1,f
  5472  0AC0  0CF0               	rrf	___ftpack@arg,f
  5473  0AC1  3EFF               	addlw	-1
  5474  0AC2  1D03               	skipz
  5475  0AC3  2ABD               	goto	u1485
  5476  0AC4                     l492:	
  5477  0AC4  30FF               	movlw	255
  5478  0AC5  0572               	andwf	___ftpack@arg+2,w
  5479  0AC6  1903               	btfsc	3,2
  5480  0AC7  2AD3               	goto	l1892
  5481  0AC8  2AAE               	goto	l1884
  5482  0AC9                     l1890:	
  5483  0AC9  3001               	movlw	1
  5484  0ACA  02F3               	subwf	___ftpack@exp,f
  5485  0ACB  3001               	movlw	1
  5486  0ACC                     u1505:	
  5487  0ACC  1003               	clrc
  5488  0ACD  0DF0               	rlf	___ftpack@arg,f
  5489  0ACE  0DF1               	rlf	___ftpack@arg+1,f
  5490  0ACF  0DF2               	rlf	___ftpack@arg+2,f
  5491  0AD0  3EFF               	addlw	-1
  5492  0AD1  1D03               	skipz
  5493  0AD2  2ACC               	goto	u1505
  5494  0AD3                     l1892:	
  5495  0AD3  1FF1               	btfss	___ftpack@arg+1,7
  5496  0AD4  2AC9               	goto	l1890
  5497  0AD5  1873               	btfsc	___ftpack@exp,0
  5498  0AD6  2ADD               	goto	l498
  5499  0AD7  30FF               	movlw	255
  5500  0AD8  05F0               	andwf	___ftpack@arg,f
  5501  0AD9  307F               	movlw	127
  5502  0ADA  05F1               	andwf	___ftpack@arg+1,f
  5503  0ADB  30FF               	movlw	255
  5504  0ADC  05F2               	andwf	___ftpack@arg+2,f
  5505  0ADD                     l498:	
  5506  0ADD  1003               	clrc
  5507  0ADE  0CF3               	rrf	___ftpack@exp,f
  5508  0ADF  0873               	movf	___ftpack@exp,w
  5509  0AE0  00F5               	movwf	??___ftpack
  5510  0AE1  01F6               	clrf	??___ftpack+1
  5511  0AE2  01F7               	clrf	??___ftpack+2
  5512  0AE3  3010               	movlw	16
  5513  0AE4                     u1535:	
  5514  0AE4  1003               	clrc
  5515  0AE5  0DF5               	rlf	??___ftpack,f
  5516  0AE6  0DF6               	rlf	??___ftpack+1,f
  5517  0AE7  0DF7               	rlf	??___ftpack+2,f
  5518  0AE8  3EFF               	addlw	-1
  5519  0AE9  1D03               	skipz
  5520  0AEA  2AE4               	goto	u1535
  5521  0AEB  0875               	movf	??___ftpack,w
  5522  0AEC  04F0               	iorwf	___ftpack@arg,f
  5523  0AED  0876               	movf	??___ftpack+1,w
  5524  0AEE  04F1               	iorwf	___ftpack@arg+1,f
  5525  0AEF  0877               	movf	??___ftpack+2,w
  5526  0AF0  04F2               	iorwf	___ftpack@arg+2,f
  5527  0AF1  0874               	movf	___ftpack@sign,w
  5528  0AF2  1903               	btfsc	3,2
  5529  0AF3  0008               	return
  5530  0AF4  17F2               	bsf	___ftpack@arg+2,7
  5531  0AF5  0008               	return
  5532  0AF6                     __end_of___ftpack:	
  5533                           
  5534                           	psect	text13
  5535  0879                     __ptext13:	
  5536 ;; *************** function _chip_select *****************
  5537 ;; Defined at:
  5538 ;;		line 581 in file "Main V4.1.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  chip            2    0[COMMON] int 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;		None               void
  5545 ;; Registers used:
  5546 ;;		wreg
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5552 ;;      Params:         2       0       0       0       0
  5553 ;;      Locals:         0       0       0       0       0
  5554 ;;      Temps:          0       0       0       0       0
  5555 ;;      Totals:         2       0       0       0       0
  5556 ;;Total ram usage:        2 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_main
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           
  5566                           ;psect for function _chip_select
  5567  0879                     _chip_select:	
  5568                           
  5569                           ;Main V4.1.c: 582: RC6 = 1;
  5570                           
  5571                           ;incstack = 0
  5572                           ; Regs used in _chip_select: [wreg]
  5573  0879  1283               	bcf	3,5	;RP0=0, select bank0
  5574  087A  1303               	bcf	3,6	;RP1=0, select bank0
  5575  087B  1707               	bsf	7,6	;volatile
  5576                           
  5577                           ;Main V4.1.c: 583: if (chip == 1){
  5578  087C  3001               	movlw	1
  5579  087D  0670               	xorwf	chip_select@chip,w
  5580  087E  0471               	iorwf	chip_select@chip+1,w
  5581  087F  1D03               	skipz
  5582  0880  2883               	goto	l192
  5583                           
  5584                           ;Main V4.1.c: 584: RC6 = 0;
  5585  0881  1307               	bcf	7,6	;volatile
  5586                           
  5587                           ;Main V4.1.c: 586: }
  5588  0882  0008               	return
  5589  0883                     l192:	
  5590                           
  5591                           ;Main V4.1.c: 587: else{
  5592                           ;Main V4.1.c: 588: RC6 = 1;
  5593  0883  1707               	bsf	7,6	;volatile
  5594  0884  0008               	return
  5595  0885                     __end_of_chip_select:	
  5596                           
  5597                           	psect	text14
  5598  0009                     __ptext14:	
  5599 ;; *************** function _blank_image *****************
  5600 ;; Defined at:
  5601 ;;		line 283 in file "Main V4.1.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  j               2    7[COMMON] unsigned int 
  5606 ;;  i               2    5[COMMON] unsigned int 
  5607 ;;  page            1    4[COMMON] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;		None               void
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0, pclath, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5617 ;;      Params:         0       0       0       0       0
  5618 ;;      Locals:         5       0       0       0       0
  5619 ;;      Temps:          1       0       0       0       0
  5620 ;;      Totals:         6       0       0       0       0
  5621 ;;Total ram usage:        6 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    1
  5624 ;; This function calls:
  5625 ;;		_comm_out
  5626 ;;		_data_out
  5627 ;; This function is called by:
  5628 ;;		_main
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           
  5633                           ;psect for function _blank_image
  5634  0009                     _blank_image:	
  5635                           
  5636                           ;Main V4.1.c: 284: unsigned int i,j;
  5637                           ;Main V4.1.c: 285: unsigned char page = 0xB0;
  5638                           
  5639                           ;incstack = 0
  5640                           ; Regs used in _blank_image: [wreg+status,2+status,0+pclath+cstack]
  5641  0009  30B0               	movlw	176
  5642  000A  00F3               	movwf	??_blank_image
  5643  000B  0873               	movf	??_blank_image,w
  5644  000C  00F4               	movwf	blank_image@page
  5645                           
  5646                           ;Main V4.1.c: 286: comm_out (0xAE);
  5647  000D  30AE               	movlw	174
  5648  000E  120A  158A  20C9  120A  118A  	fcall	_comm_out
  5649                           
  5650                           ;Main V4.1.c: 287: comm_out (0x40);
  5651  0013  3040               	movlw	64
  5652  0014  120A  158A  20C9  120A  118A  	fcall	_comm_out
  5653                           
  5654                           ;Main V4.1.c: 288: for (i=0;i<4;i++){
  5655  0019  01F5               	clrf	blank_image@i
  5656  001A  01F6               	clrf	blank_image@i+1
  5657  001B  3000               	movlw	0
  5658  001C  0276               	subwf	blank_image@i+1,w
  5659  001D  3004               	movlw	4
  5660  001E  1903               	skipnz
  5661  001F  0275               	subwf	blank_image@i,w
  5662  0020  1803               	btfsc	3,0
  5663  0021  2861               	goto	l2182
  5664  0022                     l2162:	
  5665                           
  5666                           ;Main V4.1.c: 289: comm_out (page);
  5667  0022  0874               	movf	blank_image@page,w
  5668  0023  120A  158A  20C9  120A  118A  	fcall	_comm_out
  5669                           
  5670                           ;Main V4.1.c: 290: comm_out (0x10);
  5671  0028  3010               	movlw	16
  5672  0029  120A  158A  20C9  120A  118A  	fcall	_comm_out
  5673                           
  5674                           ;Main V4.1.c: 291: comm_out (0x00);
  5675  002E  3000               	movlw	0
  5676  002F  120A  158A  20C9  120A  118A  	fcall	_comm_out
  5677                           
  5678                           ;Main V4.1.c: 292: for (j=0;j<128;j++){
  5679  0034  01F7               	clrf	blank_image@j
  5680  0035  01F8               	clrf	blank_image@j+1
  5681  0036  3000               	movlw	0
  5682  0037  0278               	subwf	blank_image@j+1,w
  5683  0038  3080               	movlw	128
  5684  0039  1903               	skipnz
  5685  003A  0277               	subwf	blank_image@j,w
  5686  003B  1803               	btfsc	3,0
  5687  003C  2850               	goto	l2176
  5688  003D                     l2170:	
  5689                           
  5690                           ;Main V4.1.c: 293: data_out (0x00);
  5691  003D  3000               	movlw	0
  5692  003E  120A  158A  20B5  120A  118A  	fcall	_data_out
  5693  0043  3001               	movlw	1
  5694  0044  07F7               	addwf	blank_image@j,f
  5695  0045  1803               	skipnc
  5696  0046  0AF8               	incf	blank_image@j+1,f
  5697  0047  3000               	movlw	0
  5698  0048  07F8               	addwf	blank_image@j+1,f
  5699  0049  3000               	movlw	0
  5700  004A  0278               	subwf	blank_image@j+1,w
  5701  004B  3080               	movlw	128
  5702  004C  1903               	skipnz
  5703  004D  0277               	subwf	blank_image@j,w
  5704  004E  1C03               	skipc
  5705  004F  283D               	goto	l2170
  5706  0050                     l2176:	
  5707                           
  5708                           ;Main V4.1.c: 294: }
  5709                           ;Main V4.1.c: 295: page++;
  5710  0050  3001               	movlw	1
  5711  0051  00F3               	movwf	??_blank_image
  5712  0052  0873               	movf	??_blank_image,w
  5713  0053  07F4               	addwf	blank_image@page,f
  5714  0054  3001               	movlw	1
  5715  0055  07F5               	addwf	blank_image@i,f
  5716  0056  1803               	skipnc
  5717  0057  0AF6               	incf	blank_image@i+1,f
  5718  0058  3000               	movlw	0
  5719  0059  07F6               	addwf	blank_image@i+1,f
  5720  005A  3000               	movlw	0
  5721  005B  0276               	subwf	blank_image@i+1,w
  5722  005C  3004               	movlw	4
  5723  005D  1903               	skipnz
  5724  005E  0275               	subwf	blank_image@i,w
  5725  005F  1C03               	skipc
  5726  0060  2822               	goto	l2162
  5727  0061                     l2182:	
  5728                           
  5729                           ;Main V4.1.c: 296: }
  5730                           ;Main V4.1.c: 297: comm_out (0xAF);
  5731  0061  30AF               	movlw	175
  5732  0062  120A  158A  20C9   	fcall	_comm_out
  5733  0065  0008               	return
  5734  0066                     __end_of_blank_image:	
  5735                           
  5736                           	psect	text15
  5737  08C9                     __ptext15:	
  5738 ;; *************** function _comm_out *****************
  5739 ;; Defined at:
  5740 ;;		line 104 in file "Main V4.1.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  j               1    wreg     unsigned char 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  j               1    2[COMMON] unsigned char 
  5745 ;;  n               2    0        unsigned int 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;		None               void
  5748 ;; Registers used:
  5749 ;;		wreg
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5755 ;;      Params:         0       0       0       0       0
  5756 ;;      Locals:         1       0       0       0       0
  5757 ;;      Temps:          2       0       0       0       0
  5758 ;;      Totals:         3       0       0       0       0
  5759 ;;Total ram usage:        3 bytes
  5760 ;; Hardware stack levels used:    1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_blank_image
  5765 ;;		_location
  5766 ;;		_main
  5767 ;;		_test_image
  5768 ;;		_test_image_page
  5769 ;;		_image_1
  5770 ;;		_moving_bar
  5771 ;;		_increasing_bar
  5772 ;;		_eating_bar
  5773 ;;		_pattern_bar
  5774 ;;		_dot
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           
  5779                           ;psect for function _comm_out
  5780  08C9                     _comm_out:	
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in _comm_out: [wreg]
  5784                           ;comm_out@j stored from wreg
  5785  08C9  00F2               	movwf	comm_out@j
  5786                           
  5787                           ;Main V4.1.c: 105: unsigned int n;
  5788                           ;Main V4.1.c: 106: RC2 = 0;
  5789  08CA  1283               	bcf	3,5	;RP0=0, select bank0
  5790  08CB  1303               	bcf	3,6	;RP1=0, select bank0
  5791  08CC  1107               	bcf	7,2	;volatile
  5792                           
  5793                           ;Main V4.1.c: 107: RC0 = 0;
  5794  08CD  1007               	bcf	7,0	;volatile
  5795                           
  5796                           ;Main V4.1.c: 108: SSPBUF = j;
  5797  08CE  0872               	movf	comm_out@j,w
  5798  08CF  0093               	movwf	19	;volatile
  5799                           
  5800                           ;Main V4.1.c: 109: _delay((unsigned long)((1000)*(16000000/4000000.0)));
  5801  08D0  3006               	movlw	6
  5802  08D1  00F1               	movwf	??_comm_out+1
  5803  08D2  3030               	movlw	48
  5804  08D3  00F0               	movwf	??_comm_out
  5805  08D4                     u2817:	
  5806  08D4  0BF0               	decfsz	??_comm_out,f
  5807  08D5  28D4               	goto	u2817
  5808  08D6  0BF1               	decfsz	??_comm_out+1,f
  5809  08D7  28D4               	goto	u2817
  5810  08D8  0000               	nop
  5811                           
  5812                           ;Main V4.1.c: 110: RC2 = 1;
  5813  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  5814  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  5815  08DB  1507               	bsf	7,2	;volatile
  5816  08DC  0008               	return
  5817  08DD                     __end_of_comm_out:	
  5818                           
  5819                           	psect	text16
  5820  097E                     __ptext16:	
  5821 ;; *************** function _String_test *****************
  5822 ;; Defined at:
  5823 ;;		line 521 in file "Main V4.1.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;		None
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  test_string    13   11[BANK0 ] unsigned char [13]
  5828 ;;  test_pointer    1   24[BANK0 ] PTR unsigned char 
  5829 ;;		 -> String_test@test_string(13), 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;		None               void
  5832 ;; Registers used:
  5833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5839 ;;      Params:         0       0       0       0       0
  5840 ;;      Locals:         0      14       0       0       0
  5841 ;;      Temps:          4       0       0       0       0
  5842 ;;      Totals:         4      14       0       0       0
  5843 ;;Total ram usage:       18 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    2
  5846 ;; This function calls:
  5847 ;;		_LCDWriteCharacter
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           
  5854                           ;psect for function _String_test
  5855  097E                     _String_test:	
  5856                           
  5857                           ;Main V4.1.c: 522: char test_string [] = "Tim's String";
  5858                           
  5859                           ;incstack = 0
  5860                           ; Regs used in _String_test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5861  097E  302B               	movlw	String_test@test_string& (0+255)
  5862  097F  0084               	movwf	4
  5863  0980  301F               	movlw	low String_test@F1406
  5864  0981  00F8               	movwf	??_String_test
  5865  0982  0804               	movf	4,w
  5866  0983  00F9               	movwf	??_String_test+1
  5867  0984  300D               	movlw	13
  5868  0985  00FA               	movwf	??_String_test+2
  5869  0986                     u1990:	
  5870  0986  0878               	movf	??_String_test,w
  5871  0987  0084               	movwf	4
  5872  0988  1783               	bsf	3,7	;select IRP bank2
  5873  0989  0800               	movf	0,w
  5874  098A  00FB               	movwf	??_String_test+3
  5875  098B  0AF8               	incf	??_String_test,f
  5876  098C  0879               	movf	??_String_test+1,w
  5877  098D  0084               	movwf	4
  5878  098E  1383               	bcf	3,7	;select IRP bank0
  5879  098F  087B               	movf	??_String_test+3,w
  5880  0990  0080               	movwf	0
  5881  0991  0AF9               	incf	??_String_test+1,f
  5882  0992  0BFA               	decfsz	??_String_test+2,f
  5883  0993  2986               	goto	u1990
  5884                           
  5885                           ;Main V4.1.c: 523: char *test_pointer;
  5886                           ;Main V4.1.c: 525: test_pointer = &test_string;
  5887  0994  302B               	movlw	String_test@test_string& (0+255)
  5888  0995  00F8               	movwf	??_String_test
  5889  0996  0878               	movf	??_String_test,w
  5890  0997  1283               	bcf	3,5	;RP0=0, select bank0
  5891  0998  1303               	bcf	3,6	;RP1=0, select bank0
  5892  0999  00B8               	movwf	String_test@test_pointer
  5893  099A                     l2192:	
  5894                           ;Main V4.1.c: 526: while (*test_pointer != 0){
  5895                           
  5896  099A  0838               	movf	String_test@test_pointer,w
  5897  099B  0084               	movwf	4
  5898  099C  1383               	bcf	3,7	;select IRP bank0
  5899  099D  0880               	movf	0,f
  5900  099E  1903               	btfsc	3,2
  5901  099F  0008               	return
  5902                           
  5903                           ;Main V4.1.c: 527: LCDWriteCharacter(*test_pointer);
  5904  09A0  0838               	movf	String_test@test_pointer,w
  5905  09A1  0084               	movwf	4
  5906  09A2  0800               	movf	0,w
  5907  09A3  120A  158A  2362  120A  158A  	fcall	_LCDWriteCharacter
  5908                           
  5909                           ;Main V4.1.c: 529: test_pointer++;
  5910  09A8  3001               	movlw	1
  5911  09A9  00F8               	movwf	??_String_test
  5912  09AA  0878               	movf	??_String_test,w
  5913  09AB  1283               	bcf	3,5	;RP0=0, select bank0
  5914  09AC  1303               	bcf	3,6	;RP1=0, select bank0
  5915  09AD  07B8               	addwf	String_test@test_pointer,f
  5916  09AE  299A               	goto	l2192
  5917  09AF                     __end_of_String_test:	
  5918                           
  5919                           	psect	text17
  5920  0B62                     __ptext17:	
  5921 ;; *************** function _LCDWriteCharacter *****************
  5922 ;; Defined at:
  5923 ;;		line 478 in file "Main V4.1.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  character       1    wreg     const unsigned char 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  character       1    0[BANK0 ] const unsigned char 
  5928 ;;  after_swap      2    9[BANK0 ] unsigned int 
  5929 ;;  base            2    7[BANK0 ] unsigned int 
  5930 ;;  j               2    5[BANK0 ] unsigned int 
  5931 ;;  i               2    3[BANK0 ] unsigned int 
  5932 ;;  before_swap     2    1[BANK0 ] unsigned int 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;		None               void
  5935 ;; Registers used:
  5936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       0       0       0       0
  5943 ;;      Locals:         0      11       0       0       0
  5944 ;;      Temps:          2       0       0       0       0
  5945 ;;      Totals:         2      11       0       0       0
  5946 ;;Total ram usage:       13 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:    1
  5949 ;; This function calls:
  5950 ;;		___wmul
  5951 ;;		_data_out
  5952 ;; This function is called by:
  5953 ;;		_String_test
  5954 ;;		_char_to_decimal_print
  5955 ;;		_display_temps_to_screen
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           
  5960                           ;psect for function _LCDWriteCharacter
  5961  0B62                     _LCDWriteCharacter:	
  5962                           
  5963                           ;incstack = 0
  5964                           ; Regs used in _LCDWriteCharacter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5965                           ;LCDWriteCharacter@character stored from wreg
  5966  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  5967  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0B64  00A0               	movwf	LCDWriteCharacter@character
  5969                           
  5970                           ;Main V4.1.c: 480: unsigned int base, before_swap, after_swap, i, j;
  5971                           ;Main V4.1.c: 481: base = character - 32;
  5972  0B65  0820               	movf	LCDWriteCharacter@character,w
  5973  0B66  3EE0               	addlw	224
  5974  0B67  00A7               	movwf	LCDWriteCharacter@base
  5975  0B68  30FF               	movlw	255
  5976  0B69  1803               	skipnc
  5977  0B6A  3000               	movlw	0
  5978  0B6B  00A8               	movwf	LCDWriteCharacter@base+1
  5979                           
  5980                           ;Main V4.1.c: 482: base *= 3;
  5981  0B6C  3003               	movlw	3
  5982  0B6D  00F0               	movwf	___wmul@multiplier
  5983  0B6E  3000               	movlw	0
  5984  0B6F  00F1               	movwf	___wmul@multiplier+1
  5985  0B70  0828               	movf	LCDWriteCharacter@base+1,w
  5986  0B71  01F3               	clrf	___wmul@multiplicand+1
  5987  0B72  07F3               	addwf	___wmul@multiplicand+1,f
  5988  0B73  0827               	movf	LCDWriteCharacter@base,w
  5989  0B74  01F2               	clrf	___wmul@multiplicand
  5990  0B75  07F2               	addwf	___wmul@multiplicand,f
  5991  0B76  120A  158A  20FE  120A  158A  	fcall	___wmul
  5992  0B7B  0871               	movf	?___wmul+1,w
  5993  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  5994  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  5995  0B7E  01A8               	clrf	LCDWriteCharacter@base+1
  5996  0B7F  07A8               	addwf	LCDWriteCharacter@base+1,f
  5997  0B80  0870               	movf	?___wmul,w
  5998  0B81  01A7               	clrf	LCDWriteCharacter@base
  5999  0B82  07A7               	addwf	LCDWriteCharacter@base,f
  6000                           
  6001                           ;Main V4.1.c: 483: after_swap = 0;
  6002  0B83  01A9               	clrf	LCDWriteCharacter@after_swap
  6003  0B84  01AA               	clrf	LCDWriteCharacter@after_swap+1
  6004                           
  6005                           ;Main V4.1.c: 484: for (i=0;i<3;i++){
  6006  0B85  01A3               	clrf	LCDWriteCharacter@i
  6007  0B86  01A4               	clrf	LCDWriteCharacter@i+1
  6008  0B87  3000               	movlw	0
  6009  0B88  0224               	subwf	LCDWriteCharacter@i+1,w
  6010  0B89  3003               	movlw	3
  6011  0B8A  1903               	skipnz
  6012  0B8B  0223               	subwf	LCDWriteCharacter@i,w
  6013  0B8C  1803               	btfsc	3,0
  6014  0B8D  2BEA               	goto	l1870
  6015  0B8E                     l1844:	
  6016                           
  6017                           ;Main V4.1.c: 485: before_swap = fonts[base];
  6018  0B8E  3090               	movlw	high (_fonts| (0+32768))
  6019  0B8F  0728               	addwf	LCDWriteCharacter@base+1,w
  6020  0B90  00FF               	movwf	127
  6021  0B91  3012               	movlw	low (_fonts| (0+32768))
  6022  0B92  0727               	addwf	LCDWriteCharacter@base,w
  6023  0B93  0084               	movwf	4
  6024  0B94  1803               	skipnc
  6025  0B95  0AFF               	incf	127,f
  6026  0B96  160A  118A  2000  120A  158A  	fcall	stringtab
  6027  0B9B  00F6               	movwf	??_LCDWriteCharacter
  6028  0B9C  01F7               	clrf	??_LCDWriteCharacter+1
  6029  0B9D  0876               	movf	??_LCDWriteCharacter,w
  6030  0B9E  00A1               	movwf	LCDWriteCharacter@before_swap
  6031  0B9F  0877               	movf	??_LCDWriteCharacter+1,w
  6032  0BA0  00A2               	movwf	LCDWriteCharacter@before_swap+1
  6033                           
  6034                           ;Main V4.1.c: 486: for (j=0;j<7;j++){
  6035  0BA1  01A5               	clrf	LCDWriteCharacter@j
  6036  0BA2  01A6               	clrf	LCDWriteCharacter@j+1
  6037  0BA3  3000               	movlw	0
  6038  0BA4  0226               	subwf	LCDWriteCharacter@j+1,w
  6039  0BA5  3007               	movlw	7
  6040  0BA6  1903               	skipnz
  6041  0BA7  0225               	subwf	LCDWriteCharacter@j,w
  6042  0BA8  1803               	btfsc	3,0
  6043  0BA9  2BCF               	goto	l1862
  6044  0BAA                     l167:	
  6045                           
  6046                           ;Main V4.1.c: 487: if (before_swap & 1 == 1){
  6047  0BAA  1C21               	btfss	LCDWriteCharacter@before_swap,0
  6048  0BAB  2BB2               	goto	l1854
  6049                           
  6050                           ;Main V4.1.c: 488: after_swap = after_swap | 1;
  6051  0BAC  3001               	movlw	1
  6052  0BAD  0429               	iorwf	LCDWriteCharacter@after_swap,w
  6053  0BAE  00A9               	movwf	LCDWriteCharacter@after_swap
  6054  0BAF  3000               	movlw	0
  6055  0BB0  042A               	iorwf	LCDWriteCharacter@after_swap+1,w
  6056  0BB1  00AA               	movwf	LCDWriteCharacter@after_swap+1
  6057  0BB2                     l1854:	
  6058                           
  6059                           ;Main V4.1.c: 489: }
  6060                           ;Main V4.1.c: 490: before_swap = before_swap >> 1;
  6061  0BB2  0822               	movf	LCDWriteCharacter@before_swap+1,w
  6062  0BB3  00F7               	movwf	??_LCDWriteCharacter+1
  6063  0BB4  0821               	movf	LCDWriteCharacter@before_swap,w
  6064  0BB5  00F6               	movwf	??_LCDWriteCharacter
  6065  0BB6  1003               	clrc
  6066  0BB7  0CF7               	rrf	??_LCDWriteCharacter+1,f
  6067  0BB8  0CF6               	rrf	??_LCDWriteCharacter,f
  6068  0BB9  0876               	movf	??_LCDWriteCharacter,w
  6069  0BBA  00A1               	movwf	LCDWriteCharacter@before_swap
  6070  0BBB  0877               	movf	??_LCDWriteCharacter+1,w
  6071  0BBC  00A2               	movwf	LCDWriteCharacter@before_swap+1
  6072                           
  6073                           ;Main V4.1.c: 491: after_swap = after_swap << 1;
  6074  0BBD  1003               	clrc
  6075  0BBE  0D29               	rlf	LCDWriteCharacter@after_swap,w
  6076  0BBF  00A9               	movwf	LCDWriteCharacter@after_swap
  6077  0BC0  0D2A               	rlf	LCDWriteCharacter@after_swap+1,w
  6078  0BC1  00AA               	movwf	LCDWriteCharacter@after_swap+1
  6079  0BC2  3001               	movlw	1
  6080  0BC3  07A5               	addwf	LCDWriteCharacter@j,f
  6081  0BC4  1803               	skipnc
  6082  0BC5  0AA6               	incf	LCDWriteCharacter@j+1,f
  6083  0BC6  3000               	movlw	0
  6084  0BC7  07A6               	addwf	LCDWriteCharacter@j+1,f
  6085  0BC8  3000               	movlw	0
  6086  0BC9  0226               	subwf	LCDWriteCharacter@j+1,w
  6087  0BCA  3007               	movlw	7
  6088  0BCB  1903               	skipnz
  6089  0BCC  0225               	subwf	LCDWriteCharacter@j,w
  6090  0BCD  1C03               	skipc
  6091  0BCE  2BAA               	goto	l167
  6092  0BCF                     l1862:	
  6093                           
  6094                           ;Main V4.1.c: 492: }
  6095                           ;Main V4.1.c: 493: data_out(after_swap);
  6096  0BCF  0829               	movf	LCDWriteCharacter@after_swap,w
  6097  0BD0  120A  158A  20B5  120A  158A  	fcall	_data_out
  6098                           
  6099                           ;Main V4.1.c: 494: base++;
  6100  0BD5  3001               	movlw	1
  6101  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  6103  0BD8  07A7               	addwf	LCDWriteCharacter@base,f
  6104  0BD9  1803               	skipnc
  6105  0BDA  0AA8               	incf	LCDWriteCharacter@base+1,f
  6106  0BDB  3000               	movlw	0
  6107  0BDC  07A8               	addwf	LCDWriteCharacter@base+1,f
  6108  0BDD  3001               	movlw	1
  6109  0BDE  07A3               	addwf	LCDWriteCharacter@i,f
  6110  0BDF  1803               	skipnc
  6111  0BE0  0AA4               	incf	LCDWriteCharacter@i+1,f
  6112  0BE1  3000               	movlw	0
  6113  0BE2  07A4               	addwf	LCDWriteCharacter@i+1,f
  6114  0BE3  3000               	movlw	0
  6115  0BE4  0224               	subwf	LCDWriteCharacter@i+1,w
  6116  0BE5  3003               	movlw	3
  6117  0BE6  1903               	skipnz
  6118  0BE7  0223               	subwf	LCDWriteCharacter@i,w
  6119  0BE8  1C03               	skipc
  6120  0BE9  2B8E               	goto	l1844
  6121  0BEA                     l1870:	
  6122                           
  6123                           ;Main V4.1.c: 495: }
  6124                           ;Main V4.1.c: 496: data_out(0x00);
  6125  0BEA  3000               	movlw	0
  6126  0BEB  120A  158A  20B5   	fcall	_data_out
  6127  0BEE  0008               	return
  6128  0BEF                     __end_of_LCDWriteCharacter:	
  6129                           
  6130                           	psect	text18
  6131  08B5                     __ptext18:	
  6132 ;; *************** function _data_out *****************
  6133 ;; Defined at:
  6134 ;;		line 75 in file "Main V4.1.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  i               1    wreg     unsigned char 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  i               1    2[COMMON] unsigned char 
  6139 ;;  n               2    0        unsigned int 
  6140 ;; Return value:  Size  Location     Type
  6141 ;;		None               void
  6142 ;; Registers used:
  6143 ;;		wreg
  6144 ;; Tracked objects:
  6145 ;;		On entry : 0/0
  6146 ;;		On exit  : 0/0
  6147 ;;		Unchanged: 0/0
  6148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6149 ;;      Params:         0       0       0       0       0
  6150 ;;      Locals:         1       0       0       0       0
  6151 ;;      Temps:          2       0       0       0       0
  6152 ;;      Totals:         3       0       0       0       0
  6153 ;;Total ram usage:        3 bytes
  6154 ;; Hardware stack levels used:    1
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_blank_image
  6159 ;;		_LCDWriteCharacter
  6160 ;;		_test_image
  6161 ;;		_test_image_page
  6162 ;;		_image_1
  6163 ;;		_moving_bar
  6164 ;;		_increasing_bar
  6165 ;;		_eating_bar
  6166 ;;		_pattern_bar
  6167 ;;		_dot
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           
  6172                           ;psect for function _data_out
  6173  08B5                     _data_out:	
  6174                           
  6175                           ;incstack = 0
  6176                           ; Regs used in _data_out: [wreg]
  6177                           ;data_out@i stored from wreg
  6178  08B5  00F2               	movwf	data_out@i
  6179                           
  6180                           ;Main V4.1.c: 76: unsigned int n;
  6181                           ;Main V4.1.c: 77: RC2 = 0;
  6182  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  6183  08B7  1303               	bcf	3,6	;RP1=0, select bank0
  6184  08B8  1107               	bcf	7,2	;volatile
  6185                           
  6186                           ;Main V4.1.c: 78: RC0 = 1;
  6187  08B9  1407               	bsf	7,0	;volatile
  6188                           
  6189                           ;Main V4.1.c: 79: SSPBUF = i;
  6190  08BA  0872               	movf	data_out@i,w
  6191  08BB  0093               	movwf	19	;volatile
  6192                           
  6193                           ;Main V4.1.c: 80: _delay((unsigned long)((1000)*(16000000/4000000.0)));
  6194  08BC  3006               	movlw	6
  6195  08BD  00F1               	movwf	??_data_out+1
  6196  08BE  3030               	movlw	48
  6197  08BF  00F0               	movwf	??_data_out
  6198  08C0                     u2827:	
  6199  08C0  0BF0               	decfsz	??_data_out,f
  6200  08C1  28C0               	goto	u2827
  6201  08C2  0BF1               	decfsz	??_data_out+1,f
  6202  08C3  28C0               	goto	u2827
  6203  08C4  0000               	nop
  6204                           
  6205                           ;Main V4.1.c: 81: RC2 = 1;
  6206  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  6207  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  6208  08C7  1507               	bsf	7,2	;volatile
  6209  08C8  0008               	return
  6210  08C9                     __end_of_data_out:	
  6211                           
  6212                           	psect	text19
  6213  08FE                     __ptext19:	
  6214 ;; *************** function ___wmul *****************
  6215 ;; Defined at:
  6216 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  multiplier      2    0[COMMON] unsigned int 
  6219 ;;  multiplicand    2    2[COMMON] unsigned int 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  product         2    4[COMMON] unsigned int 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  2    0[COMMON] unsigned int 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6231 ;;      Params:         4       0       0       0       0
  6232 ;;      Locals:         2       0       0       0       0
  6233 ;;      Temps:          0       0       0       0       0
  6234 ;;      Totals:         6       0       0       0       0
  6235 ;;Total ram usage:        6 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_LCDWriteCharacter
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function ___wmul
  6246  08FE                     ___wmul:	
  6247                           
  6248                           ;incstack = 0
  6249                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6250  08FE  01F4               	clrf	___wmul@product
  6251  08FF  01F5               	clrf	___wmul@product+1
  6252  0900                     l1816:	
  6253  0900  1C70               	btfss	___wmul@multiplier,0
  6254  0901  2908               	goto	l331
  6255  0902  0872               	movf	___wmul@multiplicand,w
  6256  0903  07F4               	addwf	___wmul@product,f
  6257  0904  1803               	skipnc
  6258  0905  0AF5               	incf	___wmul@product+1,f
  6259  0906  0873               	movf	___wmul@multiplicand+1,w
  6260  0907  07F5               	addwf	___wmul@product+1,f
  6261  0908                     l331:	
  6262  0908  3001               	movlw	1
  6263  0909                     u1365:	
  6264  0909  1003               	clrc
  6265  090A  0DF2               	rlf	___wmul@multiplicand,f
  6266  090B  0DF3               	rlf	___wmul@multiplicand+1,f
  6267  090C  3EFF               	addlw	-1
  6268  090D  1D03               	skipz
  6269  090E  2909               	goto	u1365
  6270  090F  3001               	movlw	1
  6271  0910                     u1375:	
  6272  0910  1003               	clrc
  6273  0911  0CF1               	rrf	___wmul@multiplier+1,f
  6274  0912  0CF0               	rrf	___wmul@multiplier,f
  6275  0913  3EFF               	addlw	-1
  6276  0914  1D03               	skipz
  6277  0915  2910               	goto	u1375
  6278  0916  0871               	movf	___wmul@multiplier+1,w
  6279  0917  0470               	iorwf	___wmul@multiplier,w
  6280  0918  1D03               	skipz
  6281  0919  2900               	goto	l1816
  6282  091A  0875               	movf	___wmul@product+1,w
  6283  091B  01F1               	clrf	?___wmul+1
  6284  091C  07F1               	addwf	?___wmul+1,f
  6285  091D  0874               	movf	___wmul@product,w
  6286  091E  01F0               	clrf	?___wmul
  6287  091F  07F0               	addwf	?___wmul,f
  6288  0920  0008               	return
  6289  0921                     __end_of___wmul:	
  6290                           
  6291                           	psect	text20
  6292  09EF                     __ptext20:	
  6293 ;; *************** function _SPI_DATA_HANDLING *****************
  6294 ;; Defined at:
  6295 ;;		line 555 in file "Main V4.1.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;  data_pointer    1    wreg     PTR unsigned char 
  6298 ;;		 -> main@spi_data(22), 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;  data_pointer    1   11[COMMON] PTR unsigned char 
  6301 ;;		 -> main@spi_data(22), 
  6302 ;;  offset_point    2    9[COMMON] PTR unsigned char 
  6303 ;;		 -> RAM(512), 
  6304 ;;  address         1    8[COMMON] unsigned char 
  6305 ;;  offset          1    7[COMMON] unsigned char 
  6306 ;;  byte_receive    1    6[COMMON] unsigned char 
  6307 ;;  byte_to_send    1    5[COMMON] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;		None               void
  6310 ;; Registers used:
  6311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6317 ;;      Params:         0       0       0       0       0
  6318 ;;      Locals:         7       0       0       0       0
  6319 ;;      Temps:          2       0       0       0       0
  6320 ;;      Totals:         9       0       0       0       0
  6321 ;;Total ram usage:        9 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    1
  6324 ;; This function calls:
  6325 ;;		_SPI_TRANSFER
  6326 ;; This function is called by:
  6327 ;;		_main
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           
  6332                           ;psect for function _SPI_DATA_HANDLING
  6333  09EF                     _SPI_DATA_HANDLING:	
  6334                           
  6335                           ;incstack = 0
  6336                           ; Regs used in _SPI_DATA_HANDLING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6337                           ;SPI_DATA_HANDLING@data_pointer stored from wreg
  6338  09EF  00FB               	movwf	SPI_DATA_HANDLING@data_pointer
  6339                           
  6340                           ;Main V4.1.c: 556: char byte_to_send;
  6341                           ;Main V4.1.c: 557: char byte_received;
  6342                           ;Main V4.1.c: 558: char offset;
  6343                           ;Main V4.1.c: 559: char address;
  6344                           ;Main V4.1.c: 560: char *offset_pointer;
  6345                           ;Main V4.1.c: 562: if (*data_pointer > 0){
  6346  09F0  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6347  09F1  0084               	movwf	4
  6348  09F2  1383               	bcf	3,7	;select IRP bank0
  6349  09F3  0880               	movf	0,f
  6350  09F4  1903               	skipnz
  6351  09F5  2A33               	goto	l2212
  6352                           
  6353                           ;Main V4.1.c: 563: offset = *data_pointer;
  6354  09F6  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6355  09F7  0084               	movwf	4
  6356  09F8  0800               	movf	0,w
  6357  09F9  00F3               	movwf	??_SPI_DATA_HANDLING
  6358  09FA  0873               	movf	??_SPI_DATA_HANDLING,w
  6359  09FB  00F7               	movwf	SPI_DATA_HANDLING@offset
  6360                           
  6361                           ;Main V4.1.c: 564: address = data_pointer + offset;
  6362  09FC  0877               	movf	SPI_DATA_HANDLING@offset,w
  6363  09FD  077B               	addwf	SPI_DATA_HANDLING@data_pointer,w
  6364  09FE  00F3               	movwf	??_SPI_DATA_HANDLING
  6365  09FF  0873               	movf	??_SPI_DATA_HANDLING,w
  6366  0A00  00F8               	movwf	SPI_DATA_HANDLING@address
  6367                           
  6368                           ;Main V4.1.c: 565: offset_pointer = address;
  6369  0A01  0878               	movf	SPI_DATA_HANDLING@address,w
  6370  0A02  00F3               	movwf	??_SPI_DATA_HANDLING
  6371  0A03  01F4               	clrf	??_SPI_DATA_HANDLING+1
  6372  0A04  0873               	movf	??_SPI_DATA_HANDLING,w
  6373  0A05  00F9               	movwf	SPI_DATA_HANDLING@offset_pointer
  6374  0A06  0874               	movf	??_SPI_DATA_HANDLING+1,w
  6375  0A07  00FA               	movwf	SPI_DATA_HANDLING@offset_pointer+1
  6376                           
  6377                           ;Main V4.1.c: 566: byte_to_send = *offset_pointer;
  6378  0A08  0879               	movf	SPI_DATA_HANDLING@offset_pointer,w
  6379  0A09  0084               	movwf	4
  6380  0A0A  1783               	bsf	3,7
  6381  0A0B  1C7A               	btfss	SPI_DATA_HANDLING@offset_pointer+1,0
  6382  0A0C  1383               	bcf	3,7
  6383  0A0D  0800               	movf	0,w
  6384  0A0E  00F3               	movwf	??_SPI_DATA_HANDLING
  6385  0A0F  0873               	movf	??_SPI_DATA_HANDLING,w
  6386  0A10  00F5               	movwf	SPI_DATA_HANDLING@byte_to_send
  6387                           
  6388                           ;Main V4.1.c: 567: byte_received = SPI_TRANSFER(byte_to_send);
  6389  0A11  0875               	movf	SPI_DATA_HANDLING@byte_to_send,w
  6390  0A12  120A  158A  214E  120A  158A  	fcall	_SPI_TRANSFER
  6391  0A17  00F3               	movwf	??_SPI_DATA_HANDLING
  6392  0A18  0873               	movf	??_SPI_DATA_HANDLING,w
  6393  0A19  00F6               	movwf	SPI_DATA_HANDLING@byte_received
  6394                           
  6395                           ;Main V4.1.c: 568: offset_pointer = offset_pointer + 10;
  6396  0A1A  0879               	movf	SPI_DATA_HANDLING@offset_pointer,w
  6397  0A1B  3E0A               	addlw	10
  6398  0A1C  00F9               	movwf	SPI_DATA_HANDLING@offset_pointer
  6399  0A1D  087A               	movf	SPI_DATA_HANDLING@offset_pointer+1,w
  6400  0A1E  1803               	skipnc
  6401  0A1F  3E01               	addlw	1
  6402  0A20  3E00               	addlw	0
  6403  0A21  00FA               	movwf	SPI_DATA_HANDLING@offset_pointer+1
  6404                           
  6405                           ;Main V4.1.c: 569: *offset_pointer = byte_received;
  6406  0A22  0879               	movf	SPI_DATA_HANDLING@offset_pointer,w
  6407  0A23  0084               	movwf	4
  6408  0A24  1383               	bcf	3,7
  6409  0A25  187A               	btfsc	SPI_DATA_HANDLING@offset_pointer+1,0
  6410  0A26  1783               	bsf	3,7
  6411  0A27  0876               	movf	SPI_DATA_HANDLING@byte_received,w
  6412  0A28  0080               	movwf	0
  6413                           
  6414                           ;Main V4.1.c: 570: *data_pointer = *data_pointer + 1;
  6415  0A29  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6416  0A2A  0084               	movwf	4
  6417  0A2B  1383               	bcf	3,7	;select IRP bank0
  6418  0A2C  0800               	movf	0,w
  6419  0A2D  3E01               	addlw	1
  6420  0A2E  00F3               	movwf	??_SPI_DATA_HANDLING
  6421  0A2F  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6422  0A30  0084               	movwf	4
  6423  0A31  0873               	movf	??_SPI_DATA_HANDLING,w
  6424  0A32  0080               	movwf	0
  6425  0A33                     l2212:	
  6426                           
  6427                           ;Main V4.1.c: 571: }
  6428                           ;Main V4.1.c: 572: if (*data_pointer > 5){
  6429  0A33  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6430  0A34  0084               	movwf	4
  6431  0A35  3006               	movlw	6
  6432  0A36  0200               	subwf	0,w
  6433  0A37  1C03               	skipc
  6434  0A38  0008               	return
  6435                           
  6436                           ;Main V4.1.c: 573: *data_pointer = 0;
  6437  0A39  087B               	movf	SPI_DATA_HANDLING@data_pointer,w
  6438  0A3A  0084               	movwf	4
  6439  0A3B  0180               	clrf	0
  6440  0A3C  0008               	return
  6441  0A3D                     __end_of_SPI_DATA_HANDLING:	
  6442                           
  6443                           	psect	text21
  6444  094E                     __ptext21:	
  6445 ;; *************** function _SPI_TRANSFER *****************
  6446 ;; Defined at:
  6447 ;;		line 533 in file "Main V4.1.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  byte_to_send    1    wreg     unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  byte_to_send    1    2[COMMON] unsigned char 
  6452 ;;  byte_recieve    1    1[COMMON] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6462 ;;      Params:         0       0       0       0       0
  6463 ;;      Locals:         2       0       0       0       0
  6464 ;;      Temps:          1       0       0       0       0
  6465 ;;      Totals:         3       0       0       0       0
  6466 ;;Total ram usage:        3 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_SPI_DATA_HANDLING
  6472 ;;		_get_temp_from_right_tcs
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           
  6477                           ;psect for function _SPI_TRANSFER
  6478  094E                     _SPI_TRANSFER:	
  6479                           
  6480                           ;incstack = 0
  6481                           ; Regs used in _SPI_TRANSFER: [wreg]
  6482                           ;SPI_TRANSFER@byte_to_send stored from wreg
  6483  094E  00F2               	movwf	SPI_TRANSFER@byte_to_send
  6484                           
  6485                           ;Main V4.1.c: 534: char byte_recieved;
  6486                           ;Main V4.1.c: 535: byte_recieved = SSPBUF;
  6487  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6488  0950  1303               	bcf	3,6	;RP1=0, select bank0
  6489  0951  0813               	movf	19,w	;volatile
  6490  0952  00F0               	movwf	??_SPI_TRANSFER
  6491  0953  0870               	movf	??_SPI_TRANSFER,w
  6492  0954  00F1               	movwf	SPI_TRANSFER@byte_recieved
  6493                           
  6494                           ;Main V4.1.c: 536: SSPBUF = byte_to_send;
  6495  0955  0872               	movf	SPI_TRANSFER@byte_to_send,w
  6496  0956  0093               	movwf	19	;volatile
  6497                           
  6498                           ;Main V4.1.c: 537: _delay((unsigned long)((35)*(16000000/4000000.0)));
  6499  0957  302E               	movlw	46
  6500  0958  00F0               	movwf	??_SPI_TRANSFER
  6501  0959                     u2837:	
  6502  0959  0BF0               	decfsz	??_SPI_TRANSFER,f
  6503  095A  2959               	goto	u2837
  6504  095B  0000               	nop
  6505                           
  6506                           ;Main V4.1.c: 539: _delay((unsigned long)((5)*(16000000/4000000.0)));
  6507  095C  3006               	movlw	6
  6508  095D  00F0               	movwf	??_SPI_TRANSFER
  6509  095E                     u2847:	
  6510  095E  0BF0               	decfsz	??_SPI_TRANSFER,f
  6511  095F  295E               	goto	u2847
  6512  0960  0000               	nop
  6513  0961                     l1944:	
  6514                           ;Main V4.1.c: 540: while (WCOL == 1){
  6515                           
  6516  0961  1283               	bcf	3,5	;RP0=0, select bank0
  6517  0962  1303               	bcf	3,6	;RP1=0, select bank0
  6518  0963  1F94               	btfss	20,7	;volatile
  6519  0964  2975               	goto	l1946
  6520                           
  6521                           ;Main V4.1.c: 541: WCOL = 0;
  6522  0965  1394               	bcf	20,7	;volatile
  6523                           
  6524                           ;Main V4.1.c: 542: _delay((unsigned long)((5)*(16000000/4000000.0)));
  6525  0966  3006               	movlw	6
  6526  0967  00F0               	movwf	??_SPI_TRANSFER
  6527  0968                     u2857:	
  6528  0968  0BF0               	decfsz	??_SPI_TRANSFER,f
  6529  0969  2968               	goto	u2857
  6530  096A  0000               	nop
  6531                           
  6532                           ;Main V4.1.c: 543: SSPBUF = byte_to_send;
  6533  096B  0872               	movf	SPI_TRANSFER@byte_to_send,w
  6534  096C  1283               	bcf	3,5	;RP0=0, select bank0
  6535  096D  1303               	bcf	3,6	;RP1=0, select bank0
  6536  096E  0093               	movwf	19	;volatile
  6537                           
  6538                           ;Main V4.1.c: 544: _delay((unsigned long)((5)*(16000000/4000000.0)));
  6539  096F  3006               	movlw	6
  6540  0970  00F0               	movwf	??_SPI_TRANSFER
  6541  0971                     u2867:	
  6542  0971  0BF0               	decfsz	??_SPI_TRANSFER,f
  6543  0972  2971               	goto	u2867
  6544  0973  0000               	nop
  6545  0974  2961               	goto	l1944
  6546  0975                     l1946:	
  6547                           
  6548                           ;Main V4.1.c: 545: }
  6549                           ;Main V4.1.c: 546: byte_recieved = SSPBUF;
  6550  0975  0813               	movf	19,w	;volatile
  6551  0976  00F0               	movwf	??_SPI_TRANSFER
  6552  0977  0870               	movf	??_SPI_TRANSFER,w
  6553  0978  00F1               	movwf	SPI_TRANSFER@byte_recieved
  6554                           
  6555                           ;Main V4.1.c: 547: BF = 0;
  6556  0979  1683               	bsf	3,5	;RP0=1, select bank1
  6557  097A  1303               	bcf	3,6	;RP1=0, select bank1
  6558  097B  1014               	bcf	20,0	;volatile
  6559                           
  6560                           ;Main V4.1.c: 548: return byte_recieved;
  6561  097C  0871               	movf	SPI_TRANSFER@byte_recieved,w
  6562  097D  0008               	return
  6563  097E                     __end_of_SPI_TRANSFER:	
  6564                           
  6565                           	psect	text22
  6566  0921                     __ptext22:	
  6567 ;; *************** function _Init *****************
  6568 ;; Defined at:
  6569 ;;		line 23 in file "Main V4.1.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;		None               void
  6576 ;; Registers used:
  6577 ;;		wreg, status,2
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6583 ;;      Params:         0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0
  6585 ;;      Temps:          2       0       0       0       0
  6586 ;;      Totals:         2       0       0       0       0
  6587 ;;Total ram usage:        2 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_main
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _Init
  6598  0921                     _Init:	
  6599                           
  6600                           ;Main V4.1.c: 28: TRISA = 0x00;
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _Init: [wreg+status,2]
  6604  0921  1683               	bsf	3,5	;RP0=1, select bank1
  6605  0922  1303               	bcf	3,6	;RP1=0, select bank1
  6606  0923  0185               	clrf	5	;volatile
  6607                           
  6608                           ;Main V4.1.c: 29: ANSELA = 0x00;
  6609  0924  1683               	bsf	3,5	;RP0=1, select bank3
  6610  0925  1703               	bsf	3,6	;RP1=1, select bank3
  6611  0926  0185               	clrf	5	;volatile
  6612                           
  6613                           ;Main V4.1.c: 30: PORTA = 0xff;
  6614  0927  30FF               	movlw	255
  6615  0928  1283               	bcf	3,5	;RP0=0, select bank0
  6616  0929  1303               	bcf	3,6	;RP1=0, select bank0
  6617  092A  0085               	movwf	5	;volatile
  6618                           
  6619                           ;Main V4.1.c: 31: TRISA4 = 1;
  6620  092B  1683               	bsf	3,5	;RP0=1, select bank1
  6621  092C  1303               	bcf	3,6	;RP1=0, select bank1
  6622  092D  1605               	bsf	5,4	;volatile
  6623                           
  6624                           ;Main V4.1.c: 32: TRISA3 = 1;
  6625  092E  1585               	bsf	5,3	;volatile
  6626                           
  6627                           ;Main V4.1.c: 34: TRISB = 0x00;
  6628  092F  0186               	clrf	6	;volatile
  6629                           
  6630                           ;Main V4.1.c: 35: ANSELB = 0x00;
  6631  0930  1683               	bsf	3,5	;RP0=1, select bank3
  6632  0931  1703               	bsf	3,6	;RP1=1, select bank3
  6633  0932  0186               	clrf	6	;volatile
  6634                           
  6635                           ;Main V4.1.c: 36: PORTB = 0x00;
  6636  0933  1283               	bcf	3,5	;RP0=0, select bank0
  6637  0934  1303               	bcf	3,6	;RP1=0, select bank0
  6638  0935  0186               	clrf	6	;volatile
  6639                           
  6640                           ;Main V4.1.c: 38: TRISC = 0x00;
  6641  0936  1683               	bsf	3,5	;RP0=1, select bank1
  6642  0937  1303               	bcf	3,6	;RP1=0, select bank1
  6643  0938  0187               	clrf	7	;volatile
  6644                           
  6645                           ;Main V4.1.c: 39: TRISC4 = 1;
  6646  0939  1607               	bsf	7,4	;volatile
  6647                           
  6648                           ;Main V4.1.c: 41: PORTC = 0x00;
  6649  093A  1283               	bcf	3,5	;RP0=0, select bank0
  6650  093B  1303               	bcf	3,6	;RP1=0, select bank0
  6651  093C  0187               	clrf	7	;volatile
  6652                           
  6653                           ;Main V4.1.c: 42: IRCF1 = 0;
  6654  093D  1683               	bsf	3,5	;RP0=1, select bank1
  6655  093E  1303               	bcf	3,6	;RP1=0, select bank1
  6656  093F  1290               	bcf	16,5	;volatile
  6657                           
  6658                           ;Main V4.1.c: 43: IRCF0 = 0;
  6659  0940  1210               	bcf	16,4	;volatile
  6660                           
  6661                           ;Main V4.1.c: 47: RC3 = 1;
  6662  0941  1283               	bcf	3,5	;RP0=0, select bank0
  6663  0942  1303               	bcf	3,6	;RP1=0, select bank0
  6664  0943  1587               	bsf	7,3	;volatile
  6665                           
  6666                           ;Main V4.1.c: 48: _delay(2000);
  6667  0944  3003               	movlw	3
  6668  0945  00F1               	movwf	??_Init+1
  6669  0946  3097               	movlw	151
  6670  0947  00F0               	movwf	??_Init
  6671  0948                     u2877:	
  6672  0948  0BF0               	decfsz	??_Init,f
  6673  0949  2948               	goto	u2877
  6674  094A  0BF1               	decfsz	??_Init+1,f
  6675  094B  2948               	goto	u2877
  6676  094C  294D               	nop2
  6677  094D  0008               	return
  6678  094E                     __end_of_Init:	
  6679  007E                     btemp	set	126	;btemp
  6680  007E                     wtemp	set	126
  6681  007E                     wtemp0	set	126
  6682  0080                     wtemp1	set	128
  6683  0082                     wtemp2	set	130
  6684  0084                     wtemp3	set	132
  6685  0086                     wtemp4	set	134
  6686  0088                     wtemp5	set	136
  6687  007F                     wtemp6	set	127
  6688  007E                     ttemp	set	126
  6689  007E                     ttemp0	set	126
  6690  0081                     ttemp1	set	129
  6691  0084                     ttemp2	set	132
  6692  0087                     ttemp3	set	135
  6693  007F                     ttemp4	set	127
  6694  007E                     ltemp	set	126
  6695  007E                     ltemp0	set	126
  6696  0082                     ltemp1	set	130
  6697  0086                     ltemp2	set	134
  6698  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    303
    Data        93
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     71      77
    BANK1            80      0      78
    BANK3            96     96      96
    BANK2            96      0      81

Pointer List with Targets:

    main@data_pointer	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), 

    move_temp_to_send@data_pointer	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), 

    move_temp_to_send@reg	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), NULL(NULL[0]), 

    display_temps_to_screen@fault_string_pointer	PTR unsigned char  size(1) Largest target is 15
		 -> display_temps_to_screen@fault_string(BANK3[15]), 

    display_temps_to_screen@shortgnd_string_pointer	PTR unsigned char  size(1) Largest target is 11
		 -> display_temps_to_screen@shortgnd_string(BANK3[11]), 

    display_temps_to_screen@shortvcc_string_pointer	PTR unsigned char  size(1) Largest target is 11
		 -> display_temps_to_screen@shortvcc_string(BANK3[11]), 

    display_temps_to_screen@open_string_pointer	PTR unsigned char  size(1) Largest target is 13
		 -> display_temps_to_screen@open_string(BANK3[13]), 

    display_temps_to_screen@celsius_string_pointer	PTR unsigned char  size(1) Largest target is 12
		 -> display_temps_to_screen@celsius_string(BANK3[12]), 

    display_temps_to_screen@sensor_three_string_pointer	PTR unsigned char  size(1) Largest target is 6
		 -> display_temps_to_screen@sensor_three_string(BANK3[6]), 

    display_temps_to_screen@sensor_two_string_pointer	PTR unsigned char  size(1) Largest target is 6
		 -> display_temps_to_screen@sensor_two_string(BANK3[6]), 

    display_temps_to_screen@sensor_one_string_pointer	PTR unsigned char  size(1) Largest target is 6
		 -> display_temps_to_screen@sensor_one_string(BANK3[6]), 

    SPI_DATA_HANDLING@offset_pointer	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    SPI_DATA_HANDLING@data_pointer	PTR unsigned char  size(1) Largest target is 22
		 -> main@spi_data(BANK0[22]), 

    String_test@test_pointer	PTR unsigned char  size(1) Largest target is 13
		 -> String_test@test_string(BANK0[13]), 

    location@position	PTR int  size(2) Largest target is 4
		 -> main@position(BANK0[4]), display_temps_to_screen@position(BANK3[4]), 


Critical Paths under _main in COMMON

    _move_temp_to_send->___bmul
    _get_temp_from_right_tcs->___bmul
    _display_temps_to_screen->___altoft
    _display_temps_to_screen->___awtoft
    _location->_comm_out
    _char_to_decimal_print->_LCDWriteCharacter
    ___fttol->___altoft
    ___fttol->___awtoft
    ___ftmul->___altoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___altoft->___ftpack
    _blank_image->_comm_out
    _blank_image->_data_out
    _String_test->_LCDWriteCharacter
    _LCDWriteCharacter->___wmul
    _SPI_DATA_HANDLING->_SPI_TRANSFER

Critical Paths under _main in BANK0

    _main->_display_temps_to_screen
    _display_temps_to_screen->___fttol
    _char_to_decimal_print->_LCDWriteCharacter
    ___fttol->___ftmul
    ___ftmul->___altoft
    _String_test->_LCDWriteCharacter

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_display_temps_to_screen

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0   17500
                                             36 BANK0     35    35      0
                               _Init
                  _SPI_DATA_HANDLING
                        _String_test
                        _blank_image
                        _chip_select
                           _comm_out
            _display_temps_to_screen
            _get_temp_from_right_tcs
                           _location
                  _move_temp_to_send
                           _spi_init
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _move_temp_to_send                                    9     9      0     994
                                              4 COMMON     9     9      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _get_temp_from_right_tcs                             18    18      0    1189
                                              4 COMMON     6     6      0
                                              0 BANK0     12    12      0
                       _SPI_TRANSFER
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     534
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _display_temps_to_screen                            100   100      0   12143
                                             32 BANK0      4     4      0
                                              0 BANK3     96    96      0
                  _LCDWriteCharacter
                           ___altoft
                           ___awtoft
                            ___ftmul
                            ___fttol
              _char_to_decimal_print
                           _location
 ---------------------------------------------------------------------------------
 (1) _location                                            19    17      2     522
                                              3 COMMON     8     6      2
                                              0 BANK0     11    11      0
                           _comm_out
 ---------------------------------------------------------------------------------
 (2) _char_to_decimal_print                                4     2      2    1903
                                              8 COMMON     4     2      2
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     464
                                             18 BANK0     14    10      4
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2396
                                              2 BANK0     16    10      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1896
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    1837
                                              8 COMMON     6     2      4
                                              0 BANK0      2     2      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1646
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _chip_select                                          2     0      2     128
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _blank_image                                          6     6      0     160
                                              3 COMMON     6     6      0
                           _comm_out
                           _data_out
 ---------------------------------------------------------------------------------
 (2) _comm_out                                             5     5      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _String_test                                         18    18      0    1485
                                              8 COMMON     4     4      0
                                             11 BANK0     14    14      0
                  _LCDWriteCharacter
 ---------------------------------------------------------------------------------
 (3) _LCDWriteCharacter                                   13    13      0    1414
                                              6 COMMON     2     2      0
                                              0 BANK0     11    11      0
                             ___wmul
                           _data_out
 ---------------------------------------------------------------------------------
 (4) _data_out                                             5     5      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1116
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPI_DATA_HANDLING                                    9     9      0     409
                                              3 COMMON     9     9      0
                       _SPI_TRANSFER
 ---------------------------------------------------------------------------------
 (2) _SPI_TRANSFER                                         3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _SPI_DATA_HANDLING
     _SPI_TRANSFER
   _String_test
     _LCDWriteCharacter
       ___wmul
       _data_out
   _blank_image
     _comm_out
     _data_out
   _chip_select
   _comm_out
   _display_temps_to_screen
     _LCDWriteCharacter
       ___wmul
       _data_out
     ___altoft
       ___ftpack
     ___awtoft
       ___ftpack
     ___ftmul
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _char_to_decimal_print
       _LCDWriteCharacter
         ___wmul
         _data_out
     _location
       _comm_out
   _get_temp_from_right_tcs
     _SPI_TRANSFER
     ___bmul
   _location
     _comm_out
   _move_temp_to_send
     ___bmul
   _spi_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     60      60      10      100.0%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      51      12       84.4%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      4E       8       97.5%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     47      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     15A       6        0.0%
ABS                  0      0     15A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Mar 14 09:58:44 2018

                                      ___altoft@exp 0020                                       location@upnib 0023  
                                                 pc 0002                                __size_of_String_test 0031  
                                    location@lownib 0022                                      ___bmul@product 0072  
                                move_temp_to_send@x 0079                                       ___altoft@sign 0021  
                                                _BF 04A0                                                  fsr 0004  
                               ___wmul@multiplicand 0072                                                 l211 022A  
                                               l152 0D5C                                                 l321 0FB3  
                                               l331 0908                                                 l167 0BAA  
                                               l192 0883                                                 l492 0AC4  
                                               l498 0ADD                                                 _CKE 04A6  
                                               _CKP 00A4                                                 _RA1 0029  
                                               _RA2 002A                                                 _RC0 0038  
                                               _RC1 0039                                                 _RC2 003A  
                                               _RC3 003B                                                 _RB5 0035  
                                               _RC6 003E                                                 _RC7 003F  
                                               fsr0 0004                                                 indf 0000  
                              move_temp_to_send@reg 007B                                    location@position 0073  
                                              l2010 09C5                                                l2012 09D7  
                                              l2110 0C58                                                l2102 0C3B  
                                              l2024 08E7                                                l2040 0DE9  
                                              l2112 0C63                                                l2104 0C4B  
                                              l2034 0DD3                                                l2114 0C66  
                                              l2212 0A33                                                l2052 0E28  
                                              l2118 0C74                                                l2064 0E50  
                                              l2056 0E38                                                l2400 0572  
                                              l2312 0359                                                l2320 037C  
                                              l2170 003D                                                l2162 0022  
                                              l2306 0335                                                l2068 0E60  
                                              l2084 0C09                                                l2500 0726  
                                              l2420 05B4                                                l2412 059C  
                                              l2404 0583                                                l2340 03BF  
                                              l2324 0383                                                l2332 03A6  
                                              l2316 036B                                                l2308 0351  
                                              l2182 0061                                                l2192 099A  
                                              l2176 0050                                                l2520 07A7  
                                              l2504 0733                                                l2512 0757  
                                              l2432 05E4                                                l2440 0608  
                                              l2424 05C6                                                l2408 058A  
                                              l2416 05AD                                                l2352 03F0  
                                              l2336 03AD                                                l2344 03D0  
                                              l2328 0395                                                l2522 07C3  
                                              l2450 0674                                                l2266 0081  
                                              l2508 0746                                                l2436 05F7  
                                              l2428 05D7                                                l2452 067C  
                                              l2348 03DD                                                l2356 0401  
                                              l2380 052D                                                l2462 068B  
                                              l2390 053C                                                l2542 0CBC  
                                              l1816 0900                                                l2480 06D9  
                                              l2472 06C1                                                l2464 06A7  
                                              l2448 0658                                                l2392 0558  
                                              l2376 0509                                                l2368 04B9  
                                              l1922 0D44                                                l2378 0525  
                                              l1844 0B8E                                                l1924 0D58  
                                              l1916 0D2C                                                l2492 0703  
                                              l2484 06EB                                                l2468 06AF  
                                              l2476 06D2                                                l2396 0560  
                                              l1854 0BB2                                                l1862 0BCF  
                                              l1870 0BEA                                                l1934 0D6B  
                                              l1926 0D69                                                l1944 0961  
                                              l1880 0A9D                                                l1936 0D6F  
                                              l2496 0715                                                l2488 06FC  
                                              l2904 0FE9                                                l1946 0975  
                                              l1890 0AC9                                                l1882 0AA9  
                                              l1938 0DA6                                                l1892 0AD3  
                                              l1884 0AAE                                                l1876 0A96  
                                              l1956 0AF7                                                l1966 0B1B  
                                              l1958 0B0F                                                l1990 089B  
                                              l1976 0B3F                                                l1968 0B33  
                                              l1978 0B57                                                l1986 0895  
                                              l2882 0F76                                                u2100 0313  
                                              u2060 029F                                                u2205 0422  
                                              u2045 01E9                                                u2070 02BC  
                                              u2055 008C                                                u2080 02D9  
                                              u1505 0ACC                                                u2090 02F6  
                                              u1365 0909                                                u1605 0D8C  
                                              u1375 0910                                                u1535 0AE4  
                                              u1465 0AA2                                                u1625 0B00  
                                              u2185 03DA                                                u1635 0B24  
                                              u2435 0CB6                                                u1485 0ABD  
                                              u1645 0B48                                                u1565 0D3C  
                                              u2445 0CFC                                                u1735 0DF5  
                                              u2295 05E1                                                u1825 0E61  
                                              u1745 0E07                                                u1835 0E69  
                                              u1595 0D9F                                                u2395 0730  
                                              u2707 0EE5                                                u1685 09CA  
                                              u1925 0C5A                                                u2717 0F2C  
                                              u1775 0E39                                                u2807 022F  
                                              u2727 0F37                                                u2817 08D4  
                                              u1785 0E41                                                u1865 0C10  
                                              u2673 0F8B                                                u2737 0F4C  
                                              u2827 08C0                                                u2683 0FD0  
                                              u2747 0F58                                                u2837 0959  
                                              u2757 0F9A                                                u1990 0986  
                                              u2847 095E                                                u1895 0C3C  
                                              u2767 0FA8                                                u2857 0968  
                                              u2777 007B                                                u2697 0ED9  
                                              u2867 0971                                                u2787 0093  
                                              u2877 0948                                                u2797 0227  
                                              _WCOL 00A7                                                _Init 0921  
                                              _main 0E8E                                        ___ftpack@arg 0070  
                                      ___ftpack@exp 0073                                                btemp 007E  
                                              ltemp 007E         display_temps_to_screen@fault_string_pointer 01EB  
                       LCDWriteCharacter@after_swap 0029                                                start 0000  
                                              ttemp 007E                                                wtemp 007E  
                                 ___bmul@multiplier 0073                                        ___ftmul@cntr 0030  
                                      ___ftmul@sign 0031                                        ___fttol@exp1 003F  
                                      ___fttol@lval 003B                                       __CFG_PLLEN$ON 0000  
                                             ?_Init 0070                                               ?_main 0070  
                                     __CFG_WDTE$OFF 0000                                     __end_of___ftmul 0E8E  
                                   __end_of___fttol 0C7D                                               _IRCF0 0484  
                                             _IRCF1 0485                                               _PORTA 0005  
                                             _PORTB 0006                                               _PORTC 0007  
                                             _SSPM0 00A0                                               _SSPM1 00A1  
                                             _SSPM2 00A2                                               _SSPM3 00A3  
                                             _TRISA 0085                                               _TRISB 0086  
                                             _TRISC 0087                                               _SSPEN 00A5  
                                     ___awtoft@sign 007D                                               _fonts 1012  
                                     ___ftpack@sign 0074                                               main@x 0046  
                                      main@spi_data 0048                                               pclath 000A  
                                             ltemp0 007E                                               ltemp1 0082  
                                             ltemp2 0086                                               ltemp3 0080  
                                      main@position 005E                                               ttemp0 007E  
                                             ttemp1 0081                                               ttemp2 0084  
                                             ttemp3 0087                                               ttemp4 007F  
                                             status 0003                                               wtemp0 007E  
                                             wtemp1 0080                                               wtemp2 0082  
                                             wtemp3 0084                                               wtemp4 0086  
                                             wtemp5 0088                                               wtemp6 007F  
           display_temps_to_screen@working_register 01EC                                __size_of_blank_image 005D  
                                   __initialization 07CC                                        __end_of_Init 094E  
                                      __end_of_main 1000                             _display_temps_to_screen 0235  
                              __size_of_chip_select 000C                                              ??_Init 0070  
                                            ??_main 0044                                    main@data_pointer 0062  
                                     ___fttol@sign1 003A                            ?_get_temp_from_right_tcs 0070  
                                  __end_of___altoft 09EF                                    __end_of___awtoft 08FE  
                                            _ANSELA 0185                                              _ANSELB 0186  
                                  __end_of___ftpack 0AF6          display_temps_to_screen@sensor_three_string 019C  
                    __size_of_char_to_decimal_print 006C                       __end_of_char_to_decimal_print 0B62  
                                            _TRISA3 042B                                              _TRISA4 042C  
                                            _TRISC4 043C                                              _SSPBUF 0013  
                   SPI_DATA_HANDLING@offset_pointer 0079                                    __end_of_data_out 08C9  
                                  __end_of_comm_out 08DD                                              ___bmul 0893  
                                            ___wmul 08FE                                           ??___ftmul 0028  
                                         ??___fttol 0036                                   _SPI_DATA_HANDLING 09EF  
                                  __end_of_location 0DBB                                  ?_SPI_DATA_HANDLING 0070  
                             ___ftmul@f3_as_product 002D                                    __end_of_spi_init 0893  
                               ??_SPI_DATA_HANDLING 0073                       move_temp_to_send@byte_to_send 0078  
                                  String_test@F1406 011F                             __end_of__initialization 07FC  
                                        ___altoft@c 0078                   move_temp_to_send@working_register 0076  
                                        ___awtoft@c 0078                                 ___bmul@multiplicand 0070  
                         ??_display_temps_to_screen 0040                                          ___ftmul@f1 0022  
                                        ___ftmul@f2 0025                           __end_of_SPI_DATA_HANDLING 0A3D  
                                        ___fttol@f1 0032                                      __pcstackCOMMON 0070  
                                      __pidataBANK0 0003                                        __pidataBANK1 086B  
                                      __pidataBANK2 0A3D                                       __end_of_fonts 1141  
                                        __pbssBANK1 00A0                             SPI_DATA_HANDLING@offset 0077  
     display_temps_to_screen@celsius_string_pointer 01E7                        get_temp_from_right_tcs@byte1 0025  
                      get_temp_from_right_tcs@byte2 0026                        get_temp_from_right_tcs@byte3 0027  
                      get_temp_from_right_tcs@byte4 0028                                       ??_String_test 0078  
                                        __pmaintext 0E8E                                             ?___bmul 0070  
                                           ?___wmul 0070                                   _thermocouple_temp 00A0  
                                         ?___altoft 0078                                           ?___awtoft 0078  
                                         ?___ftpack 0070                              char_to_decimal_print@x 007B  
                   __end_of_display_temps_to_screen 07CC                                           ?_data_out 0070  
        display_temps_to_screen@open_string_pointer 01E8                                           ?_comm_out 0070  
                                        __stringtab 1000                                           ?_location 0073  
                           String_test@test_pointer 0038                          __size_of_SPI_DATA_HANDLING 004E  
              get_temp_from_right_tcs@byte_received 0020                                     __size_of___bmul 0011  
                                         ?_spi_init 0070                                     __size_of___wmul 0023  
                                           ___ftmul 0DBB                                             ___fttol 0BEF  
  display_temps_to_screen@sensor_one_string_pointer 01E0    display_temps_to_screen@sensor_two_string_pointer 01E1  
                                        ??___altoft 007C                                 __end_of_String_test 09AF  
                                        ??___awtoft 007B                                          ??___ftpack 0075  
                                           __ptext1 0885                                             __ptext2 0C7D  
                                           __ptext3 0066                                             __ptext4 0893  
                                           __ptext5 0235                                             __ptext6 0D10  
                                           __ptext7 0AF6                                             __ptext8 0BEF  
                                           __ptext9 0DBB                  display_temps_to_screen@open_string 01B1  
            display_temps_to_screen@shortgnd_string 01D5                                          ??_data_out 0070  
                                           clrloop0 0872                                          ??_comm_out 0070  
                              end_of_initialization 07FC               display_temps_to_screen@celsius_string 01BE  
               display_temps_to_screen@fault_string 01A2                               LCDWriteCharacter@base 0027  
                                     ??_blank_image 0073                                          ??_location 0075  
                  __size_of_get_temp_from_right_tcs 01CF                                       ??_chip_select 0072  
                                        ??_spi_init 0070                                        __pstringtext 1000  
display_temps_to_screen@sensor_three_string_pointer 01E2                                   _LCDWriteCharacter 0B62  
                                ?_LCDWriteCharacter 0070                                       ?_SPI_TRANSFER 0070  
                          SPI_TRANSFER@byte_to_send 0072                                     chip_select@chip 0070  
                                      location@page 0024                                 ??_LCDWriteCharacter 0076  
            display_temps_to_screen@shortvcc_string 01CA                               _char_to_decimal_print 0AF6  
                        LCDWriteCharacter@character 0020                                         _String_test 097E  
                               __end_of_blank_image 0066                                         ___ftmul@exp 002C  
                         __end_of_LCDWriteCharacter 0BEF                                      __end_of___bmul 08A4  
                                    __end_of___wmul 0921                                      ??_SPI_TRANSFER 0070  
                               __end_of_chip_select 0885                                  LCDWriteCharacter@i 0023  
                                LCDWriteCharacter@j 0025                           SPI_TRANSFER@byte_recieved 0071  
                               start_initialization 07CC                          char_to_decimal_print@value 0078  
                                 _move_temp_to_send 0C7D                                  ?_move_temp_to_send 0070  
                                          ??___bmul 0071                                            ??___wmul 0074  
                                        init_fetch0 08A4            display_temps_to_screen@sensor_one_string 0190  
                                       __pdataBANK0 0067                                         __pdataBANK1 00E8  
                                       __pdataBANK2 0110                                 ??_move_temp_to_send 0074  
                          SPI_DATA_HANDLING@address 0078                                   __size_of___altoft 0040  
                     SPI_DATA_HANDLING@data_pointer 007B                                   __size_of___awtoft 0021  
                                 __size_of___ftpack 0068                                           ___latbits 0002  
                                     __pcstackBANK0 0020                                       __pcstackBANK3 0190  
                                 __size_of_data_out 0014                              ?_char_to_decimal_print 0078  
                         __end_of_move_temp_to_send 0D10                             _get_temp_from_right_tcs 0066  
                                       _blank_image 0009                                   __size_of_comm_out 0014  
                          ?_display_temps_to_screen 0070                     get_temp_from_right_tcs@position 0021  
                   display_temps_to_screen@position 01E3                                   __size_of_location 00AB  
                                       _chip_select 0879                          __size_of_LCDWriteCharacter 008D  
                                          ?___ftmul 0022                                            ?___fttol 0032  
                      LCDWriteCharacter@before_swap 0021                        display_temps_to_screen@F1452 015B  
                      display_temps_to_screen@F1461 0145                        display_temps_to_screen@F1446 0067  
                      display_temps_to_screen@F1455 0139                        display_temps_to_screen@F1464 0150  
                      display_temps_to_screen@F1449 00E8                        display_temps_to_screen@F1458 012C  
                      display_temps_to_screen@F1467 0110                                   __size_of_spi_init 000E  
                            String_test@test_string 002B                 get_temp_from_right_tcs@byte_to_send 0029  
          display_temps_to_screen@sensor_two_string 0196                                           data_out@i 0072  
                                    ___wmul@product 0074                                __end_of_SPI_TRANSFER 097E  
                                         clear_ram0 0871                            get_temp_from_right_tcs@x 002A  
                                      blank_image@i 0075                                        blank_image@j 0077  
                                       __stringbase 1012                                   ___wmul@multiplier 0070  
                                         main@count 0063                                           comm_out@j 0072  
                         ??_get_temp_from_right_tcs 0074                          __size_of_move_temp_to_send 0093  
                                      ?_String_test 0070                                           location@i 0029  
                                         location@j 0020                                           location@k 0027  
                                         location@q 0025                                            ___altoft 09AF  
                                  __size_of___ftmul 00D3                                    __size_of___fttol 008E  
                                          ___awtoft 08DD                                            ___ftpack 0A8E  
                                __end_of__stringtab 1012      display_temps_to_screen@shortgnd_string_pointer 01EA  
                                          _data_out 08B5                                            __ptext10 08DD  
                                          __ptext11 09AF                                            __ptext20 09EF  
                                          __ptext12 0A8E                                            __ptext21 094E  
                                          __ptext13 0879                                            __ptext22 0921  
                                          __ptext14 0009                                            __ptext15 08C9  
                                          __ptext16 097E                                            __ptext17 0B62  
                                          __ptext18 08B5                                            __ptext19 08FE  
                                          _comm_out 08C9                                       __size_of_Init 002D  
                                     __size_of_main 0172                                            _location 0D10  
    display_temps_to_screen@shortvcc_string_pointer 01E9                     __end_of_get_temp_from_right_tcs 0235  
                                          _spi_init 0885                       move_temp_to_send@data_pointer 007C  
                                          init_ram0 08A8                             ??_char_to_decimal_print 007A  
                             __size_of_SPI_TRANSFER 0030                                     blank_image@page 0074  
                                      ?_blank_image 0070                                           stringcode 100A  
                                      ?_chip_select 0070                      SPI_DATA_HANDLING@byte_received 0076  
                  __size_of_display_temps_to_screen 0597                                        _SPI_TRANSFER 094E  
                                          stringtab 1000                                  __CFG_FOSC$INTOSCIO 0000  
                     SPI_DATA_HANDLING@byte_to_send 0075  
